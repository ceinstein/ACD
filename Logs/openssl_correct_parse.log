Fix enablezlib nocomp
Fix norc4
Move declaration of i into blocks where it is used
sctp requires dgram
RT4660: BIO_METHODs should be constBIO_new, etc, don't need a nonconst BIO_METHOD This allows all thebuiltin method tables to live in rodata
Downcase VMS config namesOn VMS, we downcase option names, which means that config names aredowncased as well, so they need to be downcased in the target table tobe found
Just like bio_out, bio_err needs the linebuffer filter on VMS
Adds s2i function for ct_precert_poison X509 extensionAllows CONF files for certificate requests to specify that a precertificate should be created see RFC6962
Fix memory leak where fdlookup linked list is not freed duringASYNC_WAIT_CTX_free
Fix nots with strictwarnings
Fix nosockMisc fixes for nosock
Fix nogostConfigure had the wrong name for the nogost option
Don't use hardcoded values for types
In for loop values, introduce a dummy to protect against empty listIn constructions such as 'for x in $MAKEVAR; do ', there's thepossibility that $MAKEVAR is en empty value  Some shells don't likethat, so introduce a dummy value that gets discarded:for x in dummy $MAKEVAR; doif [ "$$x"  "dummy" ]; then continue; fiCloses RT4459
Fix noseedFix compilation with strictwarnings and noseed
Remove the norijndael optionRijndael is an old name for AES
Fix noscryptFix the evp tests when noscrypt is used
Skip the CMS tests if CMS is disabledThis fixes the nocms compile time option
Fix nodsaMisc fixes for nodsa
Build system: VCWIN64I fixups
Configurations/windowsmakefiletmpl: respect nomakedepend
Windows build system: get uplink right
config: fix offbycentimetertotheright typo
Configurations/10mainconf: freeze std option in darwinppcccRT4422
Remove mk1mf documentation
Remove the remainder of util/mk1mfpl and companion scriptsThis removes all scripts that deal with MINFO as well, since that'sonly used by mk1mf
Remove generation of ms/version32rc from Configure, use util/mkrcplutils/mkrcpl was added a while ago as a better generator for theWindows DLL resource file  Finalize the change by removing thems/version32rc generator from Configure and adding resource filesupport using mkrcpl in Configurations/windowsmakefilepl
Remove the mk1mf VCWIN builds and its supporting scriptsThe mk1mf build for the VCWIN targets is broken and the unifiedscheme works well enough, so we clean out the old
Fix ALPN  more fixes Clear proposed, along with selected, before looking at ClientHello Add test case for above Clear NPN seen after selecting ALPN on server Minor documentation updates
Add a comment on dane_verify logic
Remove error from include filesDon't have error statements in header files, but instead wrapthe contents of that file in ifndef OPENSSL_NO_xxxThis means it is now always safe to include the header file
GH886: CONNECT should use HTTP/11By default you get 09 which isn't widely availableBut we use HTTP/10 for nowCourtesy beusink@usersgithubcom
Have makedepend output to stdout and redirect itThis gives us better control of what files are produced
ct_inth only needed by crypto/ctMerge ct_inth into ct_loclh
constify DSA_SIG_get0
Move blake2_loclh to blake2 directory
Fixed language
Fixed a bunch of typos in the docs
constify ECDSA_SIG_get0PR4436
If the asm file to be compiled isn't generated, leave the ext aloneCloses RT4447
make update
Don't let 'generate' target depend on generated files, act directly insteadOne of the 'generate' targets depended on $SRCDIR/apps/progsh,which depended on  nothing  This meant it never got regeneratedonce it existed, regardless of need  Of course, we could have itdepend on all the files checked to generate it, but they also dependon progsh, so we'd end up getting cricular dependencies, which makesmake unhappyFurthermore, and this applies for the other generated files, havingthem as targets means that they may be regenerated on the fly in somecases, and since they get written to the source tree, this isn't sucha good idea if that tree is readonly which is a possible situationin an outoftree buildSo, we move all the actions to the 'generate' targets themselves, thusmaking sure they get regenerated in a controlled manner and regardlessof dependencies
apps/progspl: add back the INCLUDE_FUNCTION_TABLE wrapper
Revert "Ignore the generated apps/progsh"This reverts commit 91056e72693b4ee8cb5339d9091871ffc3b6f776
Revert "Generate apps/progsh on the fly"This reverts commit 04e2a527379ad12ca512aef4e838f94af22d7f79
Revert "Include progsh directly in opensslc instead of via appsh"This reverts commit a45d7d5388c6774a484cff4af13f188240d3d50b
GH36: Add casts to match the documentation
Correct faulty L<> links in podsCloses RT4450
Add a few more quotes for Windows install_ssldirs
The command source are files, not directoriesTherefore, they should be concatenated with the source directory usingcatfile, not catdir
Replace sed command with perlSome implementations of sed require a newline before an ending '}'The easier method is to replace that sed command with thecorresponding perl commandCloses RT4448
Clear the exit code from 'find' in 'make depend'Depending on what has been built so far, all d files may not bepresent and 'find' will exit with nonzero exit code  This isn't abother for us but may break make, so clear the exit code with an added'exit 0'Closes RT4444
Shut find up about files not foundSome of the files in $DEPS might not exist  We don't need to know
Don't free up EVP_MD_CTXDon't free up passed EVP_MD_CTX in ASN1_item_sign_ctx Thissimplifies handling and retains compatiblity with previous behaviourPR4446
Use the dependencies received in generatesrcgeneratesrc did already receive dependency information, but neverused it, and never really needed to  until now
Ignore the generated apps/progsh
Generate apps/progsh on the fly
Include progsh directly in opensslc instead of via appsh
Make apps/progspl more flexibleMake Configure write @disablables to configdatapm and haveapps/progspl use that data
Correct the export list when writing configdatapm
Correct the check of files to depend on against known generated onesThe check was erroneously inversed
Don't perform tsa tests if configured "nots"
Correct incorrect pathIn crypto, buildinfh depends on /configdatapm, not /configdatapm
Better 'make depend' mechanismInstead of relying on the 'nt' test operator, which doesn't existeverywhere, use find's 'newer' to find out if any of the known dfiles is newer than MakefileCloses RT4444
make update
Implement support for nots
apps/progspl: more consistent output for digests
Fix nodesNumerous fixes for nodes
Fix nodgramA few places in s_client needed some OPENSSL_NO_DTLS guards which fixesnodgram
Fix nodeprecatedThe nodeprecated build was failing because afalg was relying on atransitive include that does not exist in a nodeprecated build
Fix nocmacThere were a couple of CMAC references without OPENSSL_NO_CMAC guards
Add a test to see that signals are caught as failures
Make OpenSSL::Test::run sensitive to signals$? in perl gets the status value from wait2, which is a word withthe exit code in the upper half and the number of a raised signal inthe lower half  OpenSSL::Test::run ignored the signal half up untilnowWith this change, we recalculate an exit code the same way the Unixshells do, using this formula:$? & 0x7f ? $? & 0x7f|0x80 : $? >> 8;
Remove more unused thingsMoved doc/standardstxt to the web
Resolved unresolved symbols with nohwCompiling on Windows with nohw was resulting in unresolved symbolsin the padlock engine
Ensure that nocomp functions are flagged as suchmkdefpl was not detecting nocomp functions This updates the header fileso that mkdefpl detects that nocomp applies, and the functions are markedaccordingly
Fix norc2 in the CMS testThe CMS test uses some RC2 keys which should be skipped if the RC2 isdisabled
Mark OCB as an AEAD cipherOCB is AEAD capable but was not marked as such with theEVP_CIPH_FLAG_AEAD_CIPHER flag
Ensure that memory allocated for the ticket is freedIf a call to EVP_DecryptUpdate fails then a memory leak could occur Ensure that the memory is freed appropriatelyIssue reported by Guido Vranken
Fix a potential double free in EVP_DigestInit_exThere is a potential double free in EVP_DigestInit_ex This is believedto be reached only as a result of programmer error  but we should fix itanywayIssue reported by Guido Vranken
Fix build; CPP syntax error
Update EVP_CIPHER_CTX_set_padding documentationAdd note about when EVP_CIPHER_CTX_set_padding should be called
README: small fixupsDon't refer to INSTALL files that don't exist any moreMake it clear that the libssl and libcrypto libraries may be nameddifferently on different platforms
Make picker, thread and combine standard config helper functionsDocument them as well
Remove Netware and OS/2
Disallow classic for WindowsWith all the config changes, mk1mf is broken on Windows
windowsmakefiletmpl: Stop keeping temporary files
Add install targets for WindowsOn Windows, we set INSTALLTOP to default as follows:VCWIN32:PREFIX:     ProgramFilesx86\OpenSSLOPENSSLDIR: CommonProgramFilesx86\SSLVCWIN64:PREFIX:     ProgramW6432\OpenSSLOPENSSLDIR: CommonProgramW6432\SSLShould those environment variables be missing, the following is usedas fallback:PREFIX:     ProgramFiles\OpenSSLOPENSSLDIR: CommonProgramFiles\SSL
Report TLS 10 as backwardscompatible TLSv1The TLSv10 form is retained for reporting the first protocol versionthat supports a given cupher
Remove ultrix/mips support
Remove support for Borland C++Borland C++ 45 is very old and our "support" for it is alreadynonexistent, we might as well remove it
Use correct C format for keysetspl
Start documenting Configure internalsThis is a living document, everyone is encouraged to add to itImplementation details as well as broader implementation philosophyhas a place hereI'm starting with documentation of the how conditions in buildinfofiles are treated
Added buildinfo debugging capability to ConfigureThis is only enabled when the environment variableCONFIGURE_DEBUG_BUILDINFO is defined  This will cause every line inevery buildinfo file to be displayed, along with the content of theskip stack before and after parsing  This can be a very powerful toolto see that all conditions are working as expected
Simplify define as we don't support MSDOS anymore
Don't define OPENSSL_ENGINES in test recipes, do it in Makefiles insteadIn most builds, we can assume that engines live in the build treesubdirectory "engines"  This was hard coded into the tests that usethe engine ossltestHowever, that hard coding is tedious, it would need to be done inevery test recipe, and it's an incorrect assumption in some casesThis change has us play it safe and let the build files tell thetesting framework where the engines are
Have 'openssl version a' output the default engines directory as well
Bugfix: Encode the requested length in s_cbc:hexencode
Sort cipherlist at runtimeReduces ifdef complexity
unixMakefile template: use $PERL everywhereThere was one spot that had hardcoded 'perl'
Deal with DSA_SIG opaqueness
Prepare for 110pre5dev
Prepare for 110pre4 release
Some platforms provide getcontext but it does not workSome platforms claim to be POSIX but their getcontext implementationdoes not work Therefore we update the ASYNC_is_capable function to testfor thisRT4366
When building DLLs, hack the library name in the def fileutil/mkdefpl assumes it knows what the resulting library name willbe  Really, it shouldn't, but changing it will break classic nativeWindows builds, so we leave it for now and change the LIBRARY lineexternally when needed instead
DLL object files should not be built with /Zl"When building the DLLs, we depend on the correct default C RTL info
Appveyor  make sure to actually build "shared" in the shared configuration
Fix up CHANGES Remove duplicate entry Add author for SSL_CIPHER query functions Note HKDF support in CHANGES and NEWS[ci skip]
We should use $SRCDIR in MakefilesNormally we always refer to source files relative to $SRCDIR in MakefilesHowever the reference to unixMakefiletmpl was using a fully expandedabsolute path This can cause problems for Mingw
Disable AFALG when crosscompilingWe don't currently support crosscompiling of the afalg engine Howeverwe were failing to explicitly mark it as disabled during Configure leadingto a failed build
Fix a TLSProxy race conditionTLSProxy starts s_server and specifies the number of client connectsit should expect After that s_server is supposed to close downautomatically However, if another test is then run then TLSProxywill start a new instance of s_server If the previous instancehasn't closed down yet then the new instance can fail to bind tothe socket
poly1305/asm/poly1305x86_64pl: make it work with linuxx32
On Windows, page walking is known as __chkstk
Explain coughdows
Make the perl dependency postprocessor into just one lineMake doesn't always treat multiline quoted strings as nicely as onewould wish
Not all shells understand !In unixMakefiletmpl, this construction has been used a few timesif ! something; then It seems, though, that some shells do not understand !, so these needto be changed
General verify options to openssl tsThis commit adds the general verify options of ocsp, verify,cms, etc to the openssl timestamping app as suggested byStephen N Henson in [opensslorg 4287] The conflicting"policy" option of "openssl ts" has been renamed to"tspolicy" Documentation and tests have been updatedCAVE: This will break code, which currently uses the "policy"option
Fix CRYPTO_THREAD_run_once return value checks
Cygwin configs were missing thread_scheme settings, add them
Small typoOPENSSL_INIT_ONCE and OPENSSL_INIT_ONCE_STATIC_INIT are reallyCRYPTO_ONCE and CRYPTO_ONCE_STATIC_INIT
staticengine is no longer an internal keyword, remove it from disabled
Clarify NOTESWIN
Update and clarify ECDSA documentation
Disable afalg when engine is disabledAlso make it possible to disable afalg separatelywe still need to update config again
Fix typo in manual, missing ending '>'
Travis: build tests in BUILDONLY mode
config: fix HPUX PARISC detection
s390x assembly pack: 32bit fixups
buildinfo/Makefilein: Itanium fixups
engines/Makefilein: some [older] shell complain about 'for i ;',but not if there is reference to empty variable
Fix the init cleanup orderThere are internal dependencies between the various cleanup functionsThis reorders things to try and get that right
Add some missing cleanup calls to deinitOBJ_cleanup doesn't always get called from EVP_cleanup so needs to beexplicitly called in deinit Also BIO_sock_cleanup also needs to becalled
Fix freeze in config's interrupt trap with some shellsWith bash and zsh, the trap on the 5 second read does respond, butdoesn't break out of the read  What's worse is that it takes away the5 second timer, and therefore has the read hang indefinitely andalmost unbreakableHaving the trap do 'exit 0' after reseting the tty params has it breakout of read and continue with the configurationOther shells do not appear to have the issue described here, butneither does the extra 'exit 0' appear to harm them
Enforce the demand for Perl 5100 as a minimum
Fix a few Configure errors
Document X509_get_serialNumber and X509_set_serialNumber
Add EVP_PKEY documentationDocument EVP_PKEY_id and EVP_PKEY_base_id
Change an function macro for ERR match the function it's used in
Complete incomplete makefile variable referensesA couple of '$PERLASM_SCHEM' had sneaked in
Collect the names of generated files and clean them away at target clean:
Add $LIB_CFLAGS for any buildinfo generator that uses $CFLAGSThe reason to do so is that some of the generators detect PIC flagslike fPIC and KPIC, and those are normally delivered in LD_CFLAGS
Use single quotes rather than double quotes when neededWhen passing down values to Makefileshared, do so with single quotesas much as possible to avoid having the shell create a mess of quotes
Harmonize Unix Makefile template with Windows ditoThe variable SHARED_CFLAGS and SHARD_LDFLAGS were used in the Unixtemplate because they normally contain options used when building"shared"  The Windows template, on the other hand, uses LIB_CFLAGS,to express the intended use of those flags rather than their contentThe Windows template still used SHARED_LDFLAGS, which seemsinconsistentTo harmonize the two, any SHARED_CFLAGS gets renamed to LIB_CFLAGS andSHARED_LDFLAGS to LIB_LDFLAGS  That makes the intent consistent alongwith BIN_{C,LD}FLAGS and DSO_{C,LD}FLAGSFinally, make sure to pass down $LIB_CFLAGS or $DSO_CFLAGS alongwith $CFLAGS when using Makefileshared
Fix memory leak in library deinitENGINE_cleanup calls CRYPTO_free_ex_data and therefore,CRYPTO_cleanup_all_ex_data  which cleans up the method pointers  mustrun after ENGINE_cleanupAdditionally, don't needlessly initialize the EX_CALLBACKS stack duringeg CRYPTO_free_ex_data The only time this is actually needed is whenreserving the first ex data index Specifically, since sk_num returns 1on NULL input, the rest of the code already handles a NULL method stackcorrectly
Add doc on when to use SCT callbackWith help from Viktor
Workaround for false Warraybounds in Travisccache + clang produces a false strcmp warning, seehttps://llvmorg/bugs/show_bugcgi?id20144Since this only happens with ccache and strictwarnings, andonly with certain versions of glibc / clang, disablingccache is a reasonable shortterm workaround
Fix nocomp build
Fix build break; add function declaration
When creating directory specs, use srctop_dir rather than srctop_fileWhile insignificant on Unix like systems, this is significant onsystems like VMS
Avoid sed for dependency postprocessingIt turns out that different sed implementations treat i differentlyto cause issues  make it simpler by avoiding it entirely and giveperl the trust to be consistent enough
Because bn_expand2 is declared nonstatic, it must not be staticThat doesn't change even to make a dummy to hide its unavailability
Remove some dead code from 1999
Don't clobber the last errorOn Windows we call WSAGetLastError to find out the last error thathappened on a socket operation We use this to find out whether we canretry the operation or not You are supposed to call this immediatelyhowever in a couple of places we logged an error first This can end upmaking other Windows system calls to get the thread local error stateSometimes that can clobber the error code, so if you call WSAGetLastErrorlater on you get a spurious response and the socket operation looks likea fatal errorReally we shouldn't be logging an error anyway if its a retryable issueOtherwise we could end up with stale errors on the error queue
removed extra defineverified that build succeeds without the extra define
Fix noblake2 for Windows classic buildFix noblake2 for Windows classic build
make update
Make X509_SIG opaque
Some sed implementations are not greedy enough, use perl insteadThe issue is demonstrated as follows:On Linux:$ echo ': fooh /usr/include/stddefh barh' | sed e 's/ \/\\\\|[^ ]\//g': fooh barhOn MacOS X:$ echo ': fooh /usr/include/stddefh barh' | sed e 's/ \/\\\\|[^ ]\//g': foohusr/include/stddefh barhPerl is more consistent:On Linux:$ echo ': fooh /usr/include/stddefh barh' | perl pe 's/ \/\\|[^ ]//g;': fooh barhOn MacOS X:$ echo ': fooh /usr/include/stddefh barh' | perl pe 's/ \/\\|[^ ]//g;': fooh barh
Make update to catch function renames
Use unsigned int instead of just unsigned
Save leaf_node and node_offset as character arrayThey are not numbers in the machine byte order
Review comments
Add blake2 support
move DSA_SIG definition into C source file
crypto//buildinfo: make it work on ARM platforms
crypto//buildinfo: SPARCspecific fixups
Configurations/unixMakefiletmpl: don't leave empty s files behindIf preprocessor failed, an empty s file could be left behind,which could get successfully compiled if one simply reran makeand cause linking failures Not anymore Remove even intermediate Sin case of preprocessor failure
Configure: remove dependency on 'head'
constify CT_POLICY_EVAL_CTX getters
Surround ctx_set_ctlog_list_file with ifndef OPENSSL_NO_CT
Suppress CT warnings in test_sslRunning test_ssl with HARNESS_VERBOSE results in lots of spurious warningsabout an inability to load the CT config file This fixes it
Avoid getting unresolved referense to bn_expand2 in test/bntestcIssue identified on Solaris by Erik Forsberg <erik@efcacom>
Call CONF_modules_free before ENGINE_cleanup in autodeinitDuring auto deinit we were calling ENGINE_cleanup, and then laterCONF_modules_free However the latter function can end up callingengine code, which can lead to a use of the global_engine_lock after ithas already been freed Therefore we should swap the calling order ofthese two functions
Fix normd160 classic Windows buildnoripemd was unified a while ago but the change was not done in mk1mfpl This commit changes the noripemd string to normd160 which fixes the normd160 classic build
Don't build dynamic engines unless configured "shared"Experience has shown that dynamic engines with their own copy oflibcrypto is problematic, so we disable that possibility
Harmonise the two methods to generate dependency filesOne of them didn't clean away dtmp files properlyThe other would overwrite the d files unconditionally, therebycausing a possibly unnecessary dependency rebuild, which touches thedate of Makefile, which causes a possibly unnecessary rebuild ofbuildinfh and everything that depends on that
More tweaks to the installation instructionsA few things were out of date and a few things were missing Also someformatting updates
Fix some assembler generating scripts for better unificationSome of these scripts would recognise an output parameter if it lookslike a file path  That works both in both the classic and new buildschemes  Some fo these scripts would only recognise it if it's abasename ie no directory component  Those need to be corrected,as the output parameter in the new build scheme is more likely tocontain a directory component than not
Add include directory options for assembler files that include from crypto/A few were missed in the previous commitCloses RT4412
check reviewer revieweremiliaUse SSL_get_SSL_CTX instead of passing SSL_CTX to s_clientc:print_stuff
check reviewer revieweremiliaPass entire CTLOG_STORE to SCT_print, rather than just the SCT's CTLOGSCT_print now looks up the correct CT log for you
check reviewer revieweremiliaRemove 'log' field from SCT and related accessorsIn order to still have access to an SCT's CTLOG when calling SCT_print,SSL_CTX_get0_ctlog_store has been addedImproved documentation for some CT functions in openssl/sslh
Add include directory options for assembler files that include from crypto/Closes RT4406
In the recipe using "makedepend", make sure the object file extension is there
Configure  don't trust $1 to stick around, save its value away
Fix a memory leak in the afalg engineThe AFALG engine created a global EVP_CIPHER instance but was not freeingit up when the engine was destroyed
Harmonize the option processing in 'config' and 'configcom'The help text for d in 'config' was aged, and the option processingin 'configcom' was just different  This harmonizes 'configcom' withthe instructions in INSTALL and both current reality
Add cleaning targets to Configurations/windowsmakefiletmpl
The typedef ECPARAMETERS is already defined, don't define it anew
Allow OPENSSL_NO_SOCK in e_osh even for nonWindows/DOS platformsUEFI needs this too Don't keep it only in the Windows/DOS ifdef blockThis is a fixed version of what was originally commit 963bb62195 andsubsequently reverted in commit 37b1f8bd62 Somewhere along the way, theWindows/DOS ifdef actually got removed, leaving it just broken It shouldhave been turned into an elif, not removedThis one correctly changes the logic from if WINDOWS|DOS  if OPENSSL_NO_SOCK nosock   elif !DJGPP native windows to if OPENSSL_NO_SOCK nosock  elif WINDOWS|DOS  if !DJGPP native windows 
Remove a missed item from the old thread APIA line from cryptlibh was missed during the old Thread API removal Thisbreaks nodeprecated builds
Mark SRP_VBASE_get_by_user as deprecatedThe function SRP_VBASE_get_by_user is declared as deprecated but theimplementation was not
No need to call EVP_CIPHER_CTX_init after EVP_CIPHER_CTX_newThe afalgtest was unnecessarily initing an EVP_CIPHER_CTX It is notneeded and is deprecated
Pass down inclusion directories to source file generatorsThe source file generators sometimes use $CC to postprocessgenerated source, and getting the inclusion directories may benecessary at times, so we pass them downRT4406
Travis  add missing semicolon
Update gitignore to ignore all cscope filesSignedoffby: Rich Salz <rsalz@akamaicom>
remove ms/rnd and add it to gitignoreSignedoffby: Rich Salz <rsalz@akamaicom>
RT3676 add: Export ASN1 DHparams
Travis  don't use ccache with cross compilesAlthough theoretically possible, Configure doesn't treat CC variableset like this very well: CC"ccache i686w64mingw32gcc"Also, this Travis script doesn't recognise the possibility either
Avoid negative array index in BIO_debug_callbackBIO_snprintf can return 1 on truncation and overflow as of commit9cb177301fdab492e4cfef376b28339afe3ef663  Though neither canrealistically occur while printing a pointer and short fixed string intoa buffer of length 256, the analysis to confirm that this the case goessomewhat far up the call chain, and not all static analyzers cansuccessfully follow the chain of logicIt's easy enough to clamp the returned length to be nonnegative beforecontinuing, which appeases the static analyzer and does not harm thesubsequent code
CT: check some GeneralizedTime return valuesSome of the ASN1 routines for the GeneralizedTime type can returnerrors; check for these and do not continue past failure, so asto appease coverity
When configured "shared", don't build static libraries on WindowsThe reason for this is that the static libraries and the DLL importlibraries are named the same on Windows  When configured "shared",the static libraries are unused anyway
Make util/mk1mfpl recognise noweaksslciphers
Avoid doublefree in calleres to OCSP_parse_urlset pointers to NULL after OPENSSL_free before returning to caller toavoid possible doublefree in callerSignedoffby: Rich Salz <rsalz@akamaicom>
Fix return type for CRYPTO_THREAD_run_oncereturn type should be int and not voidSignedoffby: Rich Salz <rsalz@akamaicom>
Add X509_CHECK_FLAG_NEVER_CHECK_SUBJECT flag
Remove duplicate typedef of ECPKPARAMETERS in ech
Run make update
Travis  the source directory is _srcdist, not _srcdir
Correct slight logic error in processing IF in buildinfoThis corrects a fault where the inner IF in this example was stillbeing acted upon:IF[0]whateverIF[1]whatever moreENDIFENDIFWith this change, the inner IF is skipped over
When grepping something starting with a dash, remember to use e
Deprecate the use of versionspecific methods
Use version flexible method instead of fixed version
Use minimum and maximum protocol version instead of version fixed methods
Fix usage of OPENSSL_NO__METHOD
Move disabling of RC4 for DTLS to the cipher list
Remove DES cipher alias
Update ciphers s documentation
Document SSL_get1_supported_ciphers
IDEA is not supported in TLS 12This currently seems to be the only cipher we still support that should getdisabled
Add support for minimum and maximum protocol version supported by a cipher
Add ssl_get_client_min_max_version functionAdjust ssl_set_client_hello_version to get both the minimum and maximum and thenmake ssl_set_client_hello_version use the maximum version
Make SSL_CIPHER_get_version return a const char 
Remove unused code
Make function to convert version to string
Constify security callbacks
Documentation for ctx_set_ctlog_list_file
Minor improvement to formatting of SCT output in s_client
Do not display a CT log error message if CT validation is disabled
RT3676: Expose ECgroup i2d functions
Comment away the extra checks in ConfigureThe "extra checks" is a debugging tool to check the config resolvingmechanism  It uses Perl's smart match, which is experimental andtherefore always causes Perl to give out a warning, and it causesolder Perl versions to fail entirelySo, it gets commented away, but stays otherwise in place, as it may beuseful again
Make ct_dir and certs_dir static in test/ct_testc
Fix ct_test to not assume it's in the source directoryct_test assumed it's run in the source directory and failed when builtelsewhere  It still defaults to that, but can be told another storywith the environment variables CT_DIR and CERTS_DIRTest recipe updated to match
Document importance of CTLOG_STORE outliving SCT if SCT_set0_log is used
Make SCT literals into const variables in ct_testc
Makes STACK_OFSCT parameter of i2d_SCT_LIST const
Removes SCT_LIST_set_source and SCT_LIST_set0_logsBoth of these functions can easily be implemented by callers instead
Makes SCT_get0_log return const CTLOG
Makes CTLOG_STORE_get0_log_by_id return const CTLOG
Improved documentation of SCT_CTX_ functions
Updates ct_errc
Remove unnecessary call to SCT_set1_extensionssct, "", 0 in ct_testc
Reset SCT validation_status if the SCT is modified
Use SCT_VERSION_V1 in place of literal 0 in ct_testc
Fixes "usuable" typo in ct_loclh
Treat boolean functions as booleansUse "!x" instead of "x < 0", as these functions never return a negativevalue
Make parameters of CTLOG_get const
Extensive application of __owur to CT functions that return a booleanAlso improves some documentation of those functions
Makes SCT_LIST_set_source return the number of successesNo longer terminates on first error, but instead tries to set the sourceof every SCT regardless of whether an error occurs with some
Fix locking in ssl_cert_dupProperly check the return value of CRYPTO_THREAD_lock_newSignedoffby: Rich Salz <rsalz@opensslorg>
Restore building out of source with the unified build scheme
CT test can't run without EC, so skip it on that algo as well
Fix ct_test to not assume it's in the source directoryct_test assumed it's run in the source directory and failed when builtelsewhere  It still defaults to that, but can be told another storywith the environment variables CT_DIR and CERTS_DIRTest recipe updated to match
Update CHANGES and NEWSUpdate the CHANGES and NEWS files with information about the recently addedAFALG engine and pipelining
Fix classic buildThe Thread API changes broke classic build This fixes it
In buildinfo, an IF within a clause that's skipped over shouldn't applyIf we find an IF within a clause that's skipped over, set it to beskipped as well
Add an entry in NEWS about the new threading API
Update CHANGES for the new threading API
Remove the old threading APIAll OpenSSL code has now been transferred to use the new threading API,so the old one is no longer used and can be removed We provide some compatmacros for removed functions which are all noopsThere is now no longer a need to set locking callbacks!!
Remove use of the old CRYPTO_LOCK_X5O9_STOREThe locking here is a bit strange and unclear Rather than refactoranything and possibly break stuff I have just moved to using the newthread API following as closely as possible what was there previously
Don't call ENGINE_cleanup when configured "noengine"
Don't add engines if configured "noengine"Similarly, don't add e_capi if configured "nocapieng"Also, indent a little deeper, for clarity
Don't add afalg engine if configured "noengine"Also, indent a little deeper, for clarity
Don't check the conditions to build e_afalg if configured "noengine"
Have Configure display the value of SHARED_CFLAG
Make sure the effect of "pic" / "nopic" is used with assembler compilationsBefore the 'Introduce the "pic" / "nopic" config option' commit, theshared_cflag value for the chosen config would be part of the makevariable CFLAG, which got replicated into CFLAGS and ASFLAGSSince said commit, the shared_cflag value has become a make variableof its own, SHARED_CFLAG which is left empty in a "nopic" buildHowever, ASFLAGS was forgotten  That's what's corrected with thischange
Touch the correct variables for the system; shlib_wrapsh on SolarisIf there is cause to think LD_LIBRARY_PATH_32 and LD_PRELOAD_32 areappropriate variables to touch, do so  Otherwise, touch the usualLD_LIBRARY_PATH and LD_PRELOAD  This covers for older installationsthat don't have a mix of 32bit and 64bit libs
Recognise 32bit Solaris in util/shlib_wrapshSubmitted by Erik Forsberg <erik@efcacom>
Check gcc version to see if it supports MM and friendsAccording to manuals found here: https://gccgnuorg/onlinedocs/, GNUC version 3 and on support the dependency generation options  Wetherefore need to check the gcc version to see if we're going to useit or makedepend for dependency generation
Add extra include directory for includers of ppc_archhcrypto/evp/e_aesc and crypto/modes/gcm128c include ppc_archh, whichis located in crypto/, so add that as extra include directory for themIssue reported by Jeffrey Walton <noloader@gmailcom>
Adapt INSTALL and related notes for Windows
Adapt appveyoryml for the new unified build
Adapt the Windows makefile template to source generation
Don't run the TLSProxy based tests in native WindowsThere are issues binding listening ports  This may be analyzed morethoroughly later on
Unified  name native Windows shared libraries like MingW builds do
Unified  extract settings from util/pl/VC32pl and make the config settingsThis introduces the settings loutflag and aroutflag, because differentWindows tools that do the same thing have different ways to specifythe output fileThe Borland C++ config is commented away for the monent, perhapspermanently
Unified  a native Windows makefile template
ec/asm/ecp_nistz256sparcv9pl: get corner logic rightRT4284
Adapt mk1mfpl and companions to changed perlasm script semantics
Unified  adapt the generation of whirlpool assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/whrlpool/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of sha assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/sha/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of rc4 assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/rc4/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of rc5 assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/rc5/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of ripemd assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/ripemd/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of md5 assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/md5/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of modes assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/modes/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of poly1305 assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/poly1305/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of des assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/des/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of ec assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/ec/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of camellia assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/camellia/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of cast assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/cast/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of chacha assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/chacha/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Because crypto/buildinfo demands CFLAGS_Q, descripmmstmpl must deliver
Unified  adapt the generation of cpuid, uplink and buildinf to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of aes assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/aes/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of blowfish assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/bf/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Convert the dynlocks in e_chil to the new Thread API locks
Remove another lock from e_chil
Always call ENGINE_cleanup in deinitEven if we haven't loaded an engine, we might have set up theglobal_engine_lock, so we should still clean up
Move chil engine to the new thread apiMove the chil engine to use the new thread API As I don't have access tothe hardware I can't test this : I think its ok
Move engine library over to using the new thread APIRemove usage of CRYPTO_LOCK_ENGINE
err_lclh is gone, don't pretend it's there
Add missing semi
Counter mixed signedness with a cast
Fix names of the define used for platform specific code
Add empty line after local variables
Fix error with wait set of fds for the selectIt also makes the call to select blocking to reduce CPU usage
Use correct function ID in error pathThis fixes "make update"
Move variable declaration to the start of the function
Ensure CRYPTO_mem_leaks is the last thing we doCRYPTO_mem_leaks deinits the library, so we must not do anything interesting after we've used it!
Fix memory leak in ssltestThe new Rand usage of Thread API exposed a bug in ssltest ssltest "cheats"and uses internal headers to directly call functions that normally youwouldn't be able to do This means that autoinit doesn't happen, andtherefore autodeinit doesn't happen either, meaning that the new rand locksdon't get cleaned up properly
Convert rand code to new threading APIReplace the CRYPTO_LOCK_RAND and CRYPTO_LOCK_RAND2 locks with new threadAPI style locks
Adapt unix Makefile template to 'nomakedepend'This change is a bit more complex, as it involves several recipevariantsAlso, remove the $CROSS_COMPILE prefix for the makedepend programWhen we use the program "makedepend", this doesn't serve anything,and when we use the compiler, this value isn't even used
Adapt descripmmstmpl to 'nomakedepend'VMS doesn't have "makedepend" anyway, so this is just a matter of usingthe right qualifiers when 'makedepend' is enabled
Add the configure option 'nomakedepend'If no makedepend program or equaly capable compiler is present,'makedepend' gets disabled automatically
Fix SSL_CIPHER_get_auth_nid returnCopy/paste error between SSL_CIPHER_get_kx_nid andSSL_CIPHER_get_auth_nid, wrong table was referencedSignedoffby: Rich Salz <rsalz@opensslorg>
Fix a typo in dynamic_load
Convert RSA blinding to new multithreading API
Convert CRYPTO_LOCK_SSL_ to new multithreading API
Remove the transfer of lock hooks from bind_engineWith the new threads API, this is no longer needed
Engine API repair  memory management hooksThe Engine API lost the setting of memory management hooks inbind_engine  Here's putting that backEX_DATA and ERR functions need the same treatment
Redo the Unix source code generatorFor assembler, we want the final target to be foos lowercase sHowever, the buildinfo may have lines like this note upper case S:GENERATE[fooS]fooplThis indicates that foos lowercase s is still to be produced, butthat producing it will take an extra step via $CC E  Therefore,the following variants simplified for display can be generated:GENERATE[fooS]foopl  >  foos: foopl$PERL $foopl $@S; \$CC $CFLAGS E P $@S > $@ && \rm f $@SGENERATE[foos]foopl  >  foos: foopl$PERL $foopl $@GENERATE[fooS]foom4  >  foos: foom4m4 B 8192 $foom4 > $@S; \$CC $CFLAGS E P $@S > $@ && \rm f $@SGENERATE[foos]foom4  >  foos: foom4m4 B 8192 $foom4 > $@
Fix error in ssltestCompiling ssltest with some compilers using strictwarnings results incomplaints about an unused result
Adapt e_capi to the DSA_SIG_get0 API
Convert mem_dbg and mem_sec to the new Thread APIUse new Thread API style locks, and thread local storage for mem_dbg
OpenSSLDie > OPENSSL_dieAlso removed a bunch of unused define's from e_osh
Remove the n tar flag from osx dist creationWith the unified build scheme, tar MUST recurse, or the tarball willbe empty
Remove some old ms/ files
Include e_osh from ec_lclhThe EC code recently started using REF_PRINT_COUNT and REF_ASSERT_ISNTThose are defined in e_osh
Fix cert leaks in s_serverSignedoffby: Rich Salz <rsalz@opensslorg>
Reuse strndup, simplify codeSignedoffby: Rich Salz <rsalz@opensslorg>
make update
Make DSA_SIG opaqueThis adds a new accessor function DSA_SIG_get0The customisation of DSA_SIG structure initialisation has been removed thismeans that the 'r' and 's' components are automatically allocated whenDSA_SIG_new is called Update documentation
Fix travis buildsTravis doesn't seem to know about 'expr'
make update
Convert CRYPTO_LOCK_X509_ to new multithreading API
Convert CRYPTO_LOCK_UI to new multithreading API
Convert CRYPTO_LOCK_EC_ to new multithreading API
Convert CRYPTO_LOCK_EVP_PKEY to new multithreading API
Convert CRYPTO_LOCK_BIO to new multithreading API
Only enable ccache if it's available
Use ccache for the unified buildsThis may speed up our builds considerably
For unified builds, make a separate build directory and build there
SPARCv9 assembly pack: unify build rules and argument handlingMake all scripts produce S, make interpretation of $CFLAGSpreprocessor's responsibility, start accepting $PERLASM_SCHEME[$PERLASM_SCHEME is redundant in this case, because there areno deviataions between Solaris and Linux assemblers This ispurely to unify pl>S handling across all targets]
Fix build; ssltest
Tweak some more information in INSTALLThe summary on how to add configs and how Makefile et al wasn't quitecorrect any more
GH787: Fix ALPN Perform ALPN after the SNI callback; the SSL_CTX may change due tothat processing Add flags to indicate that we actually sent ALPN, to properly errorout if unexpectedly received clean up ssl3_free no need to explicitly clear when doing memset document ALPN functionsSignedoffby: Rich Salz <rsalz@opensslorg>
Add an SSL_has_pending functionThis is similar to SSL_pending but just returns a 1 if there is datapending in the internal OpenSSL buffers or 0 otherwise as opposed toSSL_pending which returns the number of bytes available UnlikeSSL_pending this will work even if "read_ahead" is set which is thecase if you are using read pipelining, or if you are doing DTLS A 1return value means that we have unprocessed data It does not necessarilyindicate that there will be application data returned from a call toSSL_read The unprocessed data may not be application data or therecould be errors when we attempt to parse the records
Add an ability to set the SSL read buffer sizeThis capability is required for read pipelining We will only read in asmany records as will fit in the read buffer and the network can providein one go The bigger the buffer the more records we can process inparallel
Add cipher query functionsAdd functions to determine authentication, keyexchange, FIPS and AEAD
Convert ERR_STRING_DATA to new multithreading API
Convert ERR_STATE to new multithreading API
Convert CRYPTO_LOCK_EX_DATA to new multithreading API
Convert CRYPTO_LOCK_DSO to new multithreading API
Convert CRYPTO_LOCK_{DH,DSA,RSA} to new multithreading API
Convert CRYPTO_LOCK_GETBYNAME to new multithreading API
GH815: The ChaCha20/Poly1305 codepoints are officialCCA8, CCA9, CCAA, CCAB, CCAC, CCAD, and CCAE are now present inhttps://wwwianaorg/assignments/tlsparameters/tlsparametersxhtmlso remove the "as per draftietftlschacha20poly130503" noteaccordinglySignedoffby: Rich Salz <rsalz@opensslorg>
GH787: Fix ALPN Perform ALPN after the SNI callback; the SSL_CTX may change due tothat processing Add flags to indicate that we actually sent ALPN, to properly errorout if unexpectedly received clean up ssl3_free no need to explicitly clear when doing memset document ALPN functionsSignedoffby: Rich Salz <rsalz@opensslorg>
Make mk1mf recognise the classic flag
Fix configurations such as 'dist' and tar buildingFor config targets such as 'dist', which doesn't have a BASE template,we still need to have a default build schemeAdditionally, the unified Makefile template's target 'tar' wasn'tquite as flexible as the unixmake oneFinally, traviscreatereleasesh can be somewhat simplified now thatit builds with the unified build scheme
We've switch to unified build scheme by default, reflect it in travisWe want to preserve a couple of classic builds still, the quickest isto change all unified to classic
Fix engine/asm/e_padlockx86pl for newer semantics
Change the INSTALL documentation for unified buildsBecause of the unified scheme, building on different platforms is verysimilar  We currently have Unix and OpenVMS on the unified scheme,which means that a separate INSTALLVMS is no longer needed
Make unified builds the default on Unix
Add the Configure option classic, to fall back on classic build schemes
Revert "unified build scheme: Try to nudge users to try the "unified" build"This reverts commit 242ffb05a2e4aa3fc7ffc131037e077b7e242189
Fix building without multiblock supportNot all platforms support multiblock Building without it fails prior tothis fixRT4396
Don't free NCONF obtained valuesBug reported by Michel Sales
Remove kinv/r fields from DSA structureThe kinv/r fields in the DSA structure are not used by OpenSSL internallyand should not be used in general
GH812: Fix for noui build on WindowsAdd UI to known algorithms in mkdefplSignedoffby: Rich Salz <rsalz@opensslorg>
AppVeyor: Only use the latest VS version
Rename the numpipes argument to ssl3_enc/tls1_encThe numpipes argument to ssl3_enc/tls1_enc is actually the number ofrecords passed in the array To make this clearer rename the argument to|n_recs|
Rename a functionRename the have_whole_app_data_record_waiting function to include thessl3_record prefixand make it a bit shorter
Refactor dasync cipher implementations to improve code reuseMove out most of the boiler plate code that is common between aes128cbcand aes128cbchmacsha1 into helper functions to improve code reuse
Move the _hidden_ static variables in dasync to be constructed in bindThe _hidden_ variables were being created onthefly It is better tocreate them once up front during bind to avoid any potential raceconditions
Fix typo in SSL_pending docs
Rename EVP_CIPHER_CTX_cipher_data to EVP_CIPHER_CTX_get_cipher_dataWe had the function EVP_CIPHER_CTX_cipher_data which is newly added for110 As we now also need an EVP_CIPHER_CTX_set_cipher_data it makesmore sense for the former to be called EVP_CIPHER_CTX_get_cipher_data
Fix s_server/s_client handling of the split_send_frag argumentEnsure that a value of 0 is correctly handled for the split_send_fragargument
Add documentation for the EVP_CIPHER_CTX_cipher_data functionsThe new pipeline code added a new functionEVP_CIPHER_CTX_set_cipher_data Add documentation for this and theexisting EVP_CIPHER_CTX_cipher_data function
Remove the wrec record layer fieldWe used to use the wrec field in the record layer for keeping track of thecurrent record that we are writing out As part of the pipelining changesthis has been moved to stack allocated variables to do the same thing,therefore the field is no longer needed
Update a commentUpdate a comment that was out of date due to the pipelining changes
Add documentation for new s_server/s_client optionsDocument the new split_send_frag, max_pipelines and read_buf options
Add documentation for SSL_has_pendingA previous commit added the SSL_has_pending function which provides amethod for knowing whether OpenSSL has buffered, but as yet unprocessedrecord data
Add pipelining documentationAdd some documentation for all of the SSL/SSL_CTX functions/ctrls forconrolling read and write pipelining
Fix erroneous fall thgrough in switch statementFix an erroenous fall through when setting the max_pipelines value
Ensure s_client and s_server work when read_ahead is setPreviously s_client and s_server relied on using SSL_pending which doesnot take into account read_ahead For read pipelining to work, read_aheadgets set automatically Therefore s_client and s_server have beenconverted to use SSL_has_pending instead
Add an SSL_has_pending functionThis is similar to SSL_pending but just returns a 1 if there is datapending in the internal OpenSSL buffers or 0 otherwise as opposed toSSL_pending which returns the number of bytes available UnlikeSSL_pending this will work even if "read_ahead" is set which is thecase if you are using read pipelining, or if you are doing DTLS A 1return value means that we have unprocessed data It does not necessarilyindicate that there will be application data returned from a call toSSL_read The unprocessed data may not be application data or therecould be errors when we attempt to parse the records
Add an ability to set the SSL read buffer sizeThis capability is required for read pipelining We will only read in asmany records as will fit in the read buffer and the network can providein one go The bigger the buffer the more records we can process inparallel
Lazily initialise the compression bufferWith read pipelining we use multiple SSL3_RECORD structures for readingThere are SSL_MAX_PIPELINES 32 of them defined typically not all of thesewould be used Each one has a 16k compression buffer allocated! Thisresults in a significant amount of memory being consumed which, most of thetime, is not needed  This change swaps the allocation of the compressionbuffer to be lazy so that it is only done immediately before it is actuallyused
Implement read pipeline support in libsslRead pipelining is controlled in a slightly different way than with writepipelining While reading we are constrained by the number of records thatthe peer and the network can provide to us in one go The more recordswe can get in one go the more opportunity we have to parallelise theprocessingThere are two parameters that affect this: The number of pipelines that we are willing to process in one go This iscontrolled by max_pipelines as for write pipelining The size of our read buffer A subsequent commit will provide an API foradjusting the size of the bufferAnother requirement for this to work is that "read_ahead" must be set Theread_ahead parameter will attempt to read as much data into our read bufferas the network can provide Without this set, data is read into the readbuffer on demand Setting the max_pipelines parameter to a value greaterthan 1 will automatically also turn read_ahead onFinally, the read pipelining as currently implemented will only parallelisethe processing of application data records This would only make adifference for renegotiation so is unlikely to have a significant impact
Add dummy pipeline support for aes128_cbc_hmac_sha1Add dummy pipline support to dasync for the aes128_cbc_hmac_sha1 cipherThis is treated as an AEAD cipher
Add pipeline support to s_server and s_clientAdd the options min_send_frag and max_pipelines to s_server and s_clientin order to control pipelining capabilities This will only have an effectif a pipeline capable cipher is used such as the one provided by thedasync engine
Implement write pipeline support in libsslUse the new pipeline cipher capability to encrypt multiple records beingwritten out all in one go Two new SSL/SSL_CTX parameters can be used tocontrol how this works: max_pipelines and split_send_fragmentmax_pipelines defines the maximum number of pipelines that can ever be usedin one go for a single connection It must always be less than or equal toSSL_MAX_PIPELINES currently defined to be 32 By default only onepipeline will be used ie normal nonparallel operationsplit_send_fragment defines how data is split up into pipelines The numberof pipelines used will be determined by the amount of data provided to theSSL_write call divided by split_send_fragment For example ifsplit_send_fragment is set to 2000 and max_pipelines is 4 then:SSL_write called with 02000 bytes  1 pipeline usedSSL_write called with 20014000 bytes  2 pipelines usedSSL_write called with 40016000 bytes  3 pipelines usedSSL_write_called with 6001+ bytes  4 pipelines usedsplit_send_fragment must always be less than or equal to max_send_fragmentBy default it is set to be equal to max_send_fragment This will mean thatthe same number of records will always be created as would have beencreated in the nonparallel case, although the data will be apportioneddifferently In the parallel case data will be spread equally between thepipelines
Update the dasync engine to add a pipeline cipherImplement aes128cbc as a pipeline capable cipher in the dasync engineAs dasync is just a dummy engine, it actually just performs the parallelencrypts/decrypts in serial
Add defines for pipeline capable ciphersAdd a flag to indicate that a cipher is capable of performing"pipelining", ie multiple encrypts/decrypts in parallel Also add somenew ctrls that ciphers will need to implement if they are pipeline capable
make update
Trim Travis config part 3 Only build & test two configurations Make all theother build variants buildonly on gcc clang on osx Don't build with default clang at all on linux Only use gcc5 and clang36 for the sanitizer builds Rerunningeg CONFIG_OPTS"shared" with them seems redundant
Revert "Allow OPENSSL_NO_SOCK in e_osh even for nonWindows/DOS platforms"This reverts commit 963bb62195109fb863dc4d88c7470ce7f9af25ac
Fix pkeyutl to KDF lnks
Remove really old demo's
Elide OPENSSL_INIT_set_config_filename for nostdio buildStrictly speaking, it isn't stdio and file access which offend me here;it's the fact that UEFI doesn't provide a strdup function But thefact that it's pointless without file access is a good enough excuse forcompiling it out
Elide DES_read_password for noui build
Move declaration of X509_aux_print out of ifndef OPENSSL_NO_STDIOThis isn't a file access function; it's still present
Allow OPENSSL_NO_SOCK in e_osh even for nonWindows/DOS platformsUEFI needs this too Don't keep it only in the Windows/DOS ifdef block
ISSUE 43: Add BIO_sock_shutdownThis replaces SHUTDOWN/SHUTDOWN2 with BIO_closesocket
Minor update to includes and documentation for ct_testc
Remove OPENSSL_NO_UNIT_TEST guard from ct_testc
Use s>session>peer instead of calling SSL_get_peer_certificatesAvoids modifying certificate reference count, and thereby avoids locking
Lowercase name of SSL_validate_ct as it is an internal function
CT code now calls X509_free after calling SSL_get_peer_certificateWithout this, the peer certificate would never be deleted, resulting in a memory leak
Fixes memory leaks in CT code
Fix the build tree include directory for afalg engine
Make OpenSSL::Test::setup a bit more forgivingIt was unexpected that OpenSSL::Test::setup should be called twiceby the same recipe  However, that may happen if a recipe combinesOpenSSL::Test and OpenSSL::Test::Simple, which can be a sensible thingto do  Therefore, we now allow it
Elide EVP_read_pw_string and friends for nouiSignedoffby: Rich Salz <rsalz@opensslorg>
GH768: Minor grammar nits in CRYPTO_get_ex_new_indexpodSignedoffby: Rich Salz <rsalz@opensslorg>
Unified  adapt the generation of padlock assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in engines/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  adapt the generation of bignum assembler to use GENERATEThis gets rid of the BEGINRAWENDRAW sections in crypto/bn/buildinfoThis also moves the assembler generating perl scripts to take theoutput file name as last command line argument, where necessary
Unified  Add the buildinfo command OVERRIDE, to avoid build file clashesShould it be needed because the recipes within a RAW section mightclash with those generated by Configure, it's possible to tell itnot to generate them with the use of OVERRIDES, for example:SOURCE[libfoo]fooc barcOVERRIDESbaroBEGINRAW[Makefileunix]baro: barc$CC $CFLAGS DSPECIAL c o $@ $<ENDRAW[Makefileunix]
Unified  Adapt the Unix and VMS templates to support GENERATE
Unified  Add the buildinfo command GENERATE, to generate source filesIn some cases, one might want to generate some source files fromothers, that's done as follows:GENERATE[foos]asm/somethingpl $CFLAGSGENERATE[bars]asm/barSThe value of each GENERATE line is a command line or part of itConfigure places no rules on the command line, except the the firstitem muct be the generator file  It is, however, entirely up to thebuild file template to define exactly how those command lines shouldbe handled, how the output is captured and so on
Add a function to detect if we have async or notAdd the ASYNC_is_capable function and use it in speed
GH804: Fix unusedresult warnings in dasyncSignedoffby: Rich Salz <rsalz@opensslorg>
documentation and duplicate goto statements
move ifdef statements
NIST SP80056A cofactor ECDH KATs
Remove use of CRYPTO_LOCK_INIT in init codeSwap the use of CRYPTO_LOCK_INIT in the init code to use the new threadingAPI mechanism for locking
Swap the init code to use the new Thread API thread localsThe init code was using its own thread local code Now we have a centralAPI for it we should use that instead
Swap the init code to use CRYPTO_ONCEThe init code was using its own "once" implementation Now that we havethe new thread API we should use that instead
make update
Update documentation
Make PKCS8_PRIV_KEY_INFO opaqueMake PKCS8_PRIV_KEY_INFO opaque Several accessor functions already existfor this structure Two new ones were added to handle attributesThe old handling of broken formats has been removed and the correspondingstructures simplified
Add support to ASYNC_WAIT_CTX to speed
Remove unnecessary memset to 0 and check for NULL before OPENSSL_free
Fix the error with RSA and the daysnc engine in async modeMove RSA struct in the job local structThe change is applied also to other crypto operations eg DSA tomake things consistent
Add support for async jobs in OpenSSL speedSummary of the changes: Move the calls to the crypto operations inside wrapper functionsThis is required because ASYNC_start_job takes a function as an argument Add new function run_benchmark that manages the jobs for all the operationsIn the POSIX case it uses a select to receive the events from the engineand resume the jobs that are paused, while in the WIN case it uses PeekNamedPipe Add new option argument async_jobs to enable and specify the number of async jobsExample:openssl speed engine dasync elapsed async_jobs 32 rsa2048
Rework the default cipherlist Always prefer forwardsecure handshakes Consistently order ECDSA above RSA Next, always prefer AEADs to nonAEADs, irrespective of strength Within AEADs, prefer GCM > CHACHA > CCM for a given strength Prefer TLS v12 ciphers to legacy ciphers Remove rarely used DSS, IDEA, SEED, CAMELLIA, CCM from the defaultlist to reduce ClientHello bloat
Makefilein: populate [PLIB_]LDFLAG even with $target{} settingsRT4373
bn/asm/x86[_64]montpl: complement alloca with pagewalkingSome OSes, coughdows, insist on stack being "wired" tophysical memory in strictly sequential manner, ie if stackallocation spans two pages, then reference to farmost one canbe punishable by SEGV But page walking can do good even onother OSes, because it guarantees that villain thread hitsthe guard page before it can make damage to innocent one
Restore some mingw builds"nopic" builds have in fact been green and reasonably fast, sorestore them while we figure out why tests without "nopic" hang
perlasm/x86_64xlatepl: handle binary constants earlyNot all assemblers of "gas" flavour handle binary constants, egseasoned MacOS Xcode doesn't, so give them a hand
Fix some clang warningsThe af_alg engine and associated test were creating warnings when compiledwith clang This fixes it
Fix minor errors in the afalg testThe new afalg test should have a copyright date of 2016 Also anincorrect buffer was being sent to EVP_CipherFinal_ex whendecrypting
Adding afalg test
Fix OPENSSL_INIT flags to avoid a clashThe 0x00010000L OPENSSL_INIT flag appeared twice
Misc afalg build fixesMisc afalg build fixes as suggested by Richard Levitte for the latestConfigure changes
Rework based on feedback:1 Cleaned up eventfd handling2 Reworked socket setup code to allow other algorithms to be added infuture3 Fixed compile errors for static build4 Added error to error stack in all cases of ALG_PERR/ALG_ERR5 Called afalg_aes_128_cbc from bind to avoid race conditions6 Used MAX_INFLIGHT define in io_getevents system call7 Coding style fixes
ALG: Add AFALG engine
Trim Travis config part 2 Remove Win builds temporarily They're slow, allowed to fail,and therefore not useful as they are Make the unified part of the matrix buildonly This can beswapped if unified becomes the default Only build 'noengine' once, don't run any tests, but don't allow itto fail
Trim the Travis config Remove noasm We've got to cut something, and this is at leastpartially covered by the sanitizer builds Remove enablecryptomdebug from sanitizerbuilds enablecryptomdebug has been shown to catch some staticinitialization bugs that the standard leak sanitizer can't soperhaps it has _some_ value; but we shouldn't let the two compete
GH616: Remove dead codeSignedoffby: Rich Salz <rsalz@opensslorg>
No fnocommon for DarwinWhen object files with common block symbols are added to staticlibraries on Darwin, those symbols are invisible to the linker thattries to use them  Our solution was to use fnocommon when compilingC sourceUnfortunately, there is assembler code that defines OPENSSL_ia32cap_Pas a common block symbol, unconditionally, and in some cases, there isno other definition  fnocommon doesn't help in this caseHowever, 'ranlib c' adds common block symbols to the index of thestatic library, which makes them visible to the linker using it, andthat solves the problem we've seenThe common conclusion is, either use fnocommon or ranlib c onDarwin  Since we have common block symbols unconditionally, choosingthe method for our source is easy
New ordinal files, recreated from scratch
Change names of ordinals and libs, libeay > libcrypto and ssleay > libssl
Remove the old ordinals
use saner default parameters for scryptThanks to Colin Percival for reporting this issue
Disable SSLv3 by default
Don't mark the eNULL ciphers as nondefaultThey're not part of ALL, so they're not part of COMPLEMENTOFDEFAULT
Curve25519: fix constinitializationClang is permissive of this, but gcc fails
Add ASN1 ADB callbackAdd support for application supplied any defined by callback Anapplication can change the selector value if it wishes This ismainly intended for values which are only known at runtime, forexample dynamically created OIDs
GH784: Better variable nameSignedoffby: Rich Salz <rsalz@opensslorg>
Make formatting consistent in apps/Makefilein
Remove redundant semicolons from apps/Makefilein
Documentation for new CT s_client flags
Documentation for new SSL functions
Handle empty log name in "enable_logs" line of the CT log fileeg "enabled_logs  foo,,bar"
Handle missing "enabled_logs" line in CT log file
If a CT log entry in CTLOG_FILE is invalid, skip it and continue loadingPreviously, the remaining CT log entries would not be loadedAlso, CTLOG_STORE_load_file would return 1 even if a log entry wasinvalid, resulting in no errors being shown
Extends s_client to allow a basic CT policy to be enabled
Change default CT log list filename to "ct_log_listcnf"
Adds CT validation to SSL connectionsDisabled by default, but can be enabled by setting thect_validation_callback on a SSL or SSL_CTX
Changes to DEFAULT curvesChange the ECC default curve list to be this, in order: x25519, secp256r1,secp521r1, secp384r1, brainpoolP256r1, brainpoolP384r1, and brainpool512r1
Curve25519: avoid undefined behaviourAppease the sanitizer: avoid left shifts of negative valuesThis could've been done entirely with casts to uint and back,but using masks seemed slightly more readableThere are also implementationdefined signed right shifts in thiscode Those remain
chacha/asm/chachappcpl: fix typoRT4365
Don't build RC4 ciphersuites into libssl by defaultRC4 based ciphersuites in libssl have been disabled by default They canbe added back by building OpenSSL with the "enableweaksslciphers"Configure option at compile time
Improved HKDF and TLS1PRF documentation
Correction, $disabled{shared} rather than $config{no_shared}
Restore the zlib / zlibdynamic logicThe proper logic is that both zlib and zlibdynamic are disabled bydefault and that enabling zlibdynamic would enable zlib  Somewherealong the way, the logic got changed, zlibdynamic was enabled bydefault and zlib didn't get automatically enabledThis change restores the original logic
Sanity check PVK file fieldsPVK files with abnormally large length or salt fields can cause aninteger overflow which can result in an OOB read and heap corruptionHowever this is an rarely used format and private key files do notnormally come from untrusted sources the security implications notsignificantFix by limiting PVK length field to 100K and salt to 10K: these should bemore than enough to cover any files encountered in practiceIssue reported by Guido Vranken
GH773: Possible leak on CRYPTO_THREAD_lock_new failureSignedoffby: Rich Salz <rsalz@akamaicom>
GH781: opensslspec: use secure urlsSignedoffby: Rich Salz <rsalz@akamaicom>
GH769: Reuse strndup
GH355: Implement HKDFThis patch implements the HMACbased ExtractandExpand Key DerivationFunction HKDF as defined in RFC 5869It is required to implement the QUIC and TLS 13 protocols among othersSignedoffby: Rich Salz <rsalz@opensslorg>
Remove overzealous echoingThis construct in a Makefile is a bit overzealous:@echo FOO@FOOCleaned up
Add KDF support to pkeyutl Update documentation
Clean up curve25519 build Remove OPENSSL_X25519_X86_64 which never worked, because we don't havethe assembly Also remove OPENSSL_SMALL which should have beenOPENSSL_SMALL_FOOTPRINT which isn't a priority at the moment
update NEWS
fix noec build
Refactor ClientHello extension parsing1 Simplify code with better PACKET methods2 Make broken SNI parsing explicit SNI was intended to be extensibleto new name types but RFC 4366 defined the syntax inextensibly, andOpenSSL has never parsed SNI in a way that would allow adding a new nametype RFC 6066 fixed the definition but due to broken implementationsbeing widespread, it appears impossible to ever extend SNI3 Annotate resumption behaviour OpenSSL doesn't currently handle allextensions correctly upon resumption Annotate for further cleanup4 Send an alert on ALPN protocol mismatch
make update
add kdfh to mkdefpl
Add KDF error codes
make update
Generalise KDF test in evp_testc
Convert PRF tests to use Ctrl
Add Ctrl keyword to KDF test in evp_test
Add string ctrl operations to TLS1 PRF, update documentation
Use utility functions for HMAC and CMAC
EVP_PKEY_CTX utility functionsUtility functions to pass a string or hex string to EVP_PKEY_CTX_ctrl
make errors
Handle KDF internallyHandle KDF in ECDH_compute_key instead of requiring each implementationsupport it This modifies the compute_key method: now it allocates andpopulates a buffer containing the shared secret
Document the changes in config settings
Don't copy from target to config so much, see config as a complementWe copied $target{cflags}, $target{defines} and a few more to config,just to add to the entries  Avoid doing so, and let the build templatesdeal with combining the twoThere are a few cases where we still fiddle with target, but that'sacceptable
Configure  Get rid of the special thread_cflag, replace with thread_schemeThe thread_cflag setting filled a double role, as kinda sorta anindicator of thread scheme, and as cflags  Some configs also addedlflags and ex_libs for multithreading regardless of if threading wouldbe enabled or notInstead of this, add threading cflags among in the cflag setting,threading lflags in the lflag setting and so on if and only if threadsare enabled which they are by defaultAlso, for configs where there are no special cflags for threading theVMS configs are of that kind, this makes it possible to still clearlymention what thread scheme is usedThe exact value of thread scheme is currently ignored except when it's"unknown", and thereby only serves as a flag to tell if we know howto build for multithreading in a particular config  Yet, thecurrently used values are "unknown", "pthreads", "uithreads" akasolaris threads and "winthreads"
Configure  get rid of the special debug_ and release_ settingsInstead, make the build type "debug" or "release" available through$config{build_type} and let the configs themselves figure out what theusual settings such as "cflags", "lflags" and so on should beaccordinglyThe benefit with this is that we can now have debug and releasevariants of any setting, not just those Configure supports, and mayalso involve other factors the MSVC flags /MD[d] and /MT[d] involveboth build type and whether threading is enabled or not
Minimize copied config settings$target{lflags} and $target{plib_flag} were copied to config for nogood reason
Configure  move the addition of the zlib / libz lib to configsConfigure had the Unix centric addition of lz when linking with zlibis enabled, which doesn't work on other platforms  Therefore, we moveit to the BASE_unix config template and add corresponding ones in theother BASE_ config templates  The Windows one is probably incomplete,but that doesn't matter for the moment, as mk1mf does it's own thinganywayThis required making the withargs table global, so perl snippets inthe configs can use it
Configure  Rename BASE to DEFAULTS and add a few inheritable BASEsThese BASE templates are intended to hold values that are common forall configuration variants for whole families of configurationsSo far, three "families" are identified: Unix, Windows and VMS, mostlycharacterised by the build system they currently use
Configure  Allow CODErefs and ARRAYrefs in configuration setting arraysThis provides for more powerful lazy evaluation and buildup of thesetting contents  For example, something like this becomes possible:defines > [ sub { $config{thisorthat} ? "FOO" :  } ]Any undefined result of such functions such as 'undef' or the emptylist will be ignored
Ensure Async is deinited properlyThe global thread local keys were not being deinited properly in async
Convert ASYNC code to use new Thread APIThe async code uses thread local variables We should convert to usingthe new Thread API for doing this
Provide getters for default_passwd_cb and userdataThis patch provides getters for default_passwd_cb and userdata for SSLand SSL_CTX The getter functions are required to port Python's ssl moduleto OpenSSL 110
curve25519: add missing constqualifier
Add a shared_target to the VCcommon configThis has no real meaning, except it gives Configure a hint that VCtargets are indeed capable of producing shared objects
Configure  make the use of environment variables for overrides consistentWe allow some commands to be overriden, but didn't handle that in aconsistent manner
Make uplink auxiliary source separate from cpuid sourceThere are cases, for example when configuring noasm, that the addeduplink source files got in the way of the cpuid ones  The best way tosolve this is to separate the two
Make k25519Precomp const
poly1305/asm/poly1305pl: flip horizontal add and reductionFormally only 32bit AVX2 code path needs this, but I choose toharmonize all vector code pathsRT4346
Consistently use arm_archh constants in armcap assembly codeMost of the assembly uses constants from arm_archh, but a few references toARMV7_NEON don't Consistently use the macros everywhereSignedoffby: Andy Polyakov <appro@opensslorg>
remove old unused oneline name field
make errors
Add default operations to EC_METHOD
Replace overridesInstead of overriding a default operation move default operation to aseparate function which is then explicitly included in any EC_METHODthat uses it
CT policy validationSpecifies a callback that will, in the future, be used by the SSL code todecide whether to abort a connection on Certificate Transparency grounds
Fix pkeyopt and fix error check
RT4347: Fix GCC unusedvalue warnings with HOST_c2lThe HOST_c2l macro assigns the value to the specified variable, but alsoevaluates to the same value Which we ignore, triggering a warningTo fix this, just cast it to void like we did in commit 08e553644"Fix some clang warnings" for a bunch of other instancesSignedoffby: Rich Salz <rsalz@opensslorg>
Move macros for reading/writing integers into ct_loclh
Addresses review comments from richsalz
Fixes potential double free and memory leak in ct_b64c
Verify SCT signaturesTests included in future commit, which adds CT policy validation
Updates to CHANGES and NEWS for 102 and 101 release
bn/asm/x86_64mont5pl: unify gather procedure in hardly used pathand reorganize/harmonize postconditionsAdditional hardening following on from CVE20160702
crypto/bn/x86_64mont5pl: constanttime gather procedureAt the same time remove miniscule bias in final subtractionPerformance penalty varies from platform to platform, and even withkey length For rsa2048 sign it was observed to be 4 for SandyBridge and 7 on BroadwellCVE20160702
bn/asm/rsazavx2pl: constanttime gather procedurePerformance penalty is 2CVE20160702
bn/asm/rsaxx86_64pl: constanttime gather procedurePerformance penalty is 2 on Linux and 5 on WindowsCVE20160702
bn/bn_expc: constanttime MOD_EXP_CTIME_COPY_FROM_PREBUFPerformance penalty varies from platform to platform, and evenkey length For rsa2048 sign it was observed to reach almost 10CVE20160702
Unified  have configdatapm depend on a few more things
GH762: Reuse strdupSignedoffby: Rich Salz <rsalz@opensslorg>
GH764: s_server: trace option fall throughin s_server cmd:specifying trace option, falls through and turnon security_debugSignedoffby: Rich Salz <rsalz@opensslorg>
GH758: e_dasync_errh: honor nofilenames optionSignedoffby: Rich Salz <rsalz@opensslorg>
Fix BN_hex2bn/BN_dec2bn NULL ptr/heap corruptionIn the BN_hex2bn function the number of hex digits is calculated usingan int value |i| Later |bn_expand| is called with a value of |i  4|For large values of |i| this can result in |bn_expand| not allocating anymemory because |i  4| is negative This leaves ret>d as NULL leadingto a subsequent NULL ptr deref For very large values of |i|, thecalculation |i  4| could be a positive value smaller than |i| In thiscase memory is allocated to ret>d, but it is insufficiently sizedleading to heap corruption A similar issue exists in BN_dec2bnThis could have security consequences if BN_hex2bn/BN_dec2bn is evercalled by user applications with very large untrusted hex/dec data This isanticipated to be a rare occurrenceAll OpenSSL internal usage of this function uses data that is not expectedto be untrusted, eg config file data or application command linearguments If user developed applications generate config file data basedon untrusted data then it is possible that this could also lead to securityconsequences This is also anticipated to be a rareIssue reported by Guido VrankenCVE20160797
remove unused variables
Fix use before init warnings in asynctestIf the tests fail early before an ASYNC_WAIT_CTX is created then therecan be a use before init problem in asynctest
Clarify ASYNC_WAIT_CTX_clear_fd docsClarify that the "cleanup" routing does not get called if you invokeASYNC_WAIT_CTX_clear_fd directly
Refactor the async wait fd logicImplementation experience has shown that the original plan for async waitfds was too simplistic Originally the async logic created a pipe internallyand user/engine code could then get access to it via API calls It is moreflexible if the engine is able to create its own fd and provide it to theasync codeAnother issue is that there can be a lot of churn in the fd value withinthe context of say a single SSL connection leading to continually addingand removing fds from say epoll It is better if we can provide somestability of the fd value across a whole SSL connection This isproblematic because an engine has no concept of an SSL connectionThis commit refactors things to introduce an ASYNC_WAIT_CTX which acts as aproxy for an SSL connection down at the engine layer
Workaround for VisualStudio 2015 bugVisualStudio 2015 has a bug where an internal compiler error was occurringBy reordering the DEFINE_STACK_OF declarations for SSL_CIPHER and SSL_COMPuntil after the ssl3h include everything seems ok again
Add forgotten change of check of disableddynamicengine
Add CHANGES entry for X25519
make update
Remove unused code
Change BORINGSSL defines to OPENSSL
Initial adaptations for Curve25519 codeFix "mixed declarations and code" warningsUse OpenSSL headers
Place under OpenSSL license
Add X25519 code from BoringSSL
TLS support for X25519Add X25519 to TLS supported curve listReject attempts to configure keys which cannot be usedfor signing
add ecdhx25519 option to speed
skip inappropriate X25519 tests
Add X25519 test vectors from RFC7748 61Check sign/verify blocked with X25519
Add X25519 curve to list
Add no signing flagAdd a flag to EC_METHOD for curves which do not support signingNew function EC_KEY_can_sign returns 1 is key can be used for signingReturn an explicit error is an attempt is made to sign withno signing curves
Add new EC_METHOD for X25519
Add group_order_bits to EC_METHOD
Add custom_data field for EC_POINT, EC_KEYIn some cases the EC_POINT and EC_KEY BIGNUM components are suboptimalor inappropriate Add an "custom_data" field which curves can populate witha custom structure to suit their needs
Extract compression form in EC_KEY_oct2keyExtract compression form in EC_KEY_oct2key instead of manually in theASN1 code For custom curves do not assume the initial octet is thecompression form: it isn't for X25519 et al
Extended EC_METHOD customisation supportAdd support for optional overrides of various private key operationsin EC_METHOD
EC_METHOD customisation operationsExtend EC_METHOD to permit additional customisation of private key andECDH operations
Rename OIDsUse standard X25519 and X448 names for OIDs Delete EdDSA OIDs: for now theywont be used and EdDSA may use a different format
GH715: Missed some nullcheckremovals follow commits 412bafdcf5, and 7c96dbcdabSignedoffby: Rich Salz <rsalz@opensslorg>
Fix mk1mf buildRemoving certs broke the mk1mf build
GH715: Missed some nullcheckremovals
RT4351: Update doc for OPENSSL_cleanse
VMS  don't exit out of a MMS recipeExiting out of a recipe more than necessary leaves an ugly message
Make generation of dependency files more efficient when possibleWhen building with GNU C, clang or VMS C, it's more efficient togenerate dependency file and object file in one call rather than twoHave the dependency output in a temporary file and compare it with theprevious one if available to see if replacement is waranted, therebyavoiding unnecessary reconstruction of Makefile / descripmmsGithub issue 750
RT4354: Add some crossrefsStack Overflow has a number of questions related to mutual authentication,the client and its certificate Those visiting the man pages for functionslike SSL_CTX_use_certificate and SSL_CTX_load_verify_locations don'treceive the benefit of a cross reference to SSL_CTX_set_client_CA_list
using macro inside the case
fix build with nosrtp srtp_profiles variable is defined when building with SRTP, keepingthe variable usage also under ifndef OPENSSL_NO_SRTP alpn help option was kept under ifndef OPENSSL_NO_SRTP
ct_testc doesn't need to include from source top, only testutilc doesThe INCLUDE statement can handle setting extra include directories forindividual object files, let's use it
Remove last remains of old config strings
modes/asm/ghashx86_64pl: refine GNU assembler version detectionEven though AVX support was added in GAS 219 vpclmulqdq was apparentlyadded in 220
chacha/asm/chachapl: fix typos in tail processingRT4323
Reformat and update EC_KEY_new manual pageAdd some missing parentheses and reformatDocument EC_KEY_oct2key, EC_KEY_key2buf, EC_KEY_oct2priv,EC_KEY_priv2oct and EC_KEY_priv2buf
RT2275: use BIO_sock_nbioNow that BIO_sock_nbio is available, use it in the apps
Remove some old filesI read the PROBLEMS, and they're outdated; nothing I'd put in theonline FAQ, for example  Testbuilds work without using these filesHad to remove the rehashtime stuff from Makefilein
Keep a cache of files that already have a recipe, in commontmplWe don't want recipes for the same files generated more than once
FreeBSD, at least, can restrict symbols in a shared library  so use theLinux target that does that
testutilc includes e_osh
GH753: More spelling fixSignedoffby: Rich Salz <rsalz@akamaicom>
Apply default after having checked the given config target is valid
Drop support for printing SSLv2 ciphers names
Update and clarify EC_POINT documentationReformat EC_POINT_newpod and add parentheses to function namesClarify the octet formAdd documentation for EC_POINT_oct2buf
Remove Ubsec engineThe ubsec engine is now considered obsolete and therefore has beenremoved
Moves SCT struct typedef into ossl_typh
Fix for potential deferencing of null pointer in o2i_SCT_signature
Public API for Certificate Transparency
GH752 ct_test uses testutil, so include thatSignedoffby: Rich Salz <rsalz@opensslorg>
Revert "EC_KEY_priv2buf : check parameter sanity"This reverts commit acae59bb29ddc769743ab4a8ae373b5ff2f42b57
Don't build sanitizer builds with debugThey're too slow
Fix master compile error
Remove comments saying you must do 'make f Makefilein TABLE'Since the configs were remade into hash tables, this isn't neededany more
Make the table entry printer in Configure aware of ARRAYs
GH680: Reuse strnlen in strndupSignedoffby: Rich Salz <rsalz@opensslorg>
EC_KEY_priv2buf : check parameter sanityIn EC_KEY_priv2buf, check for pbuf sanityIf invoked with NULL, gracefully returns the key lengthSignedoffby: Rich Salz <rsalz@opensslorg>
check with NULL
explicit check for NULL
Check method before access and release ctx in error paths In error paths, EVP_MD_CTX allocated by the callee is not released Checking method before accessing
RT4335: Fix UEFI build of OBJ_NAME_new_indexWe are using strcmp as the cmp_func, where in the EDK2 environmentstrcmp actually ends up being the external AsciiStrCmp function an EFI library function defined with the Microsoft ABIThis means that we can't just assign function pointers to it, sincein GCChosted builds the ABI of any function not explicitly markedEFIAPI is the native SysV ABIArguably this stupidity ought to be resolved on the UEFI side, but inthe general case that would mean that we need to provide ABIcompatiblewrappers for all the "standard" functions, just in case they're usedlike thisAnd in fact we already have a workaround here for DEC C So instead ofplaying games with casting function pointers, it's nicer just to use asimple function to wrap the strcmp call That cleans up the DEC Cworkaround, and it works around the UEFI bogosity at the same timeSignedoffby: Rich Salz <rsalz@opensslorg>
Forgotten change of add call in Configure
Fix a mkdefpl warningmkdefpl was issuing the following error:Use of uninitialized value within tag in numeric eq  atutil/mkdefpl line 560, <IN> line 92This was because it was treating a __cplusplus "ifdef" check as a "tag"but then skipping over the corresponding "endif" Therefore afterprocessing a file it still had "left over" tags from processing theprevious file It was also getting confused by "if" checks that didn'tmatch is predefined styles
Unified on VMS  add disabled in vmsconfigpm util/dofilepl demands it
Normalise the include directives in ct_testcbuildinfo needed a slight update, one more include directory
Implement new multithreading API
Configure  neater looking add and add_beforeThey now default to " " as separator, but that can be overridden byhaving a hash with parameters as last argument  The only currentlyrecognised parameter is `separator'The special separator `undef' will force the result to become a listrather than a concatenated string
Update test build/run for unified
Fix memory issues in BIO_printf functionsThe internal |fmtstr| function used in processing a "s" format stringin the BIO_printf functions could overflow while calculating the lengthof a string and cause an OOB read when printing very long stringsAdditionally the internal |doapr_outch| function can attempt to write toan OOB memory location at an offset from the NULL pointer in the event ofa memory allocation failure In 102 and below this could be caused wherethe size of a buffer to be allocated is greater than INT_MAX Eg thiscould be in processing a very long "s" format string Memory leaks can alsooccurThese issues will only occur on certain platforms where sizeofsize_t >sizeofint Eg many 64 bit systems The first issue may mask the secondissue dependent on compiler behaviourThese problems could enable attacks where large amounts of untrusted datais passed to the BIO_printf functions If applications use these functionsin this way then they could be vulnerable OpenSSL itself uses thesefunctions when printing out humanreadable dumps of ASN1 data Thereforeapplications that print this data could be vulnerable if the data is fromuntrusted sources OpenSSL command line applications could also bevulnerable where they print out ASN1 data, or if untrusted data is passedas command line argumentsLibssl is not considered directly vulnerable Additionally certificates etcreceived via remote connections via libssl are also unlikely to be able totrigger these issues because of message size limits enforced within libsslCVE20160799Issue reported by Guido Vranken
fix "noengine" build of test fixture
Add some 'noengine' builds to travis, for test
GH715: ENGINE_finish can take NULLSimplifies calling code  Also fixed up any !ptr tests that werenearby, turning them into NULL tests
Fix unified build after CT reorg
Tests for parsing and printing certificates containing SCTs
Add more CT utility routines to be used as part of larger patch
GH463: Fix OPENSSL_NO_OCSP buildFixes github issue 463  Building the app without OPENSSL_NO_SOCKisn't supported, so only do OPENSSL_NO_OCSP
Fix indents
Build fix: remove cleanse_ctr
RT4116: Change cleanse to just memsetSee also the discussion in https://githubcom/openssl/openssl/pull/455
CVE20160798: avoid memory leak in SRPThe SRP user database lookup method SRP_VBASE_get_by_user had confusingmemory management semantics; the returned pointer was sometimes newlyallocated, and sometimes owned by the callee The calling code has noway of distinguishing these two casesSpecifically, SRP servers that configure a secret seed to hide validlogin information are vulnerable to a memory leak: an attackerconnecting with an invalid username can cause a memory leak of around300 bytes per connectionServers that do not configure SRP, or configure SRP but do not configurea seed are not vulnerableIn Apache, the seed directive is known as SSLSRPUnknownUserSeedTo mitigate the memory leak, the seed handling in SRP_VBASE_get_by_useris now disabled even if the user has configured a seedApplications are advised to migrate to SRP_VBASE_get1_by_user However,note that OpenSSL makes no strong guarantees about theindistinguishability of valid and invalid logins In particular,computations are currently not carried out in constant time
Solaris DSOs were still named libFOOso, fixed
Make it possible to build even if dependency files can't be generatedIf the local system doesn't have GNU C or clang, and not evenmakedepend, the build will stop because the call of 'makedepend'fails  This changes so the build won't stop because of such failureThe result will be empty d files, and that's ok
GH742: keep gost specific variable under macroSignedoffby: Rich Salz <rsalz@opensslorg>
GH235: Set error status on malloc failure
GH480: Don't break statements with CPP stuffThis is also RT 4137Signedoffby: Rich Salz <rsalz@akamaicom>
Fix typo, reformat comment
Remove unused parameter in ssl_set_masksThe ssl_set_masks function no longer depends on the cipher Thisalso means there is no need to set the masks for each cipher inssl3_choose_cipher
Update documentation of SSL METHODs and ciphers
correct name of GNU shared libraries
test/ectestc: add regression test for RT4284
ec/asm/ecp_nistz256pl: get corner case logic rightRT4284
ec/asm/ecp_nistz256x86_64pl: get corner case logic rightRT4284
test/recipes/80test_cat: remove_tree>rmtree to make it work with Perl 510
poly1305/asm/poly1305armv4pl: replace ambiguous instructionDifferent assembler versions disagree on how to interpret 1 asargument to vmovi64, as 0xffffffffffffffff or 0x00000000ffffffffSo replace it with something they can't disagree on
RT4339: Fix handling of <internal/bn_confh>The entire contents of <internal/bn_confh> are unwanted in the UEFIbuild because we have to do it differently there To support buildingfor both 32bit and 64bit platforms without rerunning the OpenSSLConfigure script, the EDK2 environment defines THIRTY_TWO_BIT orSIXTY_FOUR_BIT for itself according to the target platformThe current setup is broken, though It checks for OPENSSL_SYS_UEFI butbefore it's actually defined, since opensslconfh hasn't yet beenincludedLet's fix that by including opensslconfh And also let's move thebn_confh doesn't even need to exist in the UEFI build environmentThis is also GH PR736Signedoffby: Rich Salz <rsalz@opensslorg>
GH735: remove unnecessary allocationRemoving code, where memory was getting allocated for an unused variableSignedoffby: Rich Salz <rsalz@opensslorg>
Add PKCS7_NO_DUAL_CONTENT flagSignedoffby: Rich Salz <rsalz@opensslorg>
Remove all march from configsThese flags are limitting needlessly, are often patched by packagers,and should be specified on the configuration command line by anyonewho desires for it to be specific rather than forced by usThis work was already done with mingw when those configs were workedon, now it gets applied to the remaining configs
Add OPENSSL_PIC backIn the earlier change, where static libraries get built with positionindependent code, OPENSSL_PIC was removed by mistake  This adds itback
Remove unused parameters from internal functions
Use $disabled{shared} in a safer manner
The build files use disabled, make sure to pass it to them
MemorySanitizer: address false positiveExplicitly unpoison the result of FD_ZEROTests now pass, using fsanitizememory
GH678: Add a few more zallocRemove some duplicated NULL/zero initSignedoffby: Rich Salz <rsalz@opensslorg>
RT4334: Check UEFI before __STDC_VERSION__ for <inttypesh>Adding nostdinc to the EDK2 showed that we were including <inttypesh>for some UEFI builds, because the check for __STDC_VERSION__ happensbefore the check for OPENSSL_SYS_UEFI Fix thatSignedoffby: Rich Salz <rsalz@opensslorg>
Partial revert of 1288f26 and fix for noasyncThe commit 1288f26 says that it fixes noasync, but instead seems to breakit Therefore revert that change and fix noasync
RT4309: Define PRIu64 for UEFI buildProvide an appropriate definition of PRIu64 for the EDK2 build, sincewe don't have <inttypesh> thereSignedoffby: Rich Salz <rsalz@opensslorg>
RT4320/GH705: Fix PEM parsing bugAlso removing confusing pointeralias variable
GH721: Duplicated flags in doc
Clean away $no_dso since with have $disabled{dso}
Clean away $no_asm since with have $disabled{asm}
Clean away $no_rfc3779 since we don't appear to use it at all
Clean away $zlib since with have $disabled{zlib}
Clean away $no_threads since we have $disabled{threads}
Clean away $config{no_shared} since we have $disabled{shared}
Expose disables to the perl fragments in buildinfo filesThis way, we can use them as conditions instead of relying to more orless obscure aliases in config or variables directly in Configure
Fix DSO name on HP/UXIf dlfcn is used, the name was set to lib$LIBNAMEso when it shouldhave been just $LIBNAMEso
Fix a few typos
Missed an experimental
Don't include all symbols from static libraries when building a DSOWhen building a DSO, there's no reason to include all symbols fromstatic libraries it happens to link with, whichever they may be
Get back "ssl2" as a deprecated disablable optionPreserved for now for those who have scripts with the option"nossl2"  We warn that it's deprecated, and ignore it otherwiseIn response to RT4330
Add a "nopic" build for Travis
Rewrite CHANGES to add some commentary about the "pic" option
Introduce the "pic" / "nopic" config optionBuilding shared libraries or not is not the same as building positionindependent code or not  It's true that if you don't build PIC, youcan't build shared libraries  However, you may very well want tobuild only static libraries but still want PIC codeTherefore, we introduce a new configuration option "pic", which isenabled by default or explicitely with "enablepic", or disabled with"nopic" or "disablepic"  Of course, if "pic" is disabled, "shared"and "dynamicengine" are automatically disabled as well
Use $disabled{"dynamicengine"} internallyWe were kinda sorta using a mix of $disabled{"staticengine" and$disabled{"dynamicengine"} in Configure  Let's avoid confusion,choose one of them and stick to it
Fix incorrect SO name on GNU platformsAn error was introduced with the setting of SHLIB in DO_GNU_SOA common DO_GNU_SO_COMMON that both DO_GNU_SO and DO_GNU_SO_NOCALC usemakes things clearer
Don't use 'parent' in util/dofileplBecause we're requiring Perl 5100 and the 'parent' didn't appearbefore Perl 5101, we need to resort to the older parent moduledeclaration style, modifying @ISA
Check that any dependency file is newer than Makefile before concatenatingOn slower file systems, this makes a huge difference
Document the last configuration changes
Avoid GNU make reexec when adding dependencies to MakefileGNU make will reexec if it thinks that the Makefile has changedJust having the target Makefile seems to make it think it has, so weend up in a look where GNU make reexecs for everThe fix is easy, just remove the Makefile target and have the dependtarget run the recipe on its own instead of depending on Makefile
Workaround for proxy>s_server retry logic
Remove OBJ_EXT and friends
Missing extension on dependency, d file is not always made eg when inputis a s
Unified on VMS  install dynamic engines if there are anyDon't check for no_shared
Run the TLSProxy based tests as long as dynamic engines are builtThey depend on this feature because they use the engine ossltest,which is only available as a dynamic engine
Build dynamic engines even if configured "noshared"Until now, the engines in engines/ were only built as dynamicalyloadable ones if shared libraries were builtWe not dissociate the two and can build dynamicaly loadable engineseven if we only build static libcrypto and libssl  This is controlledwith the option enable|disable|nostaticengine, defaulting tonostaticengineNote that the engines in crypto/engine/ dynamic and cryptodev willalways be built into libcrypto
Always build library object files with shared library cflagsThis takes us away from the idea that we know exactly how our staticlibraries are going to get used  Instead, we make them available tobuild shareable things with, be it other shared libraries or DSOsOn the other hand, we also have greater control of when the sharedlibrary cflags  They will never be used with object files meant gotbinaries, such as apps/openssl or test/testWith unified, we take this a bit further and prepare for having todeal with extra cflags specifically to be used with DSOs dynamicengines, libraries and binaries applications
Make crypto/buildinfh depend on configdatapm rather than MakefileDepending on Makefile meant that a new attempt to rebuild the Makefilewith "new" dependency data was done all the time, uncontrolled  Betterto depend on configdatapm, which truly only changes with reconfiguration
argv was set but unusedAlso gives an error message when you gave it a parameter it didn't expect
apps_extra_src changed name to apps_aux_src, rename everywhereOne spot was forgotten
VMS static libraries have the extension OLB, not LIBObject LiBrary
Unified 'make depend' has to cleanup after itselfIt failed to remove lingering Makefilenew
Fix Configurations/unixMakefiletmplIt was turning off output again in two place where it should haveturned it on
Makefileshared: limit dll image base pinning to FIPS builds
Remove DSA negative integer workaround codeRemove DSA private key code which tolerates broken implementations whichuse negative integers
Remove broken DSA private key workaroundsRemove old code that handled various invalid DSA formats in ancientsoftwareThis also fixes a double free bug when parsing malformed DSA private keysThanks to Adam Langley Google/BoringSSL for discovering this bug usinglibFuzzerCVE20160705
TLS: reject duplicate extensionsAdapted from BoringSSL Added a testThe extension parsing code is already attempting to already handle this forsome individual extensions, but it is doing so inconsistently Duplicateefforts in individual extension parsing will be cleaned up in a followup
getaddrinfo: zero the hints structureThis silences the memory sanitizer All fields were already correctlyinitialized but the struct padding wasn't, causing an uninitialized readwarning
GH712:  Missed some nofilenames casescryptoh: honor nofilenames config setting in missing casesSignedoffby: Rich Salz <rsalz@akamaicom>
Make sure the linked programs have the correct extension
Big rename fest of MingW shared librariesSo far, MingW shared libraries were named like thislibeay32dll + libeay32dllassleay32dll + ssleay32dllaThat naming scheme is antiquated, a reminicense of SSLeay  We'retherefore changing the scheme to something that's more like the restof OpenSSLThere are two factors to remember: Windows libraries have no recorded SOvers, which means that theshared library version must be encoded in the name  According tosome, it's unwise to encode extra periods in a Windows file name,so we convert version number periods to underscores MingW has multilib ability  However, DLLs need to reside with thebinaries that use them, so to allow both 32bit and 64bit DLLs toreside in the same place, we add 'x64' in the name of the 64bitonesThe resulting name scheme for SOver 11 is this:on x86:libcrypto1_1dll + libcryptodllalibssl1_1dll + libssldllaon x86_64:libcrypto1_1x64dll + libcryptodllalibssl1_1x64dll + libssldllaAn observation is that the import lib is the same for botharchitectures  Not to worry, though, as they will be installed inPREFIX/lib/ for x86 and PREFIX/lib64/ for x86_64As a side effect, MingW got its own targets in Makefilesharedlink_dsomingwshared and link_appmingwshared are aliases for thecorresponding cygwinshared targets  link_shlibmingwshared is,however, a target separated from the cygwin one
Misc small fixesBetter libclean that removes the exact files that have been built,nothing more and nothing lessCorrected typoA couple of editorial changes
Try removing installation directories after having uninstalled filesOf course, if there are remaining files in a directory, it won't be removed
Small rename fest in unified, obj2dynlib > obj2dsoSince we're using the acronym DSO everywhere else and that's a commonname for that kind of object, we might as well do so here as well
Remake the installation of shared libraries in unixMakefiletmplInstead of having the installation recipe rely on special knowledge,feed it with information, including what shared library files belongtogether  For Cygwin and Mingw, that's the dll and its importlibrary dlla  For Unixen, it's the shared library file name with SOversion and the one without
Big rename fest of engine DSO names, from libFOOso to FOOsoThe engine DSOs were named as if they were shared libraries, and couldend up having all sorts of fancy names:Cygwin: cygFOOdllMingw:  FOOeay32dllUnix:   libFOOso / libFOOsl / libFOOdylib / This may be confusing, since they look like libraries one should linkwith at link time, when they're just DSOsIt's therefore time to rename them, and do it consistently on allplatforms:Cygwin & Mingw: FOOdllUnix:           FOO{so,sl,dylib,}Interestingly enough, the MSVC and VMS builds always did it this way
Simplify the generation of ld scripts for Linux and SolarisBecause we know for certain that the link_shlib targets are usedexclusively for shared libraries libcrypto and libssl and that theymust have an associated num file, we don't need to check the libraryname to produce an ld script  Just do it unconditionallylink_shliblinuxshared can be simplified further, as most of it isexactly the same as $DO_GNU_SO with just one variable modification
Big rename fest in makefileshared: link_a / link_o > link_shlib / link_dsoOriginally, the Makefileshared targets described what they used asinput for a shared object, be it a shared library or a DSO  It turnedout, however, that the link_o targets were used exclusively forengines and the link_a targets were for libcrypto and libsslThis rename fest turns and indication on the kind of input the targetsget to the intention with using them
Centralise the shared library / dso name info in unixMakefiletmpl
Let Configure figure out the diverse shared library and DSO extensionsThen it can pass around the information where it belongs  TheMakefile templates pick it up along with other target data, theDSO module gets to pick up the information throughcrypto/include/internal/dso_confh
VMS fixed in unified build install_sw had a display of text that belongs under the install target previous layout installed architecture dependent files indev:['prefix''arch'LIB], dev:['prefix''arch'EXE] anddev:['prefix''arch'ENGINES]  Changed to dev:['prefix'LIB'arch'],dev:['prefix'EXE'arch'] and dev:['prefix'ENGINES'arch'] instead
Unified  don't install the ossltest engineThis is done with a simple file name comparison  We could think ofsomething more elegant in the future
Unified  do a better job when uninstallingSome directories weren't removed
Rethink the uplink / applink storyAdding uplink and applink to some builds was done by "magic", theconfiguration for "mingw" only had a macro definition, the Configurewould react to its presence by adding the uplink source files tocpuid_asm_src, and crypto/buildinfo inherited dance to get itcompiled, and Makefileshared made sure applinko would beappropriately linked in  That was a lot under the hoodTo replace this, we create a few template configurations inConfigurations/00basetemplatesconf, inherit one of them in the"mingw" configuration, the rest is just about refering to the$target{apps_aux_src} / $target{apps_obj} in the right places
VMS: rather use a quick file comparison than DIFFVMS DIFF tries to calculate all the differences, which is slower thanjust reading the files and stopping at the first difference  Thelatter doesn't exist as a command, so the problem is solved with perland File::Compare has been in core perl since very early version 5
VMS: produce dependency files just like you produce object filesWe need to do the same dance as when object files are created
Fix casing on VMSDCL may be in extended parsing style, which makes it less caseinsensitive, so when removing a string from another, make sure to getcasing correctly
Don't use configtimestamp, we already have configdatapmThe benefit with using configdatapm is that Configure writes it forus
Automatic 'make depend' for the unified build schemeThis isn't the fully featured combination of compiler generateddependency files and Makefile include directives, but a cheapervariant of the sameThe dependency files are generated automatically, but then we have theusual "depend" target  However, we depend on it in the bigger phonytargets that are the most likely to be used  That make this featureautomatic enoughA side effect is that we can't use the build file's timestamp to checkif reconfiguring might be in order  In its place, we use a flag filethat depends on Configure and the build file template and depend on itin spots where it makes sense to check for the need to reconfigure
Fix uninstall_sw for the unixmake schemeThe uninstall_sw target tried to 'make uninstall' in all subdirsChange it to only go into $INSTALL_SUBS, just like install_sw does
Set EXE_EXT environment variable when testingWhen cross compiling, we may end up with someting like apps/opensslexeand a number of test/exe  However, util/shlib_wrapsh doesn't knowwhat the executable extension should be, if any, so we need to makesure it has access to that information when testing, sinceOpenSSL::Test uses that script to execute all programs
Remove all special make depend flags, as well as OPENSSL_DOING_MAKEDEPENDAll those flags existed because we had all the dependencies versionedin the repository, and wanted to have it be consistent, no matter whatthe local configuration was  Now that the dependencies are gone fromthe versioned Makefileins, it makes much more sense to use the exactsame flags as when compiling the object files
Don't treat d depend files separately from object filesd MMS in the VMS world files with just dependencies are built fromexactly the same conditions as the object files  Therefore, the rulesfor them can be built at the same time as the rules for thecorresponding object filesThis removes the requirement for a src2dep function in the build filetemplates, and for commontmpl to call it  In the end, the existenceof depend files is entirely up to the build file
Fix the makedepend constructor in unixMakefiletmpl
Fix {TLS,CIPHER}_DEBUG compiles
documentation: RSA_new_method argument
Remove outdated DEBUG flagsAdd DBIO_DEBUG to strictwarningsRemove comments about outdated debugging ifdef guardsRemove md_rand ifdef guarding an assert; it doesn't seem usedRemove the conf guards in conf_api since we use OPENSSL_assert, not assertFor pkcs12 stuff put OPENSSL_ in front of the macro nameMerge TLS_DEBUG into SSL_DEBUGVarious things just turned on/off asserts, mainly for checking nonNULLarguments, which is now removed: camellia, bn_ctx, crypto/modesRemove some old debug code, that basically just printed things to stderr:DEBUG_PRINT_UNKNOWN_CIPHERSUITES, DEBUG_ZLIB, OPENSSL_RI_DEBUG,RL_DEBUG, RSA_DEBUG, SCRYPT_DEBUGRemove OPENSSL_SSL_DEBUG_BROKEN_PROTOCOL
remove redundant opt declarations
Fix typo in SSL_CTX_set_msg_callback docsChange `SSL_get_msg_callback_arg` to `SSL_set_msg_callback_arg`Signedoffby: Rich Salz <rsalz@akamaicom>
GH681: More command help cleanupenc: typo in base64 option missing help opt textocsp, req, rsautl, s_client: missing help opt textSignedoffby: Rich Salz <rsalz@opensslorg>
Fix windows thread stop codeThe windows thread stop code was erroneously not just deleting the threadlocal variable on thread stop, but also deleting the thread local keythus removing thread local data for all threads in one go!
Fix OPENSSL_config with NULL parameter
Fix memory leaks in tls_decrypt_ticketCertain code paths in tls_decrypt_ticket could return early without firstfreeing the HMAC_CTX or the EVP_CIPHER_CTX
GH706: Use NULL for pointer compareAs handshake_func is a function pointer, it should compare to NULLSignedoffby: Rich Salz <rsalz@opensslorg>
typo
Remove "experimental" in code and comments, tooThanks to Viktor for additional review
In the unified scheme, there is no $TOP, use $SRCDIR instead
Fix spelling
Fix spelling
Add lresolv to the Solaris ex_libsThe reason is that we use hstrerror and other resolver functionsReporter: Erik Forsberg <erik@efcacom>
Finish 02f7114a7fbb3f3ac171bae87be8c13bc69e4005
Get conditional priorities right"or" has lower priority than "||" and works better to have Perl lessconfused
Be more verbose when debugging is onIt's near impossible to figure out what goes wrong with the executionof subcommands otherwise
RT3628: Allow filenames to be eliminated from compiled libraryAlthough I explicitly don't care about the tinfoilhat reason given inthe initial opening of RT3628, that "paths usually contain privateinformation", there are situations where it's useful to eliminate thefilenames from the compiled binaryThe two reasons we do care about in the context of firmware such as EDK2are that it allows for a smaller footprint, and it is also a necessarycomponent of a binaryreproducible buildTo that end, introduce OPENSSL_FILE and OPENSSL_LINE macros, definingthem to __FILE__ and __LINE__ respectively in the normal case, but to"" and 0 when OPENSSL_NO_FILENAMES is setThis is mostly a nave invocation of$ sed 's/__\[FL]I[NL]E\__/OPENSSL_\1/g' i `git grep l __LINE__`but with a few instances change to just print the function name insteadalthough those probably need to die anyway and test cases left untouchedSignedoffby: Rich Salz <rsalz@opensslorg>
When someone configures an outofsource build, switch to unifiedFor example, this works instead of giving a big error message notethe lack of 'unified':mkdir /_buildcd /_build/; /opensslsrc/config; make
Fix check of DOPENSSL_USE_APPLINK in $config{cflags}The previous fix wasn't rightAlso, change all ^|\s and \s|$ constructs to ?:^|\s and ?:\s|$Perl seems to like that better
RT4310: Fix varous noXXX buildsWhen OPENSSL_NO_ASYNC is set, make ASYNC_{un,}block_pause do nothingThis prevents md_randc from failing to build Probably better to do itthis way than to wrap every instance in an explicit ifdefA bunch of new socket code got added to a new file crypto/bio/b_addrcMake it all go away if OPENSSL_NO_SOCK is definedAllow configuration with noripemd, nots, nouiWe use these for the UEFI buildAlso remove the 'Really???' comment from noerr and nolocking We usethose tooWe need to drop the crypto/engine directory from the build too, and alsoset OPENSSL_NO_ENGINESignedoffby: Rich Salz <rsalz@opensslorg>
remove redundant code
RT4318: Fix OSSL_SSIZE_MAX for UEFI buildCommit e634b448c "Defines OSSL_SSIZE_MAX" introduced a definition ofOSSL_SSIZE_MAX which broke the UEFI build Fix that by making UEFI takethe same definition as Ultrix ssize_t  intSignedoffby: Rich Salz <rsalz@opensslorg>
RT4315: Fix UEFI build in crypto/initcWe don't have atexit in the EDK2 environment Firmware never exitsSignedoffby: Rich Salz <rsalz@opensslorg>
Remove JPAKE
RT4313: Fix build for !IMPLEMENTED code path in CRYPTO_secure_freeCommit 05c7b1631 "Implement the use of heap manipulator implementions"added 'file' and 'line' arguments to CRYPTO_free and friends, but neglectedto fix up the !IMPLEMENTED case within CRYPTO_secure_free Add the missingarguments there tooSignedoffby: Rich Salz <rsalz@opensslorg>
Fixup secmemtest for the change of CRYPTO_free and friendsSwitching it to use OPENSSL_free et al when appropriate
Fix mismatched curly brace
Update the documentation on heap allocators /  deallocators
Implement the use of heap manipulator implementions Make use of the functions given through CRYPTO_set_mem_functions CRYPTO_free, CRYPTO_clear_free and CRYPTO_secure_free now receive__FILE__ and __LINE__ The API for CRYPTO_set_mem_functions and CRYPTO_get_mem_functionsis slightly changed, the implementation for free now takes a coupleof extra arguments, taking __FILE__ and __LINE__ The CRYPTO_ memory functions will always receive __FILE__ and __LINE__from the corresponding OPENSSL_ macros, regardless of if cryptomdebughas been enabled or not  The reason is that if someone swaps out themalloc, realloc and free implementations, we can't know if theywill use them or not
md_rand: FAQ URL to use https and follow a redirectSignedoffby: Rich Salz <rsalz@opensslorg>
OPENSSL_init_sslpod: fix minor typo
On solaris, the variable name sun clashes, use s_un insteadFor orthogonality, we change sin > s_in and sin6 > s_in6 as well
Check for OPENSSL_USE_APPLINK in $config{cflags} as wellMacro definitions "should" be found in $config{defines}, but someconfigs haven't transfered macro definitions from their 'cflags'settings which isn't mandatory anyway, so check both places
Don't check for gcc or clang on VMSThis check is meaningless on VMS and only produce an error because theunderlying shell DCL doesn't understand sh syntax such as '2>&1'
Lowercase configuration arguments on VMSDepending on user preferences, Configure might get something likePREFIXblah just as well as prefixblah, or "SHARED" just as wellas "shared"  On VMS, let's therefore lowercase at least the portionof the argument before a possible equal signFor good measure, we lowercase the arguments to be checked inconfigcom as well  The original argument is sent on to Configure,however
Fix Solaris link_a and link_oA long time ago, Solaris cc didn't seem to handle Wl, linker options,while gcc on Solaris required it  Since then, Solaris cc hasdeveloped to understand Wl, options, and our little dance to figureout how to pass linker options to the C compiler that's used isn'tneeded any more
Simplify tls1_set_ec_id
Use nid_list table to lookup curve IDs
Add explanation and warning to TLS id table
Fix use of add and add_before in Configurations/confThese two functions take a separator to concatenat the strings with asfirst argument
Prepare for 110pre4dev
Prepare for 110pre3 release
Correct deprecation of OPENSSL_configReported in GH684
Fix buildbreakCombination of heartbeats and unittests
MANSUFFIX should be left emptyThat variable isn't for us, it's for any user, distributor or packagebuilder that wants one after the section number  "ssl" seems to bepopular
Address comments
Tests depend on everything
Make the BIO_ADDR param optional
Misc fixes in util/mk1mfplmk1mf was wondering about the options noheartbeats andnocryptomdebugbacktrace, so we add option hooks them  They onlyneed to become OPENSSL_NO_ macros in opensslconfh, so nothingadditional needs to be doneAlso, add "DOPENSSL_PIC" when shared libraries are produced
Don't call cpuid in test; done as init
Fixes to make nodeprecated work again
Configurations/00basetemplatesconf: typos in [chacha|poly1305]_asm_src
chacha/asm/chacha: ensure that zero length is handled without crashRT4305
chacha/asm/chachax86[_64]pl: fix typos and logical errorsThanks to: David Benjamin of ChromuimRT4305
make update
Don't use libcrypto private headers with mkdefplThree header files from crypto/include/internal were used byutil/mkdefpl  This should never be needed  Some test program usedthese, which made it a valid reason at the time to make the someinternal symbols public in the shared libraries, but that's not thecase any moreHowever, to be able to link libsslso, some symbols found ininclude/internal headers still need to be made public
Make sure to use unsigned char for is functionsOn some platforms, the implementation is such that a signed chartriggers a warning when used with is functions  On others, thebehavior is outright buggy when presented with a char that happensto get promoted to a negative integerThe safest thing is to cast the char that's used to an unsigned char
Make the use of mdebug backtrace a separate optionTo force it on anyone using strictwarnings was the wrong move, asthis is an option best left to those who know what they're doingUse with care!
Declare DllMain internallyDllMain is a symbol that needs to be global, but no one needs to knowHowever, some compilers will warn if there isn't a declaration beforethe function is defined  Just add a declaration before the functiondefinition
Don't test heartbeats when there aren't any
Make sure a socklen_t can compare with a sizeof resultMost of the times, it seems that socklen_t is unsignedUnfortunately, this isn't always the case, and it doesn't compare witha size_t without warningA cast resolves the issue
Have dofilepl say where it was run, for real this time
Have dofilepl say where it was run
Prefer IO::Socket::INET6 over IO::Socket::IPWhile IO::Socket::IP is a core perl module since Perl v5198, or sosays corelist, IO::Socket::INET6 has been around longer, is said tobe more widely deployed, and most importantly, seems to have less bugshitting us  We therefore prefer IO::Socket::INET6, and only fall backto IO::Socket::IP if the former doesn't exist on the local system
crypto/poly1305: add floatingpoint reference implementation
RT4304: Look for plaintext HTTP
GH675: make ssl3_ciphers staticSignedoffby: Rich Salz <rsalz@opensslorg>
Pass $CC to perlasm scripts via the environmentIt seems that on some platforms, the perlasm scripts call the Ccompiler for certain checks  These scripts need the environmentvariable CC to have the C compiler command
Reformat warn variables for easier editing
Don't build test programs by default, add convenience targets for unified buildTest programs are now only built when running "make test" or "makebuild_tests"
Have the same installation directories in unified as in unixmakeunixMakefiletmpl was lagging behind on this point
Configurations: engage PPC ChaCha20 and Poly1305 modules
PPC assembly pack: add ChaCha20 and Poly1305 modules
Add SHARED_RCFLAGS in unified Makefile templateAlso remove a spurious extra $LDFLAGS
async_winc: remove unused variableSilencing this:crypto/async/arch/async_winc: In function 'async_fibre_init_dispatcher':crypto/async/arch/async_winc:112:12: warning: unused variable 'dispatcher' [Wunusedvariable]LPVOID dispatcher;^Signedoffby: Rich Salz <rsalz@opensslorg>
The unified build may delete installed manual filesThe installation of man files and html files alike didn't properlycheck that file names with different casing could be the same oncaseinsensitive file systems  This change fixes that
GH650: Minor tidying around the ocsp appThe ocsp utility is something of a jackofalltrades; most anythingrelated to the OCSP can be done with it  In particular, the manualpage calls out that it can be used as either a client or a serverof the protocol, but there are also a few things that it can dowhich do not quite fit into either role, such as encoding an OCSPrequest but not sending it, printing out a text form of an OCSPresponse or request from a file akin to the asn1parse utility,or performing a lookup into the serverside revocation databasewithout actually sending a request or response  All three of theseare documented as examples in the manual page, but the documentationprior to this commit is somewhat misleading, in that when printingthe text form of an OCSP response, the code also attempts toverify the response, displaying an error message and returningfailure if the response does not verify  It is possible thatthe response would be able to verify with the given example, sincethe default trust roots are used for that verification, but OCSPresponses frequently have alternate certification authoritiesthat would require passing CAfile or CApath for verificationTidy up the documentation by passing noverify for the case ofconverting from binary to textual representation, and alsochange a few instances of respin to reqin as appropriate, notethat the url option provides the same functionality as the hostand path options, clarify that the example that saves an OCSPresponse to a file will also perform verification on that response,and fix a couple grammar nits in the manual pageAlso remove an alwaystrue conditional for rdb ! NULL  thereare no codepaths in which it could be initialized at the time ofthis checkSignedoffby: Rich Salz <rsalz@opensslorg>
Display the windres command
GH643: Cleanup header analysisSignedoffby: Rich Salz <rsalz@opensslorg>
Free and zero DH/ECDH temporary key after usePR4303
Rethink the method to place user cflags lastThe previous method had some unfortunate consequences withstrictwarnings  To counteract, revert part of the previous changeand move down the block of code that adds the user cflags and defines
Make sure the OPENSSL_INIT flags are 32 bits and document the ssl range
Remove 00test_checkexest, as it has lost its relevanceIn the early stages of creating the new test framework,00test_checkexes was a temporary check to ensure we had a recipe forevery test program in test/  By now, this test has fulfilled itspurpose, and we've learned how to make recipes properly  It's timefor this check to go away
In templates, output_on must be used the same way as output_offOtherwise, there will be an unbalance
C64x+ assembly pack: add ChaCha20 and Poly1305 modules
Configurations: engage ARM ChaCha20 and Poly1305 modules
ARM assembly pack: add ChaCha20 and Poly1305 modules
apps/speedc: initialize c[D_GHASH][i]RT4230
Defines OSSL_SSIZE_MAXRemoves SSIZE_MAX definition from bss_bioc and changes that file to useOSSL_SSIZE_MAXNo need to account for OPENSSL_SYS_VXWORKS, since that never actuallygets defined anywhere It must be a historical artifact
Fix some issues near recent chomp changes
fix warnings on 32 bit builds
We need the linked utils after a full buildWe really needs a better util/shlib_wrapsh, but will have to do for now
Unified build  fix make dependThere was a catch 22, where 'make depend' directly after configuringin an otherwise pristine build tree would fail because buildinfhdidn't exist yetThis change has the depend building targets depend on the same othertargets as the object file building targets, so the generation ofbuildinfh and similar files would kick in during 'make depend'
Move brace outside ifdef
evp/e_des[3]c: address compiler warnings, fix formattingRT4210
modes/ctr128c: pay attention to ecount_buf alignment in CRYPTO_ctr128_encryptIt's never problem if CRYPTO_ctr128_encrypt is called from EVP, becausebuffer in question is always aligned within EVP_CIPHER_CTX structureRT4218
Rename INSTALL_PREFIX to DESTDIR, remove option install_prefixINSTALL_PREFIX is a confusing name, as there's also prefixInstead, tag along with the rest of the open source world and adoptthe Makefile variable DESTDIR to designate the desired stagingdirectoryThe Configure option install_prefix is removed, the only way todesignate a staging directory is with the Makefile variable this isalso implemented for VMS' descripmms et al
Update gitignoreNot all git versions understand /Makefile, but all recognize thatfilename without any path applies to all directories
travisyml: exclude gcc from MacOS X CI buildsContemporary Xcode gcc is a frontend to clang, so that explicitgcc build is actually redundant on MacOS X
Put user flags last for priority
ec/asm/ecp_nistz256armv8pl: fix test_ssl spurious errorsRT4237
Now that we have good verbosity, turn it on for TravisIt's nearly impossible to determine what goes wrong in the testsrunning there without this
Document the changes in "make test" behavior
Let all TLSProxy based tests display debug text conditionallyIf the environment variable HARNESS_ACTIVE isn't defined orHARNESS_VERBOSE is defined, it's probable that lots of output isdesired
Rethink logging of test recipesThe logging that was performed in OpenSSL::Test was initially set upas a means not to let messages that test programs write to STDERR getdisplayed when a test isn't running in verbose mode  However, the wayit was implemented, it meant that those messages were never displayed,and you had to look in a test log  This also meant that output toSTDERR and output to STDOUT got broken apart, which isn't optimalSo, we remove the whole test log file implementation, and instead,we're sending STDERR to the null device unless one of these conditionsapply: the test recipe already redirects stderr  Just let it the environment variable HARNESS_ACTIVE is undefined, meaning therecipe is run directly as a perl script instead of being harnessedby Test::Harness the environment variable HARNESS_VERBOSE is setGetting a full log of the tests now becomes as simple as this:HARNESS_VERBOSEyes make test 2>&1 | tee testslog
Better workaround for VMS getnameinfo bugThe actual bug with current getnameinfo on VMS is not that it putsgibberish in the service buffer, but that it doesn't touch it at allThe gibberish we dealt with before was simply stuff that happened tobe on the stackIt's better to initialise the service buffer properly with the emptystring and check if it's still an empty string after thegetnameinfo call, and fill it with the direct numerical translationof the raw port if that's the case
Adjust transfer::Text::Templatepm for alternate directory nameOn VMS, periods in directory names weren't allowed  To counter that,unpackers such as VMSTAR convert periods in directory names tounderscores  We need to count that in and add an alternative librarypath for Text::Template
RT 3854: Update apps/reqChange the default keysize to 2048 bits, and the minimum to 512 bits
Remove last chompsIn the previous commit to change all chomp to a more flexible regexp,Configure was forgotten  This completes the change
Fix the enablessltrace config optionThe recent removal of static ECDH broke the enablessltrace compilation
make generate
Generate progsh from a bunch of files instead of internal knowledgeapps/progspl counted on the caller to provide the exact commandfiles  The unified build doesn't have that knowledge, and the easierand more flexible thing to do is to feed it all the apps/c files andlet it figure out the command names by looking inside looking for/int [az09][az09_]_main\int argc,/Also, add it to the generate command, since it's a versioned file
Typo: only return error if unrecognise bag type
State the minimum Perl version that our scripts will work with
Perl's chop / chomp considered bad, use a regexp insteadOnce upon a time, there was chop, which somply chopped off the lastcharacter of $_ or a given variable, and it was used to take off theEOL character \n of strings but then, you had to check for the presence of such characterSo came chomp, the better chop which checks for \n before chopping itoff  And this worked well, as long as Perl made internally sure thatall EOLs were converted to \nThese days, though, there seems to be a mixture of perls, so linesfrom files in the "wrong" environment might have \r\n as EOL, or just\r Mac OS, unless I'm misinformedSo it's time we went for the more generic variant and use s|\R$||, thebetter chomp which recognises all kinds of known EOLs and chops themoffA few chops were left alone, as they are use as surgical tools toremove one last slash or one last commaNOTE: \R came with perl 5100  It means that from now on, ourscripts will fail with any older version
update ciphers manual page
Remove static ECDH supportRemove support for static ECDH ciphersuites They require ECDH keysin certificates and don't support forward secrecy
perlasm/x86_64xlatepl: pass pure constants verbatimRT3885
util/mk1mfpl: use LINK_CMD instead of LINK variableTrouble is that LINK variable assignment in makefile interferes withLINK environment variable, which can be used to modify Microsoft'sLINKEXE behaviourRT4289
poly1305/asm/poly1305x86_64pl: MacOS X portability fix
poly1305/asm/poly1305x86_64pl: fix mingw64 build
Add the generate mechanism from unixmake to unixMakefiletmpl
Don't check self signed certificate signature security
Fix MacOS/X build warningsCommit 7823d792d0cad3b44ad5389a8d3381becefe7f44 added DEFINE_LHASH_OFto a C source file  DEFINE_LHASH_OF and DEFINE_STACK_OF mustbe used only in header files to avoid clang warnings for unusedstaticinline functions
Don't add filename comment
Remove TLS heartbeat, disable DTLS heartbeatTo enable heartbeats for DTLS, configure with enableheartbeatsHeartbeats for TLS have been completely removedThis addresses RT 3647
Move to REF_DEBUG, for consistencyAdd utility macros REF_ASSERT_NOT and REF_PRINT_COUNTThis is also RT 4181
RT3495: Add a hash for faster dup detectionUpdated for 11 by Rich Salz
Fix GH 327Valgrind complains about using unitialized memory  So callOPENSSL_zalloc, not malloc
Make util/mkrcpl location agnostic and adapt MakefilesharedWith this, Cygwin and Mingw builds stand a much better chance to beable to build outside of the source tree with the unified build
Make shared library targets more consistentOn Windows POSIX layers, two files are produced for a shared library,there's {shlibname}dll and there's the import library {libname}dllaOn some/most Unix platforms, a {shlibname}{sover}so and a symlink{shlibname}so are producedFor each of them, unixMakefiletmpl was entirely consistent on whichto have as a target when building a shared library or which to use asdependencyThis change clears this up and makes it consistent, we use thesimplest form possible, {lib}dlla on Windows POSIX layers and{shlibname}so on Unix platforms  No exception
Fix engine key support in cms and req utilitiesPR4246 and PR4266
Test for and use AES CSP for RSA if presentSome keys are attached to the full RSA CSP which doesn't support SHA2algorithms: uses the AES CSP if present
Add support for shared_rcflag, useful for windres Cygwin and Mingw
Modernise the mingw cflags and ldflags
Unified build: Keep track of generated header filesIf someone runs a mixed unixmake / unified environment the unifiedbuild tree would obviously be out of the source tree, the unifiedbuild will pick up on the unixmake crypto/buildinfh because ofassumptions made around this sort of declaration found incrypto/buildinfo:DEPENDS[cversiono]buildinfhThe assumption was that if such a header could be found in the sourcetree, that was the one to depend on, otherwise it would assume itshould be in the build treeThis change makes sure that sort of mixup won't happen again
Remove the "make depend" messageIt's not necessary for a pristine source, and a developer that makeschanges usually knows what to doAlso, there was this mechanism that would do a "make depend"automatically which hasn't been used for so many years  Removed aswell
Simplify ssl_cert_type by taking advantage of X509_get0_pubkey
GH620: second diff from rt2275, adds error codeclean up and apply patches from RT2275Signedoffby: Rich Salz <rsalz@opensslorg>
Check mallocNoticed by Claus Assmann <ca+ssldev@esmtporg>
Missing header include
Hide OPENSSL_INIT_SETTINGSMake OPENSSL_INIT_SETTINGS an opaque structure
Add inclusion directory crypto/include for BN compilationsSome files in crypto/bn depend on internal/bn_confh, and so doestest/bntest  Therefore, we add another inclusion directory
The protocol variable has lost its use, remove it
Rework BIO_ADDRINFO_protocol to return correct valuesAs noted already, some platforms don't fill in ai_protocol asexpected  To circumvent that, we have BIO_ADDRINFO_protocol tocompute a sensible answer in that case
Fix errstr error code parsingError codes are printed in hex, and previous OpenSSL versions expectedthe error codes to be provided to errstr in hex In 110, for somereason, it was expecting them to be decimal
Make comment match reality
use consistent error messages
Print out bad content octetsIf asn1parse doesn't like a structure print out the content octetsfor diagnostic purposes
After auto init, check that the deprecated functions exist before usingThe functions that have been deprecated by the auto init changes arenow guarded with deprecation checks, so it's fairly easy to see ifthey can be usedIn test/dtlsv1listentest, we simply remove all init and cleanup code,as they are call automatically when needed
Change the VMS perl pointer from SF file store to the project page
After renaming init, update errors
BIO_PAIR_DEBUG did nothing; remove it
Use the protocol we know rather than BIO_ADDRINFO_protocolresBecause some platforms won't will in any value in ai_protocol, there'sno point using it if we already know what it should be
Don't assert protocol equalityIt seems that some platforms' getaddrinfo don't fill in theai_protocol field properly  On those, the assertion'protocol  BIO_ADDRINFO_protocolres' will fail  Best to removeit
Add CHACHA20 alias for ciphersUpdate ciphers documentation as well based on 04 rev of IDSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Ensure allocation size fits into size_tSignedoffby: Kurt Roeckx <kurt@roeckxbe>
typo
Produce buildinfh on Windows the same way as on UnixBecause ENGINESDIR and OPENSSLDIR typically contains backslashes, theyneed to be escaped just right
Quote the CFLAG in Unixly Makefiles, for buildinfhBecause the command line definitions of OPENSSLDIR and ENGINESDIRcontain quotes, we need a variant of CFLAG where backslashes andquotes are escaped when we produce buildinfh
Make sure to escape backslashes and single quotes for buildinfh
Make it possible to get ENGINESDIR info from OpenSSL_versionsHave apps/openssl display the result along with OPENSSLDIRAs part of this, add ENGINESDIR in util/mk1mfpl
Add some documentation about init after deinitAttempting to init after deinit is an error Update the documentationaccordingly
Update CHANGES following init function renaming
Attempt to log an error if init failedIf init failed we'd like to set an error code to indicate that But ifinit failed then when the error system tries to load its strings its goingto fail again We could get into an infinite loop Therefore we just seta single error the first time around After that no error is set
The new init functions can now fail so shouldn't be voidThe new init functions can fail if the library has already been stopped Weshould be able to indicate failure with a 0 return value
Variable was declared static when it shouldn't beThe local variable tmp was declared static when it shouldn't be Thisis in the nothreads implementation, and it was immediately initialisedto something else on every invokation of the function so it doesn't breakanythingbut still shouldn't be there
Improve recent option help string additionsMake these more correct, concise and less tautological
Deprecate the issuer_checks debugging optionThis was a developer debugging feature and was never a useful publicinterfaceAdded all missing X509 error codes to the verify1 manpage, butmany still need a description beyond the associated text stringSorted the errors in x509_txtc by error number
The guard macro to be defined didn't match the guard macro checked
Update unified build after store removal
Rename INIT funtions, deprecate old onesMan, there were a lot of renamings :
No dynamicinit fix; merge goof
unified build system: add CHANGES & NEWS
unified build scheme: rewrite INSTALLVMSThere is more to be added, but this will at least tell people how to try
clean away old VMS cruftThe old building scripts get removed, they are hopelessly gone in bitrot by nowAlso remove the old symbol hacks  They were needed needed to shortensome names to 31 characters, and to resolve other symbol clashesBecause we now compile with /NAMESAS_IS,SHORTENED, this is nolonger required
unified build scheme: add a "unified" template for VMS descripmmsAs part of this, change util/mkdefpl to stop adding libraries todepend on in its output  mkdefpl should ONLY output a symbolvectorBecause symbol names can't be longer than 31 characters, we use thecompiler to shorten those that are longer down to 23 characters plusan 8 character CRC  To make sure users of our header files will pickup on that automatically, add the DEC C supported extra headers files__decc_include_prologueh and __decc_include_epiloguehFurthermore, we add a configcom, so VMS people can configure just ascomfortably as any Unix folks, thusly:@config
unified build scheme: add instructions for travis to build with unified
unified build scheme: Try to nudge users to try the "unified" buildThis commit SHALL be reverted before final release
unified build scheme: add the tweaks to build on Cygwin & MingwCygwin and Mingw name their libraries a bit differently from the restof the POSIXly universe, we need to adapt to thatIn Makefiletmpl, it means that some hunks will only be outputconditionallyThis also means that shared_extension for the Cygwin and Mingwconfigurations in Configurations/10mainconf are changing from dllato dll  Makefileshared does a fine job without having themspecified, and it's much easier to work with tucking an extra a atthe end of files in the installation recipes than any amount of namerewrites, especially with the support of the SHARED_NAME in the topbuildinfo
unified build scheme: add a "unified" template for Unix MakefileThis also adds all the raw sections needed for some files
unified build scheme: give util/dofilepl the possibility to output selectivelyUnder certain conditions, one might not want to output certainsections of a template file  This adds the functions output_off andoutput_on, reachable inside the templates  And example usage in aMakefile template could be this:@ : { output_off if $config{no_shared}; "" } lines dealing with shared libraries@ : { output_on }
Configure et al: move the installation directory logic to MakefilesThe logic to figure out the combinations of prefix and openssldirhas stayed in Configure so far, with Unix paths as defaultsHowever, since we're making Configure increasingly platform agnostic,these defaults need to change and adapt to the platform, along withthe logic to combine themThe easiest to provide for this is to move the logic and the defaultsaway from Configure and into the build filesThis also means that the definition of the macros ENGINESDIR andOPENSSLDIR move away from include/openssl/opensslconfh and into thebuild filesMakefilein is adapted accordingly
Configure et al: treat C defines separatelyWith some compilers, C macros are defined differently on the commandline than on Unix  It could be that the flad to define them isn't D,it could also be that they need to be grouped together and not be mixedin with the other compiler flags that's how it's done on VMS, forexampleOn Unix family platform configurations, we can continue to have macrodefinitions mixed in with the rest of the flags, so the changes inConfigurations/conf are kept to an absolute minimum
Can't reinit after stopRemoce DYANMIC onceinit stuffAfter the library is stopped, you can't restart it
Remove storeRebased and merged by me, with Ben's approval
If we've not been inited don't deinitIf you call an explicit deinit when we've not been inited then a segfault can occur We should check that we've been inited before attemptingto deinit
ms/uplinkx86pl: make it work
chacha/asm/chachax86pl: fix nasm compilation
Configurations: engage x86[_64] ChaCha20 and Poly1305 modules
poly1305/poly1305c: work around Wshadow warnings with POLY1305_ASM
x86[_64] assembly pack: add ChaCha20 and Poly1305 modules
VMS getnameinfo seems to have a bug with returned service stringIt seems like it gives back gibberish  If we asked for a numericservice, it's easy to check for a digit in the first position, andif there isn't any, rewrite it using older methods
Simplify the specification of include dirs in the build dirIn buildinfo files, make the include directory in the build directoryabsolute, or Configure will think it should be added to the sourcedirectory top  Configure will turn it into a relative path ifpossible
Make the processing of buildinfo files more aware of absolute dirsThere were cases where some input was absolute, and concatenating itto the diretory to the source or build top could fail spectacularlyLet's check the input first to see if it's absoluteAnd while we're on the subject of checking if a file or dir spec isabsolute using file_name_is_absolute has its own quirks on VMS,where a logical name is considered absolute under most circumstancesThis is perfectly correct from a VMS point of view, but when parsingthe buildinfo files, we want single word file or directory names toonly be checked syntactically  A function isabsolute that does theright thing is the solution
Make sure to always include stringh so memset gets declaredmemset is used by CRYPTO_secure_zalloc, which isn't hidden awaybehind IMPLEMENTED
Don't run RC4 test with norc4
Use NON_EMPTY_TRANSLATION_UNIT, consistentlyThis also closes RT 4123
Make some global variables staticMake some global variables that are only ever accessed from one filestatic
NULL the thread_local_inits_st pointer after useAfter the final use of the thread_local_inits_st we should ensure it isset to NULL, just in case OPENSSL_INIT_thread_stop gets called again andit tries to use garbage
Stop library before checking for mem leaksWith the new init framework resources aren't released until the processexits This means checking for mem leaks before that point finds a lot ofthings! We should explicitly close down the library if we're checking formem leaks
GH649: Fix: version32rc was not created on Windowsversion32rc was not created on Windows The if condition has been correctedSignedoffby: Rich Salz <rsalz@opensslorg>
Portability fix
Configurations: engage s390x ChaCha20 and Poly1305 modules
s390x assembly pack: add ChaCha20 and Poly1305 modules
GH645: Fix typo: ctificates > certificates
GH646: Update help for s_server command added missing help option messages ecdh_single option is removed as it is a noop and not an optionsupported in earlier versions ssl_ctx_security_debug was invoked before ctx check for NULL trusted_first option can be removed, as it is always enabled in 11But not removed the option, require confirmationSignedoffby: Rich Salz <rsalz@opensslorg>
Updates for auto init/deinit review commentsFixes for the autoinit/deinit code based on review comments
Add a CHANGES entry for autoinit and deinit
Correct copyright date for internal header fileThe newly added internal asynch header file had last years date in it
Update buildinfo files for autoinit/deinitVarious Makefilein files have changes for autoinit/deinit Make theequivalent changes in buildinfo
Avoid a race condition in loading config settingsA race condition can occur when sending config settings toOPENSSL_INIT_crypto_library_start
Provide documentation for autoinit/autodeinitProvide some man pages for autoinit/deinit Also update the INSTALLdocumentation for information on the new Configure options implemented aspart of this
Add an OPENSSL_NO_AUTOERRINIT optionThis option disables automatic loading of the crypto/ssl error strings inorder to keep statically linked executable file size down
Provide a thread stop APIAdd the OPENSSL_INIT_thread_stop function
Clean up the tests for autoinit/deinitRemove the need to explicitly initialise/deinitialise for the tests
Get the apps to use autoinit/deinitClean up the apps so that we make use of the new autoinit/deinit feature
Auto init/deinit libsslBuilding on the pervious commit to auto initialise and deinitialise libssl
Auto init/deinit libcryptoThis builds on the previous commit to auto initialise/deinitialiselibcrypto
Provide framework for auto initialise/deinitialise of the libraryThis commit provides the basis and core code for an auto initialisationand deinitialisation framework for libcrypto and libssl The intention isto remove the need in many circumstances to call explicit initialise anddeinitialise functions Explicit initialisation will still be an option,and if nondefault initialisation is needed then it will be requiredSimilarly for deinitialisation although this will be a lot easier sinceit will bring all deinitialisation into a single function
Fix 90test_networkingtThe previous fix wasn't complete, it was missing a 'use OpenSSL::Test::Utils'
Use rel2abs on VMS, rather than realpathIt seems realpath is quite buggy on VMS, or will at least give quitesurprising results  On the other hand, realpath is the better onUnix to clean out clutter like foo//bar on UnixSo we make out own function to get the absolute directory for a giveninput, and use rel2abs or realpath depending on the platformConfigure runs onIssue reported by Steven M Schweda <sms@antinodeinfo>
Update 90testnetworkingt to do the same checks as other TLSProxy tests
unified build scheme: adjust test framework for out of source build treeTo be able to run tests when we've built in a directory other thanthe source tree, the testing framework needs a few adjustmentstest/testlib/OpenSSL/Testpm needs to know where it can findshlib_wrapsh, and a number of other tests need to be told a differentplace to find engines than what they may be able to figure out ontheir own  Relying to $TOP is not enough, $SRCTOP and $BLDTOP can beused as an alternativeAs part of this change, top_file and top_dir are removed andsrctop_file, bldtop_file, srctop_dir and bldtop_dir take their place
unified build scheme: adjust some scriptsutil/mkdefpl and Makefileshared needs to know about the source andthe build directoriesAdditionally, Makefileshared needs to know how to build sharedlibraries in a directory other than the current one
unified build scheme: add a design documentThis documents describes the three steps from buildinfo files via theunified_info database to the buildfile templates, along with someexamples showing how the data gets processed along the way
unified build scheme: add and document the "unified" driving enginecommontmpl will be used together with the template build file, and isthe engine that connects the information gathered from all thebuildinfo files with making the build file itselfThis file expects there to be a template section in the build filetemplate that defines a number perl functions designed to returnstrings with appropriate lines for the build system at hand  Theexact functions, what they can expect as arguments and what outputthey're expected to produce is documented in Configurations/README
Small fixes One typo fixed in crypto/bio/b_addrc Add a comment in doc/crypto/BIO_parse_hostservpod to explain theblank lines with one lonely space each
add missing file p12_lclh
Suppress DANE TLSA reflection when verification failsAs documented both SSL_get0_dane_authority and SSL_get0_dane_tlsaare expected to return a negative match depth and nothing else whenverification fails  However, this only happened when verificationfailed during chain construction  Errors in verification of theconstructed chain did not have the intended effect on these functionsThis commit updates the functions to check for verify_result X509_V_OK, and no longer erases any accumulated match informationwhen chain construction fails  Sophisticated developers can, withcare, use SSL_set_verify_resultssl, X509_V_OK to "peek" at TLSAinfo even when verification fail  They must of course first checkand save the real error, and restore the original error as quicklyas possible  Hiding by default seems to be the safer interfaceIntroduced X509_V_ERR_DANE_NO_MATCH code to signal failure to findmatching TLSA records  Previously reported via X509_V_ERR_CERT_UNTRUSTEDThis also changes the "brief" output from s_client to includeverification results and TLSA match informationMentioned session resumption in code example in SSL_CTX_dane_enable3Also mentioned that depths returned are relative to the verified chainwhich is now available via SSL_get0_verified_chain3Added a few more testcases to danetest, that exercise the newcodeResolved thread safety issue in use of static buffer inX509_verify_cert_error_stringFixed longstating issue in apps/s_cbc which always sets verify_errorto either X509_V_OK or "chain to long", code elsewhere egs_timec, seems to expect the actual error  [ The new chainconstruction code is expected to correctly generate "chaintoo long" errors, so at some point we need to drop theworkarounds, once SSL_set_verify_depth is also fixed topropagate the depth to X509_STORE_CTX reliably ]
Following the PKCS12 update, update crypto/pkcs12/buildinfo as well
Remove ancient compatibility defines
make update
fix various formatting issues
Only use compatibility macros for < 11 API
rename old functions names in libeaynum
use new function names
Add p12_sbagc to Makefilein
Reorganise functionsMove all PKCS12_SAFEBAG functions into new file p12_sbagcMove MAC functions into p12_mutlc
pkcs12h header reorganisation
Use new names
Rename PKCS12 functionRename ancient PKCS12 functions to use more logical names Includedefines from old to new name
Use accessors in pkcs12 app
pkcs12 accessors
more PKCS12 opacity
New PKCS12 accessors, change macros to functions
Make PKCS12 structures opaque
Deprecate undocumented SSL_cache_hitDeprecate undocumented SSL_cache_hit Make SSL_session_reused into areal function
GH641: Don't care openssl_zmallocDon't cast mallocfamily return valuesAlso found some places where a blank line was missing; and bthe wrong return value was checked
Use File::Path::rmtree rather than File::Path::remove_treeJust like File::Path::make_path, File::Path::remove_tree didn't showup before File::Path 206 / perl v5101, so we prefer the legacyfunction here as well
Use File::Path::mkpath rather than File::Path::make_pathFile::Path::make_path didn't show up before File::Path 206 / perl v5101Because we're trying to stay compatible with perl v5100 and up,it's better to use the legacy interface
Fix engine key support in utilities
bio/b_sockc: cleanup obsolete stuff
bn/Makefilein: remove obsolete rules
Configurations/00basetemplatesconf: harmonize extensions
avoid crash if hostserv is with host part onlyif priority is set to hostSignedoffby: Richard Levitte <levitte@opensslorg>
GH322 revisited: remove unused function
Make TESTS work with "nmake f ms/ntdllmak tests"This works on Linux with Make already, and allows running only specifiedtests
dtlsv1listentest includes e_osh, reflect that in include dirs
Handle SSL_shutdown while in init more appropriately 2Previous commit 7bb196a71 attempted to "fix" a problem with the waySSL_shutdown behaved whilst in midhandshake The original behaviour hadSSL_shutdown return immediately having taken no action if called midhandshake with a return value of 1 meaning everything was shutdownsuccessfully In fact the shutdown has not been successfulCommit 7bb196a71 changed that to send a close_notify anyway and thenreturn This seems to be causing some problems for some applications soperhaps a better much simpler approach is revert to the previousbehaviour no attempt at a shutdown, but return 1 meaning the shutdownwas not successfulThis also fixes a bug where SSL_shutdown always returns 0 when shutdownvery early in the handshake ie we are still using SSLv23_method
more doc fixesdgst: using digest instead of specific digest commandsthe digest list specified in man dgst may be inaccurate, hence usingdigest and referring to the list in digestcommands'sha' as a digest name is no longer supporteddgst,pkeyutl cmds help cleanup In dgst, pkeyutl cmds, some options help was missing fixed a minor typo in opensslpod, that fixes make install digestcommands was showing sha, which is not a supported digestanymoreSignedoffby: Rich Salz <rsalz@opensslorg>
Clarify resumed sessions and NULL return
Fix memory leak in dtlsv1listentest
Allocate bio_err before turning on memleak checks
Stack documentation
commands help cleanupopt_valtype 0 is same as '' while printing cmd usageasn1parse/ca/ciphers help cleanupSignedoffby: Rich Salz <rsalz@opensslorg>
if no comparison function set make sk_sort no op
make update
Add documenation for X509_chain_up_ref
Add SSL_get0_verified_chain to return verified chain of peer
Display the linking commands that are performed
Enhance and clear the support of linker flagsSome time ago, we had a ex_libs configuration setting that could bedivided into lflags and ex_libs  These got divided in two settings,lflags and ex_libs, and the former was interpreted to be generallinking flagsUnfortunately, that conclusion wasn't entirely accurate  Most ofthose linking were meant to end up in a very precise position on thelinking command line, just before the spec of libraries the linkingdepends onBack to the drawing board, we're diving things further, now havinglflags, which are linking flags that aren't depending on command lineposition, plib_lflags, which are linking flags that should show up justbefore the spec of libraries to depend on, and finally ex_libs, whichis the spec of extra libraries to depend onAlso, documentation is changed in Configurations/README  This waspreviously forgotten
GH587: Extend ECDH tests to more curves Add more ECDH KATssquelch signcompare warningSignedoffby: Rich Salz <rsalz@opensslorg>
Add BIO_ADDR_clear to libeaynum
GH634: fix potential memory leakSignedoffby: Rich Salz <rsalz@opensslorg>
RT4194: Restore old engine parameter parsingAllow initial engine names as first parameters before flagsAlso add engine param to help summaryWrote manpage
Add buildinfo lines for dtlsv1listentest
Don't include sys/sockethIt's not available on all OSs, e_osh already does the right thing
Add missing static declarations in dtlsv1listentestcClang rightly does not like extern symbols that are not declaredin any header file, as typically these are not intended for globalvisibility and are exposed in error  This was indeed the case withvarious filescope objects in dtlsv1listentestc
Update DTLSv1_listen documentationMake it clear that if we are unable to get hold of the peer address thenpeer is cleared and the family set to AF_UNSPEC
Add tests for DTLSv1_listenAdds a set of tests for the newly rewritten DTLSv1_listen functionThe test pokes various packets at the function and then checksthe return value and the data written out to ensure it is what wewould have expected
Provide partial support for fragmented DTLS ClientHellosThe recently rewriten DTLSv1_listen code does not support fragmentedClientHello messages because fragment reassembly requires server statewhich is against the whole point of DTLSv1_listen This change adds somepartial support for fragmented ClientHellos It requires that the cookiemust be within the initial fragment That way any noninitial ClientHellofragments can be dropped and fragment reassembly is not required
Add a BIO_ADDR_clear functionAdds a new function BIO_ADDR_clear to reset a BIO_ADDR back to anunitialised state, and to set the family to AF_UNSPEC
GH601: Various spelling fixesSignedoffby: Rich Salz <rsalz@opensslorg>
RT4070: Improve struct/union regexp
Make DTLSv1_listen a first class function and change its typeThe DTLSv1_listen function exposed details of the underlying BIOabstraction and did not properly allow for IPv6 This commit changes the"peer" argument to be a BIO_ADDR and makes it a first class functionrather than a ctrl to ensure proper type checking
RT4292: Remove  lineAlso remove two mistakenly checkedin files
RT1596: Add clarifying doc
GH628: Add help to all apps docsSignedoffby: Rich Salz <rsalz@opensslorg>
GH628: Add help to all apps docsSignedoffby: Rich Salz <rsalz@opensslorg>
Ensure correct chain depth for policy checks with DANE bare key TA
Long overdue cleanup of X509 policy tree verificationReplace all magic numbers with defined constants except in booleanfunctions that return 0 for failure and 1 for success  Avoid acouple memory leaks in error recovery code paths  Code styleimprovements
Various RT doc fixesRT1556: doc/crypto/threadspodRT2024: Missing pages mentioned in cryptopodRT2890: Wrong size in ERR_string_error descriptionRT3461: Better description of PEM EncryptionJeffrey Walton <noloader@gmailcom>Also, fix up formatting and removed some code examplesthat encourage unsafe patterns, like unencrypted privatekeys Rich SalzRT4240: Document some speed flags Tomas Mraz <tmraz@redhatcom>RT4260: Fix return value doc for X509_REQ_sign and X509_signLaetitia Baudoin <lbaudoin@googlecom>
enable leak checking for danetest
Fix return code in CRYPTO_mem_leaks_fp
If memory debugging enabled return error on leaks
Restore no_comp switch for backwards compatible behaviour
VMS lacks socklen_t, give it oneFortunately, we only use socklen_t internally
Initialize variable
Don't export local symbols on SolarisFollowing on from earlier commits to prevent local symbols from beingexported in the shared libraries on Linux, this makes the equivalent changesfor Solaris
make update
Add EC_KEY_priv2bufAdd new function EC_KEY_priv2buf to allocated and encode privatekey octet in one call Update and simplify ASN1 and print routines
Allocate ASN1_bn_print buffer internallyDon't require an application to work out the appropriate buffer size forASN1_bn_print, which is unsafe Ignore the supplied buffer and allocateit internally instead
Use BN_bn2binpad
use enum type for do_EC_KEY_print
update EC ASN1 and print routinesUpdate EC ASN1 and print routines to use EC_KEY_oct2priv andEC_KEY_priv2oct
Add EC_KEY_oct2priv and EC_KEY_priv2octNew functions EC_KEY_oct2priv and EC_KEY_priv2oct These are private keyequivalents of EC_POINT_oct2point and EC_POINT_point2oct which convertbetween the private key octet format and EC_KEY
Add ASN1_buf_print to print a buffer in ASN1_bn_print format
Don't use RDRAND if told not toEnsure we respect OPENSSL_NO_RDRAND
Initialise with 1 rather than 1A small typo crept in
Add new DTLSSRTP protection profiles from RFC 7714
Add checks for IPv4 and IPv6 in OpenSSL::Test::Utils and use themThis uilds on the same way of checking for availability as we do inTLSProxy  We use all IP factories we know of, starting with those whoknow both IPv6 and IPv4 and ending with the one that only knows IPv4and cache their possible success as foundation for checking theavailable of each IP domain80test_sslt has bigger chances of working on platforms that do notrun both IP domains
Update crypto/bio/buildinfo
Fix pkeyutl inability to directly access keys on hardware tokens
Change the transfer perl module so the real module gets properly registeredThis is an important move if scripts want to refer to the loadedmodule without having perl think it needs to be loaded again
Add option to disable asyncAdd noasync option to Configure that forces ASYNC_NULLRelated to RT1979An embedded system or replacement C library eg musl or uClibcmay not support the context APIs that are needed for async operationCompiles with musl Ran unit tests, async tests skipped as expectedSignedoffby: Rich Salz <rsalz@opensslorg>
Make sure getaddrinfo and getnameinfo works as intended on WindowsBoth getaddrinfo and getnameinfo have to be preceeded with a callto BIO_sock_initAlso, make sure to give gai_strerror the actual error code
If egd is disabled by default, it should be possible to enable
Add ec check option
Fix potential buffer overrunSignedoffby: Rich Salz <rsalz@opensslorg>
Use WSAGetLastError on windowsWindows doesn't have h_error or hstrerror
Restore xmm7 from the correct address on win64
update OID tables
Add Curve OIDs from draftjosefssonpkixnewcurves
RT2887: Add more packet and handshake types
Fix BN_gcd errors for some curvesThose even order that do not play nicely with Montgomery arithmeticSignedoffby: Rich Salz <rsalz@opensslorg>
RT3095: allow NULL key for singleshot HMACIn HMAC_Init_ex, NULL key signals reuse, but in singleshot HMAC,we can allow it to signal an empty key for convenience
bio_errc: remove a reappeared filename comment
Make fallback addresses static so that we can initialize it
Only use TLS12 when it's available
Have 70test_clienthellot be selective on when it can be runThe test program clienthello checks TLS extensions, so there's nopoint running it when no TLS protocol is available
Have OpenSSL::Test::Utils::available_protocols load configdata as wellOtherwise, it could typically always return an empty list, since it'soften called first if at all
RT2752: Add some EKU OID'sAnd some others found in the Internet
Handle localhost being either 127001 or ::1When connecting to "localhost" the Proxy's choice of client addressfamily may not match the server's choice address family  WithoutMultiHomed > 1, the proxy may try the wrong address family first,and give up without trying the other
Use matching quotes
Make the mk1mf 'mv' command variable
Tweak opensslconfhin for style
Use BIO_snprintf rather than snprintfSome platforms do not have the latter
Refactoring BIO: small test correction
GH614: Use memcpy/strdup when possibleSignedoffby: Rich Salz <rsalz@opensslorg>
Refactoring BIO: Add a few lines in CHANGES & NEWS
Refactoring BIO: add a simple networking test of s_client and s_serverThis makes use of TLSProxy, which was expanded to use IO::Socket::IPwhich is a core perl module or IO::Socket::INET6 which is said tobe more popular instead IO::Socket::INET if one of them is installed
Refactoring BIO: Adapt s_client and s_servers_socketc gets brutally cleaned out and now consists of only twofunctions, one for client and the other for server  They both handleAF_INET, AF_INET6 and additionally AF_UNIX where supported  The restis just easy adaptationBoth s_client and s_server get the new flags 4 and 6 to force theuse of IPv4 or IPv6 onlyAlso, the default host "localhost" in s_client is removed  It's notcertain that this host is set up for both IPv4 and IPv6  For example,Debian has "ip6localhost" as the default hostname for [::1]  Thebetter way is to default |host| to NULL and rely on BIO_lookup toreturn a BIO_ADDRINFO with the appropriate loopback address for IPv4or IPv6 as indicated by the |family| parameter
Refactoring BIO: Adapt BIO_s_datagram and all that depends on itThe control commands that previously took a struct sockaddr  havebeen changed to take a BIO_ADDR  instead
Refactoring BIO: add a test, using test/ssltestThis adds a couple of simple tests to see that SSL traffic using thereimplemented BIO_s_accept and BIO_s_connect works as expected,both on IPv4 and on IPv6
make update
Refactoring BIO: adapt BIO_s_connect and BIO_s_accept
make update
Refactoring BIO: reimplement old socket handling functions with new ones
make update
Temporary pragma to have GCC quiet down about deprecated functionsFuture commits will change our use to newer functions and the pragmaswill go away at that time
Refactoring BIO: new sockethandling functions, deprecate older onesAdded functions:BIO_socketBIO_connectBIO_listenBIO_accept_exBIO_closesocketBIO_sock_infoThese get deprecated:BIO_gethostbynameBIO_get_portBIO_get_host_ipBIO_get_accept_socketBIO_accept
Refactoring BIO: add error macros & text, and make update
Refactoring BIO: Small adjustmentsBecause of the way bio_lclh is organised, we must not includeinternal/cryptlibh before it  As a matter of fact, bio_lclhincludes internal/cryptlibh on its own
Refactoring BIO: add wrappers around sockaddr et alBecause different platforms have different levels of support for IPv6,different kinds of sockaddr variants, and some have getaddrinfo et alwhile others don't, we could end up with a mess if ifdefs, duplicatecode and other maintainance nightmaresInstead, we're introducing wrappers around the common form for socketcommunication:BIO_ADDR, closely related to struct sockaddr and some of its variantsBIO_ADDRINFO, closely related to struct addrinfoWith that comes support routines, both convenient creators andaccessors, plus a few utility functions:BIO_parse_hostserv, takes a string of the form host:service andsplits it into host and service  It checks for  in both parts, andconverts any [ipv6address] syntax to ust the IPv6 addressBIO_lookup, looks up information on a hostAll routines handle IPv4 AF_INET and IPv6 AF_INET6 addresses, andthere is support for local sockets AF_UNIX as well
RT4148Accept leading 0byte in PKCS1 type 1 padding Internally, the byte isstripped by BN_bn2bin but external callers may have other expectations
[Configure] Make withzlib work with configdatapm
RT3234: disable compressionCRIME protection: disable compression by default, even if OpenSSL iscompiled with zlib enabled Applications can still enable compression bycalling SSL_CTX_clear_optionsctx, SSL_OP_NO_COMPRESSION, or by usingthe SSL_CONF library to configure compression SSL_CONF continues towork as before:SSL_CONF_cmdctx, "Options", "Compression" enables compressionSSL_CONF_cmdctx, "Options", "Compression" disables compression nownoop by defaultThe commandline switch has changed from no_comp to comp
Fix pkeyutl/rsautl empty encryptinput/decryptoutput handlingAlso fix option processing in pkeyutl to allow use of formerly"outoforder" switches that were needless implementation limitationsHandle documented "ENGINE" form with keyform and peerformBetter handling of OPENSSL_NO_ENGINE and OPENSSL_NO_RSART2018
fix code indentation issue related to engine_ref_debug macroSignedoffby: Rich Salz <rsalz@akamaicom>
RT2353: Add ipsec IKE OID
Use a simpler method to build a glob than splitpath and catpathIt turns out that the combination splitpath could return an emptystring for the directory part  This doesn't play well with catdir
make update
New BN functionsAdd new function BN_bn2binpad which checks the length of the outputbuffer and pads the result with zeroes if necessaryNew functions BN_bn2lebinpad and BN_lebin2bn which use little endianformat
GH608: Ensure 64bit shift no matter sizeoflongSignedoffby: Rich Salz <rsalz@opensslorg>
RT3854 Update docsRemove ancient unused configuration file in crypto/conf
Style; add "! NULL"
GH554: Improve pkeyutl docSignedoffby: Rich Salz <rsalz@opensslorg>
constify PACKETPACKET contents should be readonly To achieve this, also constify two user callbacks constify BUF_reverse
update DSA docs
add option to exclude public key from EC keys
Fix memory leak and print out keygen errors
Better check for gcc/clangIteratively improved with Richard and Andy
Comment "secure memcmp" implementationSignedoffby: Rich Salz <rsalz@opensslorg>
Use PKCS8 format EC key so test is skipped with noec
unified build scheme: add a personal configuration to test itNothing else will run the unified scheme for now
unified build scheme: add buildinfo filesNow that we have the foundation for the "unified" build scheme inplace, we add buildinfo files  They have been generated from theMakefiles in the same directories  Things that are platform specificwill appear in later commits
unified build scheme: a first introductionThe "unified" build scheme revolves around small information files,buildinfo, which each describe their own bit of everything that needsto be built, using a minilanguage described in Configurations/READMEThe information in buildinfo file contain references to source filesand final result  Object files are not mentioned at all, they aresimply from source files  Because of this, all the _obj items inConfigurations/conf are renamed to _asm_src and the files listedin the values are change from object files to their correspondingsource files  For the sake of the other build schemes, Configuregenerates corresponding _obj entries in targetFurthermore, the "unified" build scheme supports having a builddirectory tree separate from the source directry treeAll paths in a buildinfo file is assumed to be relative to itslocation, either within the source tree or within the build tree
Add tests for nonca trusted roots and intermediates
Compat selfsigned trust with rejectonly aux dataWhen auxiliary data contains only reject entries, continue to trustselfsigned objects just as when no auxiliary data is presentThis makes it possible to reject specific uses without changingwhat's accepted and thus overring the underlying EKUAdded new supported certs and doubled test count from 38 to 76
Check chain extensions also for trusted certificatesThis includes basic constraints, key usages, issuer EKUs and auxiliarytrust OIDs given a trust suitably related to the intended purposeAdded tests and updated documentation
Zero newly allocated points
Remove redundant coded2i_ECPrivateKey always caculates the public key so there isno need to caculate it again in eckey_priv_decode
Add EC_GROUP_order_bits, EC_GROUP_get0_order and EC_GROUP_get0_cofactorNew functions to return internal pointer for order and cofactor Thisavoids the need to allocate a new BIGNUM which to copy the value toSimplify code to use new functions
Engage poly1305sparcv9 module
Add poly1305/asm/poly1305sparcv9pl
Configure: restore original logic for DWHIRLPOOL_ASM
RT4129: BUF_new_mem_buf should take const void Signedoffby: Rich Salz <rsalz@akamaicom>
Remove the extra checks for Intel's C compilerWhen the target is {something}icc, we're doing some extra checks ofthe icc compiler  However, all such targets were cleaned away inMarch 2015, so this Configure section is dead code
RT3755: Remove duplicate include
Don't go into dotted directories when copying Makefilein to Makefile
GH102: Extra volatile avoids GCC bug
Remove extra level of indirectionRemove OPENSSL_IMPORT as its only purpose is to define OPENSSL_EXTERN
Move more BN internals to bn_lclhThere was an unused macro in ssl_loclh that used an internaltype, so I removed itMove bio_st from bioh to ossl_typeh
GH102: Add volatile to CRYPTO_memcmpCan't hurt and seems to prevent problems from some overaggressiveLTO? compilers
When checking if there's a VMS directory spec, don't forget the possible device
Fix test/recipes/25test_verifyttop_dir are used to create directory names, top_file should beused for files  In a Unixly environment, that doesn't matter, but
handle "Ctrl" in separate function
Add test data for ECDH
Add support for EVP_PKEY_derive in evp_test
fix warning
Add function to return internal enoding of X509_NAMEPR4280
Fix opt_imax callNot all architectures have a time_t defined the same way  To makesure we get the same result, we need to cast &checkoffset to intmax_t and make sure that intmax_t is defined somehowTo make really sure we don't pass a variable with the wrong size downto opt_imax, we use a temporary intmax_t
Configure: Clarify the handling of $thread_cflags
Make opt_imax visible in all apps
Missed rc2_int from beforeAlso remove $Makefile variable :
Fix invalid policy detectionAs a sideeffect of opaque x509, ex_flags were looked up too early,before additional policy cache updates
Templatize util/domd
Better type for x509 checkend argumentThis is a time_t and can be zero or negative  So use 'M' maximalsigned int not 'p' positive int
Complete the lflags > lflags/ex_libs transitionSome last lflags to convert to ex_libs or a combo of lflags and ex_libs
Configure et al: split up the lflags configuration item into twoThe lflags configuration had a weird syntax with a  as separator  Ifit was present, whatever came before ended up as PEX_LIBS in Makefileusually, this is LDFLAGS, while whatever came after ended up asEX_LIBSThis change splits that item into lflags and ex_libs, making their usemore explicitAlso, PEX_LIBS in all the Makefiles are renamed to LDFLAGS
Make use of add and add_before in Configurations/A few more subjoins could be replaced with calls to add and add_before
Revert "Don't replace cflags with thread_cflags, only append the latter"This reverts commit a450326ee040c6cbb262debdb1ed731e6700e1e0
Merge error, wrong domd submitted
Don't replace cflags with thread_cflags, only append the latter
Remove cleandependRemove depend hacks from demos/enginesRemove cleandepend; just call makedepend or $CC M and use that
Make it possible to check for explicit auxiliary trustBy default X509_check_trust trusts selfsigned certificates fromthe trust store that have no explicit local trust/reject oidsencapsulated as a "TRUSTED CERTIFICATE" object  See the addtrustand trustout options of x5091This commit adds a flag that makes it possible to distinguish betweenthat implicit trust, and explicit auxiliary settingsWith flags | X509_TRUST_NO_SS_COMPAT, a certificate is only trustedvia explicit trust settings
Always DPURIFYThe use of the uninitialized buffer in the RNG has no real securitybenefits and is only a nuisance when using memory sanitizers
Remove x86_gcc_des,x86_gcc_optsThis is a followin from !1738, we no longer need those variables
Add have_precompute_mult testsAdd tests for have_precompute_mult for the optimised curves nistp224,nistp256 and nistp521 if present
Fix bug in nistp224/256/521 where have_precompute_mult always returns 0During precomputation if the group given is well known then we memcpy awell known precomputation However we go the wrong label in the code anddon't store the data properly Consequently if we call have_precompute_multthe data isn't there and we return 0RT3600
Add missing return value checksThe function DH_check_pub_key was missing some return value checks insome calls to BN functionsRT4278
Correct value of DH_CHECK_PUBKEY_INVALIDA new return value for DH_check_pub_key was recently added:DH_CHECK_PUBKEY_INVALID As this is a flag which can be ORed with otherreturn values it should have been set to the value 4 not 3RT4278
Implement Async SSL_shutdownThis extends the existing async functionality to SSL_shutdown, ieSSL_shutdown can now casuse an SSL_ERROR_WANT_ASYNC error to be returnedfrom SSL_get_error if async mode has been enabled
Keep RC5 bit shifts in [031]
Use callback for DSAPublicKeyPR4277
Remove extraneous output from util/mk scripts
Remove outdated testsThese tests are not built, and only usable as handtests so notworth moving into our test frameworkThis closes https://githubcom/openssl/openssl/pull/561 and RT 4252
Add more components to buildAdd enablecryptomdebug enablerc5 enablemd2 to any target that wasstrictwarnings
Missed part of b4f35e
Correct number of arguments in BIO_get_conn_int_port macro
CHANGES and NEWS updates for releaseAdd details about the latest issues fixed in the forthcoming release
Add a test for small subgroup attacks on DH/DHEFollowing on from the previous commit, add a test to ensure thatDH_compute_key correctly fails if passed a bad y such that:y^q mod p ! 1
Prevent small subgroup attacks on DH/DHEHistorically OpenSSL only ever generated DH parameters based on "safe"primes More recently in version 102 support was provided forgenerating X942 style parameter files such as those required for RFC5114 support The primes used in such files may not be "safe" Where anapplication is using DH configured with parameters based on primes thatare not "safe" then an attacker could use this fact to find a peer'sprivate DH exponent This attack requires that the attacker completemultiple handshakes in which the peer uses the same DH exponentA simple mitigation is to ensure that y^q mod p  1CVE20160701Issue reported by Antonio Sanso
Fix typo in md2h
Restore NUMPRIMES as a numeric literalThis fixes clang compilation problem with size_t NUMPRIMES and intloop counters
Add CRYPTO_secure_zallocAlso turn B<foo> into foo in the pod page
Comment sideeffect only calls of X509_check_purpose
Remove EIGHT_BIT and SIXTEEN_BITAlso cleaned up bn_primepl to current coding style
Remove outdated legacy crypto optionsMany options for supporting optimizations for legacy crypto on legacyplatforms have been removed  This simplifies the source code anddoes not really penalize anyoneDES_PTR always onDES_RISC1, DES_RISC2 always offDES_INT always 'unsigned int'DES_UNROLL always onBF_PTR always on BF_PTR2 removedMD2_CHAR, MD2_LONG always 'unsigned char'IDEA_SHORT, IDEA_LONG always 'unsigned int'RC2_SHORT, RC2_LONG always 'unsigned int'RC4_LONG only int and char for assembler are supportedRC4_CHUNK always long, RC_CHUNK_LL removedRC4_INDEX always onAnd also make D_ENCRYPT macro more clear @approThis is done in consultation with Andy
Fix check of what makedepprog should beA mistake was made and the setting of this config variable gotreverted to an older behavior  This restores the latest
Test all builtin curves and let the library choose the EC_METHOD
Complete the removal of / fooc / commentsSome files that are automatically generated still had those commentsadded by the generating scripts
Skip all explicitely if the number of tests is 0It seems that Test::More doesn't like 0 tests, a line like this raisesan error and stops the recipe entirely:plan tests > 0;So we need to check for 0 tests beforehand and skip the subtestexplicitely in that case
Fix typoscryptograpic > cryptographicSignedoffby: Rich Salz <rsalz@opensslorg>
Be careful when applying EXE_SHELL$EXE_SHELL should only be used with out own programs, not withsurrounding programs such as the perl interpreter
Doc fixes suggested by Claus AssmannRT4264, RT4268
Fix Custom Extension tests skip count
Remove / fooc / commentsThis was done by the followingfind  name '[ch]' | /tmp/plwhere /tmp/pl is the following threeline script:print unless $  1 && m@/\ \[ch] \/@;close ARGV if eof;  Close file to reset $And then some handediting of other files
SHARED_LIBS_LINK_EXTS is no longer used, remove it completely
Remove unused, undocumented cleanshared targetAlso removes the make variable SHARED_LIBS_LINK_EXTS, only used bythe cleanshared targetWhen shared library linking was moved to the separate Makefilesharedin commit 30afcc072acd4f70590fec68bf0590da4e4f1883, this target wasskipped  Prior to that commit, cleanshared was invoked as adependency of buildshared, but afterward it was no longer referencedanywhere in the treeInstead of porting the functionality over to Makefileshared, justremove it entirely, as it appears to be unused
RT4272: Unit tests fail when DTLS disabledMissing SKIP: block in SSL unit tests for DTLS and TLS version tests
80test_cat is made to use the new perlapp
Have OpenSSL::Test handle perl scripts like any programSince we're building some of our perl scripts and the result might notend up in apps/ , we may need to treat them like the compileprograms we use for testingThis introduces perlapp and perltest, which behave like app andtest, but will add the perl executable in the command line For example, with a mk1mf build, the result will end up in $BIN_D
Add SSL_up_ref and SSL_CTX_up_refThe SSL and SSL_CTX structures are reference counted However since libsslwas made opaque there is no way for users of the library to manipulate thereference counts This adds functions to enable that
Remove dirs from mkfilesplRecent changes have removed some directories which is causing mkfilesplto fail
Use the new OpenSSL::Test::Utils routines
Use Configure's @disablables and disabled through configdatapmEnhances the routines in OpenSSL::Test::Utils for checking disabledstuff to get their information directly from Configure instead of'openssl list disabled'
Configure first in travis create release
Base the tarfile list of files on git lsfiles instead of find
Ask for tests in CONTRIBUTING
Small Makefilein cleanupengines_obj changed name to padlock_obj in Configure  We need to dothe corresponding ENGINES_ASM_OBJ > PADLOCK_ASM_OBJ in appropriateMakefileins
Small cleanups in Configure Small rearrangement of the TABLE and HASH printouts, and addingprintout of the "build_scheme" item Renamed "engines_obj" to "padlock_obj" Moved the runs of dofile down  it didn't quite make sense to havethat in the middle of a printout
Generate warning textNow that we're using templates, we should warn people not to edit theresulting file  We do it through util/dofilepl, which is enhancedwith an option to tell what file it was called from  We also changethe calls so the template files are on the command line instead ofbeing redirected through standard input  That way, we can displaysomething like this example taken from include/openssl/opensslconfh:/ WARNING: do not edit! // Generated by Configure from include/openssl/opensslconfhin /
Misc fixupsThe goal is Makefile, not MakefilenewRemove the second generation of opensslconfh
Revert merge errorThere are two versions of print_table_entry in Configure  Removethe older
Add some info in CHANGES about what's happening so far with Configure et al
Remove GOST againThe config for the removed GOST engine reappeared by mistake  Nowremoved again
Refactor file writing  Remake Makefileorg into a templateIt is time for Makefileorg to fold into the new regime and have a runthrough util/dofilepl  This forces some information out of there andinto Configure, which isn't a bad thing, it makes Configureincreasingly the center of build information, which is as it shouldbeA few extra defaults were needed in the BASE template to get rid ofwarnings about missing values
Now that Configure doesn't produce tools/c_rehash, mk1mf has to do it
For every test in 80test_sslt, check that the protocols used is enabled
Make tests use configdatapm rather than parsing Makefile
Move & split opensslconfhinMove opensslconfhin to include/opensslSplit off DES,BN,RC4 stuff into separate header filetemplates in crypto/include/internal/_confhin
Fix OpenSSL::Test::Simple to take more than one algorithmSome test programs may depend on more than just one TLS version, forexample
Move pqueue into sslThis is an internal facility, never documented, not forpublic consumption  Move it into ssl where it's only usedfor DTLSI also made the typedef's for pqueue and pitem follow our style: theyname structures, not pointers
Make sure apps/Makefile builds apps/CApl by default
The rehashtime target should depend on build_tools as wellThe explanation is that it falls back to using tools/c_rehash if'apps/openssl rehash' isn't supported on the platform at hand
Fix two possible leaksSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Fix possible memory leak on BUF_MEM_grow_clean failureSimplify BUF_MEM init codeSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Refactor file writing  make configdatapm the info center for "reconf"Now that configdatapm is the centre of information, use that insteadof Makefile to figure out reconfiguration parameters  This will helpfuture development with different Makefile file namesThe code to read necessary configuration data from Makefile is retainedfor an easy transition to configdatapm based information gathering  Itwill be removed later onThis change includes moving the variable $cross_compile_prefix to config
String configs are truly deprecated, not even somewhat supported any more
Remove extra unused variable in util/dofilepl
Fix store with opaque dataWhen experimentalstore is enabled, it does not compile due to thechange to opaque data structuresChange CRYPTO_add to EVP_PKEY_up_ref as neededSignedoffby: Kurt Roeckx <kurt@roeckxbe>
free item after sk_push failSignedoffby: Rich Salz <rsalz@opensslorg>
Disable jpake if psk is disabled
Refactor file writing  rewrite crypto/opensslconfhin as templateThe turn has come to have crypto/opensslconfhin get run throughutil/dofilepl  The consequence is that a large number of variablesget moved to the config tableAlso, the string variables $openssl_, which were populated with cpplines, all being of the form "define SOMETHING", were converted intoARRAY refs in config values, containing just the list of macros to bedefined
Refactor file writing  Adapt util/mkdefpl to use configdatapmFor this adaptation, the variables $options and $version needed tomove to config in Configure, and why not move all other variablesholding diverse version numbers at the same time?
Refactor file writing  information on our use of Perl and Perl modulesThis includes a start on how to install missing modules
Refactor file writing  adapt util/dofilepl to use with_fallback
Bundle the non core Perl module Text::TemplateBecause we're using Text::Template and we know it's a non core Perlmodule, we choose to bundle it into our source, for convenienceexternal/perl/Downloadedtxt document what modules we choose to bundlethis way and exactly where we downloaded it fromWith this changes comes the transfer module for with_fallback
Refactor file writing  arrange for use of bundled Perl modules as fallbackFor our own convenience, we need a mechanism to be able to fall backon bundled Perl modules  It's a minimal package that's called likethis:use with_fallback qwModule1 Module2 ;For each module, it will try to require them from the systeminstallation, and failing that, it will temporarly add external/perland try to require transfer::{ModuleName}  It requires that eachbundled Perl modules is accompanied by a small transfer moduleexternal/perl/transfer/ModuleNamepm in our example that knowsexactly what to load
Refactor file writing  introduce template driven file writingapps/CApl and tools/c_rehash are built from template files  So far,this was done by Configure, which created its own problems as itforced everyone to reconfigure just because one of the template fileshad changedInstead, have those files created as part of the normal build in apps/and in tools/Furthermore, this prepares for a future where Configure may produceentirely other build files than Makefile, and the latter can't beguaranteed to be the holder of all information for other scriptsInstead, configdatapm described below becomes the center ofconfiguration informationThis introduces a few new things:config         a hash table to hold all kinds of configuration datathat can be used by any other scriptconfigdatapm   a perl module that Configure writes  It currentlyholds the hash tables config and targetutil/dofilepl  a script that takes a template on STDIN and outputsthe result after applying configuration data on itIt's supposed to be called like this:perl I$TOP Mconfigdata < template > resultorperl I$TOP Mconfigdata templ1 templ2  > resultNote: util/dofilepl requires Text::TemplateAs part of this changed, remove a number of variables that are reallyjust copies of entries in target, and use target directly  Theexceptions are $target{cflags} and $target{lflags}, they do get copiedto $cflags and $lflags  The reason for this is that those variablepotentially go through a lot of changes and would rather deserve aplace in config  That, however, is for another commit
Refactor config  consolidate and refresh print_table_entryIt's time for print_table_entry to get a bit of refreshment  The way itwas put together, we needed to maintain the list of known configurationkeys of interest twice, in different shapes  This is error prone, somove the list of strings to a common list for all printing cases, anduse simple formatting of lines to do the actual printout based on thatlist
Fix quoting error in SRP printfThe code is trying to interpolate the value of the BASE_SECTION macro,but due to excess escaping, it instead prints the string "BASE_SECTION"Signedoffby: Rich Salz <rsalz@opensslorg>
Fixed typo in the SSL_CTX_set_security_levelSignedoffby: Rich Salz <rsalz@opensslorg>
Cleanup gitignoreSome things to ignore need to be properly rooted, and use a bit moreprecision on ignoring 'lib', as that maybe be a perfectly validdirectory name to add into git elsewhere in the source tree
Configurations  no_asm_filler is long gone, don't use it
Fix build failure with CIPHER_DEBUGSignedoffby: Rich Salz <rsalz@opensslorg>
isalist1 is obsolete; use isainfo1Signedoffby: Rich Salz <rsalz@opensslorg>
Updated OSSL_DYNAMIC_VERSION/OSSL_DYNAMIC_OLDESTChange to reflect changes in dynamic_fnsSignedoffby: Rich Salz <rsalz@opensslorg>
dsatest: use the correct BIO to print the test errorSignedoffby: Rich Salz <rsalz@opensslorg>
few typo fixesSignedoffby: Rich Salz <rsalz@opensslorg>
Remove outdated conftestc
Refactor config  @MK1MF_Builds out, general build scheme inTime to get rid of @MK1MF_Builds and introduce a more flexible'build_scheme' configuration key  Its value may be a string or anarray of strings, meaning we need to teach resolve_config how tohandle ARRAY referensesThe build scheme is a word that selects a function to create theappropriate result files for a certain configuration  Currently validbuild schemes aer "mk1mf" and "unixmake", the plan is however to addat least one other for a more universal build schemeIncidently, this also adds the functions 'add' and 'add_before', whichcan be used in a configuration, so instead of having to repeatedlywrite a sub like this:key1 > sub { join" ", @_, "myvalues"; },key2 > sub { join" ", "myvalues", @_; },one could write this:key1 > add" ", "myvalues",key2 > add_before" ", "myvalues",The good point with 'add' and 'add_before' is that they handleinheritances where the values are a misture of scalars and ARRAYs  Ifthere are any ARRAY to be found, the resulting value will be an ARRAY,otherwise it will be a scalar with all the incoming valued joinedtogether with the separator given as first argument to add/add_before
Refactor config  move templates and template docs to ConfigurationsMove the documentation of the target configuration form toConfigurations/READMEMove initial assembler object templates toConfigurations/00BASEtemplatesconfFurthermore, remove all variables containing the names of thenonassembler object files and make a BASE template of them insteadThe  values from this templates are used as defaults as is  Theremaining manipulation of data when assembler modules are used is doneonly when $no_asm is falseWhile doing this, clean out some other related variables that aren'tused anywhereAlso, we had to move the resolution of the chosen target a bit, or thefunction 'asm' would never catch a true $no_asm  this hasn'tmattered before we've moved it all to the BASE template, but now itdoesAt the same time, add the default for the 'unistd' key to the BASEtemplate
Refresh the thinking of prefix and openssldirprefix is now exclusively used for software and manual installationopenssldir is not exclusively used as a default location for certs,keys and the default opensslcnfThis change is made to bring clarity, to have the two lessintertwined, and to be more compatible with the usual ways of softwareinstallationPlease change your habits and scripts to use prefix rather thanopenssldir for installation location now
RT3863 ECC: Add missing NULL check Set a flag
Refactor config  throw away the last remains of 'testsanity'
Refactor config  consolidate handling of disabled stuffIt's time to refactor the handling of disabled so that allinformation of value is in the same place  We have so far had a fewcascading disable rules in form of code, far away from disabledInstead, bring that information to the array @disable_cascade, whichis a list of pairs of the form 'test > descendents'  The test partcan be a string, and it's simply checked if that string is a key indisabled, or it can be a CODEref to do a more complex test  If thetest comes true, then all descendents are disabled  This check isperformed until there are no more things that need to be disabledAlso, $default_depflags is constructed from the information indisabled instead of being a separate string  While a string of itsown is visually appealing, it's much too easy to forget to update itwhen something is changed in disabled
Refactor config  rewrite handling of "reconf"The way the "reconf"/"reconfigure" argument is handled is overlycomplicated  Just grep for it first, and if it is there in thecurrent arguments, get the old command line arguments from MakefileWhile we're at it, make the Makefile variable CONFIGURE_ARGS hold thevalue as a perl list of strings  This makes things much safer in caseone of the arguments would contain a space  Since CONFIGURE_ARGS isused for nothing else, there's no harm in this
Multiple trusted/untrusted/CRLfile options in verifyIt is sometimes useful especially in automated tests to supplymultiple trusted or untrusted certificates via separate files ratherthan have to prepare a single file containing them allTo that end, change verify1 to accept these options zero or moretimes  Also automatically set noCAfile and noCApath whentrusted is specifiedImprove verify1 documentation, which could still use some work
Refactor apps load_certs/load_crls to work incrementally
More X509_verify_cert tests via verify1Still need tests for trustedfirst and tests that probe constructionof alternate chains
Reject when explicit trust EKU are set and none matchReturning untrusted is enough for for full chains that end inselfsigned roots, because when explicit trust is specified itsuppresses the default blanket trust of selfsigned objectsBut for partial chains, this is not enough, because absent a similartrustselfsigned policy, non matching EKUs are indistinguishablefrom lack of EKU constraintsTherefore, failure to match any trusted purpose must trigger anexplicit reject
Commit pregenerated test_verify certsThese can be regenerated via:cd test/certs; /setupshif need be  The keys are all RSA 2048bit keys, but it is possibleto change that via environment variablescd test/certsrm f keypem key2pemOPENSSL_KEYALGrsa OPENSSL_KEYBITS3072 /setupshcd test/certsrm f keypem key2pemOPENSSL_KEYALGecdsa OPENSSL_KEYBITSsecp384r1 /setupshKeys are reused if already present, so the environment variablesare only used when generating any keys that are missing  Hencethe "rm f"
Scripts to generate verify test certs
Check SuiteB constraints with EE DANE recordsWhen DANEEE3 matches or either of DANEEE/PKIXEE fails, we don'tbuild a chain at all, but rather succeed or fail with just the leafcertificate  In either case also check for SuiteB violationsAs unlikely as it may seem that anyone would enable both DANE andSuiteB, we should do what the application asksTook the opportunity to eliminate the "cb" variables in x509_vfyc,just call ctx>verify_cbok, ctx
Refactor config  split read_config into read_config and resolve_configSplit the read_config function into read_config that ONLY reads theconfiguration files but doesn't try to resolve any of theinheritances, and resolve_config which resolves the inheritance chainof a given target  Move them to the bottom of Configure, with therest of the helpersHave a new small hash table, target, which will hold the values forthe target the user requested  This also means that all access to thecurrent target data can be reduced from '$table{$target}>{key}' to amere '$target{key}'While we're at it, the old string formatted configurations are gettingobsolete, so they may as well get deprecated entirely
Refactor config  throw away 'testsanity'Get rid of the testsanity option  Since we no longer have stringbased configurations, we don't have the problem with miscountingcolons any more
Refactor config  a small cosmetic touchup of ConfigureStart simple, removed some unused variables and change all '<<EOF' to'<<"EOF"'  The latter is because some code colorizers notably, inemacs cannot recognise the here document end marker unless it'squoted and therefore assume the rest of the file is part of the heredocument
Add an engine destructor to eng_cryptodev
Adapt BSD cryptodev engine to opaque EVP_MD_CTX, EVP_CIPHER_CTX, etc
Remove update tagsAlso remove depend/local_depend
Consolidate "make update"Rename 'update' to 'generate'  Rather than recurse, just explicitlycall the three generate targets directly
Handle SSL_shutdown while in init more appropriatelyCalling SSL_shutdown while in init previously gave a "1" response, meaningeverything was successfully closed down even though it wasn't Better isto send our close_notify, but fail when trying to receive oneThe problem with doing a shutdown while in the middle of a handshake isthat once our close_notify is sent we shouldn't really do anything elseincluding process handshake/CCS messages until we've received aclose_notify back from the peer However the peer might send a CCS beforeacting on our close_notify  so we won't be able to read it because we'renot acting on CCS messages!
make EVP_PKEY opaque
Remove the GOST engineThe GOST engine is now out of date and is removed by this commit An upto date GOST engine is now being maintained in an external repositorySee:https://wikiopensslorg/indexphp/Binaries
Fix BSD rpath parameterFor BSD systems, Configure adds a shared_ldflags including a referenceto the Makefile variable LIBRPATH, but since it must be passed down toMakefileshared, care must be taken so the value of LIBRPATH doesn'tget expanded too early, or it ends up giving an empty string
API compat for SSLeay_add_ssl_algorithms
Validate ClientHello session_id field length and send alert on failureRT4080
prf redirection build fixes
Update license year range to 2016Signedoffby: Rich Salz <rsalz@opensslorg>
Support disabling any or all TLS or DTLS versionsSome users want to disable SSL 30/TLS 10/TLS 11, and enable justTLS 12  In the future they might want to disable TLS 12 andenable just TLS 13, This commit makes it possible to disable any or all of the TLS orDTLS protocols  It also considerably simplifies the SSL/TLS tests,by autogenerating the min/max version tests based on the set ofsupported protocols 425 explicitly written out tests got replacedby two loops that generate all 425 tests if all protocols areenabled, fewer otherwise
Add documentation for EVP_PKEY_TLS1_PRF
add TLS1PRF tests
Add TLS1PRF test support to evp_test
use TLS PRFModify libssl to use EVP_PKEY TLS PRF
Add TLS PRF methodAdd EVP_PKEY algorithm for TLS1 PRF
Fix GOST2012NULLGOST12Fix a typo in the definition of the GOST2012NULLGOST12 ciphersuiteRT4213
Drop cached certificate signature validity flagIt seems risky in the context of crosssigned certificates when thesame certificate might have multiple potential issuers  Also rarelyused, since chains in OpenSSL typically only employ selfsignedtrustanchors, whose selfsignatures are not checked, while untrustedcertificates are generally ephemeral
Don't use "grep q", "q" is not POSIX, and fails on Solaris
Add some extra Cygwin targets as aliases for Cygwinx86Cygwin was used for x86 before, so let's keep it around for those whostill use it it make Configure reconf possibleCygwini[3456]86 for those that might generate and pass a target namedirectly to Configure
Adjust the configuration target name from Cygwini686 to Cygwinx86This is to reflect that it's not limited to just i686
Fix configuration system to support different architectures on CygwinThis patch allows to recognize the architectures supported by Cygwinand to choose the right configuration from there  Drop march touse default architecture on 32 bit x86Drop preCygwin13 recognition since it's long gone and there's novalid configuration for this anymoreSignedoffby: Corinna Vinschen <vinschen@redhatcom>
Don't strip object files on CygwinBuilding for the Cygwin distro requires to be able to build debuginfofiles  This in turn requires to build object files without strippingThe stripping is performed by the next step after building which createsthe debuginfo filesSignedoffby: Corinna Vinschen <vinschen@redhatcom>
Use POSIX functions on Cygwin, not Win32 functionSignedoffby: Corinna Vinschen <vinschen@redhatcom>
Fix build break; restore missing target
Fix function declarations
Accessor update; fix API, document one
Remove some old makefile targetsRemove lint, tags, dclean, testsThis is prep for a new makedepend schemeThis is temporary pending unified makefile, and might help it
Add some accessorsAuthor: Remi Gacogne <rgacognegithub@coredumpfr>GH334: Add an OCSP_SINGLERESP_get0_id accessor to the OCSP_CERTID ofa OCSP_SINGLERESP It is possible to do it the other way around usingOCSP_resp_find, but this is more efficient when you have a tree indexedby OCSP_CERTID, like haproxy does This is also RT4251Author: Marek Klein <kleinmrk@gmailcom>GH556: OCSP_resp_get_produced_at accessor to the producedAt of aOCSP_BASICRESPGH555: TS_STATUS_INFO_get_status, TS_STATUS_INFO_get_text andTS_STATUS_INFO_get_failure_info accessors for a TS_STATUS_INFOSignedoffby: Rich Salz <rsalz@opensslorg>
RT4247: Add missing patchMissed the camellia EVP update
The TLSProxy tests can't run if noengine has been configuredMake sure they detect that
fix noengine build
Start a new line after each sentenceending periodThis avoids explicit double spaces between sentences
Make SSL_dane_enable requirement more clearAlso s/s/ssl/ as appropriate in the code exampleSuggested by Claus Assmann
Better invalid SNI name error handlingAlso report an SSL_dane_enable error when the basedomain is aninvalid SNI name  Avoid sideeffects when such a name is validwith X509_VERIFY_PARAM_set1_host, as eg with an empty name, bysetting the SNI name first
Empty SNI names are not validWhile empty inputs to SSL_set1_host clear the reference identifierlist
RT4247: Fix EVP_CIPHER_CTX opaque on sparcVia Rainer Jung
free up gost ciphers
Add lookup_certs for a trusted stack
NGX2040  fix wildcard match on punycode/IDNA DNS names bugfix: should not treat '' as invalid domain substring '' should not be the first letter of a domainSignedoffby: Viktor Dukhovni <viktor@opensslorg>
Fix typo
Update Windows installation instructionsThe windows installation instructions were very out of date Substantialupdate to the text Remove a lot of historical stuff that isn't relevantany more, and merge the win64 and win32 instructions into one file
Rename INSTALLW32 to INSTALLWINAlso remove the INSTALLW64 file Next commit will update INSTALLWIN tocover both
Small fixup, an extra line slipped inThe previous 'Relax the requirements for a debug build' commit hadan extra line of code that shouldn't have been there  This fixes it
Cosmetic polish for lastresort depth 0 check
Avoid the r modifier for s/// perlIt seems that the r modifier for s/// is fairly new  It's reportednot to exist in perl 5101, so it's better to avoid it whenpossible
Fix lastresort depth 0 check when the chain has multiple certificates
Add a noegd option to disable EGDrelated codeThe entropygathering daemon is used only on a small number of machinesProvide a configure knob so that EGD support can be disabled by defaultbut reenabled on those systems that do need it
Make SSL_set_debug deprecated in 11
Always initialize X509_STORE_CTX get_crl pointer
Editorial
In __cwd, make sure the given directory is seen as such and not a fileOn Unixly platforms, this doesn't matter  On VMS, it does
Relax the requirements for a debug buildWe required that a target be named 'debugsomething' or to have atleast one of the configuration items debug_cflags and debug_lflags fordebug to be acceptedHowever, there are targets with no such markings but that will stillhave debugging capabilities  This is particularly true for mk1mfbuilds, where the extra flags for debugging are figured out later onby util/mk1mfpl
RT4232: Extra space in help messageIt turns out that pause calls the undocumented function SSL_set_debugThat just sets flag inside the SSL structure  That flag, despitethe command is never used  So remove the flag, the field, and thefunction
EDH > 1024 bits even at security level 0
Prepare for 110pre3dev
Prepare for 110pre2 release
Change the last copyright year to 2016 in README
VMS open doesn't take O_BINARY, but takes a context descriptionTell open O_BINARY on VMS doesn't make sense, as it's possible touse more precise file attributes  However, if we're still going tofdopen it in binary mode, we must set the fd in binary context
Rename binmode into textmode and use it correctly
Do not use redirection on binary filesOn some platforms, the shell will determine what attributes a filewill have, so while the program might think it's safely outputtingbinary data, it's not always trueFor the sake of the tests, it's therefore safer to use out than touse redirection
Fall back to c_rehash if 'openssl rehash' fails'openssl rehash' isn't implemented on all platforms, and since 'maketest' depends on a rehash of certs/demo being performed, it becomes aneffective block from running tests on any platform but Unix, for themomentIt's better to fall back to c_rehash and let the tests performeverywhere
Call single parent free_comp routine
To avoid possible time_t overflow use X509_time_adj_ex
Fix doublefree bugs in EC group precomputation state
Add a directry spec for mcr if there is noneOn VMS, the command MCR will assume SYS$SYSTEM: when the firstargument lacks a directory spec  So for programs in the currentdirectory, we add [] to tell MCR it is in the current directoryIt's the same as having / at the start of a program on Unix so theshell doesn't start looking along $PATH
Fix verify1 to report failure when verification failsRegenerated expired test certificates, good for the next 100 years
Fix nistp512 typos, should be nistp521Note, this now compiles, but fails tests, so further remediationis required
Add missing ifdef's to fix build break
For stro[ui]max require both C99 and UINTMAX_MAX/INTMAX_MAX
Fix test_ordinalsThis used to work but somewhere along the line it broke and was failing todetect duplicate ordinals  which was the whole point of the test!
Reorder the ordinals in libeaynum
Remove spurious ;
Quick fix of debugging option for mk1mfplutil/mk1mfpl was relying on the platform having the 'debug' prefixfor doing a debug build  Since the setup of targets has changed, thisis no longer true  However, it can look for 'debug' in the commandline options
VMS C doesn't provide intmax_t/uinmax_t, use our own
Add CRYPTO_EX_DATA; remove EC_EXTRA_DATAAdd CRYPTO_EX_DATA add EndC_KEY_[gs]et_method, From Roumen PetrovHad to add various exdata calls to init/copy/free the exdataHad to remove const from some EC functions because exdata isn'tconstcorrect :Also remove EC_EXTRA_DATA and use a union to hold the possibleprecomputed values and an enum to tell which value is in theunion Rich Salz
Remove test_probable_prime_coprime from test/bntestcThis test relies on a private function, which isn't exportedThis test would work better as a unit test in crypto/bn/bn_primec
Simplify the EXIT macrot for VMS
recognise nocryptomdebug
VMS perl doesn't implement fork, so don't run the TLSProxy tests there
Fix DES_LONG breakageFor some strange reason opensslconfh was only defining DES_LONGwhen included via desh, but that's exceedingly fragile as aresult of include guards the include via desh might not actuallyprocess the content againRipped out the nesting constraint, now always define OSSL_DES_LONGif not already defined  Note, this could just be DES_LONG, buttrying to avoid exposing DES_LONG in places where it has never beenseen before, so it is up to desh to actually define DES_LONG asOSSL_DES_LONG
For stroimax need C99 inttypesh
Don't return from main, use EXIT instead
Have the VMS exit code follow POSIX conventionsIt seems like the convention for VMS exit codes is to combine the VMSC facility code 0x35a000 with a recoded exit code as follows:0     > 11255 > 8code + 2We also add 0x10000000, which is the control bit that has DCL notreport the error on the terminal  That's just as well, since it wouldbe quite nonsensical, for example:CWNOMSG, Message number 0035A018We could do all this by using the normal exit function after havingdefined the macro _POSIX_EXIT  Unfortunately, this feature onlyexists in VMS C V71 and up
After EVP_CIPHER turned opaque, e_rc5c needs to include evp_inthWe missed this one because rc5 is disabled by defaultNotified by The Doctor <doctor@doctornl2kabca>
Pipes on VMS do not work well with binary data, use an intermediary fileVMS being a record oriented operating system, it's uncertain how the'pipe' passes binary data from one process to another  Experienceshows that we get in trouble, and it's probably due to the pipe initself being opened in text mode variable length recordsIt's safer to pass data via an intermediary file instead
Fix test/recipes/80test_cat to work on VMSVMS uses a variant of opensslcnf named opensslvmscnfThere's a Perl on VMS mystery where a open pipe will not SIGPIPE whenthe child process exits, which means that a loop sending "y\n" to itwill never stop  Adding a counter helps fix this set to 10, we knowthat none of the CApl commands will require more
VMS will downcase all command parameters unless they're quoted
Fix missing casts for c++
Maximize time_t when intmax_t is availableWell, I'm not actually changing time_t, just changing how time_tvalued opt values are converted from string to time_t
Fix typo in error message
Move Makefiles to MakefileinCreate Makefile's from MakefileinRename Makefileorg to MakefileinRename Makefiles to MakefileinAddress review feedback from Viktor and Richard
STACK_OFSSL_COMP is a public type
fix jpaketest and correct comment
Correct a small typo in CHANGES
Add notes in CHANGES and NEWS
Remove unused internal macrosThe M_EVP_ macros related to EVP_CIPHER / EVP_CIPHER_CTX are notpublic, and are unused
make update
Document the new EVP_CIPHER and EVP_CIPHER_CTX functionality
Add back deprecated functions in macro form
Adapt all EVP_CIPHER users for it becoming opaque
EVP_CIPHER_CTX_new_cipher_data was a temporary measure, not needed any more
Adapt all engines that need it to opaque EVP_CIPHER
Adapt builtin cipher implementations to opaque EVP_CIPHERThey all stop including evp_loclh, so we also take care of theiradaptation to opaque EVP_CIPHER_CTX, as was promised in an earliercommit
Adapt the internal EVP routines to opaque EVP_CIPHER
Make EVP_CIPHER opaque and add creator/destructor/accessor/writer functionsWe follow the method used for EVP_MDAlso, move all the internal EVP_CIPHER building macros from evp_loclhto evp_inth  This will benefit our builtin EVP_CIPHERs
Remove EVP_CIPHER_CTX_flags, it's only confusingEVP_CIPHER_CTX_flags was returning the flags of its associatedEVP_CIPHER  However, EVP_CIPHER_CTX has flags of its own, so thisfunction is quite confusing and therefore error prone
Adapt all EVP_CIPHER_CTX users for it becoming opaque
Adapt cipher implementations to opaque EVP_CIPHER_CTXNote: there's a larger number of implementations in crypto/evp/ thataren't affected because they include evp_loclh  They will be handledin a separate commit
Adapt the internal EVP routines to opaque EVP_CIPHER_CTX
Add accessors and writers for EVP_CIPHER_CTXNew functions: EVP_CIPHER_CTX_encrypting EVP_CIPHER_CTX_iv EVP_CIPHER_CTX_iv_noconst EVP_CIPHER_CTX_original_iv EVP_CIPHER_CTX_buf_noconst EVP_CIPHER_CTX_num EVP_CIPHER_CTX_set_num EVP_CIPHER_CTX_cipher_data EVP_CIPHER_CTX_new_cipher_dataNote that the accessors / writers for iv, buf and num may go away, asthose rather belong in the implementation's own structure cipher_datawhen the implementation would affect them that would be the case whenthey are flagged EVP_CIPH_CUSTOM_IV or EVP_CIPH_FLAG_CUSTOM_CIPHER
Make EVP_CIPHER_CTX opaque and renew the creator / destructor functionsFollowing the method used for EVP_MD_CTX and HMAC_CTX,EVP_CIPHER_CTX_init and EVP_CIPHER_CTX_cleanup are joined togetherinto one function, EVP_CIPHER_CTX_reset, with EVP_CIPHER_CTX_init keptas an aliasEVP_CIPHER_CTX_cleanup fills no purpose of its own any more and istherefore removed
RT4227: Rangecheck in appsImplement rangechecking in all counts in apps  Turns out only a coupleof cases were missing  And make the rangechecking code more strictReplace almost all opt_ulong calls with opt_long
Yet another make update
Make sure to have both upper and mixed case symbols in SYMBOL_VECTORIt was assumed that the syntax FOO/FooPROCEDURE would create both anupper case and mixed case symbol in the GST  Not so, it requireshaving both FOO/FooPROCEDURE to create the upper case alias andFooPROCEDURE to create the mixed case slotWe make sure that any symbol always occupies two slots even thosethat don't exist by filling up with SPARE when necessary  That willassure that any changes will still have the same symbols in the sameslots no matter what save a complete rewrite of the ordinals files
Use SPARE instead of PRIVATE_PROCEDURE to reserve unused SYMBOL_VECTOR slotsIt was assumed that a dummy with the type PRIVATE_PROCEDURE wouldsimply occupy a slot but otherwise ignore the symbol  Not so, butthere is SPARE for that purpose
The limit per SYMBOL_VECTOR isn't the amount of symbols, it's the line length
VMS INDENTIFICATION should only have the version number
GH528: "cipher v" output is confusingFix the docs, and refactor some common code
Have mkdefpl use case sensitive symbols for shareable symbol vector
Function pop_info returned a dangling pointerSignedoffby: Kurt Roeckx <kurt@roeckxbe>
update ordinals
Use ossl_inline and DEFINE_LHASH_OF
Remove mkstackpl: it is no longer needed
Add lh_doall_arg inlining
Add lh_doall inlining
Add lh_new inlining
Inline LHASH_OFMake LHASH_OF use static inline functionsAdd new lh_get_down_load and lh_set_down_load functions and theirtypesafe inline equivalentsMake lh_error a function instead of a macro
GH540: add casts to safestackhSignedoffby: Rich Salz <rsalz@opensslorg>
Fix jpaketest compilation error
Only run DANE tests when EC is supportedSince danetest is to test DANE rather than specific algorithms, it'sacceptable to require EC when testing it
Make SSL{_CTX,}_{get,set,clear}_options functionsThese now take and return unsigned long, and get is constifiedUpdated related documentation and util/ssleaynum
Adjust $default_depflags to changes in ConfigureWe use $default_depflags to check if a 'make depend' is needed afterconfiguring, so it needs to be kept up to date
Fix NSS format session outputCommit 189ae368d91 RT ticket 3352 provided the capability to outputsession key data in NSS format The big apps cleanup broke that capabilityThis commit restores itRT4201
Update leak test to check return values
Add memory leak return valueMake CRYPTO_mem_leaks and CRYPTO_mem_leaks_fp return a status valueUpdate documentation Don't abort if there are leaks
Enable/disable cryptomdebug just like other featuresAlso always abort on leak failure
Disable some algorithms by default
Regenerate SSL record/statem error strings
fix shadow warning
File is about s_time, not s_client
Allow disabling the min and max version
Futureproof deprecated declartion parsingSupport twodigest major/minor/micro numbers and die when the inputfails to parse
RT41897: Add an CRYPTO_secure_actual_sizeThis is already documented, I just forgot to include the code :
Fix c++ compilationFixes https://githubcom/openssl/openssl/issues/532Signedoffby: Rich Salz <rsalz@opensslorg>
Adds missing type castsThis fixes https://githubcom/openssl/openssl/issues/534Signedoffby: Rich Salz <rsalz@opensslorg>
Adds cryptomdebug as a valid optionAdds cryptomdebug as a valid option Fixes https://githubcom/openssl/openssl/issues/537Signedoffby: Rich Salz <rsalz@opensslorg>
Fix build failure on WindowsFixes https://githubcom/openssl/openssl/issues/530Signedoffby: Rich Salz <rsalz@opensslorg>
update ordinals
Add DEPRECATEDIN support
Correct header defines
remove hard coded algorithms
Recognise disabled algorithms automatically
Fix no CRYPTO_MDEBUG build windowsIn order for mkdep to find ifdef'd functions, they must bewrapped in the header file withifndef OPENSSL_NO_So do that for various CRYPTO_mem_debug things
Fixup actually update danetestc
Another portability fix
Update comment as bn_dup_expand is gone
Simplify deprecated declaration exception
Portability fix for apps/s_clientcMake some local variables and a table of them be static
DANE CHANGES
Fix some typos in comments
Backwardscompatibility subject to OPENSSL_API_COMPATProvide backwardscompatiblity for functions, macros and includefiles if OPENSSL_API_COMPAT is either not defined or defined lessthan the version number of the release in which the feature wasdeprecated
DANE s_client support
Remove all remaining traces if PEM_Seal
Minor test update Remove extraneous test/Makefileorig Use basedomain instead of argv[1] in test/danetestc
Fix another build break for nomemdebug
Fix buildbreak; 'make update'Commit bbd86bf5424a611cb6b77a3a17fc522931c4dcb8 broke certain buildsCommit 0674427f71ca050e3c61a7ec9dc71b208c3b39f5 missing 'make update'
mem functions cleanupOnly two macros CRYPTO_MDEBUG and CRYPTO_MDEBUG_ABORT to control thisIf CRYPTO_MDEBUG is not set, ifdef out the whole debug machineryThanks to Jakob Bohm for the suggestion!Make the "change wrapper functions" be the only paradigmWrote documentation!Format the 'set func' functions so their paramlists are legibleFormat some multiline commentsRemove ability to get/set the "memory debug" functions at runtmeRemove MemCheck_ and CRYPTO_malloc_debug_init macrosAdd CRYPTO_mem_debugint flag functionAdd test/memleaktestRename CRYPTO_malloc_init to OPENSSL_malloc_init; remove needless calls
Remove the old VMS linker option file creator for shlibs
Enhance util/mkdefpl to provide a VMS linker option file for shlibs
Remove crypto/pem/pem_sealcIt's functionality appears unused  If we're wrong, we will revert
DANE support for X509_verify_cert
use more descriptive name DEFINE_STACK_OF_CONST
Only declare stacks in headersDon't define stacks in C source files: it causes warningsabout unused functions in some compilers
Rename DECLARESTACK_OF to DEFINESTACK_OFApplications wishing to include their own stacks now just need to includeDEFINE_STACK_OFfooin a header file
remove unused PREDECLARE
Fix declarations and constification for inline stack
Change STACK_OF to use inline functionsChange DECLARE_STACK_OF into inline functions This avoids the need forauto generated mkstackpl macros and now handles const properly
DANE make update
DANE documentation typosReportedby: Claus Assmann
Remove more rest? of FIPS build stuff
Remove some unused perl scripts
DANE support structures, constructructors and accessorsAlso tweak some of the code in demos/bio, to enable interactivetesting of BIO_s_accept's use of SSL_dup  Changed the sconnectclient to authenticate the server, which now exercises the newSSL_set1_host function
Fix X509_STORE_CTX_cleanup
Drop incorrect id  1 case from X509_check_trust
X509_verify_cert cleanup
Cleanup of verify1 failure output
Instead of a local hack, implement SIZE_MAX in numbersh if it's missing
Fix a possible memleakIf there's a failure allocating md_data, the destination pctx will havea shared pointer with the source EVP_MD_CTX, which will lead to problemswhen either the source or the destination is freed
Protocol version selection and negotiation rewriteThe protocol selection code is now consolidated in a few consecutiveshort functions in a single file and is table driven  Protocolspecificconstraints that influence negotiation are moved into the flagsfield of the method structure  The same protocol version constraintsare now applied in all code paths  It is now much easier to addnew protocol versions without reworking the protocol selectionlogicIn the presence of "holes" in the list of enabled client protocolswe no longer select client protocols below the hole based on asubset of the constraints and then fail shortly after when it isfound that these don't meet the remaining constraints suiteb, FIPS,security level,   Ideally, with the new min/max controls userswill be less likely to create "holes" in the first place
Refine and rewrap Min/Max protocol docs
Add support for minimum and maximum protocol version
Fix nodh
remove invalid free
Use X509_get0_pubkey where appropriate
Update to SHA256 for TSA signing digest
Fix faulty check in the VMS version of opt_progname
Remove the ifndef OPENSSL_SYS_VMS around SSL_add_dir_cert_subjects_to_stackIt served a purpose, but not any more
Correct missing prototype
SIZE_MAX doesn't exist everywhere, supply an alternativeSIZE_MAX is a great macro, and does unfortunately not exist everywhereSince we check against half of it, using bitwise shift to calculate thevalue of half SIZE_MAX should be safe enough
Fix some missing or faulty header file inclusions
Check for missing DSA parametersIf DSA parameters are absent return 1 for unknown in DSA_security_bitsIf parameters are absent when a certificate is set in an SSL/SSL_CTXstructure this will reject the certificate by default This will cause DSAcertificates which omit parameters to be rejected but that is never ?done in practiceThanks to Brian 'geeknik' Carpenter for reporting this issue
Convert RSA encrypt to use EVP_PKEY
Prefer ReuseAddr over Reuse, with IO::Socket::INETReuse is deprecated and ReuseAddr is prefered, according to documentation
Fix noengine
RT4202: Update rt URL's
make a "missed make update" update
Increase the max size limit for a CertificateRequest messagePrevious versions of OpenSSL had the max size limit for a CertificateRequestmessage as |s>max_cert_list| Previously master had it to beSSL3_RT_MAX_PLAIN_LENGTH However these messages can get quite long if aserver is configured with a long list of acceptable CA names Thereforethe size limit has been increased to be consistent with previous versionsRT4198
Simplify calling of the OCSP callbackMove all calls of the OCSP callback into one place, rather than repeating itin two different places
Add some documentation for the OCSP callback functionsDescribe the usage of the OCSP callback functions on both the client andthe server side
Ensure we don't call the OCSP callback if resuming a sessionIt makes no sense to call the OCSP status callback if we are resuming asession because no certificates will be sent
Fix error when server does not send CertificateStatus messageIf a server sends the status_request extension then it may chooseto send the CertificateStatus message However this is optionalWe were treating it as mandatory and the connection was failingThanks to BoringSSL for reporting this issueRT4120
Add test for missing CertificateStatus messageIf the client sends a status_request extension in the ClientHelloand the server responds with a status_request extension in theServerHello then normally the server will also later send aCertificateStatus message However this message is optional evenif the extensions were sent This adds a test to ensure that ifthe extensions are sent then we can still omit the message
fix noec
Server side EVP_PKEY DH support
utility function
EVP_PKEY DH client support
Always generate DH keys for ephemeral DH cipher suites
The functions take a SSL , not a SSL_CTX Signedoffby: Kurt Roeckx <kurt@roeckxbe>
redundant redeclaration of 'OPENSSL_strlcpy'Signedoffby: Kurt Roeckx <kurt@roeckxbe>
__STDC_VERSION__ is not defined for c89 compilersSignedoffby: Kurt Roeckx <kurt@roeckxbe>
remove duplicates in util/libeaynumSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Remove SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER and SSL_OP_TLS_D5_BUG supportSuggested by David Benjamin
Avoid using a dangling pointer when removing the last itemWhen it's the last item that is removed int_thread_hash  hash and we wouldstill call int_thread_release&hash while hash is already freed  Soint_thread_release would compare that dangling pointer to NULL which isundefined behaviour  Instead do already what int_thread_release would do,and make the call do nothing instead
Memory leak in state machine in error pathWhen EC is disabled, and an error occurs in ssl_generate_master_secretor RAND_bytes, the error path does not free rsa_decryptRT4197
Refactor DTLS cookie generation and verificationDTLS cookie generation and verification were exact copies of eachother save the last few lines  This refactors them to avoid codecopying
Fix inline build failureAfter the recent change to use ossl_inline, builds were failing on someplatforms due to a missing usage of "inline"
Add ossl_inlineAdd macro ossl_inline for use in public headers where a portable inlineis required Change existing inline to use ossl_inline
add unref option to mkerrpl
In mkerrpl look in directories under ssl/
remove unused error code
make update
unload modules in ssltest
make errors
SSL configuration module docs
Demo server using SSL_CTX_config
Add ssl configuration support to s_server and s_client
Load module in SSL_library_init
Add ssl_mcnfc to Makefile
SSL library configuration moduleThis adds support for SSL/TLS configuration using configuration modulesSets of command value pairs are store and can be replayed through anSSL_CTX or SSL structure using SSL_CTX_config or SSL_config
Cleanup CRYPTO_{push,pop}_infoRename to OPENSSL_mem_debug_{push,pop}Remove simple calls; keep only calls used in recursive functionsEnsure we always push, to simplify so that we can always pop
Rename _realloc_clean to _clear_reallocJust like _clear_free routines  Previously undocumented, useda halfdozen times within OpenSSL source
Also change the nondebug versions to use size_t
Fix memory leak in DSA redo caseFound by clang scanbuildSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Configure: refine 'reconf' logic
bn/asm/bnc64xplusasm: update commentary
sha/asm/sha256armv4pl: one of "universal" flags combination didn't compileand unify table address calculation in ARMv8 code path
Fix URLs mangled by reformatSome URLs in the source code ended up getting mangled by indent This fixesit Based on a patch supplied by Arnaud Lacombe <al@aerilonca>
Fix the etags action line, as etags doesn't take R
Remove fixed DH ciphersuitesRemove all fixed DH ciphersuites and associated logic
delete unused context
Remove some L<asdf|asdf> which crept back in
Remove err and prime demo'sERR is not really a public facility; remove the demoprime shows how to generate a prime  See apps
Remove the "eay" cfilestyle indicatorsSince we don't use the eay style any more, there's no point tryint totell emacs to use it
Add SSL_CIPHER_description for Chacha20/Poly1305SSL_CIPHER_description was returning "unknown" for the encryptionin the new ChaCha20/Poly1305 TLS ciphersuitesRT4183
Modify the lower level memory allocation routines to take size_tWe've been using int for the size for a long time, it's about time
memcleanup, cont'dRemove LEVITTE_DEBUG_MEMRemove {OPENSSL,CRYPTO}_remalloc
Rename sec_mem to mem_sec, like other files
Fix typo
Provide better "make depend" warning
Fix nodgram
Rename some BUF_xxx to OPENSSL_xxxRename BUF_{strdup,strlcat,strlcpy,memdup,strndup,strnlen}to OPENSSL_{strdup,strlcat,strlcpy,memdup,strndup,strnlen}Add define's for the old namesAdd CRYPTO_{memdup,strndup}, called by OPENSSL_{memdup,strndup} macros
fix for noec
make update
Use EVP_PKEY for client side EC
Use EVP_PKEY for server EC
Add ECDH/DH utility functions
remove unnecessary key copy
Constify EC_KEY in ECDH_compute_key
Remove ECDH client auth codeRemove incomplete nonfunctional ECDH client authentication code
Remove SSL_OP_SINGLE_ECDH_USE codeSince auto ecdh is now always used SSL_OP_SINGLE_ECDH_USE isredundant Simplify associated code
Use EC_KEY_key2buf and EC_oct2key in libssl
New EC functionsNew functions EC_POINT_point2buf and EC_KEY_key2buf which encodea point and allocate a buffer in one callNew function EC_KEY_oct2key which sets public key in an EC_KEYstructure from an encoded point
Fix build on SolarisSolaris builds were failing during async compilation because the o filescreated from compiling the corresponding c files held in async/arch wereending up in the top level async directory Consequently the link failsbecause it can't find the o filesThanks to Richard Levitte for pointing me in the right direction on this
Fix updating via mkdefplThe previous commit introduced a new file format for ssleaynum andlibeaynum, ie the introduction of a version field Therefore the updatecapability in mkdefpl needs updating to take account of the new format
Don't export internal symbolsOn Linux when creating the so file we were exporting all symbols We shouldonly be exporting public symbols This commit fixes the issue It is onlyapplicable to linux currently although the same technique may work for otherplatforms eg Solaris should work the same wayThis also adds symbol version information to our exported symbols
Better splitting regexp for test_ordinals
Remove GMP engine
Fix s_server problem with noecs_server was trying to set the ECDH curve when noec was defined This alsohighlighted the fact that the no_ecdhe option to s_server is broken, anddoesn't make any sense any more ECDHE is on by default and the only way itcan be disabled is through the cipherstring Therefore this commit removesthe option
Fix nopsk compile failure
Fix compile failure with nosrp
Update EVP_PKEY documentationAdd EVP_PKEY_up_ref documentation and fix various typos
make update
New function X509_get0_pubkey
Add EVP_PKEY_get0_ functions
Extend EVP_PKEY_copy_parametersMake EVP_PKEY_copy_parameters work if the destination has no typeeg if obtained from EVP_PKEY_new or the underlying key is NULLThis is useful where we want to copy the parameters from an existingkey to a new key
Fix a  0 mod 1  0 for real this timeCommit 2b0180c37fa6ffc48ee40caa831ca398b828e680 attempted to do this butonly hit one of many BN_mod_exp codepaths Fix remaining variants and adda test for each methodThanks to Hanno Boeck for reporting this issue
crpyto/ppccpuidpl: add FPU probe and fix OPENSSL_rdtsc
crypto/ppccapc: add SIGILLfree processor capability detection code
add malloc fail check & fix memory leakSignedoffby: Hongze Zhu <hongzezhu@gmailcom>
Fix erroneous SO suffix in darwin64debugtest64clang target
Fix typoSignedoffby: Rich Salz <rsalz@opensslorg>
Fix option value parsing in crl2pkcs7 certfile
Avoid erroneous "assertprivate" failuresWhen processing a public key input via "pubin", "private" wassometimes erroneously set, or else not set and incorrectly asserted
x86_64 assembly pack: tune clang version detection even furtherRT4171
Configure: add framework for ChaCha and Poly1305 assembly
Configure: 'reconf' to respect CROSS_COMPILE and CC
Don't use EC when noec
Remove no longer existant structure member and direct references to EVP_MD_CTX internals
Fix incorrect uninitialised variable warning
fix warning
remove ancient SSLeay bug workaround
Allow ChaCha20Poly1305 in DTLSGCM and CCM are modes of operation for block ciphers only ChaCha20Poly1305operates in neither of them but it is AEAD This change also enables futureAEAD ciphers to be available for use with DTLSSignedoffby: Rich Salz <rsalz@akamaicom>
Revert "Allow ChaCha20Poly1305 in DTLS"This reverts commit 777f482d993322d69025014bf1b99c270c978fc0Author credit missing  Reverting this and recommitting withan Author line
Use SHA256 not MD5 as default digestDocumentation update was in the MR but not the commit  Oops
Support ccache
Fix compile failure with nothreadsThe async code was causing a compile failure if nothreads was used
Add extension utility documentation
add X509_up_ref documentation
extension documentation
Use OPENSSL_NO_DTLS instead of OPENSSL_NO_DTLS1
Fix compile failureFix compile failure introduced by commit 94d61512360c due to a typo
evp/e_chacha20_poly1305c: TLS interop fixesThanks to: David Benjamin of Chromuim
Configurations/10mainconf: fix typos in mingw/cygwin configs
Allow ChaCha20Poly1305 in DTLSGCM and CCM are modes of operation for block ciphers only ChaCha20Poly1305operates in neither of them but it is AEAD This change also enables futureAEAD ciphers to be available for use with DTLSSignedoffby: Rich Salz <rsalz@akamaicom>
Make nodh work, plus other nodh problems found by Richard
make update, missed file
Use SHA256 not MD5 as default digest
make update
Adapt EVP tests to the opaque EVP_ENCODE_CTX
Adapt PEM routines to the opaque EVP_ENCODE_CTX
Adapt BIO_f_base64 to the opaque EVP_ENCODE_CTX
Make EVP_ENCODE_CTX opaque
Fix OCB linkThe link to the OCB patent pdf changed, so the link in CHANGES needs to beupdated
Support the TLS Feature aka Must Staple X509v3 extension RFC7633Signedoffby: Kurt Roeckx <kurt@roeckxbe>
Restore full support for EVP_CTX_create etc
Prepare for 110pre2dev
Prepare for 110pre1 release
OpenSSL 110 is now in pre release
make update
Don't run rehash as part of building the openssl app
Update CHANGES and NEWS for alpha releaseMisc updates to the CHANGES and NEWS files ready for the alpha release
Ensure |rwstate| is set correctly on BIO_flushA BIO_flush call in the DTLS code was not correctly setting the |rwstate|variable to SSL_WRITING This means that SSL_get_error will not returnSSL_ERROR_WANT_WRITE in the event of an IO retry
Fix DTLS handshake fragment retriesIf using DTLS and NBIO then if a second or subsequent handshake messagefragment hits a retry, then the retry attempt uses the wrong fragmentoffset value This commit restores the fragment offset from the lastattempt
evp/e_aesc: wire hardwareassisted block function to OCB
x86[_64] assembly pack: add optimized AESNI OCB subroutines
Fix mkfiles for new directoriesAdd the new chacha and poly1305 directories to mkfilespl to enable properbuilding on windows
Add a return value checkIf the call to OBJ_find_sigid_by_algs fails to find the relevant NID thenwe should set the NID to NID_undef
modes/ocb128c: fix overstep
make update
Configure: make nochacha and nopoly1305 work
Wire ChaCha20Poly1305 to TLS
evp/c_allcc: wire ChaCha20Poly1305 and add tests
test/evp_testc: allow generic AEAD ciphers to be tested
crypto/evp: add e_chacha20_poly1305c
evp/evp_encc: allow EVP_CIPHERctx_size to be 0In such case it would be EVP_CIPHERcleanup's reponsibility to wipeEVP_CIPHEX_CTXcipher_data
Add ChaCha20Poly1305 and ChaCha20 NIDs
Add reference ChaCha20 and Poly1305 implementations
make default_ec_key_meth static
remove deleted directories from mkfilespl
Fix warnings about unused variables when EC is disabled
Move the definitions of EC_KEY and EC_KEY_METHOD to ossl_typhMost of all, that has inclusion of openssl/engineh work even if EChas been disabled  This is the same as has been done for DH, DSA, RSAand more
add CHANGES and NEWS entryTodo: update documentation
remove ECDSA error line
add compatibility headers
Use NULL comparison
add block comment
set standard EC method in eng_openssl
make update
remove ecdsah header references
EC_KEY_METHOD accessorsSet of accessors to set and get each field
make errors
Top level ECDSA sign/verify redirection
Engine EC_KEY_METHOD functionalityRename ENGINE _EC_KEY functions to _ECAdd support for EC_KEY_METHOD in ENGINE_set_default et al Copyec_meth
remove ecdsa from mkdefpl
remove ECDSA_METHOD from ENGINE
remove ECDSA_METHOD typedef
add missing prototypes
remove ecdsah header
add ECDSA_size to ec_asn1c
remove errors
remove crypto/ecdsa
add sign/verify methods
return errors for unsupported operations
Remove reference to ECDSA_OpenSSL
Move and adapt ECDSA sign and verify functions
modify ecdsatest to use accessor
Add ECDSA_SIG accessor
move ECDSA_SIG prototypes
make errors
extend EC_KEY_METHOD for signing support
adapt ossl_ecdsac to crypto/ec
move ECDSA_SIG definition
Move ECDSA implementation to crypto/ec
Move ECDSA_SIG ASN1 to crypto/ec
Add set methodsAdd set_group, set_public and set_private methods An EC_KEY_METHOD can usethese to perform any appropriate operation when the key components are set,such as caching data in some more convenient ENGINE specific format orreturning an error if the parameters are invalid or the operation isnot supported
EC_KEY_METHOD copy support
EC_KEY_METHOD init and finish support
ENGINE fixes
remove ECDH from mkdefpl
remove ECDH_METHOD typedef
remove ecdhh headerRemove redundant ecdhh header and any references to it
remove ECDH error loading
Remove crypto/ecdh update Makefileorg
remove ECDH_METHOD from ENGINE
make errors
Add compute key support to EC_KEY_METHOD
Adapt ecdh_compute_keyRename ecdh_compute_key into ossl_ecdh_compute_key and modify itto use EC error codes Remove superfluous old ECDH functions
move ECDH implementation to crypto/ec
Move ECDH_KDF_X9_62 to crypto/ec
EC_KEY_METHOD keygen supportAdd keygen to EC_KEY_METHOD Redirect EC_KEY_generate_key throughmethod and set the current EC key generation function as the default
make errors
Support for EC_KEY_METHODAdd EC_KEY_METHOD This is part of the EC revision and will make EC behavemore like other algorithms Specifically:EC_KEY_METHOD is part of EC_KEYIt is part of ENGINEDefault or key specific implementations can be provided to redirect someor all operations
Link library for backtrace on BSD
NEWS: Add a bit of precision regarding removal of cipher suitesSuggested by Benjamin Kaduk <bkaduk@akamaicom>
Additional NEWS
Refer to website for acknowledgements
Not all 'find's know xtype, use type instead
Adapt the OS X build to use the OS X tarAs part of this, move release creation to a script to be called fromtravisyml  That makes it much easier to test outside of travis
Make it possible to affect the way dists are madeIntroducing DISTTARVARS to propagate changed variables down to thetarmaking target
Update NEWS
Extended master secret test script
Add extms extension
TLSProxy updateAdd function to delete extensions and fix ClientHello repacking
update errors
Extended master secret fixes and checksAdd new flag TLS1_FLAGS_RECEIVED_EXTMS which is set when the peer sendsthe extended master secret extensionServer now sends extms if and only if the client sent extmsCheck consistency of extms extension when resuming sessions following wherepractical RFC7627
Fix merge errorCommit 6140f0365 added some new ctrl constants However due to amerge error one of these values was duplicated with an existingvalue
Add some new cipher ctrl constantsThese are needed for GOST
Cleanup the EVP_MD_CTX before exit rather than after
Remove double semi ;When in the middle of declarations, some C compilers will complain
Remove typedef of HMAC_CTX from crypto/hmac/hmac_lclhThis is already defined in include/openssl/ossl_typh
Fix clang complaints about uninitialised variables
Change tar owner and group to just 0It seems like some tar versions don't like the name:id form forowner and group  The closest known anonymous user being 0 root,that seems to be the most appropriate user/group to assign ownershipto  It matters very little when unpacking either way
Add an entry in CHANGES
Document EVP_MD constructors, destructors and manipulators
Document the HMAC changes
Document the EVP_MD_CTX changes
make update
Cleanup: fix all sources that used HMAC_CTX_init
Cleanup: rename HMAC_CTX_init to HMAC_CTX_reset
Cleanup: support EVP_MD_CTX_create|init|destroy for deprecated use
Cleanup: fix all sources that used EVP_MD_CTX_create|init|destroy
Cleanup: rename EVP_MD_CTX_create|init|destroy to EVP_MD_CTX_new|reset|freeLooking over names, it seems like we usually use names ending with_new and _free as object constructors and destructors  Also, sinceEVP_MD_CTX_init is now used to reset a EVP_MD_CTX, it might as well benamed accordingly
Cleanup: Remove M_EVP_MD_ macrosThese macros were only meant for crypto/evp, and are now entirelyunused
Adapt the rest of the source to the removal of EVP_MD_CTX|HMAC_CTX_cleanup
Remove HMAC_CTX_cleanup and combine its functionality into EVP_MD_CTX_initThis follows the same idea as the combination of EVP_MD_CTX_cleanupand EVP_MD_CTX_init into one function
Remove EVP_MD_CTX_cleanup and put its functionality into EVP_MD_CTX_initThe idea is that with EVP_MD_CTX_create and EVP_MD_CTX_destroy,EVP_MD_CTX_cleanup and EVP_MD_CTX_init is not used the same as beforeInstead, we need a single function that can be used to reinitialise anexisting EVP_MD_CTX that's been created with EVP_MD_CTX_createpreviously  Combining EVP_MD_CTX_cleanup and EVP_MD_CTX_init intothat one function is the answer
Adapt the rest of the source to the opaque HMAC_CTX
Make the definition of HMAC_CTX opaqueThis moves the definition to crypto/hmac/hmac_lclh  Constructor anddestructor added, and the typedef moved to include/openssl/ossl_typh
Add inclusion of internal/evp_inth to all crypto/ files that need itThese are the files that add new EVP_MDs
Adapt all engines that add new EVP_MDs
Have the few apps that accessed EVP_MD directly use accessors instead
Make the definition of EVP_MD opaqueThis moves the definition to crypto/include/internal/evp_inth anddefines all the necessary method creators, destructors, writers andaccessors  The name standard for the latter is inspired from thecorresponding functions to manipulate UI methods
Adjust all accesses to EVP_MD_CTX to use accessor functions
Document the changed HMAC API
Adapt HMAC to the EVP_MD_CTX changesThis change required some special treatment, as HMAC is intertwinedwith EVP_MD  For now, all local HMAC_CTX variables MUST beinitialised with HMAC_CTX_EMPTY, or whatever happens to be on thestack will be mistaken for actual pointers to EVP_MD_CTX  This willchange as soon as HMAC_CTX becomes opaqueAlso, since HMAC_CTX_init can fail now, its return type changes fromvoid to int, and it will return 0 on failure, 1 on success
Have other crypto/evp files include evp_loclhNote: this does not include the files in crypto/evp that are justinstanciations of EVP_MD
Make the definition of EVP_MD_CTX opaqueThis moves the definitionto crypto/evp/evp_loclh, along with a fewassociated accessor macros  A few accessor/writer functions added
Do not add symlinks in the source release
In travis, build from a "source release" rather than from the build tree
Small changes to creating distsMake TARFILE include / instead of having that hard coded all over the placeWhen transforming file names in TAR_COMMAND, use $NAME instead of openssl$VERSION
Fix and update versions in CHANGES and NEWS
ARMv4 assembly pack: allow Thumb2 even in iOS build,and engage it in most modules
Fix typo and improve a bit of text
Really disable 56bit singleDES ciphers
Remove support for all 40 and 56 bit ciphers
Remove SSL_{CTX_}set_ecdh_auto and always enable ECDH
Make SSL_{CTX}_set_tmp_ecdh call SSL_{CTX_}set1_curvesSSL_{CTX}_set_tmp_ecdh allows to set 1 EC curve and then tries to use it  Onthe other hand SSL_{CTX_}set1_curves allows you to set a list of curves, butonly when SSL_{CTX_}set_ecdh_auto was called to turn it on
Remove support for SSL_{CTX_}set_tmp_ecdh_callbackThis only gets used to set a specific curve without actually checking that thepeer supports it or not and can therefor result in handshake failures that canbe avoided by selecting a different cipher
Fix EAP FAST in the new state machineThe new state machine code missed an allowed transition when resuming asession via EAP FAST This commits adds the missing check for thetransition
Revert unnecessary SSL_CIPHER_get_bits API change
Run test/run_testspl directly in the test_ordinals targetRunning 'make TESTtest_ordinals test' starts the whole build process,which wasn't desired for this target  Instead, we take a shortcut
bn/asm/x86_64mont5pl: fix carry propagating bug CVE20153193
perlasm/ppcxlatepl: comply with ABIs that specify vrsave as reservedRT4162
modes/ocb128c: fix sanitizer warning
Fix /Configure reconf'/Configure reconf' hasn't been working for a while, because a perllable needs to be immediately followed by a block
Remove RSA_FLAG_SIGN_VER flagRemove RSA_FLAG_SIGN_VER: this was origininally used to retain binarycompatibility after RSA_METHOD was extended to include rsa_sign andrsa_verify fields It is no longer needed
Move the backtrace memleak options to a separate variableThe contents of this variable $memleak_devteam_backtrace is added to$cflags unless we build for a platform we know doesn't support gcc'srdynamic och backtrace and friends
make update
Remove legacy sign/verify from EVP_MDRemove sign/verify and required_pkey_type fields of EVP_MD: these are alegacy from when digests were linked to public key types All signing isnow handled by the corresponding EVP_PKEY_METHODOnly allow supported digest types in RSA EVP_PKEY_METHOD: other algorithmsalready block unsupported typesRemove now obsolete EVP_dss1 and EVP_ecdsa
Run test_ordinals after updateCatch a common 'make update' failure: conflicting ordinals
_BSD_SOURCE is deprecated, use _DEFAULT_SOURCE insteadThe feature_test_macros7 manual tells us that _BSD_SOURCE isdeprecated since glibc 220 and that the compiler will warn about itbeing used, unless _DEFAULT_SOURCE is defined as well
Add backtrace to memory leak outputThis is an option for builds with gcc and strictwarnings
crypto/sparcv9capc: add SIGILLfree feature detection for Solaris
modes/ocb128c: split fixed block xors to aligned and misalignedMain goal was to improve performance on RISC platforms, eg 10was measured on MIPS, POWER8
modes/ocb128c: ocb_lookup_l to allow noncontiguous lookupand CRYPTO_ocb128_encrypt to handle inout
typo fix on function
ex_data part 2: doc fixes and CRYPTO_free_ex_indexAdd CRYPTO_free_ex_index for shared librariesUnify and complete the documentation for all "ex_data" API's and objectsReplace xxx_get_ex_new_index functions with a macroAdded an exdata testRenamed the ex_data internal datatypes
Remove BN_initRename it to be an internal function bn_init
Remove GOST special case: handled automatically now
Use digest indices for signature algorithmsDon't hard code EVP_sha etc for signature algorithms: use tableindices instead Add SHA224 and SHA512 to tables
For TLS < 12 use default digest for client certificate
Use digest tables for defaults
Correct aes128cbc cipher name
fix function code discrepancy
PRF and handshake hash revisionChange handshake hash array into a single digest context simplifying thehandhake hash code Use EVP_md5_sha1 if needed for handshake hashes inTLS 11 and earlierSimplify PRF code to also use a single digest and treat EVP_md5_sha1as a special caseModify algorithm2 field of ciphers to use a single index value for handshakehash and PRF instead of a bitmap
Updates to GOST2012Various updates following feedback from the recent commit of the newGOST2012 code
Remove X509_VERIFY_PARAM_IDNow that X509_VERIFY_PARAM is opaque X509_VERIFY_PARAM_ID is no longerneeded
Fix a NULL deref in an error pathThe SRP_create_verifier_BN function goes to the |err| label if the |salt|value passed to it is NULL It is then deref'd
Add documentation for BN_with_flagsFollowing on from the previous commit this adds some documentation for theBN_with_flags function which is easy to misuse
Tighten up BN_with_flags usage and avoid a reachable assertThe function rsa_ossl_mod_exp uses the function BN_with_flags to create atemporary copy local_r1 of a BIGNUM r1 with modified flags Thistemporary copy shares some state with the original r1 If the state of r1gets updated then local_r1's state will be stale This was occurring in thefunction so that when local_r1 was freed a call to bn_check_top was madewhich failed an assert due to the stale state To resolve this we must freelocal_r1 immediately after we have finished using it and not wait until theend of the functionThis problem prompted a review of all BN_with_flag usage within thecodebase All other usage appears to be correct, although often notobviously so This commit refactors things to make it much clearer forthese other uses
Remove unused cert_verify_mac code
Configuratons: add DFILIO_H to harmonized Solaris targetsTriggered by RT4144
Remove useless locking codeFollowup to 070c233Signedoffby: Kurt Roeckx <kurt@roeckxbe>
Fix typo: _REENTERANT > _REENTRANTSignedoffby: Kurt Roeckx <kurt@roeckxbe>
mark openssl configuration as loaded at end of OPENSSL_configSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Fix grammar errorsSignedoffby: Kurt Roeckx <kurt@roeckxbe>
ssl3_free: Return if it wasn't createdIf somewhere in SSL_new there is a memory allocation failure, ssl3_free canget called with s>s3 still being NULLPatch also provided by Willy Tarreau <wtarreau@haproxycom>Signedoffby: Kurt Roeckx <kurt@roeckxbe>
Add ctrl for SHA1 and SSLv3Add SSLv3 ctrl to EVP_sha1 this is only needed if SSLv3 clientauthentication is used with DSA/ECDSA
make update
Use EVP_md5_sha1 to process client verify
Use EVP_md5_sha1 to generate client verify
Add EVP_MD_CTX_ctrl function
Add ssl3 ctrl to EVP_md5_sha1Add a ctrl to EVP_md5_sha1 to handle the additional operations neededto handle SSL v3 client authentication and finished message
Remove RSA exception when generating server key exchange
Remove RSA exception when processing server key exchange
Use MD5+SHA1 for default digest if appropriate
Add MD5+SHA1Add digest combining MD5 and SHA1 This is used by RSA signatures forTLS 11 and earlier
Fix uninitialised p error
Limit depth of ASN1 parse printingThanks to Guido Vranken <guidovranken@gmailcom> for reporting this issue
Drop the old perl start magic and replace it with a normal shebangperlrun1 leads the way
Add perl modeline to Configure scriptsEncourages GitHub to perform proper syntax highlighting
"make update" after async merge
Fix a few missed "if !ptr" cleanupsAnd a scalar !x > x0 test
Patch containing TLS implementation for GOST 2012This patch contains the necessary changes to provide GOST 2012ciphersuites in TLS It requires the use of an external GOST 2012 engine
x86_64 assembly pack: tune clang version detectionRT4142
Makefileorg: add LC_ALLC to unify error [and other] messagesRT4138
e_osh: __sun done rightRT 4144
Fix a rebase errorDuring rebasing of the async changes some error codes ended up beingduplicated so that "make errors" fails This removes the duplication
Async error handling and MacOS/X fixesIn the async code for MacOS/X define _XOPEN_SOURCE if not alreadydefined as early as possible  We must do this before includingany header files, because on MacOS/X <stlibh> includes <signalh>which includes <ucontexth>  If we delay defining _XOPEN_SOURCEand include <ucontexth> after various system headers are included,we are very likely to end up with the wrong truncated definitionof ucontext_tAlso, better error handling and some code cleanup in POSIX fibreconstruction and destruction  We make sure that async_fibre_makecontextalways initializes the fibre to a state that can be freedFor all implementations, check for error returns fromasync_fibre_makecontext
Use defined__sun instead of definedsunStrict ISO confirming C compilers only define __sun
Update dasync to use size_t for the sha1 update
Add initial AppVeyor configurationOriginal patch by Frank MorgnerSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Turn B<> into For all functions, consistently use asdf not B<asdf>
Fix "primarility" typoSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Minor correction to commentSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Fix STRICT_ALIGNMENT for whrlpool
Declare cleanse_ctr variable as extern
Add noasm builds to Travis
Fix minor problems found by ubsan
Add Travis builds with undefined behavior sanitizer
add pthread to debugsteve
Good hygiene with size_t output argumentThough the callers check the function return value and ignore thesize_t output argument on failure, it is still often not ideal tostore 1 in size_t on error  That might signal an unduly largebuffer  Instead set the size_t to 0, to indicate no space
Implement windows async thread local variable supportImplements Thread Local Storage in the windows async port This also hassome knock on effects to the posix and null implementations
Convert __thread to pthreads for Thread Local StorageIn theory the pthreads approach for Thread Local Storage should be moreportableThis also changes some APIs in order to accommodate this change Inparticular ASYNC_init_pool is renamed ASYNC_init_thread andASYNC_free_pool is renamed ASYNC_cleanup_thread Also introduced ASYNC_initand ASYNC_cleanup
Simplify async pool handlingA lot of the pool handling code was in the arch specific files, but wasactually boiler plate and the same across the implementations This commitmoves as much code as possible out of the arch specific files
Swap to using proper windows pipesWe were using _pipe to create a pipe on windows This uses the "int" typefor its file descriptor for compatibility However most windows functionsexpect to use a "HANDLE" Probably we could get away with just casting butit seems more robust to use the proper type and main stream windowsfunctions
Fix some style issuesThere were a number of places where the async code did not conform to theOpenSSL coding style
Fix async deadlock problemThe rand code can aquire locks and then attempt crypto operations Thiscan end up in a deadlock if we are using an async engine, because controlreturns back to the user code whilst still holding the lock We need toforce synchronous operation for these sections of code
Add ASYNC_block_pause and ASYNC_unblock_pauseThere are potential deadlock situations that can occur if code executingwithin the context of a job aquires a lock, and then pauses the job Thisadds an ability to temporarily block pauses from occuring whilst performingwork and holding a lock
Remove ASYNC NOEXIST functions from libeaynumDuring development some functions got added and then later taken awaySince these will never appear in a production version there is no reasonfor them to appear in libeaynum flagged as "NOEXIST"
Further OSX deprecated warnings tweakEven with _XOPEN_SOURCE defined OSX still displays warnings thatmakecontext and friends are deprecated This isn't a problem until youtry and build with strictwarnings, and the build fails This changesuppresses the warnings We know they are deprecated but there is noalternative!
Fix bug in async_fibre_makecontext for POSIXasync_fibre_makecontext was initialise the fibre first and then callinggetcontext It should be the other way around because the getcontextcall may overwrite some of the things we just initialised This didn'tcause an issue on Linux and so the problem went unnoticed On OSX itcauses a crash
Rename start_async_job to ssl_start_async_jobMake it clear that this function is ssl specific
Rename some daysnc functions for consistencyFor some reason the dasync sha1 functions did not start with thedasync prefix like all of the other functions do Changed forconsistency
Add clarification to docs on ASYNC_free_poolClarify that you must only call this after all async jobs havecompleted  otherwise you could get memory leaks
Fix compilation error on OSXOSX complains if we don't have _XOPEN_SOURCE defined
Fix clang errorsMake clang build without errors in the async code
Swap to using _longjmp/_setjmp instead of longjmp/setjmp_longjmp/_setjmp do not manipulate the signal mask whilstlongjmp/setjmp may do Online sources suggest this could resultin a significant speed up in the context switching
Fix Linux crashIf config'd without d debug, asynctest was crashing with: longjmp causes uninitialized stack frame This is because gcc will add certain checks for some functionsincluding longjmp The checks assume you can only longjmp down thestack not up However, if we are actually jumping to a differentfibre then it can appear as if we are going up the stack when we arenot really This change disables the check
Tweak async documentation based on feedbackAdd some clarifications to the async documentation Also changedASYNC_pause_job so that it returns success if you are not within thecontext of a job This is so that engines can be used either asynchronouslyor synchronously and can treat an error from ASYNC_pause_job as a realerror
Clean up libssl async callsTidy up the libssl async calls and make sure all IO functions are covered
make update
Add ASYNC error codesAdd ASYNCerr support to give some meaningful error message in the event ofa failure
Update CHANGESAdd a CHANGES entry for the new async code
Add s_client support for waiting for asyncs_server already had the ability to wait on an async file descriptor Thisadds it to s_client too
Fix the error code for SSL_get_async_wait_fd0 is a valid file descriptor so SSL_get_async_wait_fd should instead return1 on error
More async documentationDocument the libssl and command line application aspects of async
Normalise ASYNC namingTidied up the naming of functions and structures to be consistent
Fix windows compilation warningsFix some warnings in the async code when compiling on windows
Optimise ASYNC_CTX handlingDon't recreate a new ASYNC_CTX every time we call ASYNC_start_job  thesame one can be used for the life of the thread Instead we only free itup when we call ASYNC_free_pool
Fix ASYNC null implementationThe ASYNC null implementation has not kept pace with the rest of the asyncdevelopment and so was failing to compile
Add ASYNC testsAdd a suite of tests for the ASYNC_ functions
Remove ASYNC_in_jobThe ASYNC_in_job function is redundant The same effect can be achieved byusing ASYNC_get_current_job
Document async capabilities
make update
Implement windows async pool and notify supportPort the async pool and notify code to windows
Fix pools for s_clients_client was not freeing up the async pool if async mode was enabled
Fix s_server bugIf an async event occurs during a renegotiation in SSL_read then s_serverwas looping around, detecting we were in init and callinginit_ssl_connection instead of recalling SSL_read
Implement local thread poolsImplement the ASYNC_JOB as a local thread pool Remove the API supportfor global pools
Initial Async notify code changesInitial API implemented for notifying applications that an ASYNC_JOBhas completed Currently only s_server is using this The Dummy Asyncengine "cheats" in that it notifies that it has completed before itpauses the job A normal async engine would not do thatOnly the posix version of this has been implemented so far, so it willprobably fail to compile on Windows at the moment
Add ASYNC_JOB poolsIt is expensive to create the ASYNC_JOB objects due to the "makecontext"call This change adds support for pools of ASYNC_JOB objects so that wedon't have to create a new ASYNC_JOB every time we want to use one
Use longjmp at setjmp where possibleWhere we can we should use longjmp and setjmp in preference to swapcontext/setcontext as they seem to be more performant
Fix s_server WWW with asyncThe s_server option WWW was not async aware, and therefore was nothandling SSL_ERROR_WANT_ASYNC conditions This commit fixes that
Async clean upsRemoved the function ASYNC_job_is_waiting as it was redundant The onlytime user code has a handle on a job is when one is waiting, so all theyneed to do is check whether the job is NULL Also did some cleanups tomake sure the job really is NULL after it has been freed!
Increase stack sizeSome assembler code puts a lot of stuff on the stack, so up the stack size
Add null async implementationCreate a "null" async implementation for platforms that lack support Thisjust does nothing when called and therefore performs synchronously
Async port to windows
Various windows build fixes to prepare for windows port
Add s_server and s_client async supportA new async option is added which activates SSL_MODE_ASYNC AlsoSSL_WANT_ASYNC errors are handled appropriately
Make libssl async awareThe following entry points have been made async aware:SSL_acceptSSL_readSSL_writeAlso added is a new mode  SSL_MODE_ASYNC Calling the above functions withthe async mode enabled will initiate a new async job If an async pause isencountered whilst executing the job such as for example if using SHA1/RSAwith the Dummy Async engine, then the above functions return withSSL_WANT_ASYNC Calling the functions again with exactly the same argsas per nonblocking IO, will resume the job where it left off
Add the Dummy Async engine dasyncThis engine is for developers of async aware applications It simulatesasynchronous activity with external hardware This initial version supportsSHA1 and RSA Certain operations using those algorithms have async job"pauses" in them  using the new libcrypto async capability
Add async sublibrary to libcryptoProvides support for running asynchronous jobs Currently this is completelystand alone Future commits will integrate this into libssl and s_server/s_client An asynchronous capable engine will be required to see any benefitfrom this capability
Add pthread supportThe forthcoming async code needs to use pthread thread local variables Thisupdates the various Configurations to add the necessary flags In many casesthis is an educated guess as I don't have access to most of theseenvironments! There is likely to be some tweaking needed
Fix uninitialised variableThe al variable could be uninitialised in an error path
BN_sub: document that r might be the same as a or b
BN_usub: Don't copy when r and a the sameSignedoffby: Kurt Roeckx <kurt@roeckxbe>
make update
Ensure all EVP calls have their returns checked where appropriateThere are lots of calls to EVP functions from within libssl There werevarious places where we should probably check the return value but don'tThis adds these checks
Use better defaults for TSAUse SHA256 for TSA and setted permitted digests to a sensible valueBased on PR4141
Add support for signer_digest option in TSBased on PR2145
Make GOST ciphersuites require TLSv1PR4141
aes/asm/vpaesppcpl: eliminate overhung stores in misaligned cases
e_osh: bump minimal _WIN32_WINNT
Rename RSA_eay_xxx to rsa_ossl_xxxFinal part of flushing out SSLEay API's
make update
Check error return from sysconf in secure memory codeWe use the sysconf function to provide details about the page size in thesecure memory code This function can return 1 on error so we should checkfor this before proceeding
Add comment explaining why we don't check a return valueA call to X509_verify_cert is used to build a chain of certs for theserver to send back to the client It isn't actually used for verifyingthe cert at all  just building the chain Therefore the return value isignored
Remove an NULL ptr deref in an error pathThe |passwd| variable in the code can be NULL if it goes to the err labelTherefore we cannot call strlen on it without first checking that it is nonNULL
bn/asm/ppc64montpl: adapt for littleendianThe problem remained unnoticed so far, because it's never called by defaultYou have to craft OPENSSL_ppccap environment variable to trigger the problem
crypto/sec_memc: fix anonymous mmap on legacy systems
bn/asm/s390xS: improve performance on z196 and z13 by up to 26 [even z10 is couple percent faster] Triggered by RT4128, but solves the problem by real moduloscheduling
aesnisha256x86_64pl: fix crash on AMD JaguarIt was also found that stich performs suboptimally on AMD Jaguar, henceexecution is limited to XOPcapable and Intel processors
Explicit OpenSSL_version_num implementation prototype
Document new functions
Use accessors for X509_print_exPrint certificate details using accessor functionsSince X509_CERT_AUX_print is only used in one place and can'tbe used by applications it uses an internal X509_CERT_AUX structurethis has been removed and replaced by a function X509_aux_print whichtakes an X509 pointer instead
Add new X509 accessors
Update and clarify ciphers documentation
add psk option to ciphers command
add tls1_2,tls1_1 options to ciphers command
Add "TLSv10" cipher aliasThis adds a TLSv10 cipher alias for ciphersuites requiringat least TLSv10: currently only PSK ciphersuites using SHA256or SHA384 MAC SSLv3 only supports SHA1 and MD5 MAC
Don't alow TLS v10 ciphersuites for SSLv3This disables some ciphersuites which aren't supported in SSL v3:specifically PSK ciphersuites which use SHA256 or SHA384 for the MACThanks to the Open Crypto Audit Project for identifying this issue
Use SSL_TLSV1 only if at least TLS v10 is needed
RT2667: Add IRC support to starttls
RT32671: wrong multiple errs TS_check_status_info
absent identity hint should be NULL
modes/asm/ghasharmv4pl: extend Apple fix to all clang casesTriggered by RT3989
Fix SSL_use_certificate_chain_fileThe new function SSL_use_certificate_chain_file was always crashing inthe internal function use_certificate_chain_file because it would pass aNULL value for SSL_CTX , but use_certificate_chain_file wouldunconditionally try to dereference it
Remove redundant check from tls1_get_curvelistThe function tls1_get_curvelist has an explicit check to see if s>certis NULL or not However the check appears after calling the tls1_suitebmacro which derefs s>cert In reality s>cert can never be NULL becauseit is created in SSL_new If the malloc fails then the SSL_new call failsand no SSL object is created
Continue malloc standardisation in enginesContinuing from previous work standardise use of malloc in the engine code
Continue standardisation of malloc handling in appscontinue on from previous commits but in the apps directory
Continue standardising malloc style for libcryptoContinuing from previous commit ensure our style is consistent for mallocreturn checks
Standardise our style for checking malloc failuresif we have a malloc |x  OPENSSL_malloc| sometimes we check |x|for NULL and sometimes we treat it as a boolean |if!x | Standardisethe approach in libssl
Remove redundant check from SSL_shutdownThe SSL object was being deref'd and then there was a later redundant checkto see if it is NULL We assume all SSL_foo functions pass a non NULL SSLobject and do not check it
Make the match for previous cflags a bit more strict/Configure [target] strictwarnings Wnopedanticmsformatwould not add 'pedantic' because it matches 'Wnopedanticmsformat',which was added first
Replace L suffix with U
Use uint32_t and int32_t for SSL_CIPHER structure
Fix compilation problems with SCTPThe SCTP code is not compiled by default This fixes some compilationproblems in that code
Remove some redundant assignmentsWe were setting |s>renegotiate| and |s>new_session| to 0 twice intls_finish_handshake This is redundant so now we just do it once!
Don't finish the handshake twiceWe finish the handshake when we move into the TLS_ST_OK state At variouspoints we were also unnecessarily finishing it when we were reading/writingthe Finished message It's much simpler just to do it in TLS_ST_OK, soremove the other calls
Rebuild error source filesRebuild error source files: the new mkerrpl functionality will nowpick up and translate static function names properly
fix discrepancy
Read function names from C source filesIn mkerrpl read parse functions names in C source files and usethem for translation and sanity checks
Ensure the dtls1_get__methods work with DTLS_ANY_VERSIONThe various dtls1_get_methods did not handle the DTLS_ANY_VERSION case,so this needed to be added
Minor EVP_SignInit_ex doc fixEVP_SignInit_ex was missing from the NAME section of its man page sotyping "man EVP_SignInit_ex" failed to load the page
Fix usage of BIO_ctrl_set_connected
Remove the state parameter from BIO_ctrl_set_connectedThe actual implementation has the state of the connection beingcontrolled with the peer parameter, nonNULL meaning connected andNULL meaning connected
BIO_s_datagram ctrl doesn't support SEEK/TELL, so don't pretend it does
Correct or add comments indicating what controls belong to what
Remove PROXY controls that aren't used anywhere
Remove dummy argument from BIO_get_bind_mode
Document how BIO_get_conn_ip and BIO_get_conn_int_port actually workNo dummy arguments
Have BIO_get_conn_int_port use BIO_ctrl instead BIO_int_ctrlBIO_int_ctrl isn't made for the purpose BIO_get_conn_int_port used itforThis also changes BIO_C_GET_CONNECT to actually return the portinstead of assigning it to a pointer that was never returned back tothe caller
Clarify the preferred way of creating patch filesClarify that git formatpatch output is preferred for creating patch files
Remove a reachable assert from ssl3_write_bytesA buggy application that call SSL_write with a different length after aNBIO event could cause an OPENSSL_assert to be reached The assert is notactually necessary because there was an explicit check a little furtherdown that would catch this scenario Therefore remove the assert an movethe check a little higher up
Remove an OPENSSL_assert which could failAn OPENSSL_assert was being used which could fail eg on a mallocfailure
Remove a trivially true OPENSSL_assertThis OPENSSL_assert in dtls1_hearbeat is trivially always going to betrue because it is testing the sum of values that have been set asconstants just a few lines above and nothing has changed them Thereforeremove this
Fixed typo in rsautlpodSignedoffby: Rich Salz <rsalz@opensslorg>
PR1279: Clean up CONTRIBUTING
Various README updatesClose GH Issue 69Close GH PR 457Some other updatesBy Rich Salz, Alessandro Ghedini, Steve Marquess, Collin Anderson
Remove des_verh; broke build
Replace "SSLeay" in API with OpenSSLAll instances of SSLeay any combination of case were replaced withthe caseequivalent OpenSSL
Remove some SSLv2 referencesThere were a few remaining references to SSLv2 support which are no longerrelevant now that it has been removed
Add SRP and PSK to disallowed CertificateRequest ciphersuitesThere was a discrepancy between what ciphersuites we allowed to send aCertificateRequest, and what ciphersuites we allowed to receive one Soadd PSK and SRP to the disallowed ones
Remove the inline keywordSome functions were marked as inline in statem_srvrc where they probablydidn't need to be, so remove it
Remove superfluous check|tls_process_finished| was checking that |peer_finish_md_len| wasnonnegative However neither |tls1_final_finish_mac| or|ssl3_final_finish_mac| can ever return a negative value, so the check issuperfluous
Change SSL_state_string return strings to start with a TDue the rest of the state machine changes it makes sense to change theSSL_state_string return strings from 3 to T They are not SSL3 specific
Change snprintf to memcpyThere was a few uses of snprintf in the DTLS SCTP code which made moresense to be a memcpy
Add ossl_statem prefix to various functionsAdd the ossl_statem prefix to various funtions to avoid name clashes
Convert enums to typedefsVarious enums were introduced as part of the state machine rewrite As amatter of style it is preferred for these to be typedefs
Make dtls1_link_min_mtu staticThe function dtls1_link_min_mtu was only used within d1_libc so makeit static
Fix a bogus clang warningClang with strictwarnings was complaining about an uninitalisedvariable In reality it will never be used uninitialised but clang can'tfigure out the logic, so just init it anyway to silence the warning
Fix empty NewSessionTicket processingRebasing the state machine code introduced a problem with emptyNewSessionTicket processing The return value from thetls_process_new_session_ticket is supposed to be an enum, but a bareinteger was being used Unfortunately this is valid C so the compilerdoesn't pick it up
Fix uninitialised variableFix another instance of |al| being unitialised in certain error scenarios
make update
Fix various error codesA number of error codes were wrong due to a rebase of the state machinecode
Move in_handshake into STATEMThe SSL variable |in_handshake| seems misplaced It would be better to haveit in the STATEM structure
Fix unitialised variable problemtls_process_client_hello failed to initialise the |al| variable in someerror scenarios This could cause issues with creating the alert
Fix DTLSv1_listen following state machine changesAdding the new state machine broke the DTLSv1_listen code becausecalling SSL_in_before was erroneously returning true after DTLSv1_listenhad successfully completed This change ensures that SSL_in_before returnsfalse
Add a function to get the info_callbackRemove repeated blocks of checking SSL and then SSL_CTX for theinfo_callback
Remove the old state definesRemove all the defines for the old state machines states Mapping old to newis probably going to cause more problems than it solves so it is probablybetter to just remove them
Change SUB_STATE_RETURN into a typedef
Rename STATEM to OSSL_STATEMAdd an OSSL_ prefix onto STATEM
Remove SSL_state and SSL_set_stateSSL_state has been replaced by SSL_get_state and SSL_set_state is no longersupported
Move |no_cert_verify| into state machineThe |no_cert_verify| should be in the state machine structure not in SSL
Remove extraneous parens
Change statem prefix to ossl_statemChange various state machine functions to use the prefix ossl_stateminstead
Don't depend on SSL structure internalsThe macros SSL_in_connect_init and SSL_in_accept_init inadvertentlydepended on SSL structure internals This fixes it to use public API callsinstead
Change HANDSHAKE_STATE to OSSL_HANDSHAKE_STATERename the enum HANDSHAKE_STATE to OSSL_HANDSHAKE_STATE to ensure there areno namespace clashes, and convert it into a typedef
Fix some client side transition logicFixed some issues in the logic for determining whether an SKE should beexpected or not In particular only allow an SKE for RSA if its export andthe key size is not allowed Also fix the ephemeral ciphersuite checks andadd in a missing call to ssl3_check_cert_and_algorithm
Minor documentation tweakUpdate the return type for SSL_state in the documentation
Update CHANGESUpdate the CHANGES file for the state machine rewrite
Remove a call to SSL_set_state from s_servers_server was abusing SSL_set_state to force a renegotiation This is abad way to do things and does not work with the new state machine code, sowe need to do it a different way
Fix a commentFix an out of date reference to old state machine code in a comment
Remove some unused variablesThe next_state variable is no longer needed in the new state machine
Add a state machine READMEAdd some documentation on the thinking behind the state machine
make update
More state machine reorgMove some function definitions around within the state machine to make surethey are in the correct files Also create a statem_loclh header for stuffentirely local to the state machine code and move various definitions intoit
Reorganise state machine filesPull out the state machine into a separate sub directory Also moved somefunctions which were nothing to do with the state machine but were in statemachine files Pulled all the SSL_METHOD definitions into one placemostof those files had very little left in them any more
Remove ssl_get_message from ssl_method_stssl_get_message is no longer used so it should be removed fromssl_method_st
Move PACKET creation into the state machinePreviously each message specific process function would create its ownPACKET structure Rather than duplicate all of this code lots of times weshould create it in the state machine itself
Remove the SSL state variableThe SSL structure contained a "state" variable that kept track of the statemachine in the old code The new state machine does not use this so it canbe removed
Remove the type variableThe SSL structure contained a "type" variable that was set to eitherSSL_ST_ACCEPT or SSL_ST_CONNECT depending on whether we are the server orthe client This duplicates the capability of the "server" variable and wasactually rarely used
Convert DTLSv1_listen to use new state machine codeThe DTLSv1_listen code set the state value explicitly to move into initChange to use state_set_in_init instead
Redefine old state valuessslh and ssl3h have a number of defines for the various states in the oldstate machine code Since this is public API it is not desirable to justremove them Instead redefine them to the closest equivalent state in thenew state machine code If an application calls SSL_state then the returnvalue can still be compared against these old values if necessary Howevernot all values have an equivalent state in the new code, so these are justredefined to a dummy value
Remove redundant codeClean up and remove lots of code that is now no longer needed due to themove to the new state machine
Move server side DTLS to new state machineImplement all of the necessary changes to make DTLS on the server workwith the new state machine code
Move server side TLS to new state machineImplement all of the necessary changes for moving TLS server sideprocessing into the new state machine code
Split TLS server functionsSplit the TLS server ssl3_get_ and ssl3_send_ functions into two readyfor the migration to the new state machine code
Delete unused functionsRemove all the functions and dead code that is now no longer required asa result of the DTLS client move into the new state machine code
Implement DTLS client move to new state machineMove all DTLS client side processing into the new state machine code Asubsequent commit will clean up the old dead code
dtls_get_message changes for state machine moveCreate a dtls_get_message function similar to the old dtls1_get_message butin the format required for the new state machine code The old function willeventually be deleted in later commits
Client TLS state machine rewrite cleanupRemove redundant code following moving client side TLS handling to the newstate machine implementation
Implement Client TLS state machineThis swaps the implementation of the client TLS state machine to use thenew state machine code instead
Split client message reading and writing functionsThe new state machine code will split up the reading and writing ofhanshake messages into discrete phases In order to facilitate that theexisting "get" type functions will be split into two halves: one to getthe message and one to process it The "send" type functions will also haveall work relating to constructing the message split out into a separatefunction just for that For some functions there will also be separatepre and post "work" phases to prepare or update state
Add initial state machine rewrite codeThis is the first drop of the new state machine codeThe rewrite has the following objectives: Remove duplication of state code between client and server Remove duplication of state code between TLS and DTLS Simplify transitions and bring the logic together in a single locationso that it is easier to validate Remove duplication of code between each of the message handling functions Receive a message first and then work out whether that is a validtransition  not the other way around the other way causes lots of issueswhere we are expecting one type of message next but actually get somethingelse Separate message flow state from handshake state in order to betterunderstand each message flow state  when to flush buffers; handling restarts in theevent of NBIO events; handling the common flow of steps for reading amessage and the common flow of steps for writing a message etc handshake state  what handshake message are we working on now Control complexity: only the state machine can change state: keep allthe state changes local to a fileThis builds on previous state machine related work: Surface CCS processing in the state machine Version negotiation rewrite
Split ssl3_get_messageThe function ssl3_get_message gets a whole message from the underlying bioand returns it to the state machine code The new state machine code willsplit this into two discrete steps: get the message header and get themessage body This commit splits the existing function into these twosub steps to facilitate the state machine implementation
BN_GF2m_mod_inv: check bn_wexpand return valueSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Remove SSLeay history, etc, from docsIf something was "present in all versions" of SSLeay, or if it wasadded to a version of SSLeay and therefore predates OpenSSL,remove mention of it  Documentation history now starts with OpenSSLRemove mention of all history before OpenSSL 098, inclusiveRemove all AUTHOR sections
Remove HAMC_cleanupOld API for use with OpenSSL096  Remove it
Move crypto/threads to demo/threads
Probably fix travis wine build
Improve make depend
Fix undeclared variable warnings
Remove useless codeRT4081
Check memory allocation
Fix references to various RFCs
Fix typos
Set salt length after the malloc has succeeded
Fix memory leaks and other mistakes on errors
Replace malloc+strlcpy with strdup
Do not treat 0 return value from BIO_get_fd as error0 is a valid file descriptorRT4068
Remove bugs/ and crypto/threads/
Clarify return values for EVP_DigestVerifyFinalPrevious language was unclear  New language isn't pretty but I believeit is more accurateSignedoffby: Rich Salz <rsalz@opensslorg>
Only include SRP headers when OPENSSL_NO_SRP is undefined[fixes github issue 447]
Make Configure die when unsupported options are given
Add an explicit list of options that can be disabled, enabled, Configure has, so far, had no control at all of which 'no' options itcan be given  This means that, for example, someone could configurewith something absurd like 'nostack' and then watch the build crumbleto dust  or file a bug reportThis introduces some sanity into the possible choicesThe added list comes from looking for the explicit ones used inConfigure, and from grepping after OPENSSL_NO_ in all source files
make update
Don't forget to load the CT error strings
Handle CT error macros separatelyBecause the default error macro generator assumes the header file witherror macros is in include/openssl and therefore generates a C filewith error texts that include <openssl/{name}h>, we need to generatethe error macros and texts for CT separately, since the CT moduledoesn't follow the default criteria
Don't use SSLv23_server_method in an exampleThe function SSLv23_server_method is an old name New code should useTLS_server_method instead Therefore don't use SSLv23_server_method inan example in the docs
Avoid undefined behaviour in PACKET_buf_initChange the sanity check in PACKET_buf_init to check for excessive lengthbuffers, which should catch the interesting cases where len has been castfrom a negative value whilst avoiding any undefined behaviourRT4094
ct_loclh moved, reflect it in crypto/ct/Makefile
make update
Add crypto/include/internal to the directories to scan for stack declarations
Because ct_loclh is used between modules, move it to internal headersRename it to ct_inth
Move auto Host adding to query_responderCheck for Host header in query_responder instead of process_responder Thisalso fixes a memory leak in the old code if the headers was NULL
Fix memory leak with issuer option
set string type when embedding
Move contributing info to CONTRIBUTING
Run tests on Travis for mingw builds as wellSignedoffby: Rich Salz <rsalz@akamaicom>
Fix error message when loading engines from configWhen using command line applications errors occur when trying toload engines specified in a config file Introduced by commita0a82324f96RT4093
Remove Obsolete enginesThere are a number of engines in the OpenSSL source code which are nowobsolete The following engines have been removed: 4758cca, aep, atalla,cswift, nuron, sureware
Fix self signed handlingDon't mark a certificate as self signed if keyUsage is present andcertificate signing not assertedPR3979
embed CRL serial number and signature fields
embed certificate serial number and signature fields
embed value field of X509_EXTENSION
add CHANGES entry for embed
Handle embed flag in ASN1_STRING_copy
PACKET: fix __owur
Appease gcc's WmaybeuninitializedFalse positive: gcc 48 can't figure out the SSL_IS_DTLS logic
Remove EVP_CHECK_DES_KEYThanks to the OpenBSD community for bringing this to our attention
ct_loclh: fix some comments
make depend: prefer clang over makedepend
RFC5753 complianceRFC5753 requires that we omit parameters for AES key wrap and set themto NULL for 3DES wrap OpenSSL decrypt uses the received algorithmparameters so can transparently handle either form
Add Clang 36 and additional GCC 5 builds to travisFollowup to f386742Signedoffby: Rich Salz <rsalz@opensslorg>
GH429: Add clang to travisSignedoffby: Rich Salz <rsalz@akamaicom>
testlib/OpenSSL/Testpm: remove redundant 'cmd /c', MSWin32 Perl can take care of itself
Harmonize do_rehash_rule with updated test/recipies/25test_verifyt
Test suite: chomp>s/\R// to harmonize with mingw 'make test'
Test suite: minimal required to get mingw 'make test' work under Linuxpart by Alessandro Ghedini
Rename setserial command to reqPrevious OpenSSL versions used set_serial, but master was usingsetserial  so rename it back to the old versionRT4059
Centralise loading default apps config fileLoading the config file after processing command line options cancause problems, eg where an engine provides new ciphers/digeststhese are not then recoginised on the command line Move thedefault config file loading to before the command line optionprocessing Whilst we're doing this we might as well centralisethis instead of doing it individually for each application Finallyif we do it before the OpenSSL_add_ssl_algorithms call thenciphersuites provided by an engine eg GOST can be available tothe appsRT4085RT4086
Fix option name discrepancyThere used to be options macopt and sigopt in <102 for the dgstcommand line app These were incorrectly spelled as macop and sigop inmasterRT4072
Configurations: move Wnopedanticmsformat to travisymlThe option is not available in older toolchains and would cause breakage
embed OCSP_CERTID
embed support for ASN1_STRING
Embed various OCSP fields
embed support for CHOICE type
Skip PSK tests for nopsk
Make nopsk compile without warningsPR4035
TypoPR4079
DTLS: remove unused cookie fieldNote that this commit constifies a user callback parameter and thereforewill break compilation for applications using this callback But unlessthey are abusing write access to the buffer, the fix is trivial
Fix Windows buildAdd the new ct directory to mkfilespl and fix the ct Makefile
Initial commit for Certificate Transparency supportOriginal authors:Rob Stradling <rob@comodocom>Dr Stephen Henson <steve@opensslorg>
PACKET: simplify ServerKeyExchange parsing
Fix noripemd on Windowsmkdefpl was getting confused by: ifdef OPENSSL_NO_RMD160  error RIPEMD is disabled endifChanging RIPEMD to RMD160 solves it Fix suggested by Steve Henson
Don't treat a bare OCTETSTRING as DigestInfo in int_rsa_verifyThe function int_rsa_verify is an internal function used for verifying anRSA signature It takes an argument |dtype| which indicates the digest typethat was used Dependant on that digest type the processing of thesignature data will vary In particular if |dtype  NID_mdc2| and thesignature data is a bare OCTETSTRING then it is treated differently to thedefault case where the signature data is treated as a DigestInfo X509_SIGDue to a missing "else" keyword the logic actually correctly processes theOCTETSTRING format signature first, and then attempts to continue andprocess it as DigestInfo This will invariably fail because we already knowthat it is a bare OCTETSTRINGThis failure doesn't actualy make a real difference because it ends up atthe |err| label regardless and still returns a "success" result This patchjust cleans things up to make it look a bit more saneRT4076
When ENGINE_add finds that id or name is missing, actually return
Don't check pointer we just freed, always set it to NULLSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Move BN_CTX_start call so the error case can always call BN_CTX_endSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Move BN_CTX_start call so the error case can always call BN_CTX_endSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Properly check return type of DH_compute_keyIt returns 1 on error, not 0Signedoffby: Kurt Roeckx <kurt@roeckxbe>
Set flags to 0 before calling BN_with_flagsBN_with_flags will read the dest>flags to keep the BN_FLG_MALLOCED butoverwrites everything elseSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Don't advance PACKET in ssl_check_for_safariThe function ssl_check_for_safari fingerprints the incoming extensionsto see whether it is one of the broken versions of safari However it wasfailing to reset the PACKET back to the same position it started in, hencecausing some extensions to be skipped incorrectly
Fix travis builds on masterAllow mingw debug builds to fail on Travis CIFix Travis email notifications configRename a variable to avoid a bogus warning with old GCCerror: declaration of ``dup'' shadows a global declaration [Werrorshadow]Disable pedantic msformat warnings with mingwProperly define const DH parametersRestore debug flag in Travis CI builds; d would get incorrectly passedto /Configure in mingw debug buildsSignedoffby: Rich Salz <rsalz@opensslorg>
SSLv2 compat ciphers: clarify comment
Don't try and parse boolean type
Address more Windows warnings illuminated by mingw
New cipher and cipher modes standardized in RussiaThis change introduces short names and NIDs for Russian GOST ciphersaccording to GOST R 34132015
Validate ClientHello extension field lengthRT4069
Add PACKET_copy_all
ssl_sessc: grab a copy of the session IDThe user callback takes a nonconst pointer, so don't pass PACKET datato it directly; rather, grab a local copy
PACKETize and clean up ssl_bytes_to_cipher_listFix alerts
ssl3_get_client_hello: rearrange logicMove all packet parsing to the beginning of the method This limits theSSLv2 compatibility soup to the parsing, and makes the rest of theprocessing uniformThis is also needed for simpler EMS support: EMS servers need to do anearly scan for EMS to make resumption decisions This'll be easier whenthe entire ClientHello is parsed in the beginningAs a side effect,1 PACKETize ssl_get_prev_session and tls1_process_ticket; and2 Delete dead code for SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG
make depend
Fix make depend for things being built in subdirectoriesSome makedepend mechanisms remove all directory information in thetarget, so a dependency can looks like this:ssl3_recordo: record/ssl3_recordcHowever, that doesn't quite suit us, our Makefile has us buildrecord/ssl3_recordo rather than ssl3_recordoTo clear this up, a change to util/cleandependpl takes care of thiscase by looking up the original file in the dependencies and restoringthe directory information from it
Harmonize pointer printing and size_tfy casts
bio/bss_logc: harmonize format string to silence Wformat
Address Windows warnings in apps/
Explicitly cast INVALID_SOCKET to int to address warnings on WindowsEven though SOCKET is effectively declared as void  on Windows, it'snot actually a pointer, but an index within perprocess table ofkernel objects The table size is actually limited and its upper limitis far below upper limit for signed 32bit integer This is what makescast in question possible
Free up ASN1 structures at top level onlyWhen a decoding error in ASN1 occurs only free up the partial structureat the top level This simplifies embedded handling and fixes freeingup of structures when presented with malformed input
Fix more d2i cases to properly update the input pointerThanks to David Benjamin <davidben@googlecom> for pointing them out
Remove BIO_s_file_internal macro
Revert "Custom cipher constants"This reverts commit 3aabc1dd1c969e60bdea8f827d6645ff04c56b67
Custom cipher constantsAdd some custom ctrls for Engine specific use
Remove the hard coded DOPENSSL_NO_DEPRECATED from DEPFLAGAny time you configure with enabledeprecated, make depend wouldscream bloody murder  This change has it quiet down a bit
Change the DEFAULT ciphersuites to exclude DES, RC4 and RC2This patch updates the "DEFAULT" cipherstring to be"ALL:!COMPLEMENTOFDEFAULT:!eNULL" COMPLEMENTOFDEFAULT is now definedinternally by a flag on each ciphersuite indicating whether it should beexcluded from DEFAULT or not This gives us control at an individualciphersuite level as to exactly what is in DEFAULT and what is notFinally all DES, RC4 and RC2 ciphersuites are added to COMPLEMENTOFDEFAULTand hence removed from DEFAULT
bn/asm/armv4montpl: boost NEON performanceClose difference gap on CortexA9, which resulted in further improvementeven on other processors
Make update / libeaynum fixLooks like someone forgot to do a "make update" since crypto/ts/Makefilekeeps changing  So include thatSecond is that the declare_dh_bn macro fools the libeaynum scriptThe declarations are only needed in one file dh_rfc5114 so removethem from the header and put the "raw" declarations directly into thatfile
Fix libeaynumRemoved duplicated ordinals from libeaynum
Add a test for duplicated ordinalsOccaisionally we have had problems where there are duplicated ordinals inlibeaynum or ssleaynum This adds a test for this issue
Display brief help if no options for list
Add GOST12 cms/smime capabilitiesAdd additional NID references in the CMS/SMIME capabilities code to caterfor GOST12Patch supplied by Dmitry Belyavsky <beldmit@gmailcom>
Fix nostdio buildMuch related/similar work also done byIvan Nestlerode <ivannestlerode@sonoscom>+Replace FILE BIO's with dummy ops that fail+Include <stdioh> for sscanf even with nostdio since the declarationis there We rely on sscanf to parse the OPENSSL_ia32cap environmentvariable, since it can be larger than a 'long' And we don't rely on theavailability of strtoull+Remove OPENSSL_stderr; not used+Make OPENSSL_showfatal do nothing currently without stdio there'snothing we can do+Remove filebased functionality from ssl/ The functionprototypes were already gone, but not the functions themselves+Remove unviable conf functionality via SYS_UEFI+Add fallback definition of BUFSIZ+Remove functions taking FILE  from header files+Add missing DECLARE_PEM_write_fp_const+Disable X509_LOOKUP_hash_dir X509_LOOKUP_file was already compiled out,so remove its prototype+Use OPENSSL_showfatal in CRYPTO_destroy_dynlockid+Eliminate SRP_VBASE_init and supporting functions Users will need tobuild the verifier manually instead+Eliminate compiler warning for unused do_pk8pkey_fp+Disable TEST_ENG_OPENSSL_PKEY+Disable GOST engine as is uses [f]printf all over the place+Eliminate compiler warning for unused send_fp_charsSignedoffby: Rich Salz <rsalz@akamaicom>
engine/e_capic: fix various warnings
Fix Wshadow warnings in mingw builds
Fix pedantic warnings in mingw builds
Fix prototypes in e_ossttestcProblem was exposed in mingw64 build, or in other words on P64 platform
asn1th: silence Wmissingprototype in Windows buildsOn Windows OPENSSL_EXPORT_VAR_AS_FUNCTION is defined and in a sensethis modification simply harmonizes it with "VAR_AS_VAR"
Rationalize gitignore and harmonize pair of Makefiles
RT3948: Some structs have confusing namesSignedoffby: Rich Salz <rsalz@akamaicom>
Print debug info for extended master secret extensionSignedoffby: Rich Salz <rsalz@opensslorg>
RT4053: Typo in error messageSignedoffby: Rich Salz <rsalz@opensslorg>
Remove obsolete b64 demo's
PACKET: simplify ServerHello parsing
Empty NewSessionTicket: test session resumption
Empty session ticket: add a test
RT2772: accept empty SessionTicketRFC 5077 section 33 says:If the server determines that it does not want to include aticket after it has included the SessionTicket extension in theServerHello, then it sends a zerolength ticket in theNewSessionTicket handshake messagePreviously the client would fail upon attempting to allocate azerolength buffer Now, we have the client ignore the empty ticket andkeep the existing session
Update year in Windows builds
Harmonize util/mkrcpl with header move
SRP memory leak fix
Silence Wconditionaluninitialized
Fixing typo in PROBLEMSSignedoffby: Rich Salz <rsalz@akamaicom>
Skylake performance results
GH408 followon: update buflenSome builds break, as documented in:https://githubcom/openssl/openssl/pull/408issuecomment142971427This fixes itSignedoffby: Rich Salz <rsalz@akamaicom>
Fix typo in previous commit
Change debug to d for compat with old releases
Remove obsolete OCSP demo
Change ossltest engine to manually allocate cipher_dataThe ossltest engine wraps the builtin implementation of aes128cbcNormally in an engine the cipher_data structure is automatically allocatedby the EVP layer However this relies on the engine specifying up frontthe size of that cipher_data structure In the case of ossltest this valueisn't available at compile time This change makes the ossltest engineallocate its own cipher_data structure instead of leaving it to the EVPlayer
Properly format linuxarm64ilp32 target configOtherwise the /config script fails with errors like:> Operating system: x86_64whateverlinux2> This system linuxx86_64 is not supported See file INSTALL for detailsThe failure was introduced by a93d3e0RT4062
Fix the OCSP test on WindowsThe windows test uses the pseudo file "nul" to indicate no file for theCApath option This does not work on all versions of Windows Instead usethe new noCApath option
Document noCApath and noCAfileAdd documentation to all the appropriate apps for the new noCApath andnoCAfile options
Add support for noCApath and noCAfile optionsFor those command line options that take the verification optionsCApath and CAfile, if those options are absent then the default path orfile is used instead It is not currently possible to specify no path orfile at all This change adds the options noCApath and noCAfile tospecify that the default locations should not be used to all relevantapplications
Document the default CA path functions
Add ability to set default CA path and file locations individuallyPreviously you could only set both the default path and file locationstogether This adds the ability to set one without the other
Configurations: add linuxarm64ilp32 target
Allow ILP32 compilation in AArch64 assembly pack
ARMv4 assembly pack: implement support for Thumb2As some of ARM processors, more specifically CortexMx series, areThumb2only, we need to support Thumb2only builds even in assembly
fix compilation on SolarisSignedoffby: Rich Salz <rsalz@akamaicom>
Restore the old interactive prompt
Sanity check cookie_lenAdd a sanity check that the cookie_len returned by app_gen_cookie_cb isvalid
Clarify DTLSv1_listen documentationClarify that user code is required to allocate sufficient space for theaddressing scheme in use in the call to DTLSv1_listen
Fix s_server DTLSv1_listen issuesUse sockaddr_storage not sockaddr for the client IP address to allow forIPv6Also fixed a section of code which was conditional on OPENSSL_NO_DTLS1which should not have been
Add DTLSv1_listen documentationAdds a new man page to cover the DTLSv1_listen function
Add listen documentationThis commit adds documentation for the new listen option to s_server Alongthe way it also adds documentation for dtls, dtls1 and dtls1_2 which wasmissing
Add support for DTLSv1_listen in s_serverDTLSv1_listen is a commonly used function within DTLS solutions forlistening for new incoming connections This commit adds support to s_serverfor using it
Remove remaining old listen codeThe old implementation of DTLSv1_listen which has now been replaced stillhad a few vestiges scattered throughout the code This commit removes them
DTLSv1_listen rewriteThe existing implementation of DTLSv1_listen is fundamentally flawed Thisfunction is used in DTLS solutions to listen for new incoming connectionsfrom DTLS clients A client will send an initial ClientHello The serverwill respond with a HelloVerifyRequest containing a unique cookie Theclient the responds with a second ClientHello  which this time contains thecookieOnce the cookie has been verified then DTLSv1_listen returns to user code,which is typically expected to continue the handshake with a call to forexample SSL_acceptWhilst listening for incoming ClientHellos, the underlying BIO is usually inan unconnected state Therefore ClientHellos can come in from any peerThe arrival of the first ClientHello without the cookie, and the second onewith it, could be interspersed with other intervening messages fromdifferent clientsThe whole purpose of this mechanism is as a defence against DoS attacks Theidea is to avoid allocating state on the server until the client hasverified that it is capable of receiving messages at the address it claimsto come from However the existing DTLSv1_listen implementation completelyfails to do this It attempts to superimpose itself on the standard statemachine and reuses all of this code However the standard state machineexpects to operate in a stateful manner with a single client, and this cancause various problemsA second more minor issue is that the return codes from this function arequite confused, with no distinction made between fatal and nonfatal errorsMost user code treats all errors as nonfatal, and simply retries the callto DTLSv1_listenThis commit completely rewrites the implementation of DTLSv1_listen andprovides a stand alone implementation that does not rely on the existingstate machine It also provides more consistent return codes
Add BIO_CTRL_DGRAM_SET_PEEK_MODEAdd the ability to peek at a message from the DTLS read BIO This is neededfor the DTLSv1_listen rewrite
Fix the rehash test on WindowsThe openssl rehash command is not available on some platforms includingWindows This change skips the associated tests if rehash is not available
make update
header includes
Document X509_get0_subject_key_id
New function X509_get0_subject_key_id
Make X509 opaque
Avoid structure access in crypto/ts
PACKET: simplifyGet rid of the third field that is no longer needed
Remove ssl_put_cipher_by_charSince SSLv3, a CipherSuite is always 2 bytes The only place where weneed 3byte ciphers is SSLv2compatible ClientHello processingSo, remove the ssl_put_cipher_by_char indirection
Document BUF_strnlen
BUF_strdup and friends: update docs
BUF_strndup: tidyFix comment, add another overflow check, tidy style
Make BUF_strndup readsafe on arbitrary inputsBUF_strndup was calling strlen through BUF_strlcpy, and ended up readingpast the input if the input was not a C stringMake it explicitly part of BUF_strndup's contract to never read morethan |siz| input bytes This augments the standard strndup contract tobe saferThe commit also adds a check for siz overflow and some brief documentationfor BUF_strndup
GH398: Add mingw crosscompile, etcFor all release branches  It adds travis build support If you don'thave a config file it uses the default because we enabled travis for theproject, which uses ruby/rake/rakefiles, and you get confusing "buildstill failing" messages
Fix path in comments
make depend
Move certificate request and CRL routines to x509 dir
Move functionsMove various functions tagged onto t_x509c to more appropriate places
Update SEE ALSO sections
Document signature accessors
Extension parsing and encoding docs
Document i2d_re_X509_REQ_tbs and i2d_re_X509_CRL_tbs
Document X509_REVOKED functions
Document X509 sign and verify functions
Document X509 public key functions
Document X509 name get and set functions
Document X509 version functions
Use accessors in X509_REQ_print
Use accessor functions in X509_CRL_print
New accessor X509_REQ_get_X509_PUBKEY
Additional X509_CRL accessors
typo
Add comments to x509_inth
Add accessors for X509_REVOKED
Add accessors for request and CRL signatures
Remove "noise" comments from TS files
RT3479: Add UTF8 support to BIO_read_filenameIf we use BIO_new_file, on Windows it'll jump through hoops to workaround their unusual charset/Unicode handling it'll convert a UTF8filename to UCS16LE and attempt to use _wfopenIf you use BIO_read_filename, it doesn't do this Shouldn't it beconsistent?It would certainly be nice if SSL_use_certificate_chain_file workedAlso made BIO_C_SET_FILENAME work rsalzSignedoffby: Rich Salz <rsalz@akamaicom>
RT3823: Improve the robustness of event loggingThere are a couple of minor fixes here:1 Handle the case when RegisterEventSource fails which it may forvarious reasons and do the work of logging the event only if it succeeds2 Handle the case when ReportEvent fails and do our best in debug buildsto at least attempt somehow indicate that something has gone wrong Thetypical situation would be someone running tools like DbMon, DBWin32,DebugView or just having the debugger attached The intent is to make surethat at least some data will be captured so that we can save hours and daysof debugging time3 Minor fix to change the MessageBox flag to MB_ICONERROR Though thevalue of MB_ICONERROR is the same value as MB_ICONSTOP, the intent isbetter conveyed by using MB_ICONERRORTesting performed:1 Clean compilation for debugVCWIN32 and VCWIN322 Good test results nmake f ms\ntdllmak test for debugVCWIN32 andVCWIN323 Stepped through relevant changes using WinDBG and exercised the impactedcode pathsSignedoffby: Rich Salz <rsalz@akamaicom>
GOST PKCS12 supportChanges required to add GOST support to PKCS12Based on a patch provided by Dmitry Belyavsky <beldmit@gmailcom>
Add GOST extensions to PKCS5GOST extends PKCS5 PBES2/PBKDF2 with some additional GOST specific PRFsBased on a patch provided by Dmitry Belyavsky <beldmit@gmailcom>
Fix SRP memory leaksThere were some memory leaks in the creation of an SRP verifier both onsuccessful completion and also on some error paths
Fix srpvfile option in srp command lineThe srpvfile option was broken in the srp command line app Using it wouldalways result in "dbfile and configfile cannot be specified together"The error message is also wrong because the option is "srpvfile" not"dbfile", so that has been fixed too
Make SRP work with wwwPR3817
Handle SSL_ERROR_WANT_X509_LOOKUP
remove unneeded includes
make nodh work
Move EVP_PKEY_METHOD into private headers
Simplify Simplepm further, and make it more verbose
Correct srp testThere actually is a "srp" feature to check the availability on
Correct jpake testThere actually is a "jpake" feature to check the availability on
Correct sha testsThese tests were checking for specific sha variants, when they shouldjust check if "sha" is disabled
Correct whirlpool testIt depended on 'openssl nowp', which always exited with code 0, sothis test would never be performed, and this, I never discovered thatthe program it's supposed to run was misspellt  Furthermore, thefeature to check is 'whirlpool', not 'wp'All corrected
Finally, remove a possibly disabled featureI have no clue why MD_GHOST94 was checked on, there is noOPENSSL_NO_MD_GHOST94 in sight anywhere
Add more features that may be disabledHave a look at the directories in crypto/, I found reason to addchecks on CMAC and HMAC  This might be completely irrelevant, but Iprefered covering too much than not enough
Add more features that may be disabledA grep of OPENSSL_NO_ in the rest of the source tree revealed a fewmore features to checkNOTE: there are some of those macros that I ignore because a check ofthem doesn't seem useful to external apps  This might change later on
Add more features that may be disabledAfter a grep of OPENSSL_NO_ in apps/c, a few more features that maybe interesting to check the availability of came up
Add more features that may be disabledI've tried to make this list as complete as possible, based oninformation found in apps/progspl
Sort the disabled features alphabetically
typo
Update Simplepm to use disabled
Change test recipes to use disabled
Add UtilspmAdd Utilspm for test utilities This currently just contains one function:disabled which checks if a feature is disabled based on the output ofopenssl list disabled
Small typoOPENSSL_NO_ECA changed to OPENSSL_NO_EC
Make sure to actually use @smime_cms_comp_test when testing itObvious typo, and it took configuring with 'zlib' to discover it,otherwise there was a previous skip that bypassed this sectionentirely
Fix some test failures when Configured with zlibTLSProxy was failing if we are Configured with compression because itdoesn't support it This fix simply switches compression off for thepurposes of the test
Print out a list of disabled featuresNew option "openssl list disabled" this lists a set of disabled featuresin a form which can be conveniently parsed by the test framework so itknows which tests to skip
Return shared OIDs when decodingWhen an OID is decoded see if it exists in the registered OID tableand if so return the shared OID instead of dynamically allocatingan ASN1_OBJECT
Fix indentation
Check if test_rehash is run as rootIf test/recipes/40test_rehasht is executed as root, the last testwill fail, since the created directory will remain writable no matterwhat  Make sure it complains loudly about being run as root
Remove PACKET_backIt's unused, and the same functionality can be achieved with saving acopy of the struct
Make sure OPENSSL_cleanse checks for NULLIn master we have the function OPENSSL_clear_freex,y, which immediatelyreturns if x  NULL In <102 this function does not exist so we have todo:OPENSSL_cleansex, y;OPENSSL_freex;However, previously, OPENSSL_cleanse did not check that if x  NULL, sothe real equivalent check would have to be:if x ! NULLOPENSSL_cleansex, y;OPENSSL_freex;It would be easy to get this wrong during cherrypicking to other branchesand therefore, for safety, it is best to just ensure OPENSSL_cleanse alsochecks for NULL
base64 decode: check for high bitPreviously, the conversion would silently coerce to ASCII Now, we errorout
RT3757: base64 encoding bugsRewrite EVP_DecodeUpdateIn particular: reject extra trailing padding, and padding in the middleof the content Don't limit line length Add testsPreviously, the behaviour was illdefined, and depended on the positionof the padding within the inputIn addition, this appears to fix a possible twobyte oob read
Remove PACKET_get|goto_bookmarkThe bookmark API results in a lot of boilerplate error checking that canbe much more easily achieved with a simple struct copy It also lays thepath for removing the third PACKET field
Embed various signature algorithms
RT4033: Use OPENSSL_SYS_UNIX not "unix"Real fix for RT 4033
RT4047: Set reference count earlierMake sure it's valid very earlySignedoffby: Rich Salz <rsalz@opensslorg>
Disentangle RSA premaster secret parsingSimplify encrypted premaster secret reading by using new methods in thePACKET APIDon't overwrite the packet buffer RSA decrypt accepts truncatedciphertext with leading zeroes omitted, so it's even possible that bycrafting a valid ciphertext with several leading zeroes, this couldcause a few bytes outofbounds write The write is harmless because ofthe size of the underlying message buffer, but nevertheless we shouldn'twrite into the packet
Embed X509_REQ_INFO
Embed X509_CINF
X509_CRL_INFO embed
Change X509_VAL in X509 structure to embedded
New ASN1 embed macroNew ASN1 macro ASN1_EMBED This is the same as ASN1_SIMPLE except thestructure is not allocated: it is part of the parent That is instead ofFOO x;it must be:FOO x;This reduces memory fragmentation and make it impossible to accidentallyset a mandatory field to NULLThis currently only works for SEQUENCE and since it is equivalent toASN1_SIMPLE it cannot be tagged, OPTIONAL, SET OF or SEQUENCE OF
Fix build on mingwWhen OPENSSL_EXPORT_VAR_AS_FUNCTION is defined, the static_ASN1_ITEM_startmacro doesn't exist so the build fails This problem was introduced incommit df2ee0e
Fix return values when adding serverinfo fails
make update
Extend the notes on how to do testingThese notes include the use of HARNESS_VERBOSE see the manual forTest::Harness and the method to enumerate specific tests to run
Add a method to list available tests
Add a few notes on perl
d2i: don't update input pointer on failure
Fix PSK identity hint handlingFor server use a PSK identity hint value in the CERT structure whichis inherited when SSL_new is called and which allows applications toset hints on a perSSL basis The previous version ofSSL_use_psk_identity_hint tried wrongly to use the SSL_SESSION structurePR4039
Constify ECDSA_METHOD_newPR3920
Fix zlib CMS compilation
Use default field separatorIf the field separator isn't specified through nameopt then useXN_FLAG_SEP_CPLUS_SPC instead of printing nothing and returing an errorPR2397
Fix "defined but not used" warnings
Enable Wmissingvariabledeclarations andWincompatiblepointertypesdiscardsqualifiers the latter did not requireany code changes
Unwriteable directories are errorsMake the script and app match the documentation
EVP_PKEY_METHOD accessor functionsFunctions to retrieve the function pointer of an existing method: thiscan be used to create a method which intercepts or modifies the behaviourof an existing method while retaining most of the existing behaviour
RT3754: check for NULL pointerFix both the caller to error out on malloc failure, as well as theeventual callee to handle a NULL gracefully
Restore SSLerr on PACKET_strndup failure
RT3992: Make SCT ifdeffableThis code does opencoded division on 64bit quantities and thus whenbuilding with GCC on 32bit platforms will require functions such as__umoddi3 and __udivdi3 from libgccIn constrained environments such as firmware, those functions may notbe available So make it possible to compile out SCT support, which infact in the case of UEFI we don't need anywaySignedoffby: Rich Salz <rsalz@akamaicom>
Add a simple test for the new rehash command
Make sure the temporary error log resides in a well defined locationIf a test recipe does something like this:indir "foo$$" > sub {chmod 0500, File::Spec>curdir;okrunapp["something"];}we get a problem, because we were storing the temporary stderr file inthe current directory at all times so while inside the 'indir', wewould attemp to store it in "foo$$"So, change our ways to always store that temporary file in the exactsame location, defined by the environment variable RESULT_D, orfailing that TEST_D, or failing that $TOP/test
Fix warning about mixed declarations and code
PACKET: add PACKET_memdup and PACKET_strndupUse each once in s3_srvrc to show how they workAlso fix a bug introduced in c3fc7eeab884b6876a1b4006163f190d325aa047and made apparent by this change:ssl3_get_next_proto wasn't updating next_proto_negotiated_len
RT3993: Fix error found by VS2008Cast and then negate, don't negate an unsignedSignedoffby: Rich Salz <rsalz@akamaicom>
RT3969: Add OPENSSL_SYS_UEFIThis provides support for building in the EDK II reference implementationof UEFI Most UEFI firmware in existence uses OpenSSL for implementingthe core cryptographic functionality needed for Secure BootThis has always previously been handled with external patches to OpenSSLbut we are now making a concerted effort to eliminate thoseIn this mode, we don't actually use the OpenSSL makefiles; we processthe MINFO file generated by 'make files' and incorporate it into theEDK2 build systemSince EDK II builds for various targets with varying word size and weneed to have a single prepackaged configuration, we deliberately don'thardcode the setting of SIXTY_FOUR_BIT vs THIRTY_TWO_BIT inopensslconfh We bypass that for OPENSSL_SYS_UEFI and allow EDK IIitself to set those, depending on the architectureFor x86_64, EDK II sets SIXTY_FOUR_BIT and thus uses 'long long' for the64bit type, even when building with GCC where 'long' is also 64bit Wedo this because the Microsoft toolchain has 32bit 'long'Signedoffby: Rich Salz <rsalz@akamaicom>
Fix rehash/c_rehash doc and behaviorBoth now warn once if directory isn't writeableBoth now warn on filewrite errors multiple timesUpdate manpage to describe both program and script correctly
Fix uninit warning Remove unnecessary casts Nothing to add is an error
add support for apple os/x
Fix a few tests that depended on the wrong algorithm checktest_ecdh and test_ecdsa are made to depend on noec being falsetest_hmac is made not to depend on algorithm at allBased on a contribution by Alessandro Ghedini <alessandro@ghedinime>
Adjust the general fillcolumn in doc/dirlocalsexampleelHaving a general fillcolumn of 78 may look nice at first sight, butif the edited text gets indented a bit afterward such as with gitcomments in 'git log', it suddenly turns not so nice on a classic 80columns terminal  A fillcolumn of 70 will serve us better
Adjust the verify_extra test recipe to its executableThe verify_extra_test was recently changed to take its parameters asarguments instead of having them hardcoded
GH391: Apple portAlso make internal functions consistently return values, andadd a comment documenting them
Make sure that 80test_cat finds all the config filesThis recipe counted too much on being called with test/ as its currentworking directory  That's a mistake on, for example, Windows
Add a recipe for the new null pointer test
Change the 80test_tsa recipe as per changes in testtsa
Add a recipe for the new pbelu test
Remake the testsslproxy testsThe testsslproxy tests turned out to be useless as they were  Theywere really just for show and the results were ignore  Now they arechanged into a more veerifiable test
Small fix in OpenSSL::TestBe careful when shifting in a function argument, you end up changingthe caller's value  Instead, when it is an array, make a shallow copyand shift in that instead
Incorporate recent changes that were originally made in test/testssl
Add documentation for the new testing framework
Add a recipe for the new gmdiff test
Correct test nameSome tests were copied from test_jpake, but the title wasn't changedaccordingly  This might seem like a small thing, but it does affectthe log file name
Remake test/sslsessionticktestpl into a recipe
Adapt the libssl test harness testing scripts to new testing frameworkThis involves adding $TOP/util as perl library in test/run_testspl
Check the validity of MINFOMINFO may be an old file lying around, which might have00check_testexest produce incorrect results  To make sure thisdoesn't happen, check the variable VERSION in it against the samevariable in the top Makefile
Better method of skipping all the tests in 00check_testexestBefore trying to read MINFO, we have no idea how many to test for, andbecause skip expects to get an exact number somehow, it's better touse 'plan skip_all'
Remove special x509 test conversionsFollowing the commit from July 2 that removed netscape formated certs,it is no longer necessary to have conversion tests for it
Add a few missing teststest_clienthellotest_packettest_verify_extratest_secmem
Push the line buffer filter on the out BIO on VMSVMS files are normally record oriented rather than stream orientedThis means that every write will create a new record, which is seenas a line of its own, regardless of if there was a \n in there or notbntest uses BN_print, which prints out number with more than onewrite, thereby dividing up the numbers in several lines, whichgreatly disturbs the postbntest checks that expect to find a fullformula to calculate on one lineSo, for VMS, we need to push the linebuffer filter on the out BIO
Rework 00test_checkexest for VMSUnfortunately, a file spec with character range globs interfere withpaths on VMS, and are therefore disabled  Rework this test to collecta list of expected tests and a list of all recipes and compare the twousing grep
Document OpenSSL::Test and OpenSSL::Test::SimpleFor OpenSSL::Test, it meant rearranging the code to better suite thestructure of the documentation
Change OpenSSL::Test to be an extension of Test::MoreIt became tedious as well as error prone to have all recipes useTest::More as well as OpenSSL::Test  The easier way is to makeOpenSSL::Test an extension of Test::More, thereby having all versionchecks as well as future checks firmly there  Additionally, thatallows us to extend existing Test::More functions if the need wouldarise
New feature: STOPTESTWhen the environment variable STOPTEST is defined with any value otherthan the empty string, the test machinery in OpenSSL::Test goes into adifferent mode that will stop all testing at the end of a failing recipe
Add version numbers on some modules we use
Have 'make clean' clean away the log files
Tone down the requirements of a test that will go away00check_testexest was a way for me to check that I didn't forget acompiled test app  The way it worked was to require MINFO to be presentConsidering the need for this test has diminished considerably at thispoint, I might as well tone down the requirement, and have it skip thetest and not fail it if MINFO isn't present
Remove old testing scripts out of the wayFor now, I'm moving them into Attic/  They will be removed later
Adapt mk1mfpl and helpers to the new testing frameworkWith the new testing framework, building a test target with mk1mfplbecomes a very simple thing  And especially, no more need to do theamount of hackery in unixpl we didAlso, some tests need a working apps/CApl as well as rehashed certsin certs/demo  So, move the code creating those files so it gets doneregardless, not just in nonmk1mf environments
Simplify very simple test recipes furtherVery simple test recipes easily become tedious, so they might benefitfrom being made as simple as possible  Therefore, OpenSSL::Test::Simpleis born  It currently provides but one function, simple_test, whichtakes a minimum of two parameters test name and program to run, withthe optional third, being the algorithm to be checked for beforerunning the test itselfAll recipes with that simple thing to do have been rewritten to be asminimal as possible
Remove test targets from Makefile, have it use run_testsplAlso remove recipes/00check_testalltestst, since it will lack theinformation from the now gone alltests target
Ignore the log filesThe new test framework produces a lot of log files one for eachtest  Git doesn't need to know
Add recipes for misc other things we want to testNote that this required a change in constant_time_testc, as it says"ok", which interferes with what Test::Harness expects to see  I hadconstant_time_testc say "success" instead
Add recipes for the larger protocolsThis covers the certificate authority commands, the cms and smimecommands, OCSP, SSL and TSA
Add engine and evp test recipes
Add recipes for tests related to certificatesSome of them make use of recipes/tconversionpl
Add asymetric cipher test recipesSome of them make use of recipes/tconversionpl
Add a helper script for key file format conversion testsAs tests are done until now, there are a few scripts that look almost,but not quite the same  tkey, tx509, tcrl, tpkcs7, treq, tsid andprobably a few morerecipes/tconversionspl is a helper script that generalises thefunction of each of those, and can then be used in a general mannerfrom test recipes
Add the encryption test recipeThis tests all available openssl cipher commands
Add recipes for individual block ciphers, stream ciphers and digestsThese recipes all correspond to a compiled test program
Add math tests recipesThe math recipes are among the heavier, but also quite importantFor the BN test, we have previously relied on bc to verify the numbersUnfortunately, bc doesn't exist everywhere, making tests on some platformsrather painful  With the new recipe recipes/10test_bnt, we relyon perl's Math::BigInt and a homegrown simple calculator recipes/bcplthat can do enough to cover for bc
Groundwork for a perl based testing frameworkThe idea with this perl based testing framework is to make use ofwhat's delivered with perl and exists on all sorts of platformsThe choice came to using Test::More and Test::Harness, as that seemsto be the most widely spread foundation, even if perl is agedThe main runner of the show is run_testspl  As it currently stands,it's designed to run from inside Makefile, but it's absolutelypossible to run it from the command line as well, like so:cd testOPENSSL_SRCDIR perl run_testsplThe tester scripts themselves are stored in the subdirectory recipes/,and initially, we have two such scripts, recipes/00check_testallteststand recipes/00check_testexest  recipes/00check_testalltestst willpick out the dependencies of "alltests" in test/Makefile, and check ifit can find recipes with corresponding names  recipes/00check_testexestdoes something similar, but bases it on existing compiled test binariesThey make it easy to figure out what's to be added, and will beremoved when this effort is finishedIndividual recipes can be run as well, of course, as they are perlscripts in themselves  For example, you can run onlyrecipes/00check_testexest like so:cd testOPENSSL_SRCDIR perl recipes/00check_testexestTo make coding easier, there's a routine library OpenSSL::Test, whichis reachable in a perl script like so:use lib 'testlib';use OpenSSL::Test;
PACKETise ServerKeyExchangeProcess the ServerKeyExchange message using the PACKET API
PACKETise ServerHello processingProcess ServerHello messages using the PACKET API
Updates for NumericString supportEnsure that EBCDIC support works and update a comment
Add NumericString supportGOST requires improved NumericString support
Fix build break due to rehash commandThe build was breaking due to a Makefile recipe expecting an opensslversion to be on the PATH with support for the rehash command
fix build breakage on windows
Fix typo, that broke build on nonunix
Add rehash command to opensslOn Unix/Linux platforms, merge c_rehash script into openssl as aC programSignedoffby: Rich Salz <rsalz@akamaicom>
Small fix: make istext staticThis takes away a build failure in some cases
Fix enc so it properly treats BASE64 as textTo set both the incoming and outgoing data when 'encrypting' or'decrypting' to FORMAT_BASE64 wasn't quite the right thing to do
Fixup merge conflicts in util/libeaynum
Change the treatment of stdin and stdout to allow binary dataIf the output to stdout or the input from stdin is meant to be binary,it's deeply unsetting to get the occasional LF converted to CRLF orthe other way around  If someone happens to forget to redirect stdinor stdout, they will get gibberish anyway, line ending conversion willnot change thatTherefore, let's not have dup_bio_ decide unilaterally what mode theBIO derived from stdin and stdout, and rather let the app decide bydeclaring the intended format
dup_bio_ and bio_open_ are utility functions and belong in appsc
Remove warning about use of uninitialised variable
Have binary mode when the format is binary, not the other way aroundFixing a small mixup
Have the test executables output in text modeThe test executables use standard output and standard error for text output,so let's open the corresponding BIOs in text mode
Change the way apps open their input and output filesThe different apps had the liberty to decide whether they would open theirinput and output files in binary mode or not, which could be confusing iftwo different apps were handling the same type of file in different waysThe solution is to centralise the decision of low level file organisation,and that the apps would use a selection of formats to state the intent ofthe file
Make the handling of output and input formats consistentMost of all, we needed to sort out which ones are binary and whichones are text, and make sure they are treated accordingly andconsistently so
Make the verify_extra test location agnosticDepending on platform, verify_extra_test may fail because it relies ontest/ being the current working directory  Make it get all the requiredfiles on the command line instead to solve that issue
make update
Avoid direct X509 structure access
Replace X509 macros with functions
Cleanup testtsa scriptAdd RUN function; remove singleuse functions and use their body inline
Make TS structures opaqueMost of the accessors existed and were already used so it was easyTS_VERIFY_CTX didn't have accessors/settors so I added the simple andobvious ones, and changed the app to use them  Also, within crypto/ts,replaced the functions with direct access to the structure memberssince we generally aren't opaque within a directoryAlso fix RT3901
RT3955: Reduce some stack usageUse malloc/free instead of big onstack buffers
In X509_STORE_CTX_init, cleanup on failureSignedoffby: Rich Salz <rsalz@akamaicom>
RT3951: Add X509_V_FLAG_NO_CHECK_TIME to suppress time checkIn some environments, such as firmware, the current system time is entirelymeaningless Provide a clean mechanism to suppress the checks against itSignedoffby: Rich Salz <rsalz@akamaicom>
Use the shlib wrapper when running nptestSince there seems to be no way to avoid linking to libssl and libcrypto,just wrap the test This unbreaks "shared" builds when using clang and/orOS XSignedoffby: Rich Salz <rsalz@opensslorg>
make X509_REVOKED opaque
Supply a build rule for the recently added nptestCommit d4ab70f27cb7e518e6a9d6323c996cc3feb7496b added a test programto check that the NULL pointer is represented as all zero bits, butdid not specify a build rule for that new executable  On many platforms,the implicit rule sufficed, since nptest is a very simple program, butfor at least darwini386cc, an explicit rule is needed  On darwini386cc,the implicit rule targetted a 64bit executable, but the object filecontaining the definition of main was a 32bit object, which the linkerexcluded from consideration, resulting in a link failure due to nodefinition for _mainAdd the missing build rule to fix the build on such platformsSignedoffby: Rich Salz <rsalz@opensslorg>
Match SUITEB strings at start of cipher listPR4009
Test for NULL ptr  0Add a test to ensure that "char p  NULL" is equivalent toallbyteszero
RT3998: Allow scrypt to be disabledThis does 64bit division and multiplication, and on 32bit platformspulls in libgcc symbols and MSVC does similar which may not beavailable  Mostly done by David Woodhouse
More zalloc nitsFound on GitHub by dimman
Revert "OPENSSL_NO_xxx cleanup: RFC3779"This reverts the noncleanup parts of commit c73ad69017 We do actuallyhave a reasonable use case for OPENSSL_NO_RFC3779 in the EDK2 UEFIbuild, since we don't have a strspn function in our runtime environmentand we don't want the RFC3779 functionality anywayIn addition, it changes the default behaviour of the Configure script sothat RFC3779 support isn't disabled by default It was always disabledfrom when it was first added in 2006, right up until the point whereOPENSSL_NO_RFC3779 was turned into a noop, and the code in theConfigure script was left trying to disable it, but not actuallyworkingSignedoffby: Rich Salz <rsalz@akamaicom>
remove 0 assignmentsAfter openssl_zalloc, cleanup more "set to 0/NULL" assignmentsMany are from github feedback
Add UEFI flag for rand buildAdd OPENSSL_SYS_UEFI flag for RAND handling;Signedoffby: Rich Salz <rsalz@akamaicom>
Win32 build fix: include internal/numbersh to get UIN32_MAX
RT3674: Make nocms build workAlso has changes from from David Woodhouse <DavidWoodhouse@intelcom>and some tweaks from meSignedoffby: Rich Salz <rsalz@opensslorg>
make update
PBE lookup testAdd test to check PBE lookups: these can fail if the PBE table is notcorrectly orders Add to "make test"
Add initial Travis CI configurationCloses 63Signedoffby: Rich Salz <rsalz@opensslorg>
Two changes at ones lead to a confused libeaynum  Fix
Check OPENSSL_gmtime_diffIt's test code that only runs on 64bit time_t machinesMove it to a standalone test/gmdifftest
Add and use OPENSSL_zallocThere are many places nearly 50 where we malloc and then memsetAdd an OPENSSL_zalloc routine to encapsulate thatMissed one conversion; thanks RichardAlso fixes GH328
make update
make X509_CRL opaque
Extend ciphersuite test coverageAdd support for testing ECDSA and DSA ciphersuites
Fix CCM support in DTLS
Update ssltest certificate handlingUse SSL_CONF for certificate handling is ssltestc, this changes thebehaviour slightly: the cert and key options are no longer recognisedand a default certificate file is not usedThis change means that s_cert and c_cert can be used mode than onceto support use of multiple certificates
Create DSA and ECDSA certificatesIf supported create DSA and ECDSA certificates and test them
delete unused structure
Move OPENSSL_ITEM to storehThe only place that uses it
Cleaner handling of "cnid" in do_x509_checkAvoid using cnid  0, use NID_undef instead, and return early insteadof trying to find an instance of that in the subject DN
Better handling of verify param id peername fieldInitialize pointers in param id by the book explicit NULL assignment,rather than just memset 0In x509_verify_param_zero set peername to NULL after freeing itIn x509_vfyc's internal check_hosts, avoid potential leak ofpossibly already nonNULL peername  This is only set when a checksucceeds, so don't need to do this repeatedly in the loop
Fix DTLS12 buffersFix the setup of DTLS12 buffers to take account of the Header
Fix the comment for POINT_CONVERSION_UNCOMPRESSEDThe |z| value should be 0x04 not 0x02RT3838Signedoffby: Matt Caswell <matt@opensslorg>
make update
Document extension functions
functions to retrieve certificate flags
use uint32_t for certificate flags
RT3984: Fix clang compiler warning on Mac OS X where ld is used for uint64_tclang suggests llu instead, but it isn't clear that is portable onall platformsC99 and above define a handy macro for us, so we try to use thatdefinition and fall back to current definition if needed though weswitch to 'u' for unsigned
apps/speedc: fix memory leak
RT4002: check for NULL cipher in p12_crptcThe NULL cipher case can't actually happen because we have noEVP_PBE_CTL combinations where cipher_nid is 1 and keygen isPKCS12_PBE_keyivgen But make the code more obviously correct
RT 3493: fix RSA test Pass in the right ciphertext length to ensure we're indeed testingciphertext corruption and not truncation Only test one mutation per byte to not make the test too slow Add a separate test for truncated ciphertexts
RT3767: openssl_buttongif should be PNGNo, we should just delete it  And updated the README
Ignore dirlocalselBecause we recently encourage people to have a dirlocalsel, it's a goodidea to ignore it on a git level
make update
Add X509_up_ref function
Add X509_CRL_up_ref function
check bn_new return valueSlightly modified from the original PRSignedoffby: Rich Salz <rsalz@akamaicom>
make X509_REQ opaque
make X509_CERT_AUX opaque
Remove asn1kludge optionRemove asn1kludge option from the req utility It was a decade oldworkaround for CAs and software which required an invalid encodingof PKCS10 certificate requests: omitting the attributes field eventhough it is not OPTIONAL
GH367 followup, for more claritySignedoffby: Rich Salz <rsalz@akamaicom>
BN_mod_exp_mont_consttime: check for zero modulusDon't dereference |d| when |top| is zero Also test that various BIGNUM methods behave correctly on zero/even inputsFollowup to b11980d79a52ec08844f08bea0e66c04b691840b
Remove autofillmodeApparently, emacs sees changes to autofillmode as insecure
Add an example dirlocalselThis file, when copied to dirlocalsel in the OpenSSL source top,will make sure that the CC mode style "OpenSSLII" will be used forall C filesAdditionally, I makes sure that tabs are never used as indentationcharacter, regardless of the emacs mode, and that the fill column is78
Add emacs CC mode style for OpenSSLThis hopefully conforms closely enough to the current code style
Fix spurious bntest failuresBN_bntest_rand generates a singleword zero BIGNUM with quite a large probabilityA zero BIGNUM in turn will end up having a NULL |d|buffer, which we shouldn't dereference without checking
Remove the "times" directory
Fix 4c42ebd; forgot to inutil util/libeaynum
GH354: Memory leak fixesFix more potential leaks in X509_verify_certFix memory leak in ClientHello testFix memory leak in gost2814789 testFix potential memory leak in PKCS7_verifyFix potential memory leaks in X509_add1_reject_objectRefactor to use "goto err" in cleanupSignedoffby: Rich Salz <rsalz@akamaicom>
GH367: Fix dsa keygen for tooshort seedIf the seed value for dsa key generation is too short < qsize,return an error Also update the documentationSignedoffby: Rich Salz <rsalz@akamaicom>
Fix memory overreadFix from David Baggett via tweetSignedoffby: Rich Salz <rsalz@opensslorg>
Various doc fixesMake all mention of digest algorithm use "any supported algorithm"RT2071, some new manpages from Victor B Wagner <vitus@cryptocomru>:X509_LOOKUP_hash_dirpodX509_check_capodX509_check_issuedpodRT 1600:Remove references to nonexistant objects3Add RETURN VALUES to BIO_do_accept pageRT1818:RSA_sign Can return values other than 0 on failureRT3634:Fix AES CBC aliases Steffen Nurpmeso <sdaoden@yandexcom>RT3678:Some clarifications to BIO_new_pairDevchandra L Meetei <dlmeetei@gmailcom>RT3787:Fix some EVP_ function return valuesLaetitia Baudoin <lbaudoin@googlecom>
GH350: help text few s_client and s_server flagsadd help description of sigalgs, client_sigalgs, curvesand named_curveSignedoffby: Rich Salz <rsalz@akamaicom>
Fixed problem with multiple loadunload of comp zlibSignedoffby: Rich Salz <rsalz@akamaicom>
GH correct organizationalUnitNameSignedoffby: Rich Salz <rsalz@akamaicom>
Clean up reset of read/write sequencesUse sizeof instead of an explicit size, and use the functions for thepurpose
PACKET: add methods for reading lengthprefixed TLS vectorsRewrite ssl3_get_client_hello to use the new methods
Fix SSLv2compatible ClientHello processingIf the client challenge is less than 32 bytes, it is padded with leading  not trailing  zero bytes
PACKET: constify where possibleThe PACKET should hold a 'const unsigned char' underneath as wellbut the legacy code passes the record buffer around as 'unsigned char'to callbacks, too so that's a bigger refactor
GH371: Print debug info for ALPN extensionAlso known as RT 4106Signedoffby: Rich Salz <rsalz@akamaicom>
Remove _locked memory functionsUndocumented, unused, unnecessary replaced by secure arena
BN_bin2bn handle leading zero'sIf a binary sequence is all zero's, call BN_zero
Add NewSessionTicket test suiteAdd a set of tests for checking that NewSessionTicket messages arebehaving as expected
Fix TLSProxy end of test detectionPreviously TLSProxy would detect a successful handshake once it saw theserver Finished message This causes problems with abbreviated handshakes,or if the client fails to process a message from the last server flightThis change additionally sends some application data and finishes when theclient sends a CloseNotify
Fix DTLS session ticket renewalA DTLS client will abort a handshake if the server attempts to renew thesession ticket This is caused by a state machine discrepancy between DTLSand TLS discovered during the state machine rewrite workThe bug can be demonstrated as follows:Start a DTLS s_server instance:openssl s_server dtlsStart a client and obtain a session but no ticket:openssl s_client dtls sess_out sessionpem no_ticketNow start a client reusing the session, but allow a ticket:openssl s_client dtls sess_in sessionpemThe client will abort the handshake
Ignore generated S ARM assembly filesSignedoffby: Rich Salz <rsalz@akamaicom>
RT4019: Duplicate hmac flag in dgstpodSignedoffby: Rich Salz <rsalz@opensslorg>
GH372: Remove duplicate flagsSignedoffby: Rich Salz <rsalz@opensslorg>
Small cleanup of cryptopodCame up on the mailing list, from Ken Goldman
GH337: Need backslash before leading Signedoffby: Rich Salz <rsalz@akamaicom>
RT4015: Add missing date to CHANGESSignedoffby: Rich Salz <rsalz@akamaicom>
More test casesAdd DSA testsAdd tests to verify signatures against public keys This will also checkthat a public key is read in correctly
Add DSA digest length checks
Fix L<> content in manpagesL<foo|foo> is suboptimal  If the xref is the same as the title,which is what we do, then you only need L<foo>  This fixes all1457 occurrences in 349 files  Approximately  And pod used toneed both
Add new types to indentpro
Add new GOST OIDsAdd new OIDs for latest GOST updates
Restore previous behaviour of only running one algorithm when evp alg is usedSubmitted by: Eric Young <eay@poboxcom>
restore usage of elapsed that was disabled in the ifdef reorg
GH345: Remove stderr output
Move FAQ to the webBest hope of keeping current
PACKETise CertificateRequestProcess CertificateRequest messages using the PACKET API
PACKETise ClientKeyExchange processingUse the new PACKET code to process the CKE message
PACKETise NewSessionTicketProcess NewSessionTicket messages using the new PACKET API
Fix session ticketsCommit 9ceb2426b0 PACKETise ClientHello broke session tickets by failingto detect the session ticket extension in an incoming ClientHello Thiscommit fixes the bug
add CCM docs
Add CCM ciphersuites from RFC6655 and RFC7251
ccm8 support
CCM support
Update docsClarify and update documention for extra chain certificatesPR3878
Documentation for SSL_check_chain
for test_sslvertol, add a value to display SSL version < 3 in debug
Fixups in libssl test harness select an actual file handle for devnull do not declare $msgdata twice SKE records sometimes seem to come without sig in SKE parsing, use and use $pub_key_len when parsing $pub_key
Use I to add to @INC, and use w to produce warnings
Fix FAQ formatting for new website
PACKETise Certificate Status messageProcess the Certificate Status message using the PACKET API
Enhance PACKET readabilityEnhance the PACKET code readability, and fix a stale comment Thanksto Ben Kaduk bkaduk@akamaicom for pointing this out
Add missing return check for PACKET_buf_initThe new ClientHello PACKET code is missing a return value check
GH364: Free memory on an error pathPart of RT 3997Per Ben, just jump to common exit codeSignedoffby: Rich Salz <rsalz@akamaicom>
PACKETise Server Certificate processingUse the PACKET API to process an incoming server Certificate message
Return error for unsupported modesPR3974PR3975
Fix memory leak if setup fails
Err isn't always malloc failure
Remove Gost94 signature algorithmThis was obsolete in 2001  This is not the same as Gost94 digestThanks to Dmitry Belyavsky <beldmit@gmailcom> for review and advice
Fix "make test" seg fault with SCTP enabledWhen config'd with "sctp" running "make test" causes a seg fault This isactually due to the way ssltest works  it dives under the covers and freesup BIOs manually and so some BIOs are NULL when the SCTP code does notexpect it The simplest fix is just to add some sanity checks to make surethe BIOs aren't NULL before we use themThis problem occurs in master and 102 The fix has also been applied to101 to keep the code in sync
Fix missing return value checks in SCTPThere are some missing return value checks in the SCTP code In master thiswas causing a compilation failure when config'd with"strictwarnings sctp"
make updateRun a "make update" for the OSSLTest Engine changes
Use dynamic engine for libssl test harnessUse a dynamic engine for ossltest engine so that we can build it withoutsubsequently deploying it during install We do not want people accidentallyusing this engine
Add a test for 0 p value in anon DH SKEWhen using an anon DH ciphersuite a client should reject a 0 value for p
Extend TLSProxy capabilitiesAdd ServerHello parsing to TLSProxyAlso add some very limited ServerKeyExchange parsingAdd the capability to set client and server cipher listsFix a bug with fragment lengths
Add some libssl testsTwo tests are added: one is a simple version tolerance test; the second isa test to ensure that OpenSSL operates correctly in the case of a zerolength extensions block The latter was broken inadvertently now fixedand it would have been helpful to have a test case for it
Add a libssl test harnessThis commit provides a set of perl modules that support the testing oflibssl The test harness operates as a maninthemiddle proxy betweens_server and s_client Both s_server and s_client must be started using the"testmode" option which loads the new OSSLTEST engineThe test harness enables scripts to be written that can examine the packetssent during a handshake, as well as potentially modifying them so thatotherwise illegal handshake messages can be sent
Add OSSLTest EngineThis engine is for testing purposes only It provides crippled cryptoimplementations and therefore must not be used in any instance wheresecurity is requiredThis will be used by the forthcoming libssl test harness which will operateas a maninthemiddle proxy The test harness will be able to modifyTLS packets and read their contents By using this test engine packets arenot encrypted and MAC codes always verify
Check for 0 modulus in BN_MONT_CTX_setThe function BN_MONT_CTX_set was assuming that the modulus was nonzeroand therefore that |mod>top| > 0 In an error situation that may not bethe case and could cause a seg faultThis is a follow on from CVE20151794
Fix seg fault with 0 p val in SKEIf a client receives a ServerKeyExchange for an anon DH ciphersuite with thevalue of p set to 0 then a seg fault can occur This commits adds a test toreject p, g and pub key parameters that have a 0 value in accordance withRFC 5246The security vulnerability only affects master and 102, but the fix isadditionally applied to 101 for additional confidenceCVE20151794
Normalise make errors outputmake errors wants things in a different order to the way things arecurrently defined in the header files The easiest fix is to just let itreorder it
GH365: Missing ifdef rename
RT3999: Remove subcomponent version stringsEspecially since after the ifdef cleanups this is not useful
Fix build break
Find the right indent on BSD
GH357: Update ocspcAdd Host Header in OCSP query if no host header is set via headerSignedoffby: Rich Salz <rsalz@akamaicom>
RT3998: fix X509_check_hostpod release to 102Signedoffby: Rich Salz <rsalz@akamaicom>
Fix clang uninitialized variable warningWe could just initialize it, but to be consistent with the rest of the fileit seemed to make more sense to just drop
Revert "Fix uninitalised warning"This reverts commit 704563f04a8401781b359906c1f88a30e12af69cReverting in favour of the next commit which removes the underlying causeof the warning
Fix uninitalised warning
RT3990: Fix include pathSignedoffby: Rich Salz <rsalz@opensslorg>
Change error reason to match previous behaviour
Fix unhandled error condition in sslv2 client hello parsingstrictwarnings started showing warnings for this todaySurely an error should be raised if these reads fail?
Fix SRTP s_client/s_server optionsThe use_srtp s_client/s_server option is supposed to take a colonseparated string as an argument In master this was incorrectly set toexpect a filename
PACKETise NextProtoChange NextProto message processing to use the PACKET API
PACKETise CertificateVerify processingModify CertificateVerify processing to use the new PACKET API
PACKETise ClientCertificate processingUse the PACKET API for processing ClientCertificate messages
Fix a bug in the new PACKET implementationSome of the PACKET functions were returning incorrect data An unfortunatechoice of test data in the unit test was masking the failure
Fix warning when compiling with noec2mEC_KEY_set_public_key_affine_coordinates was using some variables that onlyapply if OPENSSL_NO_EC2M is not defined
Fix make errors for the CCS changesThe move of CCS into the state machine was causing make errors to fail Thisfixes it
Fix ssl3_read_bytes handshake fragment bugThe move of CCS into the state machine introduced a bug in ssl3_read_bytesThe value of |recvd_type| was not being set if we are satisfying the requestfrom handshake fragment storage This can occur, for example, withrenegotiation and causes the handshake to fail
Move DTLS CCS processing into the state machineContinuing on from the previous commit this moves the processing of DTLSCCS messages out of the record layer and into the state machine
Move TLS CCS processing into the state machineThe handling of incoming CCS records is a little strange Since CCS is nota handshake message it is handled differently to normal handshake messagesUnfortunately whilst technically it is not a handhshake message the realityis that it must be processed in accordance with the state of the handshakeCurrently CCS records are processed entirely within the record layer Inorder to ensure that it is handled in accordance with the handshake statea flag is used to indicate that it is an acceptable time to receive a CCSPreviously this flag did not exist see CVE20140224, but the flag should only really be considered a workaround for the problem that CCS is not visible to the state machineOutgoing CCS messages are already handled within the state machineThis patch makes CCS visible to the TLS state machine A separate commitwill handle DTLS
PACKETise ClientHello processingUses the new PACKET code to process the incoming ClientHello including allextensions etc
PACKET unit testsAdd some unit tests for the new PACKET API
Add initial packet parsing codeProvide more robust inline functions to replace n2s, n2l, etc Thesefunctions do the same thing as the previous macros, but also keep trackof the amount of data remaining and return an error if we try to read moredata than we've got
Fix refactoring breakage
don't reset return value to 0
Add Wconditionaluninitialized to clang strict warnings
Build with strictwarnings on FreeBSD
Make BSD make happy with subdirectories
GH336: Return an exit code if report fails
Only define PAGE_SIZE if not already defined
Remove erroneous server_random fillingCommit e481f9b90b164 removed OPENSSL_NO_TLSEXT from the codePreviously if OPENSSL_NO_TLSEXT was not defined then the server random wasfilled during getting of the ClientHello If it was defined then theserver random would be filled in ssl3_send_server_hello Unfortunately incommit e481f9b90b164 the OPENSSL_NO_TLSEXT guards were removed but bothserver random fillings were left in This could cause problems for sessionticket callbacks
Clear BNmont values when free'ing itFrom a CloudFlare patch
Various doc fixes from GH pull requestsThanks folks:348 Benjamin Kaduk317 Christian Brueffer254 Erik Tews253 Erik Tews219 Carl Mehner155 ghost95 mancha51 DominikNeubauer
RT3742: Add xmpp_server to s_client
RT3963: Allow OCSP stapling with rev and www
RT3962: Check accept_count only if not unlimited
RT3961: Fix switch/case errors in flag parsing
RT3959: Fix misleading comment
cleanse psk_identity on error
Free and cleanse pms on error
Don't request certificates for any PSK ciphersuite
CAMELLIA PSK ciphersuites from RFC6367
Add PSK ciphersuites to docs
Update CHANGES
Add RFC4785 ciphersuites
Add RFC4279, RFC5487 and RFC5489 ciphersuitesNote: some of the RFC4279 ciphersuites were originally part of PR2464
Initial new PSK ciphersuite defines
Add full PSK trace support
PSK premaster secret derivationMove PSK premaster secret algorithm to ssl_generate_master secret soexisting key exchange code can be used and modified slightly to addthe PSK wrapping structure
Extended PSK server supportAdd support for RSAPSK, DHEPSK and ECDHEPSK server sideUpdate various checks to ensure certificate and server key exchange messagesare only sent when requiredUpdate message handling PSK server key exchange parsing now include anidentity hint prefix for all PSK server key exchange messages PSKclient key exchange message expects PSK identity and requests key forall PSK key exchange ciphersuitesUpdate flags for RSA, DH and ECDH so they are also used in PSK
Extended PSK client supportAdd support for RSAPSK, DHEPSK and ECDHEPSK client sideUpdate various checks to ensure certificate and server key exchange messagesare only expected when requiredUpdate message handling PSK server key exchange parsing now expects anidentity hint prefix for all PSK server key exchange messages PSKclient key exchange message requests PSK identity and key for all PSKkey exchange ciphersuites and includes identity in messageUpdate flags for RSA, DH and ECDH so they are also used in PSK
PSK PRF correctionFor SHA384 PRF PSK ciphersuites we have to switch to default PRF forTLS < 12
Make auto DH work with DHEPSK
Check for kECDH with extensions
Enable PSK if corresponding mask set
Disable all PSK if no callback
Disable unsupported PSK algorithms
new PSK text constants
New PSK aliases
New PSK keyex text constants
fields for PSK key, new constants
Fix write failure handling in DTLS12The DTLS code is supposed to drop packets if we try to write them out butthe underlying BIO write buffers are full ssl3_write_pending containsan incorrect test for DTLS that controls this The test only checks forDTLS1 so DTLS12 does not correctly clear the internal OpenSSL buffer whichcan later cause an assert to be hit This commit changes the test to coverall DTLS versionsRT3967
RT3774: doublefree in DSA
RT3639: Add no_comp description to online help
Tweak README about rt and bug reporting
Document signature algorithm setting functions
Add some OCSP documentation
Allow any order for signature algorithm string
Add test for SSL_set_session_ticket_extThe function SSL_set_session_ticket_ext sets the ticket data to be sent inthe ClientHello This is useful for EAPFAST This commit adds a test toensure that when this function is called the expected ticket data actuallyappears in the ClientHello
Remove support for SSL3_FLAGS_DELAY_CLIENT_FINISHEDThis flag was not set anywhere within the codebase only read It couldonly be set by an app reaching directly into s>s3>flags and setting itdirectly However that method became impossible when libssl was opaquifiedEven in 102/101 if an app set the flag directly it is only relevant tossl3_connect, which calls SSL_clear during initialisation that clearsany flag settings Therefore it could take effect if the app set the flagafter the handshake has started but before it completed It seems quiteunlikely that any apps really do this especially as it is completelyundocumentedThe purpose of the flag is suppress flushing of the write bio on the clientside at the end of the handshake after the client has written the Finishedmessage whilst resuming a session This enables the client to sendapplication data as part of the same flight as the Finished messageThis flag also controls the setting of a second flag SSL3_FLAGS_POP_BUFFERThere is an interesting comment in the code about this second flag in theimplementation of ssl3_write:/ This is an experimental flag that sends the last handshake message in the same packet as the first use data  used to see if it helps the TCP protocol during sessionid reuse /It seems the experiment did not work because as far as I can tell nothingis using this code The above comment has been in the code since SSLeayThis commit removes support for SSL3_FLAGS_DELAY_CLIENT_FINISHED, as wellas the associated SSL3_FLAGS_POP_BUFFER
rsaz_exph: align license with the rest of the contribution
Document shared sigalgs functions
Some cleanups for crypto/bnCreate bn_free_d utility routine and use itFix RT3950Also a missing cleanse, from Loganaden Velvindron loganaden@gmailcom,who noticed it in a Cloudflare patch
free names before context
typo
Update demoUse new SSL_CONF options in demo Add intermediate and root CAs andupdate all to use SHA256
SSL_CONF additionsAdd support for loading verify and chain stores in SSL_CONFCommands to set verify mode and client CA namesAdd documentation
Rewrite crypto/ex_dataRemoved ability to set ex_data impl at runtime  This removed thesethree functions:const CRYPTO_EX_DATA_IMPL CRYPTO_get_ex_data_implementationvoid;int CRYPTO_set_ex_data_implementationconst CRYPTO_EX_DATA_IMPL i;int CRYPTO_ex_data_new_classvoid;It is no longer possible to change the ex_data implementation atruntime  Luckily those functions were never documented :Also removed the ability to add new exdata "classes"  We don't believethis received much if any use, since you can't add it to OpenSSL objects,and there are probably better native methods for developers to addtheir own extensible data, if they really need thatReplaced the internal hash table of per"class" stacks with a simpleindexed array  Reserved an index for "app" applicationEach API used to take the lock twice; now it only locks onceUse local stack storage for function pointers, rather than malloc,if possible ie, number of ex_data items is under a dozenMake CRYPTO_EX_DATA_FUNCS opaque/internalAlso fixes RT3710; index zero is reserved
Use uint32_t consistently for flags
Remove obsolete key formatsRemove support for RSA_NET and Netscape key format keyform nAlso removed documentation of SGC
Fix author credit for e5c0bc6
Revert "Missing perldoc markup around < literal"This reverts commit e5c0bc6cc49a23b50a272801c4bd53639c25fca4
GH322: Fix typo in generated comment
Maintain backwardscompatible SSLv23_method macros
Can't use trusted with CA{path,file}
Missing perldoc markup around < literal
Conversion to UTF8 where neededThis leaves behind files with names ending with 'iso88591'  Theseshould be safe to remove  If something went wrong when reencoding,there will be some files with names ending with 'utf8' left behind
Small script to reencode files that need it to UTF8This requires 'iconv' and that 'file' can take the options 'b' and 'i'
Remove extra '; \' in apps/MakefileFixes GH330
Set numeric IDs for tar as well
Stop using tardyInstead of piping through tardy, and possibly suffering from bugs in certainversions, use transform, owner and group directly with GNU tar wealready expect that tar variant
correct example
Exit on error in ecparam
make stacks
Sort @sstacklst correctly
Apply some missing updates from previous commits
Update CHANGES and NEWS for the new release
Extend show_chain option to verify to show more infoThe show_chain flag to the verify command line app shows information aboutthe chain that has been built This commit adds the text "untrusted" againstthose certificates that have been used from the untrusted list
Add help text for some verify optionsFills in the help text for a number of options to verify that were blank
Add documentation for some missing verify optionsFills in a couple of verify options that were lacking documentation
Reject calls to X509_verify_cert that have not been reinitialisedThe function X509_verify_cert checks the value of |ctx>chain| at thebeginning, and if it is NULL then it initialises it, along with the valueof ctx>untrusted The normal way to use X509_verify_cert is to firstcall X509_STORE_CTX_init; then set up various parameters etc; then callX509_verify_cert; then check the results; and finally callX509_STORE_CTX_cleanup The initial call to X509_STORE_CTX_init sets|ctx>chain| to NULL The only place in the OpenSSL codebase  where|ctx>chain| is set to anything other than a non NULL value is inX509_verify_cert itself Therefore the only ways that |ctx>chain| could benon NULL on entry to X509_verify_cert is if one of the following occurs:1 An application calls X509_verify_cert twice without reinitialisingin between2 An application reaches inside the X509_STORE_CTX structure and changesthe value of |ctx>chain| directlyWith regards to the second of these, we should discount this  it shouldnot be supported to allow thisWith regards to the first of these, the documentation is not exactlycrystal clear, but the implication is that you must callX509_STORE_CTX_init before each call to X509_verify_cert If you failto do this then, at best, the results would be undefinedCalling X509_verify_cert with |ctx>chain| set to a non NULL value islikely to have unexpected results, and could be dangerous This commitchanges the behaviour of X509_verify_cert so that it causes an error if|ctx>chain| is anything other than NULL because this indicates that wehave not been initialised properly It also clarifies the associateddocumentation This is a follow up commit to CVE20151793
Add test for CVE20151793This adds a test for CVE20151793 This adds a new test fileverify_extra_testc, which could form the basis for additionalverification tests
Fix alternate chains certificate forgery issueDuring certificate verfification, OpenSSL will attempt to find analternative certificate chain if the first attempt to build such a chainfails An error in the implementation of this logic can mean that anattacker could cause certain checks on untrusted certificates to bebypassed, such as the CA flag, enabling them to use a valid leafcertificate to act as a CA and "issue" an invalid certificateThis occurs where at least one cert is added to the first chain from thetrust store, but that chain still ends up being untrusted In that casectx>last_untrusted is decremented in errorPatch provided by the BoringSSL projectCVE20151793
Document the nameopt change
Make "oneline" the default for nameoptThere's no reason why we should default to a output format that isold, and confusing in some casesThis affects the commands "ca", "crl", "req" and "x509"
document 2 return value
Relax CCM tag checkIn CCM mode don't require a tag before initialising decrypt: this allowsthe tag length to be set without requiring the tag
Dup peer_chain properly in SSL_SESSION
Check for errors with SRP
make update
Use single master secret generation function
Check dgram_sctp_write return value
Check BIO_dgram_sctp_wait_for_dry return value for error
missing break
Don't output bogus errors in PKCS12_parsePR3923
Add docs for ssl verification parameter functions
Fix windows buildMove include's inside the ifdef
Fix PSK client handlingThe PSK identity hint should be stored in the SSL_SESSION structureand not in the parent context which will overwrite values usedby other SSL structures with the same SSL_CTX
Add PSK GCM ciphersuites from RFC5487
PSK trace keyex fixes
Avoid duplicationWe always free the handshake buffer when digests are freed so moveit into ssl_free_digest_list
Tidy up ssl3_digest_cached_records logicRewrite ssl3_digest_cached_records handling Only digest cached recordsif digest array is NULL: this means it is safe to callssl3_digest_cached_records multiple times subsequent calls are no opRemove flag TLS1_FLAGS_KEEP_HANDSHAKE instead only update handshake bufferif digest array is NULLAdd additional "keep" parameter to ssl3_digest_cached_records to indicateif the handshake buffer should be retained after digesting cached recordsneeded for TLS 12 client authentication
More secure storage of key materialAdd secure heap for storage of private keys when possibleAdd BIO_s_secmem, CBIGNUM, etcAdd BIO_CTX_secure_new so all BIGNUM's in the context are secureContributed by Akamai Technologies under the Corporate CLA
Add $! to errors, use script basename
GH297: Fix NAME section of SSL_CTX_use_serverinfopodSignedoffby: Rich Salz <rsalz@akamaicom>
RT3682: Avoid doublefree on OCSP parse errorFound by Kurt Cancemi
RT3856: Fix memory leaks in test code
make update
Rearrange rsazA small rearrangement so the inclusion of rsaz_exph would beunconditional, but what that header defines becomes conditionalThis solves the weirdness where rsaz_exph gets in and out of thedependency list for bn_expc, depending on the present architecture
RT3907fixTypo in local variable name; introduced by previous fix
RT3907: avoid "local" in testssl script
Remove SESS_CERT entirely
Move peer chain to SSL_SESSION structure
Remove unnuecessary ifdefsIf RSA or DSA is disabled we will never use a ciphersuite withRSA/DSA authentication as it is already filtered out by the cipherlist logic
Remove certificates from sess_certAs numerous comments indicate the certificate and key array is not anappopriate structure to store the peers certificate: so remove it andjust the s>session>peer instead
Remove peer temp keys from SESS_CERT
RT3917: add cleanup on an error path
Cleanup mttestc : because we no longer use stdio here, don't include it
Add ldl to the build of mttestc
Cleanup mttestc : use BIO_free only, no preceding hacksSince [sc]_ssl>[rw]bio aren't available, do not try to fiddle withthem  Surely, a BIO_free on the "main" BIOs should be enough
Cleanup mttestc : do not try to output reference counts when threads are done
Cleanup mttestc : better error reporting when certs are miggins
Cleanup mttestc : make ssl_method a pointer to const
Cleanup mttestc : modernise outputConstruct bio_err and bio_stdout from file handles instead of FILEpointers, since the latter might not be implemented when OPENSSL_NO_STDIOis definedConvert all output to use BIO_printfChange lh_foo to lh_SSL_SESSION_foo
Cleanup mttestc : modernise the threads setup
Cleanup mttestc : remove MS_CALLBACK
Revert "Avoid duplication"This reverts commit d480e182fe20fcaeca7817a4693eeaf594bb1a32Commit broke TLS handshakes due to fragility of digest caching: that will befixed separately
Avoid duplicationWe always free the handshake buffer when digests are freed so moveit into ssl_free_digest_list
remove unnecessary NULL checks
typo: should be OPENSSL_free
Make preprocessor error into real preprocessor error
Remove one extraneous parenthesis
RT2547: Tighten perms on generated privkey filesWhen generating a private key, try to make the output file be readableonly by the owner  Put it in CHANGES file since it might be noticeableAdd "int private" flag to apps that write private keys, and check that it'sset whenever we do write a private key  Checked via assert so that thisbug securityrelated gets fixed  Thanks to Viktor for help in tracingthe codepaths where private keys are written
Refactor into clear_ciphers; RT3588While closing RT3588 Remove obsolete comment Kurt and I saw that afew lines to completely clear the SSL cipher state could be moved intoa common function
Fix argument processing error from the option parsing change over
Fix argument processing error from the option parsing change over
Encode b  NULL or blen  0 as zeroPR3904
Allow a zero length extension blockIt is valid for an extension block to be present in a ClientHello, but tobe of zero length
Fix ABI break with HMACRecent HMAC changes broke ABI compatibility due to a new field in HMAC_CTXThis backs that change out, and does it a different wayThanks to Timo Teras for the concept
Update CHANGES and NEWSUpdates to CHANGES and NEWS to take account of the latest security fixes
bn/bn_gf2mc: avoid infinite loop wich malformed ECParamtersCVE20151788
PKCS7: Fix NULL dereference with missing EncryptedContentCVE20151790
Fix length checks in X509_cmp_time to avoid outofbounds readsAlso tighten X509_cmp_time to reject more than three fractionalseconds in the time; and to reject trailing garbage after the offsetCVE20151789
More ssl_session_dup fixesFix error handling in ssl_session_dup, as well as incorrect setting up ofthe session ticket Follow on from CVE20151791Thanks to LibreSSL project for reporting these issues
e_aes_cbc_hmac_shac: address linker warning about OPENSSL_ia32cap_P size mismatch
gcmc: address linker warning about OPENSSL_ia32cap_P size mismatch
Tidy disabled algorithm handlingDetermine disabled algorithm masks when algorithms are loaded instead ofrecalculating them each time
Restore GOST mac setupRestore GOST mac setup which was accidentally removed during cipherrefactor
Remove SSL_OP_TLS_BLOCK_PADDING_BUGThis is a workaround so old that nobody remembers what buggy clientsit was for It's also been broken in stable branches for two years andnobody noticed seehttps://boringsslreviewgooglesourcecom//c/1694/
DTLS handshake message fragments musn't span packetsIt should not be possible for DTLS message fragments to span multiplepackets However previously if the message header fitted exactly into onepacket, and the fragment body was in the next packet then this would workObviously this would fail if packets get reordered midflight
Correct type of RECORD_LAYER_get_rrec_lengthThe underlying field returned by RECORD_LAYER_get_rrec_length is anunsigned int The return type of the function should match that
Fix leak in HMAC error pathIn the event of an error in the HMAC function, leaks can occur because theHMAC_CTX does not get cleaned upThanks to the BoringSSL project for reporting this issue
EC_POINT_is_on_curve does not return a booleanThe function EC_POINT_is_on_curve does not return a boolean valueIt returns 1 if the point is on the curve, 0 if it is not, and 1on error Many usages within OpenSSL were incorrectly using thisfunction and therefore not correctly handling error conditionsWith thanks to the Open Crypto Audit Project for reporting this issue
Change BIO_number_read and BIO_number_written to be 64 bitThe return type of BIO_number_read and BIO_number_written as well asthe corresponding num_read and num_write members in the BIO structure hasbeen changed from unsigned long to uint64_t On platforms where an unsignedlong is 32 bits eg Windows these counters could overflow if >4Gb istransferredWith thanks to the Open Crypto Audit Project for reporting this issue
Tighten extension handlingThis adds additional checks to the processing of extensions in a ClientHelloto ensure that either no extensions are present, or if they are then theytake up the exact amount of space expectedWith thanks to the Open Crypto Audit Project for reporting this issue
Fix memory leaks in BIO_dup_chainThis fixes a memory leak that can occur whilst duplicating a BIO chain ifthe call to CRYPTO_dup_ex_data fails It also fixes a second memory leakwhere if a failure occurs after successfully creating the first BIO in thechain, then the beginning of the new chain was not freedWith thanks to the Open Crypto Audit Project for reporting this issue
Replace memset with OPENSSL_clear_freeBUF_MEM_free attempts to cleanse memory using memset immediately priorto a free This is at risk of being optimised away by the compiler, soreplace with a call to OPENSSL_clear_free insteadWith thanks to the Open Crypto Audit Project for reporting this issue
Make sure test/gost2814789testc can see configuration macrostest/gost2814789testc needs to include openssl/e_os2h or it wouldn'tsee the defined OPENSSL_NO_ macros
When making libcrypto from apps or test, make sure to include enginesFor librypto to be complete, the stuff in both crypto/ and engines/have to be built  Doing 'make test' or 'make apps' from a cleansource tree failed to do soCorrected by using the new 'build_libcrypto' in the top Makefile
Add and rearrange building of librariesThere's a need for a target that will build all of libcrypto, so let'sadd 'build_libcrypto' that does this  For ortogonality, let's alsoadd 'build_libssl'  Have both also depend on 'libcryptopc' and'libsslpc' so those get built together with the librariesThis makes 'all' depend on fewer things directly
Fix DZLIB build for opaque COMP types
Use bio_err not stderr in appsExcept for VMS startup code
No fprintf in the txt_db componentAlso removed a source file that isn't built, and movedanother one to test for eventual fixing
Explicitly mention PKCS5_PBKDF2_HMAC in EVP docSignedoffby: Rich Salz <rsalz@opensslorg>
Only allow a temporary rsa key exchange when they key is larger than 512
Properly check certificate in case of export ciphers
return correct NID for undefined object
Use CRYPTO_memcmp in ssl3_recordc
Use CRYPTO_memcmp when comparing authenticatorsPointed out by Victor Vasiliev vasilvv@mitedu via Adam LangleyGoogle
Increase buffer size for passwords in pkcs12 CLI
Update trace codeAdd extension and ciphersuites to trace code
Check ASN1_INTEGER_get for errorsCheck return value when calling ASN1_INTEGER_get to retrieve a certificateserial number If an error occurs which will be caused by the value beingout of range revert to hex dump of serial number
Set error code, no fprintf stderr, on errors
GH293: Typo in CHANGES file
Allow all curves when the client doesn't send an supported elliptic curves extensionAt least in the case of SSLv3 we can't send an extention
Rename all static TS_xxx to ts_xxx
Remove misleading commentRemove a comment that suggested further clean up was requiredDH_free performs the necessary cleanupWith thanks to the Open Crypto Audit Project for reporting this issue
Clean premaster_secret for GOSTEnsure OPENSSL_cleanse is called on the premaster secret value calculated for GOSTWith thanks to the Open Crypto Audit Project for reporting this issue
Fix offbyone error in BN_bn2hexA BIGNUM can have the value of 0 The function BN_bn2hex fails to accountfor this and can allocate a buffer one byte too short in the event of 0being used, leading to a one byte buffer overrun All usage within theOpenSSL library is considered safe Any security risk is considerednegligibleWith thanks to Mateusz Kocielski LogicalTrust, Marek Kroemeke andFilip Palian for discovering and reporting this issue
Fix DTLS session resumptionThe session object on the client side is initially created duringconstruction of the ClientHello If the client is DTLS12 capable then itwill store 12 as the version for the session However if the server is onlyDTLS10 capable then when the ServerHello comes back the client switches tousing DTLS10 from then on However the session version does not getupdated Therefore when the client attempts to resume that session theserver throws an alert because of an incorrect protocol version
make updateMake update with manual edit so EVP_PKEY_asn1_set_item uses the sameordinal as 102
Add funtions to set item_sign and item_verifyPR3872
Fix compilation failure for some tool chainsSome tool chains eg android do not define IP_PMTUDISC_PROBE, and sothis build breaks
RT3230: Better test for C identifierobjectspl only looked for a space to see if the name could beused as a C identifier  Improve the test to match the real CrulesSignedoffby: Rich Salz <rsalz@akamaicom>
Standardize handling of ifdef'd optionsHere are the "rules" for handling flags that depend on ifdef: Do not ifdef the enum  Only ifdef the OPTIONS table  All ifdef'dentries appear at the end; by convention "engine" is last  Thisensures that at runtime, the flag will never be recognized/allowedThe next two bullets entries are for silencing compiler warnings: In the while/switch parsing statement, use ifdef for the body todisable it; leave the "case OPT_xxx:" and "break" statements outsidethe ifdef/ifndef  See ciphersc for example If there are multiple options controlled by a single guard, OPT_FOO,OPT_BAR, etc, put a an ifdef around the set, and then do "else"and a series of case labels and a break See OPENSSL_NO_AES in cmscfor example
RT832: Use REUSEADDR in ocsp responderI also reordered some of ifdef's
RT3472: Doc pkcs8 iter flag is in OpenSSL 11
Add the macro OPENSSL_SYS_WIN64This is for consistencyAdditionally, have its presence define OPENSSL_SYS_WINDOWS as well
RT3848: Call SSL_COMP_free_compression_methodsSignedoffby: Rich Salz <rsalz@akamaicom>
GH249: Fix bad regexp in arg parsingSignedoffby: Rich Salz <rsalz@akamaicom>
Fix IP_MTU_DISCOVER typoThe code in bss_dgramc checks if IP_MTUDISCOVER is defined, where itshould test for IP_MTU_DISCOVERRT3888
Fix race condition in NewSessionTicketIf a NewSessionTicket is received by a multithreaded client whenattempting to reuse a previous ticket then a race condition can occurpotentially leading to a double free of the ticket dataCVE20151791This also fixes RT3808 where a session ID is changed for a session alreadyin the client session cache Since the session ID is the key to the cachethis breaks the cache accessParts of this patch were inspired by this Akamai change:https://githubcom/akamai/openssl/commit/c0bf69a791239ceec64509f9f19fcafb2461b0d3
Check the message type requested is the type received in DTLSdtls1_get_message has an |mt| variable which is the type of the message thatis being requested If it is negative then any message type is allowedHowever the value of |mt| is not checked in one of the main code paths, so apeer can send a message of a completely different type and it will beprocessed as if it was the message type that we were expecting This hasvery little practical consequences because the current behaviour will stillfail when the format of the message isn't as expected
Silence Clang warning about unit'd variable
fix warning
clear/cleanse cleanupWhere we called openssl_cleanse, make sure we do it on all errorpaths  Be consistent in use of sizeoffoo when possible
Remove struct ccs_header_ststruct ccs_header_st is not used so it should be removed
fix asn1parse inform
Remove OPENSSL_CONF/dev/null from testsAlmost two months ago, the warning about nonexisting config file wassupressed by setting the environment variable OPENSSL_CONF to /dev/nulleverywhere  Now that this warning is gone, that practice is no longerneeded
Restore module loadingThe module loading feature got broken a while ago, so restore it, buthave it a bit more explicit this time around
Fix double BIO_free in req
Fix build errors with enableec_nistp_64_gcc_128RT 3871
RT3876: Only load config when neededCreate app_load_config, a routine to load config file  Remove the"always load config" from the main app  Change the places that used toload config to call the new common routine
PEM doc fixes
check for error when creating PKCS8 structure
Use enum for X509_LOOKUP_TYPEUsing an enum with Wswitch means all lookup routines handleall cases  Remove X509_LU_PKEY which was never used
Change return type of the new accessorsThe new accessors SSL_get_client_random, SSL_get_server_random andSSL_SESSION_get_master_key should return a size_t to match the type of the|outlen| parameter
Change the new functions to use size_tChange the new SSL_get_client_random, SSL_get_server_random andSSL_SESSION_get_master_key functions to use size_t for |outlen| instead ofint
Clarify that SSL3_RANDOM_SIZE is a constant, for nowSignedoffby: Matt Caswell <matt@opensslorg>
Add new functions to extract {client,server}_random, master_keyTor uses these values to implement a lowrent clone of RFC 5705 which,in our defense, we came up with before RFC 5705 existed  But now thatssl_st is opaque, we need another way to get at themIncludes documentation, with suitable warnings about not actuallyusing these functionsSignedoffby: Nick Mathewson <nickm@torprojectorg>Signedoffby: Matt Caswell <matt@opensslorg>
Add a documentation clarification suggested by Matt CaswellSignedoffby: Matt Caswell <matt@opensslorg>
Add SSL_get_client_ciphers to return ciphers from ClientHelloOn the server side, if you want to know which ciphers the clientoffered, you had to use session>ciphers  But that field is nolonger visible, so we need a method to get at itSignedoffby: Nick Mathewson <nickm@torprojectorg>Signedoffby: Matt Caswell <matt@opensslorg>
Enable DH testsIn master, the 'dh' command is gone, so use 'dhparam' instead todetermine if we're compiled with DHAlso, set "@SECLEVEL1" for the weak DH test, so that it actuallypasses
make update
scrypt in pkcs8 utilAdd support for PKCS8 private key encryption using the scrypt algorithmin the pkcs8 utility Update documentation
Add function PKCS8_set0_pbeThis adds a new function which will encrypt a private key using PKCS8based on an X509_ALGOR structure and reimplements PKCS8_encrypt to use itUpdate pkcs8 utlity to use PKCS8_set0_pbe
Error if memory limit exceededSet a specific error if the parameters are otherwise valid but exceed thememory limit
Fix memory leak
Add PBE testsAdd support for PKCS12 and PBKDF2 password based encryption tests Addadditional test data
Fix ssltest to use 1024bit DHE parametersAlso add more ciphersuite test coverage, and a negative test for512bit DHE
Don't check for a negative SRP extension sizeThe size of the SRP extension can never be negative the variable|size| is unsigned Therefore don't check if it is less than zeroRT3862
Fix error check in GOST engineThe return value of i2d functions can be negative if an error occursTherefore don't assign the return value to an unsigned type and thencheck if it is negativeRT3862
Handle unsigned struct timeval membersThe members of struct timeval on OpenVMS are unsigned The logic forcalculating timeouts needs adjusting to deal with thisRT3862
Configure: replace mv8 with mcpuv8 in SPARC config linesRT3860
fix copy paste error in ec_GF2m function prototypesRT3858
bn/bn_lclh: fix MIPSspecific gcc version checkRT3859
RT3861: Mem/bio leak in req commandThe "out" variable is used for both key and csr  Close it afterwriting the first one so it can be reused when writing the otherSignedoffby: Rich Salz <rsalz@opensslorg>
Fix segfault in ec commandThanks to Brian Carpenter <briancarpenter@gmailcom> for finding this
Don't send an alert if we've just received oneIf the record received is for a version that we don't support, previously wewere sending an alert back However if the incoming record already lookslike an alert then probably we shouldn't do that So suppress an outgoingalert if it looks like we've got one incoming
fix s_client crashThe 'http proxy' commit broke s_client default host/port valueThanks to Matt for the simplest fix
Set first_packet for TLS clientsVersion negotiation was broken one of the late changes in the reviewprocess broke it The problem is that TLS clients do not set first_packet,whereas TLS/DTLS servers and DTLS clients do The simple fix is to setfirst_packet for TLS clients too
bn/asm/x86_64mont5pl: fix valgrind errorbn_get_bits5 was overstepping array boundary by 1 byte It was exclusivelyread overstep and data could not have been used The only potential problemwould be if array happens to end on the very edge of last accesible page
bn/bn_gf2mc: appease STACK, unstable code detectorRT3852
Fix update and depend in engines/The update: target in engines/ didn't recurse into engines/ccgostThe update: and depend: targets in engines/ccgost needed a fixup
Missed a couple of spots in the update change
Fix typo setting up certificate masksThe certificate masks are used to select which ciphersuite we are going touse The variables |emask_k| and |emask_a| relate to export grade keyexchange and authentication respecitively The variables |mask_k| and|mask_a| are the equivalent versions for nonexport grade This fixes aninstance where the two usages of export/nonexport were mixed up Inpractice it makes little difference since it still works!
Remove export static DH ciphersuitesRemove support for the two export grade static DH ciphersuites These twociphersuites were newly added along with a number of other static DHciphersuites to 102 However the two export ones have never workedsince they were introduced It seems strange in any case to be adding newexport ciphersuites, and given "logjam" it also does not seem correct tofix them
Fix offbyone in BN_randIf BN_rand is called with |bits| set to 1 and |top| set to 1 then a 1 bytebuffer overflow can occur There are no such instances within the OpenSSL atthe momentThanks to Mateusz Kocielski LogicalTrust, Marek Kroemeke, Filip Palian fordiscovering and reporting this issue
Reject negative shifts for BN_rshift and BN_lshiftThe functions BN_rshift and BN_lshift shift their arguments to the right orleft by a specified number of bits Unpredicatable results includingcrashes can occur if a negative number is supplied for the shift valueThanks to Mateusz Kocielski LogicalTrust, Marek Kroemeke and Filip Palianfor discovering and reporting this issue
Add CHANGES entry for OPENSSL_NO_TLSEXT removal
Remove support for OPENSSL_NO_TLSEXTGiven the pervasive nature of TLS extensions it is inadvisable to runOpenSSL without support for them It also means that maintainingthe OPENSSL_NO_TLSEXT option within the code is very invasive and probablynot well tested Therefore it is being removed
RT266: Add HTTP proxy/CONNECT to s_clientSignedoffby: Rich Salz <rsalz@opensslorg>
Fix the update target and remove duplicate file updatesWe had updates of certain header files in both Makefileorg and theMakefile in the directory the header file lived in  This is errorprone and also sometimes generates slightly different results usuallyjust a comment that differs depending on which way the update wasdoneThis removes the file update targets from the top level Makefile, addsan update: target in all Makefiles and has it depend on the depend: orlocal_depend: targets, whichever is appropriate, so we don't get adouble run through the whole file tree
Ignore files from other branchesThere are a number of files that are created on other branches that arenot held in git and are not needed in master When checking out masterafter working on another branch these files show up in "git status", sojust add them to gitignore
Lost alert in DTLSIf a client receives a bad hello request in DTLS then the alert is notsent correctlyRT2801Signedoffby: Matt Caswell <matt@opensslorg>
Fix various OPENSSL_NO_ optionsThis fixes compilation with various OPENSSL_NO_ options that got brokenduring the big apps cleanup
Fix a memory leak in compressionThe function RECORD_LAYER_clear is supposed to clear the contents of theRECORD_LAYER structure, but retain certain data such as buffers that areallocated Unfortunately one buffer for compression got missed and wasinadvertently being wiped, thus causing a memory leakIn part this is due to the fact that RECORD_LAYER_clear was reachinginside SSL3_BUFFERs and SSL3_RECORDs, which it really shouldn't So, I'verewritten it to only clear the data it knows about, and to defer clearingof SSL3_RECORD and SSL3_BUFFER structures to SSL_RECORD_clear and thenew function SSL3_BUFFER_clear
make update
correction
Add scrypt PBE algorithm codeThis adds support for the ASN1 structures in draftjosefssonscryptkdf03Private keys encrypted by scrypt can now be decrypted transparently as longas they don't exceed the memory limits
Add scrypt OID from draftjosefssonscryptkdf03
Replace switch/assignments with table lookupTypedef STRINT_PAIR to be the same as OPT_PAIR, and use that structure anda bunch of tables instead of switch statements to lookup various valuesout of the SSL/TLS message buffers  Shrinks a bunch of code
Correctly check for export size limit40 bit ciphers are limited to 512 bit RSA, 56 bit ciphers to 1024 bit
Add functions to convert between uint64_t and ASN1_INTEGER
Only support > 256bit elliptic curves with ecdh_auto server or by default clientAlso reorder preferences to prefer prime curves to binary curves, and P256 to everything elseThe result:$ openssl s_server named_curves "auto"This command will negotiate an ECDHE ciphersuite with P256:$ openssl s_clientThis command will negotiate P384:$ openssl s_client curves "P384"This command will not negotiate ECDHE because P224 is disabled with "auto":$ openssl s_client curves "P224"
Remove dh512pem
Update documentation with DiffieHellman best practices Do not advise generation of DH parameters with dsaparam to savecomputation time Promote use of custom parameters more, and explicitly forbid use ofbuiltin parameters weaker than 2048 bits Advise the callback to ignore <keylength>  it is currently calledwith 1024 bits, but this value can and should be safely ignored byservers
dhparam: fix documentationThe default bitlength is now 2048 Also clarify that either the numberof bits or the generator must be present:$ openssl dhparam 2and$ openssl dhparam 2048generate parameters but$ openssl dhparamdoes not
make update
Add scrypt testsAdd scrypt test support to evp_test and add test values fromfrom draftjosefssonscryptkdf03
Add scrypt supportAdd scrypt algorithm as described in draftjosefssonscryptkdf03
GitHub284: Fix typo in xx32pl scripts
bn/asm/vis3montpl: fix intermittent EC failures on SPARC T3BLKINIT optimization worked on T4, but for some reason appears "tooaggressive" for T3 triggering intermiitent EC failures It's not clearwhy only EC is affected
move masks out of CERT structure
Don't add write errors into bytecountsSignedoffby: Rich Salz <rsalz@opensslorg>
Move certificate validity flags out of CERT
Move signing digest out of CERT
CERT tidyMove perconnection state out of the CERT structure: which should just befor shared configuration data eg certificates to useIn particular move temporary premaster secret, raw ciphers, peer signaturealgorithms and shared signature algorithms
ASN1 INTEGER refactorRewrite and tidy ASN1_INTEGER and ASN1_ENUMERATED handlingRemove code duplicationNew functions to convert between int64_t and ASN1 types without thequirks of the old long conversion functionsAdd documentation
Add types to indentpro
Further version negotiation updatesMore miscellaneous updates to version negotiation following feedback
Move SSLv3_method functionsMove these functions into t1_clntc, t1_srvrc and t1_methc and takeadvantage of the existing tls1_get_method functions that all the othermethods are using Since these now have to support SSLv3 anyway we mightas well use the same set of get functions for both TLS and SSLv3
Updates following review commentsMiscellaneous updates following review comments on the version negotiationrewrite patches
Version negotiation rewrite doc updatesUpdate various documentation references to the new TLS__method names Alsoadd a CHANGES entry
Version negotiation rewrite cleanupFollowing the version negotiation rewrite all of the previous code that wasdedicated to version negotiation can now be deleted  all six source filesof it!!
Client side version negotiation rewriteContinuing from the previous commit this changes the way we do client sideversion negotiation Similarly all of the s23 "up front" state machine codehas been avoided and again things now work much the same way as they alreadydid for DTLS, ie we just do most of the work in thessl3_get_server_hello function
Server side version negotiation rewriteThis commit changes the way that we do server side protocol versionnegotiation Previously we had a whole set of code that had an "up front"state machine dedicated to the negotiating the protocol version This addssignificant complexity to the state machine Historically the justificationfor doing this was the support of SSLv2 which works quite differently toSSLv3+ However, we have now removed support for SSLv2 so there is littlereason to maintain this complexityThe one slight difficulty is that, although we no longer support SSLv2, wedo still support an SSLv3+ ClientHello in an SSLv2 backward compatibleClientHello format This is generally only used by legacy clients Thiscommit adds support within the SSLv3 code for these legacy formatClientHellosServer side version negotiation now works in much the same was as DTLS,ie we introduce the concept of TLS_ANY_VERSION If s>version is set tothat then when a ClientHello is received it will work out the mostappropriate version to respond with Also, SSLv23_method andSSLv23_server_method have been replaced with TLS_method andTLS_server_method respectively The old SSLv23 names still exist asmacros pointing at the new name, although they are deprecatedSubsequent commits will look at client side version negotiation, as well ofremoval of the old s23 code
Remove unused ifdef's from header filesAnd remove a duplicate comment, probably from a merge hiccup
Use error in openssl/srphFollow the same convention the other OPENSSL_NO_xxx header filesdo, and use error instead of making the header file be a noop
Make up for a missed 'make update' update
Update mkdef for moved header filecrypto/cryptlibh moved to crypto/include/internal; updatethe script
make depend
Add Iinclude to crypto/ compilesThe move of headers from crypto/ to crypto/include/internal/ needsthis extra inclusion directory or the build fails
Identify and move common internal libcrypto header filesThere are header files in crypto/ that are used by a number of crypto/submodules  Move those to crypto/include/internal and adapt theaffected source code and MakefilesThe header files that got moved are:crypto/cryptolibhcrypto/md32_commonh
Adjust unixly mk1mf after introduction of tkeyAdded depencies on the public variants of some keys in test to MakefileAdded the newly introduced key files from test/ in the list of filesto copy in util/pl/unixpl
make depend
Identify and move OpenSSL internal header filesThere are header files in crypto/ that are used by the rest ofOpenSSL  Move those to include/internal and adapt the affected sourcecode, Makefiles and scriptsThe header files that got moved are:crypto/constant_time_loclhcrypto/o_dirhcrypto/o_strh
Move definition of INTxx_MIN et al to internal headerHaving the INTxx_MIN et al macros defined in a public header isunnecessary and risky  Also, it wasn't done for all platforms thatmight need itSo we move those numbers to an internal header file, do the mathourselves and make sure to account for the integer representations weknow ofThis introduces include/internal, which is unproblematic since wealready use I$TOP/include everywhere  This directory is differentfrom crypto/include/internal, as the former is more general internalheaders for all of OpenSSL, while the latter is for libcrypto only
use unit64_t for CPUID and timestamp code
Allow use of standard integer typesInclude appropriate headers for standard integer types in e_os2hThis should use stdinth, inttypesh or a workaround for systems whichhave neither
Add missing ctypehHad old patch, forgot to push/patch this to master
Fix ocsp bugsVarious bugs found by Viktor, Emilia, Matt, etc
RT3841: memset cipher_data when allocatedIf an EVP implementation such as an engine fails out early, it'spossible to call EVP_CIPHER_CTX_cleanup which will callctx>cipher>cleanup before the cipher_data has been initializedvia ctx>cipher>init  Guarantee it's allbyteszero as soon asit is allocated
RT1207: document SSL_COMP_free_compression_methods
Remove some outdated defines
util/incore updateSupport crosscompile platforms that don't support FINGERPRINT_premain,eg VxWorks
bn/Makefile: give MacOS X hand to compiler armv8mont module
bn/asm/armv8montpl: boost performance
Configurations/10mainconf: update iOS commentary
aes/asm/bsaesarmv7pl: fix compilation with Xcode 63
aes/asm/aesnisha256x86_64pl: fix Windows compilation failure with old assembler
Call of memcmp with null pointers in obj_cmpThe function obj_cmp file crypto/objects/obj_datc can in somesituations call memcmp with a null pointer and a zero lengthThis is invalid behaviour When compiling openssl with undefinedbehaviour sanitizer add fsanitizeundefined to compile flags thiscan be seen One example that triggers this behaviour is the pkcs7command but there are others, eg I've seen it with the timestampfunction:apps/openssl pkcs7 in test/testp7pemWhat happens is that obj_cmp takes objects of the type ASN1_OBJECT andpasses their >data pointer to memcmp Zerosized ASN1_OBJECTstructures can have a null pointer as dataRT3816Signedoffby: Matt Caswell <matt@opensslorg>
Add CHANGES entry for Kerberos removal
Remove remaining Kerberos referencesFollowing on from the removal of libcrypto and libssl support for Kerberosthis commit removes all remaining references to Kerberos
Remove Kerberos support from libcryptoRemove libcrypto support for Kerberos following on from the previous commitwhich removed it from libssl
Remove Kerberos support from libsslRemove RFC2712 Kerberos support from libssl This code and the associatedstandard is no longer considered fitforpurpose
Remove Kerberos support from appsRemove Kerberos related options from the apps to prepare for thesubsequent commits which will remove libcrypto and libssl support forKerberos
Don't allow a CCS when expecting a CertificateVerifyCurrently we set change_cipher_spec_ok to 1 before callingssl3_get_cert_verify This is because this message is optional and if itis not sent then the next thing we would expect to get is the CCS However,although it is optional, we do actually know whether we should be receivingone in advance If we have received a client cert then we should expecta CertificateVerify message By the time we get to this point we willalready have bombed out if we didn't get a Certificate when we should havedone, so it is safe just to check whether |peer| is NULL or not If it iswe won't get a CertificateVerify, otherwise we will Therefore we shouldchange the logic so that we only attempt to get the CertificateVerify ifwe are expecting one, and not allow a CCS in this scenarioWhilst this is good practice for TLS it is even more important for DTLSIn DTLS messages can be lost Therefore we may be in a situation where aCertificateVerify message does not arrive even though one was sent In thatcase the next message the server will receive will be the CCS This couldalso happen if messages get reordered inflight In DTLS if|change_cipher_spec_ok| is not set and a CCS is received it is ignoredHowever if |change_cipher_spec_ok| is set then a CCS arrival willimmediately move the server into the next epoch Any messages arriving forthe previous epoch will be ignored This means that, in this scenario, thehandshake can never complete The client will attempt to retransmitmissing messages, but the server will ignore them because they are the wrongepoch The server meanwhile will still be waiting for the CertificateVerifywhich is never going to arriveRT2958
Fix the heap corruption in libeay32!OBJ_add_objectOriginal 'sizeofADDED_OBJ' was replaced with 'sizeofao' However,they return different sizes Therefore as the result heap gets corruptedand at some point later debug version of malloc detects the corruptionOn x86 we can observe that as follows:sizeofao  4sizeofao[0]  sizeofADDED_OBJ  8Issue reproduces with either enabling CRT debug heap or ApplicationVerifier's fullpage heapBasic debugging data from the moment the corruption is first detected:0:000:x86> |  0    id: 283c        create  name: opensslexe0:000:x86> kcn00 MSVCR120D!_heap_alloc_dbg_impl01 MSVCR120D!_nh_malloc_dbg_impl02 MSVCR120D!_nh_malloc_dbg03 MSVCR120D!malloc04 LIBEAY32!default_malloc_ex05 LIBEAY32!CRYPTO_malloc06 LIBEAY32!lh_insert07 LIBEAY32!OBJ_add_object08 LIBEAY32!OBJ_create09 openssl!add_oid_section0a openssl!req_main0b openssl!do_cmd0c openssl!main0d openssl!__tmainCRTStartup0e openssl!mainCRTStartup0f KERNEL32!BaseThreadInitThunk10 ntdll_77d60000!__RtlUserThreadStart11 ntdll_77d60000!_RtlUserThreadStartSignedoffby: Matt Caswell <matt@opensslorg>
Fix cipherlist order
Make COMP_CTX and COMP_METHOD opaqueSince COMP_METHOD is now defined in comp_lclh, it is nolonger possible to create new TLS compression methods withoutusing the OpenSSL source  Only ZLIB is supported by defaultAlso, since the types are opaque, ifdef guards to use "char "instead of the real type aren't necessaryThe changes are actually minor  Adding missing copyright to somefiles makes the diff misleadingly big
Additional X509_ALGOR documentation
Use pNULL not !p in if statements, mainly
Add missing NULL check in X509V3_parse_listMatt's note: I added a call to X509V3err to Kurt's original patchRT3840Signedoffby: Matt Caswell <matt@opensslorg>
Add missing terminating NULL to speed_options tableThis would cause memory corruption in opt_init because it relies on theterminating NULLRT3842
Fix for memcpy and strcmp being undefinedclang says: "s_cbc:958:9: error: implicitly declaring library function'memcpy'"
Check sk_SSL_CIPHER_new_null return valueIf sk_SSL_CIPHER_new_null returns NULL then ssl_bytes_to_cipher_listshould also return NULLBased on an original patch by mrpre <mrpre@163com>
Add SSL_use_certificate_chain_file functionAdd SSL_use_certiicate_chain file functions: this is works the sameway as SSL_CTX_use_certificate_chain_file but for an SSL structureUpdate SSL_CONF code to use the new functionUpdate docsUpdate ordinals
Fix typo in valid_star
Use "0" instead of "!strcmp" etcFor the various stringcompare routines strcmp, strcasecmp, strcmpuse "strcmp0" instead of "!strcmp"
Digest cached records if not sending a certificateIf server requests a certificate, but the client doesn't send one, cachedigested records This is an optimisation and ensures the correct finishedmac is used when extended master secret is used with client authentication
Make sig_app, sigx_app static
Make CAserial a type 's' optionThe file name given to CAserial might not exist yet  TheCAcreateserial option decides if this is ok or notPrevious to this change, CAserial was a type '<' option, and in thatcase, the existence of the file given as argument is tested quiteearly, and is a failure if it doesn't  With the type 's' option, theargument is just a string that the application can do whatever itwants with
Add a CAserial argument for signing the user cert requestThis is just to make sure that option is tested on a Unix build  Thisoption is already present in ms/testssbat, so it's an easy steal
SSL_CONF table reorganisationAdd command line switch entries to table and return SSL_CONF_TYPE_NONE forthem in SSL_CONF_cmd_value_typeUpdate docs
Initialize potentially uninitialized local variablesCompiling OpenSSL code with MSVC and /W4 results in a number of warningsOne category of warnings is particularly interesting  C4701 potentiallyuninitialized local variable 'name' used This warning pretty much meansthat there's a code path which results in uninitialized variables being usedor returned Depending on compiler, its options, OS, values in registersand/or stack, the results can be nondeterministic Cases like this are veryhard to debug so it's rational to fix these issuesThis patch contains a set of trivial fixes for all the C4701 warnings justinitializing variables to 0 or NULL or appropriate error code to make surethat deterministic values will be returned from all the execution pathsRT3835Signedoffby: Matt Caswell <matt@opensslorg>Matt's note: All of these appear to be bogus warnings, ie there isn'tactually a code path where an unitialised variable could be used  its justthat the compiler hasn't been able to figure that out from the logic Sothis commit is just about silencing spurious warnings
Fix s_server version specific methodsA copy&paste error as a result of the big apps cleanup broke the versionspecific methods in s_server
memset, memcpy, sizeof consistency fixesJust as with the OPENSSL_malloc calls, consistently use sizeofptrfor memset and memcpy  Remove needless casts for those functionsFor memset, replace alternative forms of zero with 0
ZLIB compression deserves a better commentWhat could be better than to refer to the RFC that defines it?
Fix windows buildFix error in WIN32_rename introduced by commit b4faea50c35
make update
Remove the last traces of the fake RLE compression
Add more error state transitions DTLSEnsure all fatal errors transition into the new error state for DTLS
Add more error state transitions clientEnsure all fatal errors transition into the new error state on the clientside
Add more error state transitionsEnsure all fatal errors transition into the new error state on the serverside
Add Error stateReusing an SSL object when it has encountered a fatal error canhave bad consequences This is a bug in application code not libsslbut libssl should be more forgiving and not crash
Update multithread FAQ
Remove apps cache for gethostbyname
make update
ssl/ksslc: include missing header to complete SSL structure's defnSignedoffby: mancha security <mancha1@zohocom>Signedoffby: Matt Caswell <matt@opensslorg>
ssl/ssl_asn1c: Fix typo introduced via cc5b6a03a320f1Signedoffby: mancha security <mancha1@zohocom>Signedoffby: Matt Caswell <matt@opensslorg>
Remove libcrypto to libssl dependencyRemove dependency on ssl_loclh from v3_sctsc, and incidentally fix a build problem withkerberos the dependency meant v3_sctsc was trying to include krb5h, but without having beenpassed the relevanant I flags to the compiler
Remove the fake RLE compression methodRLE is a noop only for testing  Remove it
GH271: Warning on </dev/null to CAplIf CApl is reading from /dev/null, then "chop $FILE" gives a warningSigh  Have to add "if $FILE"  This just silences a build warningThanks to GitHub user andrejsigumenovs for help with this
Use safer sizeof variant in mallocFor a local variable:TYPE p;Allocations like this are "risky":p  OPENSSL_mallocsizeofTYPE;if the type of p changes, and the malloc call isn't updated, youcould get memory corruption  Instead do this:p  OPENSSL_mallocsizeofp;Also fixed a few memset calls that I noticed while doing this
RT2943: Check sizes if iv and K argumentsRT2943 only complains about the incorrect check of K argument size,we might as well do the same thing with the iv argumentBefore this, we only checked that the given argument wouldn't give abitstring larger than EVP_MAX_KEY_LENGTH  we can be more precise andcheck against the size of the actual cipher used
Have K actually take an argument, and correct help text
Fix cut/paste errorWas memset with wrong sizeof
RT1369: don't do "helpful" access checkDon't do access check on destination directory; it breaks when euid/egidis different from real uid/gid
Return an error in ASN1_TYPE_unpack_sequence if argument is NULLThanks to Brian Carpenter for reporting this issue
more OSSL_NELEM cases
ssl/s3_srvrc: Fix typo introduced via 69f682374868bIncorrect name used for SSL_AD_INTERNAL_ERRORSignedoffby: mancha security <mancha1@zohocom>Signedoffby: Matt Caswell <matt@opensslorg>
Fixes some typos in doc/ssl/This is the last of Alok's PR260
Fixes some typos in doc/apps/Signedoffby: Rich Salz <rsalz@akamaicom>
RT3802: Fixes typos in doc/crypto/Signedoffby: Rich Salz <rsalz@akamaicom>
fix various typo'shttps://githubcom/openssl/openssl/pull/176 CHANGEShttps://rtopensslorg/Ticket/Displayhtml?id3545 objectstxthttps://rtopensslorg/Ticket/Displayhtml?id3796 verifypod
Add OSSL_NELEM macroAdd OSSL_NELEM macro to e_osh to determine the number of elements in anarray
Remove obsolete make variablesONEDIRS, EDIRS and WDIRS aren't used anywhere  Most probably remainsfrom a build system of the past, it's time they get put to rest
Clean all o files
make X509_VERIFY_PARAM opaque
Remove shlib/Cleanup of files that haven't been used, touched, or I suspect, evennoticed for a long time
RT3820: Don't call GetDesktopWindowSignedoffby: Rich Salz <rsalz@opensslorg>
RT3776: Wrong size for mallocUse sizeof foo parameter, to avoid these errors
Fix uninitialized variableSignedoffby: Rich Salz <rsalz@opensslorg>
Remove outdated RC4 files
free NULL cleanup  codaAfter the finale, the "real" final part :  Do a recursive grep with"B1 w [azAZ09_]_free" to see if any of the preceeding lines arean "if NULL" check that can be removed
Remove goto inside an if0 blockThere were a dozenplus instances of this construct:if 0 { label:  }
Fix build on MacOS
Use BN_ULONG format
u_len may be unused
free NULL cleanup 11Don't check for NULL before calling free functions This gets:ERR_STATE_freeENGINE_freeDSO_freeCMAC_CTX_freeCOMP_CTX_freeCONF_freeNCONF_free NCONF_free_data _CONF_free_dataA sk_free use within OBJ_sigid_freeTS_TST_INFO_free rest of TS_ API was okayDoc update for UI_free all uses were fineX509V3_conf_freeX509V3_section_freeX509V3_string_free
free null cleanup finaleDon't check for NULL before calling OPENSSL_free
Fix some typo's, silence warnings
Rewrite CAplinReformat CAplin to follow coding styleAlso add "use strict" and "use warnings"Also modify it to exit properly and report only when succeededAnd some perl tweaks via Richard
free NULL cleanup 7This gets BN_free:BN_BLINDING_free BN_CTX_free BN_FLG_FREE BN_GENCB_freeBN_MONT_CTX_free BN_RECP_CTX_free BN_clear_free BN_free BUF_MEM_freeAlso fix a call to DSA_SIG_free to ccgost engine and remove some ifdef'ddead code in engines/e_ubsec
Fix buffer overrun in RSA signingThe problem occurs in EVP_PKEY_sign when using RSA with X931 paddingIt is only triggered if the RSA key size is smaller than the digest lengthSo with SHA512 you can trigger the overflow with anything less than an RSA512 bit key I managed to trigger a 62 byte overflow when using a 16 bit RSAkey This wasn't sufficient to cause a crash, although your mileage mayvaryIn practice RSA keys of this length are never used and X931 padding is veryrare Even if someone did use an excessively short RSA key, the chances ofthem combining that with a longer digest and X931 padding is verysmall For these reasons I do not believe there is a security implication tothis Thanks to Kevin Wojtysiak Int3 Solutions and Paramjot Oberoi Int3Solutions for reporting this issue
Add sanity check to print_bin functionAdd a sanity check to the print_bin function to ensure that the |off|argument is positive Thanks to Kevin Wojtysiak Int3 Solutions andParamjot Oberoi Int3 Solutions for reporting this issue
Add sanity check to ssl_get_prev_sessionSanity check the |len| parameter to ensure it is positive Thanks to KevinWojtysiak Int3 Solutions and Paramjot Oberoi Int3 Solutions forreporting this issue
Sanity check the return from final_finish_macThe return value is checked for 0 This is currently safe but we shouldreally check for < 0 since 1 is frequently used for error conditionsThanks to Kevin Wojtysiak Int3 Solutions and Paramjot Oberoi Int3Solutions for reporting this issue
Add sanity check in ssl3_cbc_digest_recordFor SSLv3 the code assumes that |header_length| > |md_block_size| Whilstthis is true for all SSLv3 ciphersuites, this fact is far from obvious bylooking at the code If this were not the case then an integer overflowwould occur, leading to a subsequent buffer overflow Therefore I haveadded an explicit sanity check to ensure header_length is always validThanks to Kevin Wojtysiak Int3 Solutions and Paramjot Oberoi Int3Solutions for reporting this issue
Clarify logic in BIO_printf functionsThe static function dynamically allocates an output buffer if the outputgrows larger than the static buffer that is normally used The originallogic implied that |currlen| could be greater than |maxlen| which isincorrect and if so would cause a buffer overrun Also the originallogic would call OPENSSL_malloc to create a dynamic buffer equal to thesize of the static buffer, and then immediately call OPENSSL_realloc tomake it bigger, rather than just creating a buffer than was big enough inthe first place Thanks to Kevin Wojtysiak Int3 Solutions and ParamjotOberoi Int3 Solutions for reporting this issue
Sanity check EVP_EncodeUpdate buffer lenThere was already a sanity check to ensure the passed buffer length is notzero Extend this to ensure that it also not negative Thanks to KevinWojtysiak Int3 Solutions and Paramjot Oberoi Int3 Solutions forreporting this issue
Sanity check EVP_CTRL_AEAD_TLS_AADThe various implementations of EVP_CTRL_AEAD_TLS_AAD expect a buffer of atleast 13 bytes long Add sanity checks to ensure that the length is atleast that Also add a new constant EVP_AEAD_TLS1_AAD_LEN to evph torepresent this length Thanks to Kevin Wojtysiak Int3 Solutions andParamjot Oberoi Int3 Solutions for reporting this issue
Sanity check DES_enc_write buffer lengthAdd a sanity check to DES_enc_write to ensure the buffer length providedis not negative Thanks to Kevin Wojtysiak Int3 Solutions and ParamjotOberoi Int3 Solutions for reporting this issue
free cleanup 12Don't check for NULL before calling free function  This gets:NAME_CONSTRAINTS_free GENERAL_SUBTREE_free ECDSA_METHOD_freeJPAKE_CTX_free OCSP_REQ_CTX_free SCT_free SRP_VBASE_freeSRP_gN_free SRP_user_pwd_free TXT_DB_free
make updateRun make update following previous header file changes
free cleanup almost the finaleAdd OPENSSL_clear_free which merges cleanse and freeNames was picked to be similar to BN_clear_free, etcRemoved OPENSSL_freeFunc macroFixed the small simple ones that are left:CRYPTO_free CRYPTO_free_locked OPENSSL_free_locked
In apps, malloc or dieNo point in proceeding if you're out of memory  So changeall OPENSSL_malloc calls in apps to use the new routine whichprints a message and exits
free NULL cleanup 5aDon't check for NULL before calling a free routine  This gets X509_free:x509_name_ex_free X509_policy_tree_free X509_VERIFY_PARAM_freeX509_STORE_free X509_STORE_CTX_free X509_PKEY_freeX509_OBJECT_free_contents X509_LOOKUP_free X509_INFO_free
free NULL cleanup 8Do not check for NULL before calling a free routine  This addresses:ASN1_BIT_STRING_free ASN1_GENERALIZEDTIME_free ASN1_INTEGER_freeASN1_OBJECT_free ASN1_OCTET_STRING_free ASN1_PCTX_free ASN1_SCTX_freeASN1_STRING_clear_free ASN1_STRING_free ASN1_TYPE_freeASN1_UTCTIME_free M_ASN1_free_of
Fix bug, "what mode" test was wrong
Fix windows buildThe big apps cleanup broke the windows build This commitfixes some miscellaneous issues so that it builds again
Remove redundant includes from dtls1hThere were a set of includes in dtls1h which are now redundant due to thelibssl opaque work This commit removes those includes, which also has theeffect of resolving one issue preventing building on windows ie theinclude of winsockh
Add HTTP GET support to OCSP server
Rewrite parse_nameRemove need for multiple arrays, parse the X509 nameone RDN at a time  Thanks to Andy for careful review
use isxdigit and apps_tohexReplace adhoc ascii>hex with isxdigit and new app_tohex
Remove needless bio_err argumentMany functions had a BIO parameter, and it was always calledwith bio_err  Remove the param and just use bio_err
Make "make rehash" quietDon't complain about missing config fileGot the right env var name this time
realloc of NULL is like mallocANSI C, and OpenSSL's malloc wrapper do this, also
remove malloc castsFollowing ANSI C rules, remove the casts from calls toOPENSSL_malloc and OPENSSL_realloc
ERR_ cleanupRemove ERR_[gs]et_implementation as they were not undocumented anduseless the data structure was opaqueHalve the number of lock/unlock calls in almost all ERR_functions by letting the caller of get_hash or int_thread_setable to lock  Very useful when looping, such as adding errors,or when getting the hash and immediately doing a lookup on it
Allow for types with leading underscore when checking error macrosWe have an increasing number of function declarations starting with'__owur'  Unfortunately, util/ck_errfpl fails to detect them  Asimple change fixes that issue
NISTZ256: owur'ize__owur'ize static methods to catch calling errors within the module
NISTZ256: use EC_POINT API and check errors
CRYPTO_mem_leaks should ignore it's BIO argumentCRYPTO_mem_leaks takes a BIO argument  It's not a leak if thatargument hasn't been free'd
NISTZ256: don't swallow malloc errors
NISTZ256: set Z_is_one to boolean 0/1 as is customaryCosmetic, no real effect
Error checking and memory leak fixes in NISTZ256
Fix Wmaybeuninitialized: initialize variable
Fix the check of test apps in util/mk1mfplThe previous check assumed that the variables for each test app, endingwith TEST would be indication enough  Experience showed that this isn'tthe best way  Instead, simply look for the EXE variable in test/Makefile
Small fixes after the Big apps cleanupThis fixes util/mk1mfpl, which was looking for old variable names fromapps/Makefile
Add readline etc supportCompile with DREADLINE and the appropriate library
Simplify parse_yesno; remove local variable
Fix typo in help & comment formatting
Fix error message
Fix main build breakageA variable declaration got dropped during a mergeAnd if a compiler inlines strcmp and you put a strcmp in anassert message, the resultant stringification exceeds ANSI stringlimits
Remove the special listxxxx commandsThere's a new "list" command, which takes a flag to say whatto list  Removing the old hacky commands  Reordered somefunctions to remove some needless declarations
RT2962: add keytab and krb5svc flags
Free malloc data on encoding errors
appscleanup: the doc fixes
Quote HTML entities in s_server output
RT2206: Add issuer flag to ocsp command
Remove EFENCE support
RT2451: Add telnet to s_client starttlsAlso add xmpphost and smtphost flags
Add nocommands to s_clientAdd flag to disable the 'command letters' from s_client
fewer NO_ENGINE ifdef'sMake setup_engine be a dummy if NO_ENGINE is enabledThe option is not enabled if NO_ENGINE is enabled, so the one "wasted"variable just sits there Removes some variables and code
Add missing BIO_flush calls
Big apps cleanup optionparsing, etcThis is merges the old "rsalzmonolith" branch over to master  The biggestchange is that option parsing switch from cascasding 'else if strcmp"foo"'to a utility routine and somethin akin to getopt  Also, an error in thecommand line no longer prints the full summary; use help or help :for that  There have been many other changes and codecleanup, seebullet list belowSpecial thanks to Matt for the long and detailed code reviewTEMPORARY:For now, comment out CRYPTO_mem_leaks at end of mainTickets closed:RT3515: Use 3DES in pkcs12 if built with norc2RT1766: s_client reconnect and starttls brokeRT2932: Catch write errorsRT2604: port should be 'unsigned short'RT2983: total_bytes undeclared ifdef RENEGRT1523: Add nocert to fix output in x509 appRT3508: Remove unused variable introduced by b09eb24RT3511: doc fix; req default serial is randomRT1325,2973: Add more extensions to c_rehashRT2119,3407: Updated to dgstpodRT2379: Additional typo fixRT2693: Extra include of stringhRT2880: HFS is caseinsensitive filenamesRT3246: req command prints version number wrongOther changes; incompatibilities marked with :Add SCSV supportAdd misalign to speed commandMake dhparam, dsaparam, ecparam, x509 output C in proper styleMake some internal ocspc functions voidOnly display cert usages with help in verifyUse global bio_err, remove "BIOerr" parameter from functionsFor filenames,  always means stdin or stdout as appropriateAdd aliases for des/aes "wrap" ciphersRemove support for IISSGC server gated cryptoThe undocumented OCSP header flag is now "header namevalue"Documented the OCSP header flag
Fix error checking and memory leaks in NISTZ256 precomputationThanks to Brian Smith for reporting these issues
Correctly set Z_is_one on the return value in the NISTZ256 implementationAlso add a few comments about constanttimenessThanks to Brian Smith for reporting this issue
Fix CRYPTO_strdupThe function CRYPTO_strdup aka OPENSSL_strdup fails to check the returnvalue from CRYPTO_malloc to see if it is NULL before attempting to use itThis patch adds a NULL checkRT3786Signedoffby: Matt Caswell <matt@opensslorg>cherry picked from commit 37b0cf936744d9edb99b5dd82cae78a7eac6ad60
SSL_CIPHER lookup functionsAdd tables to convert between SSL_CIPHER fields and indices for ciphersand MACsReorganise ssl_ciphc to use tables to lookup values and load themNew functions SSL_CIPHER_get_cipher_nid and SSL_CIPHER_get_digest_nidAdd documentation
Avoid "no config file" warning messageSet config to /dev/null when doing make rehash
ssltest output cleanupMake only errors go to stderrPrint count and size before the loop, so you can see it's an 838Kmessage that will take a few moments
test/Makefile dclean cleans out a few files too manyThe files removed are the ones that were symbolic links before, butaren't now, so we should not remove them any more
Repair EAPFAST session resumptionEAPFAST session resumption relies on handshake message lookaheadto determine server intentions Commits980bc1ec6114f5511b20c2e6ca741e61a39b99d6and7b3ba508af5c86afe43e28174aa3c53a0a24f4d9removed the lookahead so broke session resumptionThis change partially reverts the commits and brings the lookahead backin reduced capacity for TLS + EAPFAST only Since EAPFAST does notsupport regular session tickets, the lookahead now only checks for aFinished messageRegular handshakes are unaffected by this change
Engage ec/asm/ecp_nistz256sparcv9 module
Add ec/asm/ecp_nistz256sparcv9pl
modes/asm/ghashv8armxpl: additional performance data
aes/asm/aesnix86pl: fix typo affecting Windows build
aes/asm/aesnix86[_64]pl updateThis addresses request for improvement for faster key setup in RT3576; clearing registers and stack in RT3554 this is more of a gesture tosee if there will be some traction from compiler side; more commentary around input parameters handling and stack layoutdesired when RT3553 was reviewed; minor size and single block performance optimization was lying around;
Add assembly support for 32bit iOS
Configure: Engage ecp_nistz256armv8 module
Add ecp_nistz256armv8 module
Configure: add initial support for 64bit Android
crypto/ec/ecp_nistp[224|521]c: fix formatting
ec/ecp_nistpc: fix SEGVs
Configure: engage ARMv8 Montgomery multiplication module
Add ARMv8 Montgomery multiplication module
aes/asm/vpaesarmv8pl: make it compile on iOS
Remove SET oid config file and SET certs
Use 2K RSA and SHA256 in tests
Fix encoding bug in i2c_ASN1_INTEGERFix bug where i2c_ASN1_INTEGER mishandles zero if it is marked asnegativeThanks to Huzaifa Sidhpurwala <huzaifas@redhatcom> andHanno Bck <hanno@hboeckde> for reporting this issue
Error out immediately on empty ciphers listA 0length ciphers list is never permitted The old code only used toreject an empty ciphers list for connections with a session ID Itwould later error out on a NULL structure, so this change just movesthe alert closer to the problem source
Use Wall Wextra with clangThe disabled set of Weverything is hard to maintain across versionsUse Wall Wextra but also document other useful warnings that currently trigger
SunOS nonposix shells do not grok export namevalue
Code style: space after 'if'
Remove code for deleted function from sslhssl_cert_inst was removed in 2c3823491d8812560922a58677e3ad2db4b2ec8d
Reject empty generation stringsReported by Hanno Bck <hanno@hboeckde>
Limit depth of nested sequences when generating ASN1Reported by Hanno Bck <hanno@hboeckde>PR3800
Remove obsolete options for debugsteve
Add Wtypelimits to strict warnings
Initialize variablenewsig may be used freed uninitialized on a malloc error
Fix ssl_get_prev_session overrunIf OpenSSL is configured with notlsext then ssl_get_prev_session can readpast the end of the ClientHello message if the session_id length in theClientHello is invalid This should not cause any security issues since theunderlying buffer is 16k in size It should never be possible to overrun bythat many bytesThis is probably made redundant by the previous commit  but you can never betoo carefulWith thanks to Qinghao Tang for reporting this issue
Check for ClientHello message overrunsThe ClientHello processing is insufficiently rigorous in its checks to makesure that we don't read past the end of the message This does not havesecurity implications due to the size of the underlying buffer  but stillneeds to be fixedWith thanks to Qinghao Tang for reporting this issue
free NULL cleanup 9Ongoing work to skip NULL check before calling free routine  This gets:ecp_nistz256_pre_comp_free nistp224_pre_comp_free nistp256_pre_comp_freenistp521_pre_comp_free PKCS7_free PKCS7_RECIP_INFO_freePKCS7_SIGNER_INFO_free sk_PKCS7_pop_free PKCS8_PRIV_KEY_INFO_freePKCS12_free PKCS12_SAFEBAG_free PKCS12_free sk_PKCS12_SAFEBAG_pop_freeSSL_CONF_CTX_free SSL_CTX_free SSL_SESSION_free SSL_free ssl_cert_freessl_sess_cert_free
Fix memory leakIt should have freed them when ! NULL, not when  NULL
do_dirname: Don't change gen on failuresIt would set gen>ddirn to a freed pointer in case X509V3_NAME_from_sectionfailed
X509_VERIFY_PARAM_free: Check param for NULL
free NULL cleanup 10Avoid checking for NULL before calling free functions  This getssslfree:ssl_sess_cert_free ssl_free ssl_excert_free ssl_cert_freeSSL_free SSL_SRP_CTX_free SSL_SESSION_free SSL_CTX_freeSSL_CTX_SRP_CTX_free SSL_CONF_CTX_free
The wrong ifdef is used to guard usage of PSK codePR3790
Don't set pval to NULL in ASN1_item_ex_newWhile pval is usually a pointer in rare circumstances it can be a longvalue One some platforms eg WIN64 wheresizeoflong < sizeofASN1_VALUE  this will write past the fieldpval is initialised correctly in the rest of ASN1_item_ex_new so setting itto NULL is unecessary anywayThanks to Julien Kauffmann for reporting this issue
Fix ECDH detection, add ECDH keyid test
Fix ECDH key identifier supportPR3789
Polish shell script to avoid needless complexityNo need for here documents, just use "yes" or </dev/nullNo need for "|| exit 1" clauses, just use "set e"
fix to "test script cleanup"Fix commit 30f54ad295d58ff8c6d28c1fd612d23c2c343d19 which usednonportable syntax for checking exit status
Fix read_ahead issueFix a "&" that should have been "!" when processing read_aheadRT3793
test script cleanupRemoved commentedout testsStandardize on doingcmd  || exit 1instead ofcmd if [ $? ! 0] ; thenexit 1fiwhere that if statement has ben one, three, or four lines, variously
Have mkerrpl treat already existing multiline string defs properlySince source reformat, we ended up with some error reason stringdefinitions that spanned two lines  That in itself is fine, but wesometimes edited them to provide better strings than what could beautomatically determined from the reason macro, for example:{ERR_REASONSSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER,"Peer haven't sent GOST certificate, required for selected ciphersuite"},However, mkerrpl didn't treat those twoline definitions right, andthey ended up being retranslated to whatever the macro name wouldindicate, for example:{ERR_REASONSSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER,"No gost certificate sent by peer"},Clearly not what we wanted  This change fixes this problem
Drop CAsh for CAplRemove CAsh script and use CApl for testing, etc
consistent teststart loggingOutput a consistent "start" marker for each testRemove "2>/dev/null" from Makefile command linesAdd OPENSSL_CONFIG/dev/null for places where it's needed, inorder to suppress a warning message from the openssl CLI
Ignore the nondll windows specific build directories
Appease clang WshadowThe macros BSWAP4 and BSWAP8 have statetemnt expressionsimplementations that use local variable names that shadow variablesoutside the macro call, generating warnings like thise_aes_cbc_hmac_sha1c:263:14: warning: declaration shadows a local variable[Wshadow]seqnum  BSWAP8blocks[0]q[0];^/modes/modes_lclh:41:29: note: expanded from macro 'BSWAP8'^e_aes_cbc_hmac_sha1c:223:12: note: previous declaration is heresize_t ret  0;^Have clang be quiet by modifying the macro variable names slightlysuffixing them with an underscore
Appease clang WgnustatementexpressionWe use GNU statement expressions in crypto/md32_commonh, surroundedby checks that GNU C is indeed used to compile  It seems that clang,at least on Linux, pretends to be GNU C, therefore finds the statementexpressions and then warns about themThe solution is to have clang be quiet about it
Appease clang Wemptytranslationunitebcdicc:284:7: warning: ISO C requires a translation unit to contain at least onedeclaration [Wemptytranslationunit]^1 warning generated
update ordinals
make depend
remove asn1_mach
Remove old ASN1 functions
Remove unnecessary use of ASN1_const_CTX
Rewrite ssl_asn1c using new ASN1 codeComplete reimplementation of d2i_SSL_SESSION and i2d_SSL_SESSION usingnew ASN1 code and eliminating use of old ASN1 macros
Add macro to implement static encode functions
Fewer newlines in comp method outputPrint "supported compression methods" all on one line
modes/asm/ghashv8armxpl: up to 90 performance improvement
sha/asm/shaarmv8pl: add Denver and XGene esults
aes/asm/aesv8armxpl: optimize for CortexA5xARM has optimized CortexA5x pipeline to favour pairs of complementaryAES instructions While modified code improves performance of postr0p0CortexA53 performance by >40 for CBC decrypt and CTR, it hurtsoriginal r0p0 We favour later revisions, because one can't preventfuture from coming Improvement on postr0p0 CortexA57 exceeds 50,while new code is not slower on r0p0, or Apple A7 for that matter[Update even SHA results for latest CortexA53]
perlasm/armxlatepl update fix endless loop and prepare for 32bit iOS
Configure: androidarm facelift
make update
Remove SSL_TASK, the DECnet Based SSL Engine  addendumA bit of cleanup was forgotten
Remove SSL_TASK, the DECnet Based SSL EngineThis engine is for VMS only, and isn't really part of the core OpenSSLbut rather a side project of its own that just happens to have taggedalong for a long time  The reasons why it has remained within theOpenSSL source are long lost in history, and there not being any realreason for it to remain here, it's time for it to move outThis side project will appear as a project in its own right, thelocation of which will be announced later on
Remove old ASN1 code from evp_asn1cRewrite ASN1_TYPE_set_int_octetstring and ASN1_TYPE_get_int_octetstringto use the new ASN1 code instead of the old macros
Now that we've removed the need for symlinks, we can safely remove util/mklinkspl
Remove remaining variables for symlinked/copied headers and testsGitConfigure:   no more 'nosymlinks'util/batsh, util/mk1mfpl, util/pl/VC32pl, util/pl/unixpl: Remove all uses of EXHEADERThat includes removing the use if INC_D and INCO_D Replace the check for TEST with a check for [AZ09_]TEST
Remove EXHEADER, TEST, APPS, links:, install: and uninstall: where relevantWith no more symlinks, there's no need for those variables, or the linkstarget  This also goes for all install: and uninstall: targets that donothing but copy $EXHEADER files, since that's now taken care of by thetop MakefileAlso, removed METHTEST from test/Makefile  It looks like an old test that'sforgotten
Stop symlinking, move files to intended directoryRather than making include/openssl/fooh a symlink tocrypto/foo/fooh, this change moves the file to include/openssl/foohonce and for allLikewise, move crypto/foo/footestc to test/footestc, instead ofsymlinking it thereOriginallyby: Geoff Thorpe <geoff@opensslorg>
Ensure EC private keys retain leading zerosRFC5915 requires the use of the I2OSP primitive as defined in RFC3447for storing an EC Private Key This converts the private key into anOCTETSTRING and retains any leading zeros This commit ensures that thoseleading zeros are present if required
Clean up record layerFix up various things that were missed during the record layer work Allinstances where we are breaking the encapsulation rules
Fix record layer "make clean"The "clean" target in libssl has been updated to handle the new recordlayer subdirectory
Fix some faults in util/mk1mfplWhen building on Unix, there are times when the 'EX_LIB' MINFO variablecontains valuable information  Make sure to take care of itfixrules in util/pl/unixpl was previously changed with a simpler fix ofrules, with a comment claiming that's compatible with j  Unfortunately,this breaks multiline rules and doesn't change anything for single linerules  While at it, do not prefix pure echo lines with a 'cd $TEST_D &&',as that's rather silly
Remove duplicate codeUpdate code to use ASN1_TYPE_pack_sequence and ASN1_TYPE_unpack_sequenceinstead of performing the same operation manually
New ASN1_TYPE SEQUENCE functionsAdd new functions ASN1_TYPE_pack_sequence and ASN1_TYPE_unpack_sequence:these encode and decode ASN1 SEQUENCE using an ASN1_TYPE structureUpdate ordinals
Rewrite X509_PKEY_new to avoid old ASN1 macros
Remove unnecessary asn1_mach includes
Initialised 'ok' and redo the logicThe logic with how 'ok' was calculated didn't quite convey what's "ok",so the logic is slightly redone to make it less confusing
sha/asm/sha512armv4pl: adapt for use in Linux kernel contextFollowup to sha256armv4pl in cooperation with Ard BiesheuvelLinaro and Sami Tolvanen Google
sha/asm/sha256armv4pl: fix compile issue in kerneland eliminate littleendian dependency
Have a shared library version thats reasonable with our version schemeThe FAQ says this:After the release of OpenSSL 100 the versioning scheme changed Letterreleases eg 101a can only contain bug and security fixes and nonew features Minor releases change the last number eg 102 andcan contain new features that retain binary compatibility Changes tothe middle number are considered major releases and neither source norbinary compatibility is guaranteedWith such a scheme and with the thinking that it's nice if the sharedlibrary version stays on track with the OpenSSL version, it's ratherfutile to keep the minor release number in the shared library versionThe deed already done with OpenSSL 10x can't be changed, but with1xy, x1 and on, 1x as shared library version is sufficient
Add private/public key conversion tests
Remove d2i_X509_PKEY and i2d_X509_PKEYRemove partially implemented d2i_X509_PKEY and i2d_X509_PKEY: nothinguses them and they don't work properly Update ordinals
ec/asm/ecp_nistz256x86_64pl: update commentary with beforeafter performance data
free NULL cleanupEVP_free; this gets:EVP_CIPHER_CTX_free EVP_PKEY_CTX_free EVP_PKEY_asn1_freeEVP_PKEY_asn1_set_free EVP_PKEY_free EVP_PKEY_free_itEVP_PKEY_meth_free; and also EVP_CIPHER_CTX_cleanup
Engage vpaesarmv8 module
Add vpaesamrv8pl module
Configure: remove unused variables
Make asn1_ex_i2c, asn1_ex_c2i static
Remove combine option from ASN1 codeRemove the combine option This was used for compatibility with somenon standard behaviour in ancient versions of OpenSSL: specificallythe X509_ATTRIBUTE and DSAPublicKey handling Since these have nowbeen revised it is no longer needed
Simplify DSA public key handlingDSA public keys could exist in two forms: a single Integer type or aSEQUENCE containing the parameters and public key with a field called"write_params" deciding which form to use These forms are non standardand were only used by functions containing "DSAPublicKey" in the nameSimplify code to only use the parameter form and encode the public keycomponent directly in the DSA public key method
ASN1_TYPE documentation
Add Record Layer documentationAdd some design documentation on how the record layer works to aid futuremaintenance
Fix formatting odditiesFix some formatting oddities in rec_layer_d1c
Fix recordh formattingFix some strange formatting in recordh This was probably originallyintroduced as part of the reformat work
Define SEQ_NUM_SIZEReplace the hard coded value 8 the size of the sequence number with aconstant defined in a macro
Fix compilation on windows for record layer
Rename record layer source files
Remove some unneccessary macros
Renamed record layer header files
Reorganise header files
Remove last trace of nonrecord layer code reading and writing sequencenumbers directly
Move last_write_sequence from s>d1 to s>rlayerdAlso push some usage of last_write_sequence out of dtls1_retransmit_messageand into the record layer
Move ssl3_record_sequence_update into record layer
Move buffered_app_data from s>d1 to s>rlayerd
Move handshake_fragment, handshake_fragment_len, alert_fragment andalert_fragment_len from s>d1 to s>rlayerd
Fix seg fault in dtls1_new
Moved processed_rcds and unprocessed_rcds from s>d1 to s>rlayerd
Move bitmap and next_bitmap from s>d1 to s>rlayerdCreate dtls_bitmaph and dtls_bitmapc
Move r_epoch and w_epoch from s>d1 to s>rlayerd
Introduce a DTLS_RECORD_LAYER type for DTLS record layer state
Move DTLS1_RECORD_DATA into rec_layerh
Move read_sequence and write_sequence from s>s3 to s>rlayer
Move s>s3>wpend_ to s>rlayer
Move handshake_fragment, handshake_fragment_len, alert_fragment andalert_fragment_len from s>s3 into s>rlayer
Move s>s3>wnum to s>rlayerwnum
Move s>rstate to s>rlayerrstate
Move s>packet and s>packet_length into s>rlayer
Remove unneccessary use of accessor function now code is moved into recordlayer
Make rrec, wrec, rbuf and wbuf fully private to the record layer Also, cleanup some access to them Now that various functions have been moved into therecord layer they no longer need to use the accessor macros
Removed dependency on rrec from heartbeat processing
Introduce macro RECORD_LAYER_setup_comp_buffer
Fix bug where rrec was being releasedshould have been removed by one ofthe earlier record layer commits
Move ssl3_pending into the record layer
Remove RECORD_LAYER_set_ssl and introduce RECORD_LAYER_init
Provide RECORD_LAYER_set_data function
Introduce the functions RECORD_LAYER_release, RECORD_LAYER_read_pending, andRECORD_LAYER_write_pending
Create RECORD_LAYER_clear function
Tidy up rec_layerh Add some comments regarding which functions should bebeing used for what purpose
Moved s3_pktc, s23_pktc and d1_pktc into the record layer
Split out non record layer functions out of s3_pktc and d1_pktc intothe new files s3_msgc and s1_msgc respectively
Move more SSL3_RECORD oriented functions into ssl3_recordc
Move SSL3_RECORD oriented functions into ssl3_recordc
Move SSL3_BUFFER set up and release code into ssl3_bufferc
Move s>s3>wrec to s>rlayer>wrec
Encapsulate s>s3>wrec
Move s>s3>rrec to s>rlayer>rrec
Encapsulate s>s3>rrec
Move s>s3>wbuf to s>rlayer>wbuf
Encapsulate access to s>s3>wbuf
Move s>s3>rrec into s>rlayer
Encapsulate SSL3_BUFFER and all access to s>s3>rbuf
Create a RECORD_LAYER structure and move read_ahead into it
update ordinals
Move more internal only functions to asn1_loclh
free NULL cleanupThis gets EC_GROUP_clear_free EC_GROUP_free, EC_KEY_free,EC_POINT_clear_free, EC_POINT_free
Resolve swallowed returns codesThe recent updates to libssl to enforce stricter return code checking, lefta small number of instances behind where return codes were being swallowedtypically because the function they were being called from was declared asvoid This commit fixes those instances to handle the return codes moreappropriately
make update
Move internal only ASN1 functions to asn1_loclh
Remove X509_ATTRIBUTE hackThe X509_ATTRIBUTE structure includes a hack to tolerate malformedattributes that encode as the type instead of SET OF type This formis never created by OpenSSL and shouldn't be needed any more
free NULL cleanupThis commit handles BIO_ACCEPT_free BIO_CB_FREE BIO_CONNECT_freeBIO_free BIO_free_all BIO_vfree
Support key loading from certificate fileSupport loading of key and certificate from the same file ifSSL_CONF_FLAG_REQUIRE_PRIVATE is set This is done by remembering thefilename used for each certificate type and attempting to load a privatekey from the file when SSL_CONF_CTX_finish is calledUpdate docs
make depend
make X509_NAME opaque
Fix bug in s_client Previously default verify locations would only be loadedif CAfile or CApath were also supplied and successfully loaded first
Fix HMAC to pass invalid key len test
Add HMAC test for invalid key len
Ensure that both the MD and key have been initialised before attempting tocreate an HMACInspired by BoringSSL commit 2fe7f2d0d9a6fcc75b4e594eeec306cc55acd594
Add more HMAC tests
SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG was disabled in 098q and 100cThis commit sets the value of SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG tozero
Deprecate RAND_pseudo_bytesThe justification for RAND_pseudo_bytes is somewhat dubious, and the realityis that it is frequently being misused RAND_bytes and RAND_pseudo_bytes inthe default implementation both end up calling ssleay_rand_bytes Both mayreturn 1 in an error condition If there is insufficient entropy thenboth will return 0, but RAND_bytes will additionally add an error to theerror queue They both return 1 on successTherefore the fundamental difference between the two is that one will add anerror to the error queue with insufficient entory whilst the other will notFrequently there are constructions of this form:ifRAND_pseudo_bytes < 1goto err;In the above form insufficient entropy is treated as an error anyway, soRAND_bytes is probably the better form to useThis form is also seen:if!RAND_pseudo_bytesgoto err;This is technically not correct at all since a 1 return value isincorrectly handled  but this form will also treat insufficient entropy asan errorWithin libssl it is required that you have correctly seeded your entropypool and so there seems little benefit in using RAND_pseudo_bytesSimilarly in libcrypto many operations also require a correctly seededentropy pool and so in most interesting cases you would be better offusing RAND_bytes anyway There is a significant risk of RAND_pseudo_bytesbeing incorrectly used in scenarios where security can be compromised byinsufficient entropyIf you are not using the default implementation, then most engines use thesame function to implement RAND_bytes and RAND_pseudo_bytes in any caseGiven its misuse, limited benefit, and potential to compromise security,RAND_pseudo_bytes has been deprecated
RAND_bytes updatesEnsure RAND_bytes return value is checked correctly, and that we no longeruse RAND_pseudo_bytes
Fix return checks in GOST engineFilled in lots of return value checks that were missing the GOST engine, andadded appropriate error handling
Fix misc NULL derefs in sureware engineFix miscellaneous NULL pointer derefs in the sureware engine
Add ticket length before buffering DTLS messageIn ssl3_send_new_session_ticket the message to be sent is constructed Weskip adding the length of the session ticket initially, then callssl_set_handshake_header, and finally go back and add in the length of theticket Unfortunately, in DTLS, ssl_set_handshake_header also has the sideeffect of buffering the message for subsequent retransmission if requiredBy adding the ticket length after the call to ssl_set_handshake_header themessage that is buffered is incomplete, causing an invalid message to besent on retransmission
Ensure last_write_sequence is saved in DTLS12In DTLS, immediately prior to epoch change, the write_sequence is supposedto be stored in s>d1>last_write_sequence The write_sequence is then resetback to 00000000 In the event of retransmits of records from the previousepoch, the last_write_sequence is restored This commit fixes a bug inDTLS12 where the write_sequence was being reset before last_write_sequencewas saved, and therefore retransmits are sent with incorrect sequencenumbers
free NULL cleanupStart ensuring all OpenSSL "free" routines allow NULL, and removeany if check before calling themThis gets DH_free, DSA_free, RSA_free
update ordinals
Update ordinalsThanks to the change of mkdefpl, a few more deprecated functions wereproperly defined in util/libeaynum
Teach mkdefpl to handle multiline declarationsFor the moment, this is specially crafted for DECLARE_DEPRECATED becausethat's where we found the problem, but it can easily be expanded to othertypes of special delarations when needed
Fix verify algorithmDisable loop checking when we retry verification with an alternative pathThis fixes the case where an intermediate CA is explicitly trusted and partof the untrusted certificate list By disabling loop checking for this casethe untrusted CA can be replaced by the explicitly trusted case andverification will succeed
make ASN1_OBJECT opaque
Configuration file examples
Make OCSP response verification more flexibleIf a set of certificates is supplied to OCSP_basic_verify use those inaddition to any present in the OCSP response as untrusted CAs whenverifying a certificate chainPR3668
make depend
Move some EVP internals to evp_inthMove EVP internals to evp_inth, remove Ievp hack from crypto/Makefile
Move some ASN1 internals to asn1_inthMove ASN1 internals used across multiple directories into new internalheader file asn1_inth remove crypto/Makefile hack which allowed otherdirectories to include "asn1_loclh"
free NULL cleanupStart ensuring all OpenSSL "free" routines allow NULL, and removeany if check before calling themThis gets ASN1_OBJECT_free and ASN1_STRING_free
Fix malloc define typoFix compilation failure when SCTP is compiled due to incorrect defineReportedby: Conrad Kostecki <ck+gentoobugzilla@bl4ckb0xde>URL: https://bugsgentooorg/543828RT3758Signedoffby: Matt Caswell <matt@opensslorg>
Use OPENSSL_malloc rather than malloc/calloc
Fix eng_cryptodev to not depend on BN internals
Adjust include pathThanks to a I, the path does work, at least on unix  However, thisdoesn't work so well on VMS  Correcting the path to not rely on givenI does work on both
JPAKE Makefile missing 'files' target
Remove old style ASN1 supportRemove old ASN1 COMPAT type This was meant as a temporary measureso older ASN1 code from OpenSSL 096 still worked It's a hackwhich breaks constification and hopefully nothing uses it now, ifit ever did
return unexpected message when receiving kx with kDHr or kDHdIt was saying that it was an illegal parameter / unsupported cipher
Don't send a for ServerKeyExchange for kDHr and kDHdThe certificate already contains the DH parameters in that casessl3_send_server_key_exchange would fail in that case anyway
Make sure that cert is never NULLAlso removes for it being NULL
Fix buildRemove x_extenc and x_exteno from crypto/asn1/Makefile: they've moved now
make X509_EXTENSION opaque
Fix SSL_clear unused returnFix missing return value check in dtls1_listen when calling SSL_clear
ssl3_set_handshake_header returnsChange ssl_set_handshake_header from return void to returning int, andhandle error return code appropriately
apps return value checksEnsure that all libssl functions called from within the apps have theirreturn values checked where appropriate
Fix missing return value checksEnsure that all functions have their return values checked whereappropriate This covers all functions defined and called from withinlibssl
Check libssl function returnsMark most functions returning a result defined in any libssl header filewith __owur to warn if they are used without checking the return valueUse DUNUSED_RETURN compiler flag with gcc to activate these warningsSome functions returning a result are skipped if it is common and valid touse these functions without checking the return value
Add DDEBUG_UNUSED to strictwarningsIn order to receive warnings on unused function return values the flagDDEBUG_UNUSED must be passed to the compiler This change adds that for thestrictwarnings Configure option
Remove PREFIX, as it's not used any more
Actually remove TABLE from version controlFollow up on the earlier "Do not keep TABLE in version control"Actually removing TABLE from version control was forgotten
Don't check curves that haven't been sentDon't check that the curve appears in the list of acceptable curves for thepeer, if they didn't send us such a list RFC 4492 does not require that theextension be sent
Remove deleted functions, update ordinals
Remove {i2d,d2i}_ASN1_BOOLEANRemove {i2d,d2i}_ASN1_BOOLEANRewrite single occurrence of d2i_ASN1_BOOLEAN in asn1_parse2
Remove old ASN1 codeRemove old M_ASN1_ macros and replace any occurences with the correspondingfunctionRemove d2i_ASN1_bytes, d2i_ASN1_SET, i2d_ASN1_SET: no longer used internally
sha/asm/sha256armv4pl: adapt for use in Linux kernel contextIn cooperation with Ard Biesheuvel Linaro and Sami Tolvanen Google
Refer to $table{$target} rather than $table{$t}Using $t is an artifact from the earlier changes in Configure and wasunfortunately forgotten as is
Add AES unwrap test with invalid keyThis tests the unwrap algorithm with an invalid key The result shouldbe rejected without returning any plaintext
Fix memory leak
CRYPTO_128_unwrap: Fix refactoring damagecrypto/modes/wrap128c was heavily refactored to support AES Key Wrapwith Padding, and four bugs were introduced into CRYPTO_128_unwrap atthat time: crypto_128_unwrap_raw's return value 'ret' is checked incorrectly,and the function immediately returns 'ret' in almost all casesThis makes the IV checking code later in the function unreachable, butcallers think the IV check succeeded since CRYPTO_128_unwrap'sreturn value is nonzeroFIX: Return 0 error if crypto_128_unwrap_raw returned 0 error crypto_128_unwrap_raw writes the IV to the 'got_iv' buffer, not tothe first 8 bytes of the output buffer 'out' as the IV checking codeexpects  This makes the IV check failFIX: Compare 'iv' to 'got_iv', not 'out' The data written to the output buffer 'out' is "cleansed" if the IVcheck fails, but the code passes OPENSSL_cleanse the input bufferlength 'inlen' instead of the number of bytes thatcrypto_128_unwrap_raw wrote to the output buffer 'ret'  Thismeans that OPENSSL_cleanse could potentially write past the end of'out'FIX: Change 'inlen' to 'ret' in the OPENSSL_cleanse call CRYPTO_128_unwrap is returning the length of the input buffer'inlen' instead of the number of bytes written to the output buffer'ret'  This could cause the caller to read past the end of 'out'FIX: Return 'ret' instead of 'inlen' at the end of the functionPR3749
wrap128c: Fix Doxygen comments
Add DTLS tests to make testUpdated test/testssl script to include the new DTLS capability in ssltest
Add DTLS support to ssltest
Add DTLS to SSL_get_version
If the target is an old style debug target, it will not have debugging [cl]flags
Fix a failure to NULL a pointer freed on errorReported by the LibreSSL project as a follow on to CVE20150209
Update NEWSResync NEWS with the latest version from 102
Update CHANGESResync CHANGES with the latest version from 102
PKCS7: avoid NULL pointer dereferences with missing contentIn PKCS7, the ASN1 content component is optionalThis typically applies to inner content detached signatures,however we must also handle unexpected missing outer contentcorrectlyThis patch only addresses functions reachable from parsing,decryption and verification, and functions otherwise associatedwith reading potentially untrusted dataCorrecting all lowlevel API calls requires further workCVE20150289Thanks to Michal Zalewski Google for reporting this issue
Fix ASN1_TYPE_cmpFix segmentation violation when ASN1_TYPE_cmp is passed a boolean type Thiscan be triggered during certificate verification so could be a DoS attackagainst a client or a server enabling client authenticationCVE20150286
Fix DHE Null CKE vulnerabilityIf client auth is used then a server can seg fault in the event of a DHEcipher being used and a zero length ClientKeyExchange message being sentby the client This could be exploited in a DoS attackCVE20151787
Fix for CVE20150291If a client renegotiates using an invalid signature algorithms extensionit will crash a server with a NULL pointer dereferenceThanks to David Ramos of Stanford University for reporting this bugCVE20150291
Reject invalid PSS parametersFix a bug where invalid PSS parameters are not rejected resulting in aNULL pointer exception This can be triggered during certificateverification so could be a DoS attack against a client or a serverenabling client authenticationThanks to Brian Carpenter for reporting this issuesCVE20150208
Free up ADB and CHOICE if already initialisedCVE20150287
Fix Seg fault in DTLSv1_listenThe DTLSv1_listen function is intended to be stateless and processesthe initial ClientHello from many peers It is common for user code toloop over the call to DTLSv1_listen until a valid ClientHello is receivedwith an associated cookie A defect in the implementation of DTLSv1_listenmeans that state is preserved in the SSL object from one invokation to thenext that can lead to a segmentation fault Erorrs processing the initialClientHello can trigger this scenario An example of such an error couldbe that a DTLS10 only client is attempting to connect to a DTLS12 onlyserverCVE20150207
Multiblock corrupted pointer fixOpenSSL 102 introduced the "multiblock" performance improvement Thisfeature only applies on 64 bit x86 architecture platforms that support AESNI instructions A defect in the implementation of "multiblock" can causeOpenSSL's internal write buffer to become incorrectly set to NULL whenusing nonblocking IO Typically, when the user application is using asocket BIO for writing, this will only result in a failed connectionHowever if some other BIO is used then it is likely that a segmentationfault will be triggered, thus enabling a potential DoS attackCVE20150290
Configure: fold related configurations more aggressively and cleanup
Correct the request of debug builds/config would translate d into having the target get a 'debug'prefix, and then run '/Configure LIST' to find out if such adebugging target exists or notWith the recent changes, the separate 'debugfoo' targets aredisappearing, and we're giving the normal targets debuggingcapabilities instead  Unfortunately, '/config' wasn't changed tomatch this new behaviorThis change introduces the arguments 'debug' and 'release'  thelatter just for orthogonality  to /Configure, and /config nowtreats d by adding 'debug' to the options for /Configure
Dead code removal from appsSome miscellaneous removal of dead code from apps Also fix an issue witherror handling with pkcs7
Remove dead code from cryptoSome miscellaneous removal of dead code from lib crypto
Fix probable_prime over large shiftIn the probable_prime function we behave slightly different if the numberof bits we are interested in is < BN_BITS2 the num of bits in a BN_ULONGAs part of the calculation we work out a size_limit as follows:size_limit  BN_ULONG1 << bits  BN_get_wordrnd  1;There is a problem though if bits  BN_BITS2 Shifting by that much causesundefined behaviour I did some tests On my system BN_BITS2  64 So Iset bits to 64 and calculated the result of:BN_ULONG1 << bitsI was expecting to get the result 0 I actually got 1! Strangely thisBN_ULONG0 << BN_BITS2does equal 0! This means that, on my system at least, size_limit will beoff by 1 when bits  BN_BITS2This commit fixes the behaviour so that we always get consistent results
Fix unintended sign extensionThe function CRYPTO_128_unwrap_pad uses an 8 byte AIV Alternative InitialValue The least significant 4 bytes of this is placed into the localvariable |ptext_len| This is done as follows:ptext_len  aiv[4] << 24 | aiv[5] << 16 | aiv[6] << 8 | aiv[7];aiv[4] is an unsigned char, but aiv[4] << 24 is promoted to a signedint  therefore we could end up shifting into the sign bit and end up witha negative value |ptext_len| is a size_t typically 64bits If theresult of the shifts is negative then the upper bits of |ptext_len| willall be 1This commit fixes the issue by explicitly casting to an unsigned int
Fix seg fault in s_timePassing a negative value for the "time" option to s_time results in a segfault This commit fixes it so that time has to be greater than 0
Add sanity check to PRFThe function tls1_PRF counts the number of digests in use and partitionssecurity evenly between them There always needs to be at least one digestin use, otherwise this is an internal error Add a sanity check for this
Fix memset call in stackcThe function sk_zero is supposed to zero the elements held within a stackIt uses memset to do this However it calculates the size of each elementas being sizeofchar  instead of sizeofchar  This probably doesn'tmake much practical difference in most cases, but isn't a portableassumption
Move malloc fail checks closer to mallocMove memory allocation failure checks closer to the site of the malloc indgst app Only a problem if the debug flag is setbut still should befixed
Add malloc failure checksAdd some missing checks for memory allocation failures in ca app
Do not keep TABLE in version controlTABLE was always a debugging tool, and permitted everyone to see theeffect of changes in the stringformat configs  The hashformatconfigs being much more readable, distributing TABLE becomes much lessnecessaryBeing able to produce a TABLE is kept, however, as it still is auseful debugging tool for configs, what with multilevel inheritanceand all
Configuration cleanup: personal configsMove obviously personal configurations to personal filesNote: those files should really not be in the main repo at all
Updated TABLE
Find debug targets that can be combined with their nondebug counterparts and do so
Change all the main configurations to the new formatAs part of this, remove some levitte examples that never were relevant
Rethink templatesBecause base templates express inheritance of values, the attribute isrenamed to 'inherit_from', and texts about this talk about 'inheritances'rather than base templatesAs they were previously implemented, base templates that were listedtogether would override one another, the first one acting as defaults forthe next and so onHowever, it was pointed out that a strength of inheritance would be tobase configurations on several templates  for example one for CPU, onefor operating system and one for compiler  and that requires a differentway of combining those templates  With this change, inherited valuesfrom several inheritances are concatenated by default keep on readingAlso, instring templates with the doublecurly syntax are removed,replaced with the possibility to have a configuration value be a coderefie a 'sub { / your code goes here / }' that gets the list of valuesfrom all inheritances as the list @_  The result of executing such acoderef on a list of values is assumed to become a string  ANY OTHERFORM OF VALUE WILL CURRENTLY BREAKAs a matter of fact, an attribute in the current config with no value isassumed to have this coderef as value:sub { join' ', @_ }While we're at it, rename debug[cl]flags to debug_[cl]flags andnodebug[cl]flags to release_[cl]flags
Provide a few examples by converting my own strings to hash table configurations
Add base template processingBase templates are templates that are used to inherit from  They canloosely be compared with parent class inheritance in object orientationThey can be used for the same purpose as the variables with multifieldstrings are used in oldstyle string configurationsBase templates are declared with the base_templates configurationattribute, like so:"example_target" > {base_templates > [ "x86_asm",  ]}Note: The value of base_templates MUST be an array reference an arrayenclosed in square bracketsAny configuration target can be used as a base template by another  Itis also possible to have a target that's a pure template and not meant tobe used directly as a configuration target  Such a target is marked withthe template configuration attribute, like so:"example_template" > {template > 1,cc > "mycc",},As part of this commit, all variables with multifield strings have beentranslated to pure templates  The variables currently remain since wecan't expect people to shift to hash table configurations immediately
Add template reference processingTemplate references are words with double brackets, and refer to thesame field in the target pointed at the the double bracketed wordFor example, if a target's configuration has the following entry:'cflags' > 'DFOO {{x86_debug}}' then {{x86_debug}} will be replaced with the 'cflags' value fromtarget 'x86_debug'Note: template references are resolved recursively, and circularreferences are not allowed
Rewrite Configure to handle the target values as hash tablesThe reasoning is that configuration strings are hard to read and errorprone, and that a better way would be for them to be key > value hashesConfigure is made to be able to handle target configuration values as astring as well as a hash  It also does the best it can to combine a"debugfoo" target with a "foo" target, given that they are similarexcept for the cflags and lflags values  The latter are spliced intooptions that are common for "debugfoo" and "foo", options that existonly with "debugfoo" and options that exist only with "foo", and makethem into combinable attributes that holds common cflags, extra cflagsfor debuggin and extra cflags for nondebugging configurationsThe next step is to make it possible to have template configurations
Make X509_ATTRIBUTE opaque
Fix regression in ASN1_UTCTIME_cmp_time_tPreviously, ASN1_UTCTIME_cmp_time_t would return 1 if s > t, 1 ifs < t, and 0 if s  tThis behavior was broken in a refactor [0], resulting in the oppositetime comparison behavior[0]: 904348a4922333106b613754136305db229475eaPR3706
OPENSSL_NO_EC merge; missed one fileMissed one file in the ifdef merge; thanks Kurt
Update ordinals, fix error messageUpdate error messages to say "EC is disabled" these can then be picked upby mkdefplUpdate ordinals
Remove ssl_cert_instIt created the cert structure in SSL_CTX or SSL if it was NULL, but they cannever be NULL as the comments already said
Avoid reading an unused byte after the bufferOther curves don't have this problem
Fix undefined behaviour in shiftsTd4 and Te4 are arrays of u8 A u8 << int promotes the u8 to an int first then shiftsIf the mathematical result of a shift as modelled by lhs  2^{rhs} is not representablein an integer, behaviour is undefined In other words, you can't shift into the sign bitof a signed integer Fix this by casting to u32 whenever we're shifting left by 24For consistency, cast other shifts, tooCaught by fsanitizeshiftSubmitted by Nick Lewycky Google
Allocate string types directlyAllocate and free ASN1 string types directly instead of going throughthe ASN1 item code
Fix key wrapping mode with padding to conform to RFC 5649According to RFC 5649 section 41 step 1 we should not add paddingif plaintext length is multiply of 8 ocketsThis matches pseudocode in http://dxdoiorg/106028/NISTSP80038Fon page 15, section 63 KWP, algorithm 5 KWPAE, step 2PR3675
Remove obsolete declarationsRemove DECLARE_ASN1_SET_OF and DECLARE_PKCS12_STACK_OF these haven't beenused internally in OpenSSL for some time
Update mkstackpl to match safestackh
ASN1 print fixWhen printing out an ASN1 structure if the type is an item template don'tfall thru and attempt to interpret as a primitive type
additional configuration documentation
Fix RSA_X931_derive_exIn the RSA_X931_derive_ex a call to BN_CTX_new is made This can returnNULL on error However the return value is not tested until after it isderefed! Also at the top of the function a test is made to ensure that|rsa| is not NULL If it is we go to the "err" label Unfortunately theerror handling code deref's rsa
SSL_check_chain fixIf SSL_check_chain is called with a NULL X509 object or a NULL EVP_PKEYor the type of the public key is unrecognised then the local variable|cpk| in tls1_check_chain does not get initialised Subsequently anattempt is made to deref it after the "end" label, and a seg fault willresult
Fix missing return checks in v3_cpolscFixed assorted missing return value checks in c3_cpolsc
Fix dsa_pub_encodeThe return value from ASN1_STRING_new was not being checked which couldlead to a NULL deref in the event of a malloc failure Also fixed a memleak in the error path
Fix dh_pub_encodeThe return value from ASN1_STRING_new was not being checked which couldlead to a NULL deref in the event of a malloc failure Also fixed a memleak in the error path
Fix asn1_item_print_ctxThe call to asn1_do_adb can return NULL on error, so we should check thereturn value before attempting to use it
ASN1_primitive_new NULL param handlingASN1_primitive_new takes an ASN1_ITEM  param |it| There are a coupleof conditional code paths that check whether |it| is NULL or not  butlater |it| is deref'd unconditionally If |it| was ever really NULL thenthis would seg fault In practice ASN1_primitive_new is marked as aninternal function in the public header file The only places it is everused internally always pass a non NULL parameter for |it| Therefore, changethe code to sanity check that |it| is not NULL, and remove the conditionalchecking
Fix EVP_DigestInit_ex with NULL digestCalling EVP_DigestInit_ex which has already had the digest set up for itshould be possible You are supposed to be able to pass NULL for the typeHowever currently this seg faults
Fix error handling in bn_expIn the event of an error |rr| could be NULL Therefore don't assume you canuse |rr| in the error handling code
ssl/s3_clntc: fix intermittent failures[and respect error return value in ssltestc]
Merge OPENSSL_NO_EC{DH,DSA} into OPENSSL_NO_ECSuggested by John Foley <foleyj@ciscocom>
Fix seg fault in ASN1_generate_v3/ASN1_generate_nconf
Move Configurations out of the way and rename themConfigure would load the glob "Configurations"  The problem withthis is that it also loads all kinds of backups of thoseconfigurations that some editors do, like emacs' classic'Configurations~'  The solution is to give them an extension, such as'conf', and make sure to end the glob with thatAlso, because 'Configurationsconf' makes for a silly name, andbecause a possibly large number of configurations will become clutter,move them to a subdirectory 'Configurations/', and rename them tosomething more expressive, as well as something that sets up some formof sorting order  Thus:Configurations	>	Configurations/10mainconfConfigurationsteam	>	Configurations/90teamconfFinally, make sure that Configure sorts the list of files that 'glob'produces, and adapt Makefileorg
Cleanse buffersCleanse various intermediate buffers used by the PRF
Harmonize return values in dtls1_buffer_recordEnsure all malloc failures return 1Reported by Adam Langley Google
BIO_debug_callback: Fix output on 64bit machinesBIO_debug_callback no longer assumes the hexadecimal representation ofa pointer fits in 8 charactersSignedoffby: Richard Levitte <levitte@opensslorg>
Prevent handshake with unseeded PRNGFix security issue where under certain conditions a client can complete ahandshake with an unseeded PRNG The conditions are: Client is on a platform where the PRNG has not been seeded, and theuser has not seeded manually A protocol specific client method version has been used ie notSSL_client_methodv23 A ciphersuite is used that does not require additional random datafrom the PRNG beyond the initial ClientHello client randomeg PSKRC4SHAIf the handshake succeeds then the client random that has been used willhave been generated from a PRNG with insufficient entropy and thereforethe output may be predictableFor example using the following command with an unseeded openssl willsucceed on an unpatched platform:openssl s_client psk 1a2b3c4d tls1_2 cipher PSKRC4SHACVE20150285
Fix wrong numbers being passed as string lengthsSignedoffby: Richard Levitte <levitte@opensslorg>
update ordinals
Wrong SSL version in DTLS1_BAD_VER ClientHelloSince commit 741c9959 "DTLS revision", we put the wrong protocolversion into our ClientHello for DTLS1_BAD_VER The old DTLScode which used ssl>version was replaced by the more generic SSL3 codewhich uses ssl>client_version The Cisco ASA no longer likes ourClientHelloRT3711
Fix DTLS1_BAD_VER regressionCommit 9cf0f187 in HEAD, and 68039af3 in 102, removed a version checkfrom dtls1_buffer_message which was needed to distinguish between DTLS1x and Cisco's prestandard version of DTLS DTLS1_BAD_VERBased on an original patch by David Woodhouse <dwmw2@infradeadorg>RT3703
Cleanse PKCS8 private key componentsNew function ASN1_STRING_clear_free which cleanses an ASN1_STRINGstructure before freeing itCall ASN1_STRING_clear_free on PKCS8 private key components
Additional CMS documentation
ARMv4 assembly pack: add CortexA15 performance data
GitHub 237:  Use https for IETF linksSignedoffby: Rich Salz <rsalz@opensslorg>
make errorsRun make errors on master
Update mkerrpl for new formatMake the output from mkerrpl consistent with the newly reformatted code
update TABLE
Cleanup spaces
Catch up the VMS buildcrypto/cryptolibcom  catch up with the OCSP changestest/maketestcom and test/testscom  catch up with the addition of test_evp_extra
Make STACK_OF opaque
update ordinals
Make OCSP structures opaque
Use constants not numbersThis patch uses warning/fatal constants instead of numbers with comments forwarning/alerts in d1_pktc and s3_pktcRT3725
Unchecked malloc fixesMiscellaneous unchecked malloc fixes Also fixed some mem leaks on errorpaths as I spotted them along the way
add RIPEMD160 whirlpool testsAdd RIPEMD160 and whirlpool test dataAdd Count keyword to repeatedly call EVP_DigestUpate
Check public key is not NULLCVE20150288PR3708
Fix format scriptThe format script didn't correctly recognise some ASN1 macros anddidn't reformat some files as a result Fix script and reformataffected files
Cleanup some doc filesACKNOWLEDGEMENTS is now spelled correctly :READMEASN1 talked about 096, so it's deletedI turned doc/standardstxt into a set of oneline summaries of RFCs, andalso updated the pointers to original sources to be web links
Remove experimental 56bit export ciphersThese ciphers are removed:TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_MD5TLS1_CK_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5TLS1_CK_RSA_EXPORT1024_WITH_DES_CBC_SHATLS1_CK_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHATLS1_CK_RSA_EXPORT1024_WITH_RC4_56_SHATLS1_CK_DHE_DSS_EXPORT1024_WITH_RC4_56_SHATLS1_CK_DHE_DSS_WITH_RC4_128_SHAThey were defined in a longexpired IETF internetdraft:draftietftls56bitciphersuites01txt
Fix d2i_SSL_SESSION for DTLS1_BAD_VERSome Cisco appliances use a prestandard version number for DTLS We supportthis as DTLS1_BAD_VER within the codeThis change fixes d2i_SSL_SESSION for that DTLS versionBased on an original patch by David Woodhouse <dwmw2@infradeadorg>RT3704
Fixed missing return value checksAdded various missing return value checks in tls1_change_cipher_state
Fix missing return value checksFixed various missing return value checks in ssl3_send_newsession_ticketAlso a mem leak on error
reformat evp_testc
Add OCB support and test vectors for evp_test
Skip unsupported digests in evp_test
add MD4 test data
Skip unsupported ciphers in evp_test
Make OpenSSL compile with norc4
Add algorithm skip supportAdd support for skipping disabled algorithms: if an attempt to load apublic or private key results in an unknown algorithm error then anytest using that key is automatically skipped
Fix evp_extra_testc with noecWhen OpenSSL is configured with noec, then the new evp_extra_test fails topass This change adds appropriate OPENSSL_NO_EC guards around the code
Remove NETSCAPE_HANG_BUGNETSCAPE_HANG_BUG is a workaround for a browser bug from many years ago2000It predates DTLS, so certainly has no place in d1_srvrcIn s3_srvrc it forces the ServerDone to appear in the same record as theCertificateRequest when doing client authBoringSSL have already made the same commit:79ae85e4f777f94d91b7be19e8a62016cb55b3c5
Removed support for SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG Also removedthe "hack" option from s_server that set this option
Update the SHA documentationUpdates to include SHA224, SHA256, SHA384 and SHA512 In particular notethe restriction on setting md to NULL with regards to thread safety
Fix NAME section of d2i_ECPKParameters to prevent broken symlinks when usingthe extractnamespl scriptRT3718
Fix some minor documentation issues
Remove pointless free, and use preferred way of calling d2i_ functions
Add dire warnings about the "reuse" capability of the d2i_ functions
Provide documentation for i2d_ECPrivateKey and d2i_ECPrivateKey
Fix a failure to NULL a pointer freed on errorInspired by BoringSSL commit 517073cd4b by Eric Roman <eroman@chromiumorg>CVE20150209
Import evp_testc from BoringSSL Unfortunately we already have a filecalled evp_testc, so I have called this one evp_extra_testc
Add documentation for the no_alt_chains option for various apps, as well asthe X509_V_FLAG_NO_ALT_CHAINS flag
Add no_alt_chains option to apps to implement the newX509_V_FLAG_NO_ALT_CHAINS flag Using this option means that when buildingcertificate chains, the first chain found will be the one used Without thisflag, if the first chain found is not trusted then we will keep looking tosee if we can build an alternative chain instead
Add flag to inhibit checking for alternate certificate chains Setting thisbehaviour will force behaviour as per previous versions of OpenSSL
In certain situations the server provided certificate chain may no longer bevalid However the issuer of the leaf, or some intermediate cert is in factin the trust storeWhen building a trust chain if the first attempt fails, then try to see ifalternate chains could be constructed that are trustedRT3637RT3621
Remove CVS filtering from find targets
Move build config table to separate filesMove the build configuration table into separate files  The Configurationsfile is standard configs, and Configurationsteam is for opensslteammembers  Any other file, Configurations, found in the same directoryas the Configure script, is loadedTo add another file, use configFILE flags which should probably bean absolute pathWritten by Stefen Eissing <stefaneissing@greenbytesde> and Rich Salz<rsalz@opensslorg>, contributed by Akamai Technologies
Document no_explicit
Fix crash in SPARC T4 XTS
aes/asm/bsaesarmv7: fix kernelside XTS and harmonize with LinuxXTS bug spotted and fix suggested by Adrian Kotelba
Don't set no_protocol if tls1 selected
perlasm/x86masmpl: make it workThough this doesn't mean that masm becomes supported, the script isstill provided on don'taskincaseofdoubtusenasm basisSee RT3650 for background
sha/asm/sha1586pl: fix typoThe typo doesn't affect supported configuration, only unsupported masm
evp/evp_testc: avoid crashes when referencing uninitialized pointersFor some reason failure surfaced on ARM platforms
typo
Fix nullpointer dereferenceSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Fix memory leak
Avoid a doublefree in an error pathSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Restore DTERMIO/DTERMIOS on Windows platformsThe previous defaulting to TERMIOS took away DTERMIOS / DTERMIO abit too enthusiastically  Windows/DOSish platforms of all sorts getidentified as OPENSSL_SYS_MSDOS, and they get a different treatmentaltogether UNLESS DTERMIO or DTERMIOS is explicitely given with theconfiguration  The answer is to restore those macro definitions forthe affected configuration targets
Assume TERMIOS is default, remove TERMIO on all LinuxThe rationale for this move is that TERMIOS is default, supported byPOSIX12001, and most definitely on Linux  For a few other systems,TERMIO may still be the termnial interface of preference, so we keepDTERMIO on those in Configurecrypto/ui/ui_opensslc is simplified in this regard, and will defineTERMIOS for all systems except a select few exceptions
Add additional EC documentation
Use named curve parameter encoding by defaultMany applications require named curve parameter encoding instead of explicitparameter encoding including the TLS library in OpenSSL itself Set thisencoding by default instead of requiring an explicit call to set itAdd OPENSSL_EC_EXPLICT_CURVE define
More RSA tests
remove unused method declaration
size_t for buffer functionsChange BUF_MEM_grow and BUF_MEM_grow_clean to return size_t
Add leak detection, fix leaks
Add EVP_PKEY test dataAdd some EVP_PKEY test data for sign and verify tests includingfailure cases
EVP_PKEY support for evp_testAdd two new keywords "PublicKey" and "PrivateKey" These will load a keyin PEM format from the lines immediately following the keyword and assignit a name according to the value These will be used later for public andprivate key testing operationsAdd tests for Sign, Verify, VerifyRecover and Decrypt
Add CMAC test data
Add HMAC test data
MAC support for evp_test
New macro to set mac key
Return error code is any tests fail
Transfer a fix from 101manually picked from e7b85bc40200961984925604ca444517359a6067
RT937: Enable pilotAttributeType uniqueIdentifier
evp/evph: add missing camelliactr declarations
RT3670: Check return from BUF_MEM_grow_clean
RT3684: rand_egd needs stddefhAnd remove backup definition of offsetof
Missing OPENSSL_free on error path
Engage ecp_nistz256armv4 module
Add ec/asm/ecp_nistz256armv4pl module
Add Camellia CTR mode
Add more Camellia OIDs
Add SSL_SESSION_get0_ticket API function
Correct reading back of tlsext_tick_lifetime_hint from ASN1When writing out the hint, if the hint > 0, then we write it out otherwisewe skip itPreviously when reading the hint back in, if were expecting to see onebecause the ticket length > 0, but it wasn't present then we set the hintto 1, otherwise we set it to 0 This fails to set the hint to the same aswhen it was written outThe hint should never be negative because the RFC states the hint isunsigned It is valid for a server to set the hint to 0 this means thelifetime is unspecified according to the RFC If the server set it to 0, itshould still be 0 when we read it back in
Provide the API functions SSL_SESSION_has_ticket andSSL_SESSION_get_ticket_lifetime_hint The latter has been reported asrequired to fix Qt for OpenSSL 110 I have also added the former in orderto determine whether a ticket is present or not  otherwise it is difficultto know whether a zero lifetime hint is because the server set it to 0, orbecause there is no ticket
Make tlsext_tick_lifetime_hint an unsigned long from signed longFrom RFC4507:"The ticket_lifetime_hint field contains a hint from the server about howlong the ticket should be stored  The value indicates the lifetime inseconds as a 32bit unsigned integer in network byte order"
ec/ecp_nistz256c: fix compiler warnings
Configure: disable warning C4090 in Windows builds
ec/asm/ecp_nistz256x86pl: fix typos error shows in Windows build
New evp_test updatesPrint usage messagePrint expected and got values if mismatch
Add new test file
Initial version of new evp_test program
Fix hostname validation in the commandline tool to honour negative return valuesSpecifically, an ASN1 NumericString in the certificate CN will fail UTF8 conversionand result in a negative return value, which the "x509 checkhost" commandline optionincorrectly interpreted as successAlso update X509_check_host docs to reflect realityThanks to Sean Burford Google for reporting this issue
Remove some functions that are no longer used and break the build with:/config strictwarnings enabledeprecated
HMAC_cleanup, and HMAC_Init are stated as deprecated in the docs and sourceMark them as such with OPENSSL_USE_DEPRECATED
Remove DOPENSSL_NO_DEPRECATED from strictwarnings flagsIn master OPENSSL_NO_DEPRECATED is the default anyway By including it instrictwarnings as well this means you cannot combine enabledeprecatedwith strictwarnings
Engage ecp_nistz256x86 module
Add ec/asm/ecp_nistz256x86pl module
Support for alternative KDFsDon't hard code NID_id_pbkdf2 in PBES2: look it up in PBE table
Bring objectspl output even closer to new format
bn/bn_addc: fix dead code elimination that went bad
Fix memory leak reportingFree up bio_err after memory leak data has been printed to itIn int_free_ex_data if ex_data is NULL there is nothing to free upso return immediately and don't reallocate it
Remove obsolete IMPLEMENT_ASN1_SET_OF
evp/e_aesc: fix pair of SPARC T4specific problems: SIGSEGV/ILL in CCM RT3688; SIGBUS in OCB;
Remove stray "back" This was causing newer versions of pod2man to choke
Harmonize objectspl output with new format
des/asm/des_encm4: fix brownbag typo in last commit
Final for me, for now dead code cleanupThis is a final pass looking for 'if 0'/'if 1' controls andremoving the appropriate pieces
Apache Traffic Server has a need to set the rbio without touching the wbioThere is no mechanism to do that at the moment  SSL_set_bio makes changesto the wbio even if you pass in SSL_get_wbioThis commit introduces two new API functions SSL_set_rbio andSSL_set_wbio These do the same job as SSL_set_bio except they enableyou to manage the rbio and wbio individually
ui_compat cleanup; makefiles and vmsRemove ui_compath from Makefile dependenciesAnd from two VMS build/install scripts
Remove ui_compatThis is the last of the old DES API
Remove X509_PAIRUnused type; a pair X509 certificates Intended for LDAP support
Live code cleanup: remove if 1 stuffFor code bracketed by "if 1" then remove the alternate"else  endif" lines
dead code cleanup: if 0 in sslI left many "if 0" lines, usually because I thought we wouldprobably want to revisit them later, or because they providedsome useful internal documentation tips
util/mkstackpl now generates entire safestackhThe mkstackpl script now generates the entire safestackh fileIt generates output that follows the coding styleAlso, removed all instances of the obsolete IMPLEMENT_STACK_OFmacro
Have mkdefpl ignore APPLINK settings
Remove OPENSSL_NO_HMACDisabling HMAC doesn't work If it did it would end up disabling a lot ofOpenSSL functionality it is required for all versions of TLS for example
Remove support for SSL_OP_NETSCAPE_CA_DN_BUGThis is an ancient bug workaround for Netscape clients The documentationtalks about versions 3x and 4x beta
Fix error handling in ssltest
Use memset in bn_montUse memset not inline code  Compilers are smarter now
Live code cleanup; if 1 removalA few minor cleanups to remove preprocessor "if 1" stuff
Fixed bad formatting in crypto/des/sprh
Fix various build breaksTABLE wasn't updated from a previous Configure changeMissed an RMD160/RIPE/RIPEMD unification in mkdefplMakefile install_sw referenced file doc/opensslsharedtxt RT3686Needed to run 'make update' because Various old code has been removed Varous old ifdef tests were removed
fix windows build
Updates to reformat scriptDon't change files if they're unmodifiedIndicate which files have changed and a summary
More unused FIPS module codeRemove fips_algvscRemove unused fips module build code from Configure and Makefileorg
Make objxrefpl output in correct format
Preliminary ASN1_TIME documentation
Remove unused variables
Dead code: crypto/dh,modes,pkcs12,ripemd,rsa,srpAnd an uncompiled C++ test fileAlso remove srp_lclh, with help from Richard
Add SSL_get_extms_support documentationDocument SSL_get_extms_supportModify behaviour of SSL_get_extms_support so it returns 1 if themaster secret support of the peer is not known eg handshake in progress
Add CHANGES entry
Ctrl to retrieve extms support
Add extms support to master key generationUpdate master secret calculation to support extended master secretTLS 12 client authentication adds a complication because we need tocache the handshake messages This is simpllified however becausethe point at which the handshake hashes are calculated for extendedmaster secret is identical to that required for TLS 12 clientauthentication immediately after client key exchange which is alsoimmediately before certificate verify
Extended master secret extension supportAdd and retrieve extended master secret extension, setting the flagSSL_SESS_FLAG_EXTMS appropriatelyNote: this just sets the flag and doesn't include the changes tomaster secret generation
Rewrite ssl3_send_client_key_exchange to support extmsRewrite ssl3_send_client_key_exchange to retain the premaster secretinstead of using it immediatelyThis is needed because the premaster secret is used after the client keyexchange message has been sent to compute the extended master secret
Utility function to retrieve handshake hashesRetrieve handshake hashes in a separate function This tidies the existingcode and will be used for extended master secret generation
Add flags field to SSL_SESSIONAdd a "flags" field to SSL_SESSION This will contain various flagssuch as encryptthenmac and extended master secret support
Check PKCS8 pkey field is valid before cleansingPR:3683
old_des fix windows build, remove docsRemove outdated doc filesFix windows build after old_des was removed
Remove old DES APIIncludes VMS fixes from RichardIncludes Kurt's destest fixes RT 1290Closes tickets 1290 and 1291
Dead code: if 0 removal from crypto/evp and an unused file
Dead code removal; if 0 from crypto/des
Dead code cleanup: crypto/ec,ecdh,ecdsa
Dead code cleanup; remove if 0 from crypto/engine
Dead code cleanup: if 0 dropped from tests
Dead code cleanup: crypto/c, x509v3, demosSome of the if 0 code in demo's was kept, but given helpful ifdefnames, to show more sample code
cmstestpl: "localize" /dev/null even further [as followup to VMS]
Make the libssl opaque changes compile on VMS
Add changes entry for opaquifying of libssl structures
Remove OPENSSL_NO_SSL_INTERN as it is now redundant  all internalspreviously protected by this have been moved into nonpublic headers
Make libssl opaque Move all structures that were previously protected byOPENSSL_NO_SSL_INTERN into internal header files
Build correctly for me on FreeBSD 10
Dead code removal: if 0 asn1, pkcs7Keep one if 0 but rename the symbol to be more descriptive of whatit's doing you can disable support for old broken Netscape software
Dead code clean: if 0 removal in apps
Dead code removal if 0 engines
Dead code removal: if 0 conf, dso, pqueue, threadsMostly, but not completely, debugging print statementsSome old logic kept for internal documentation reasons, perhaps
modes/gcm128c: harmonize ctx>ghash assignment, shortcut _ctr32in OPENSSL_SMALL_FOOTPRINT build, remove undesired reformat artefactand inconsistency in preprocessor logic
modes/gcm128c: fix OPENSSL_SMALL_FOOTPRINT compile failureon affected platforms PowerPC and AArch64For reference, minimalistic ifdef GHASH is sufficient, becauseit's never defined with OPENSSL_SMALL_FOOTPRINT and ctx>ghashis never referred
Since SHA0 was completely removed, also remove the related test
Update on the use of logical names for OpenSSL configuration
VMS exit codes weren't handled well enough and were unclearMaking a specific variable $failure_code and a bit of commenting in theVMS section should help clear things up
VMS adjustments:Add missing crypto modules and files to copy to crypto/installcryptocom
VMS adjustments:test/cmstestpl adjusted to handle NL: instead of /dev/null on VMS
VMS build changescrypto/cryptolibcom:Remove all APPS building, as they are goneDepend on the variable SDIRS that's defined by makevmscomRemake the whole partial module list mechanism to check for variables with a counterDefine the logical name INTERNAL to allow for 'include "internal/fooh"'makevmscom:Define SDIRS, to allow for removal of crypto modules and pass that information to crypto/cryptolibcomAllow for experimental modulesUpdate the allowed things to disableUpdate the things disabled by default to match ConfigureUpdate headers to be copied
VMS adjustments:catch up with the Unix buildA number of new tests, among others test/tocspcomDefine INTERNAL in ssl/ssllibcom to allow for 'include "internal/fooh"'
VMS adjustments:Add new symbols that are longer than 31 chars to symhacksVMS doesn't have <sys/unh>, reflect that in e_oshMS_CALLBACK has been removed, ssl_taskc needs adjustment
dso_vms needs to add the EXE extension if there is none already
Dead code removal: if 0 bio, comp, randThe start of removing dead codeA remaining if 0 in bss_connc needs more thought
Make output consistency: remove blank lineWhen you use "s" in the make flag, you see that engines outputsa blank line because EDIRS isn't set  This is a debug echo thatisn't needed
clang on Linux x86_64 complains about unreachable code
Fix various windows compilation issues
Fix int/unsigned compiler complaint
Remove support for opaqueprfAn expired IETF InternetDraft seven years old that nobodyimplements, and probably just as good as NSA DRBG work
Add missing declaration for lh_node_usage_stats
Rename index to idx to avoid symbol conflictsPicky compilers with old index string functions
Finish removal of DSS
Fix warning on some compilers where variable index shadows a globaldeclaration
Fix noocb for Windows
Rationalise testing of AEAD modes
Harmonise use of EVP_CTRL_GET_TAG/EVP_CTRL_SET_TAG/EVP_CTRL_SET_IVLEN
Replace EVP_CTRL_OCB_SET_TAGLEN with EVP_CTRL_SET_TAG for consistency withCCM
Dead code removal: Fortezza identifiersNot interested in helping the NSA in the slightestAnd anyway, it was never implemented, if'd out
"if 0" removal: header filesRemove all "if 0" blocks from header files
OPENSSL_NO_XXX cleanup: OPENSSL_NO_BUF_FREELISTSRemove OPENSSL_NO_BUF_FREELISTS This was turned on by default,so the work here is removing the 'maintain our own freelist' codeAlso removed a minor old Windowsmultibyte/widechar conversion flag
OPENSSL_NO_XXX cleanup: NO_TLS, NO_TLS1TLS and TLS1 are no longer optional
OPENSSL_NO_xxx cleanup: SHARemove support for SHA0 and DSS0 they were broken, and removethe ability to attempt to build without SHA it didn't workFor simplicity, remove the option of not building various SHA algorithms;you could argue that SHA_224/256/384/512 should be kept, since they'relike crypto algorithms, but I decided to go the other waySo these options are gone:GENUINE_DSA         OPENSSL_NO_SHA0OPENSSL_NO_SHA      OPENSSL_NO_SHA1OPENSSL_NO_SHA224   OPENSSL_NO_SHA256OPENSSL_NO_SHA384   OPENSSL_NO_SHA512
OPENSSL_NO_xxx cleanup: RFC3779Remove OPENSSL_NO_RFCF3779Also, makevmscom was ignored by some of the other cleanups, soI caught it up  Sorry I ignored you, poor little VMS
OPENSSL_NO_xxx cleanup: many removalsThe following compile options ifdef's are removed:OPENSSL_NO_BIO OPENSSL_NO_BUFFER OPENSSL_NO_CHAIN_VERIFYOPENSSL_NO_EVP OPENSSL_NO_FIPS_ERR OPENSSL_NO_HASH_COMPOPENSSL_NO_LHASH OPENSSL_NO_OBJECT OPENSSL_NO_SPEED OPENSSL_NO_STACKOPENSSL_NO_X509 OPENSSL_NO_X509_VERIFYThis diff is big because of updating the indents on preprocessor lines
OPENSSL_NO_xxx cleanup:  DECCBCM removedA DES algorithm mode, known attacks, no EVP supportFlushed
Provide documentation for all SSL_CTX?_get|set_default?_read_aheadfunctions
Remove explicit setting of read_ahead for DTLS It never makes sense not touse read_ahead with DTLS because it doesn't work Therefore read_ahead needsto be the default
Make DTLS always act as if read_ahead is set The actual value of read_aheadis ignored for DTLSRT3657
Configure: addendum to OPENSSL_NO_[RMD160|RIPEMD] harmonization
des/asm/des_encm4: strip ifdef OPENSSL_SYS_ULTRASPARC as part ofpreprocessor controls cleanup It doesn't mean that it no longerworks on UltraSPARC, only that it doesn't utilize sparcv9specificfeatures like branch prediction hints and load in littleendian byteorder anymore This "costs" ~3 in EDE3 performance regression onUltraSPARC
Remove obsolete support for old code
Make OPENSSL_config truly ignore errorsPer discussion: should not exit Should not print to stderrErrors are ignored  Updated doc to reflect that, and the factthat this function is to be avoided
undef cleanup: use memmove
Remove unused eng_rsax and related asm file
ifdef cleanup, part 4a: 'ifdef undef'This removes all code surrounded by 'ifdef undef'One case is left: memmove replaced by opencoded for loop,in crypto/stack/stackc  That needs further reviewAlso removed a couple of instances of / dead code / if I saw themwhile doing the main removal
Fix segfault with empty fields as last in the config
Replace exit with error return
Keep disclaiming 16bit supportIf you examine changes, you are likely to wonder "but what about ILP64,elusive as they are, don't they fall victim to 16bit rationalization?"No, the case was modeled and verified to work
ifdef cleanup part 3: OPENSSL_SYSNAMERename OPENSSL_SYSNAME_xxx to OPENSSL_SYS_xxxRemove MS_STATIC; it's a relic from platforms <32 bits
Add assembly support to ios64crossFix typos in ios64cross config line
ifdef cleanup, 2 remove OPENSSL_NO_SETVBUF_IONBFUse setbuffp, NULL instead of setvbuf  This removes someifdef complexity because all of our platforms support setbuf
Remove obsolete uncomiled dsagen semitest
Cleanup old doc/; remove CHANGESSSLeayRemoved CHANGESSSLeayUdpate README to be currentUpdated fignerprintstxt to list only current release signers andto explain that is what it's used forRemoved the following:cindentationel  doesn't go with our coding styleopensslsharedtxt  old info about shared library aidesopenssltxt  old info about X509v3 extension support/syntaxssleaytxt  old info about OpenSSL's predecessor, back whenprogrammers coded on COBOL sheets by candlelight
Fix postreformat errors preventing windows compilation
Fix formatting error in pemh
Use inner algorithm when printing certificate
Drop redundant and outdated __CYGWIN32__ testsChange OPENSSL_SYSNAME_CYGWIN32 to OPENSSL_SYSNAME_CYGWINDrop outdated Cygwin targetsRT3605Signedoffby: Corinna Vinschen <vinschen@redhatcom>
Fix macosxppc build and typos in unwind info
sha256armv4pl: fix typo
More comment realignment
Realign some comments after running the reformat scriptThis should be a one off operation subsequent invokation of thescript should not move them
Rerun util/opensslformatsource v c 
Run util/opensslformatsource v c 
More tweaks for comments due indent issuesConflicts:ssl/ssl_ciphcssl/ssl_loclhConflicts:ssl/s2_srvrcssl/sslh
Tweaks for comments due to indent's inability to handle themConflicts:demos/tunala/tunalahengines/e_padlockcssl/s2_clntcssl/s2_libcssl/s2_srvrcssl/s3_srvrc
Move more comments that confuse indent
Delete trailing whitespace from output
Add d debug option to save preprocessed files
Test option ncAdd option nc which sets COMMENTStrue but disables all indent commentreformatting options
ec/ecp_nistz256c: further harmonization with latest rules
Add ecp_nistz256c to list of files skipped by opensslformatsource
Manually reformat aes_x86corec and add it to the list of files skipped byopensslformatsource
crypto/ofb128c: make it indentfriendly
modes/ctr128c: make it indentfriendly
modes/cfb128c: make it indentfriendly
ec/ecp_nistz256c: harmonize with latest indent script
Fix indent comment corruption issue
Amend opensslformatsource so that it give more repeatable output
bn/bn_constc: make it indentfriendly
bn/asm/x86_64gcccL make it indentfriendly
bn/bn_asmc: make it indentfriendly
bn/bn_expc: make it indentfriendly
Manually reformat aes_corecAdd aes_corec to the list of files not processed by opensslformatsource
Add obj_dath to the list of files that will not be processed byopensslformatsource
Fix strange formatting by indent
modes/modes_lclh: make it indentfriendly
indent has problems with comments that are on the right hand side of a lineSometimes it fails to format them very well, and sometimes it corrupts them!This commit moves some particularly problematic ones
modes/gcm128c: make it indentfriendly
modes/cts128c: make it indentfriendly
crypto/mem_dbgc: make it indentfriendly
More indent fixes for STACK_OF
Fix indent issue with functions using STACK_OF
Fix indent issue with engineh
Fix logic to check for indentpro
crypto/cryptlibc: make it indentfriendly
bn/bntestc: make it indentfriendly
bn/bn_recpc: make it indentfriendly
engines/e_ubsecc: make it indentfriendly
apps/srpc: make it indentfriendly
apps/speedc: make it indentfriendly
bn/rsaz_expc: make it indentfriendly
Fix make errors
Make the script a little more location agnostic
Provide script for filtering data initialisers for structs/unions indent just can't handle it
Script fixesDon't use double newline for headersDon't interpret ASN1_PCTX as start of an ASN1 module
Run expand before perl, to make sure things are properly aligned
Force the use of our indent profile
Provide source reformating script Requires GNU indent to beavailableScript written by Tim Hudson, with amendments by Steve Henson, Rich Salz andMatt Caswell
Fix source where indent will not be able to cope
Yet more commentsConflicts:crypto/dsa/dsa_asn1ccrypto/pem/pem_allcfips/dh/dh_gencfips/dh/fips_dh_checkcfips/dh/fips_dh_gencssl/ssl_ciphcConflicts:ssl/d1_clntcConflicts:ssl/s2_pktc
More commentsConflicts:crypto/dsa/dsa_vrfccrypto/ec/ec2_smplccrypto/ec/ecp_smplcConflicts:demos/bio/sacceptcssl/d1_clntcConflicts:bugs/dggccbugcdemos/tunala/cbc
Further comment changes for reformat master
Cleanup OPENSSL_NO_xxx, part 1OPENSSL_NO_RIPEMD160, OPENSSL_NO_RIPEMD merged into OPENSSL_NO_RMD160OPENSSL_NO_FP_API merged into OPENSSL_NO_STDIOTwo typo's on endif comments fixed:OPENSSL_NO_ECB fixed to OPENSSL_NO_OCBOPENSSL_NO_HW_SureWare fixed to OPENSSL_NO_HW_SUREWARE
Add Broadwell performance results
Remove use of BN_init, BN_RECP_CTX_init from bntestBN_init and BN_RECP_CTX_init are deprecated and are not exportedfrom shared libraries on some platforms eg Windows convertbntest to use BN_new and BN_RECP_CTX_new instead
For master windows build dsah is now needed
Make output from openssl version f consistent with previous versions
Fix warning where BIO_FLAGS_UPLINK was being redefinedThis warning breaks the build in 100 and 098
Avoid deprecation problems in Visual Studio 13
Ensure internal header files are used from mk1mf based builds
RT3548: Remove unsupported platformsThis last one for this ticket  Removes WIN16So long, MS_CALLBACK and MS_FAR  We won't miss you
Allow multiple IDN xn indicatorsUpdate the X509v3 name parsing to allow multiple xn internationaldomain name indicators in a name  Previously, only allowed one atthe beginning of a name, which was wrong
RT3548: Remove some unsupported platformsThis commit removes NCR, Tandem, CrayRegenerates TABLERemoves another missing BEOS fluffThe last platform remaining on this ticket is WIN16
RT478: Add uninstall make targetAdd INSTALLDIRS variable, list of directories where things getinstalled Change install_html_docs to use perl mkdirp scriptAdd uninstall, uninstall_sw, uninstall_docs, uninstall_html_docsto Makefileorg  The actions of these targets were figured outby "inverting" the install targetRecurse into subdirs to do uninstall as needed  Added uninstalltargets whose actions were similarly figured out by "inverting"the install targetAlso remove some 'space before tab' complaints in Makefileorg
Fix nodeprecated on Windows
make update
Remove redundant DSO_METHOD_beos declaration in dsoh BEOS support has beenremoved
Make build reproducibleIt contained a date on when it was build
Further windows specific gitignore entries
Update gitignore with windows files to be excluded from git
Fix build failure on Windows due to undefined cflags identifier
A memory leak can occur in dtls1_buffer_record if either of the calls tossl3_setup_buffers or pqueue_insert fail The former will fail if there is amalloc failure, whilst the latter will fail if attempting to add a duplicaterecord to the queue This should never happen because duplicate records shouldbe detected and dropped before any attempt to add them to the queueUnfortunately records that arrive that are for the next epoch are not beingrecorded correctly, and therefore replays are not being detectedAdditionally, these "should not happen" failures that can occur indtls1_buffer_record are not being treated as fatal and therefore an attackercould exploit this by sending repeated replay records for the next epoch,eventually causing a DoS through memory exhaustionThanks to Chris Mueller for reporting this issue and providing initialanalysis and a patch Further analysis and the final patch was performed byMatt Caswell from the OpenSSL development teamCVE20150206
Unauthenticated DH client certificate fixFix to prevent use of DH client certificates without sendingcertificate verify messageIf we've used a client certificate to generate the premaster secretssl3_get_client_key_exchange returns 2 and ssl3_get_cert_verify isnever calledWe can only skip the certificate verify message inssl3_get_cert_verify if the client didn't send a certificateThanks to Karthikeyan Bhargavan for reporting this issueCVE20150205
Fix for CVE20143570 with minor bn_asmc revamp
Follow on from CVE20143571 This fixes the code that was the original sourceof the crash due to p being NULL Steve's fix prevents this situation fromoccuring  however this is by no means obvious by looking at the code fordtls1_get_record This fix just makes things look a bit more sane
Fix crash in dtls1_get_record whilst in the listen state where you get twoseparate reads performed  one for the header and one for the body of thehandshake recordCVE20143571
fix error discrepancy
Fix irixcc build
use correct credit in CHANGES
Only inherit the session ID context in SSL_set_SSL_CTX if the existingcontext was also inherited matches that of the existing SSL_CTX
use correct function name
RT3662: Allow leading  in nameConstraintsChange by SteveH from original by John Denker in the RT
Some cleanup of L<> markup in pod filesShow only the define, not the values, in BIO_f_buffer  Dataabstraction and we can remove a "see also" entryRemove internal forward reference to NOTES in EVP_EncryptInit; justsay "see below" as we do in the other pagesAdd missing 3 in pempod so the L<> entry is consistentFix entry to point to the "master" page, not the symlink'd one
Fix memory leakFix memory leak by freeing up saved_messagedata if it is not NULLPR3489
Further comment amendments to preserve formatting prior to source reformat
Remove blank line from start of cflags character array in buildinfh
CHANGES: mention "universal" ARM supportThis is recommit without unrelated modification
Revert "CHANGES: mention "universal" ARM support"This reverts commit 4fec91506975f62a2f93be71a46acc7fae7eef45
CHANGES: mention "universal" ARM support
fix compilation error
Only allow ephemeral RSA keys in export ciphersuitesOpenSSL clients would tolerate temporary RSA keys in nonexportciphersuites It also had an option SSL_OP_EPHEMERAL_RSA whichenabled this server side Remove both options as they are aprotocol violationThanks to Karthikeyan Bhargavan for reporting this issueCVE20150204
ECDH downgrade bug fixFix bug where an OpenSSL client would accept a handshake using anephemeral ECDH ciphersuites with the server key exchange message omittedThanks to Karthikeyan Bhargavan for reporting this issueCVE20143572
RT3546: Remove define IRIX_CC_BUGLeftovers from commit 448155e9bbda27cbba365ff549a7e2044a8a399fRemove nowunused define's
update ordinals
Ensure that the session ID context of an SSL is updatedwhen its SSL_CTX is updatedFrom BoringSSL commithttps://boringsslgooglesourcecom/boringssl/+/a5dc545bbcffd9c24cebe65e9ab5ce72d4535e3a
Constify ASN1_TYPE_cmp add X509_ALGOR_cmp
Fix various certificate fingerprint issuesBy using nonDER or invalid encodings outside the signed portion of acertificate the fingerprint can be changed without breaking the signatureAlthough no details of the signed portion of the certificate can be changedthis can cause problems with some applications: eg those using thecertificate fingerprint for blacklists1 Reject signatures with non zero unused bitsIf the BIT STRING containing the signature has non zero unused bits rejectthe signature All current signature algorithms require zero unused bits2 Check certificate algorithm consistencyCheck the AlgorithmIdentifier inside TBS matches the one in thecertificate signature NB: this will result in signature failureerrors for some broken certificates3 Check DSA/ECDSA signatures use DERReencode DSA/ECDSA signatures and compare with the original receivedsignature Return an error if there is a mismatchThis will reject various cases including garbage after signaturethanks to Antti Karjalainen and Tuomo Untinen from the Codenomicon CROSSprogram for discovering this case and use of BER or invalid ASN1 INTEGERsnegative or with leading zeroesCVE20148275
Additional fix required for nosrtp to workRT3638
Fix building with nosrtpRT3638
Add a clang build target for linuxx86_64This change documents the world asis, by turning all warnings on,and then turning warnings that trigger off again
Remove inconsistency in ARM supportThis facilitates "universal" builds, ones that target multiplearchitectures, eg ARMv5 through ARMv7 See commentary inConfigure for details
ecp_nistz256x86_64pl: fix occasional failuresRT: 3607
RT2914: NULL check missing in X509_name_canonCheck for NULL return from X509_NAME_ENTRY_new
Remove SGC restart flag
Remove MS SGCMS Server gated cryptography is obsolete and dates from the time of exportrestrictions on strong encryption and is only used by ancient versions ofMSIE
Clear existing extension stateWhen parsing ClientHello clear any existing extension state fromSRP login and SRTP profileThanks to Karthikeyan Bhargavan for reporting this issue
typo in s_clientSignedoffby: Kurt Roeckx <kurt@roeckxbe>
remove duplicate definesSignedoffby: Kurt Roeckx <kurt@roeckxbe>
constify tls 12 lookup tablesNone of this should live in writable memorySignedoffby: Kurt Roeckx <kurt@roeckxbe>
Add missing include of sys/timehgettimeofday was undefined
mark all block comments that need format preserving so thatindent will not alter them when reformatting comments
Make "run" volatileRT3629
Document openssl dgst hmac optionSignedoffby: Kurt Roeckx <kurt@roeckxbe>
dlfcn: always define _GNU_SOURCEWe need this for the freebsd kernel with glibc as used in the Debian kfreebsdports  There shouldn't be a problem defining this on systems not using glibc
Fix memory leak in the appsThe BIO_free allocated ex_data again that we already freed
RT3548: Remove unsupported platformsThis commit removes DGUXIt also flushes out some leftbehinds in configAnd regenerates TABLE from Configure hadn't been done in awhile
RT3548: unsupported platformsThis commit removes Sinix/ReliantUNIX RM400And a missed piece of BEOS fluff
RT3548: Remove unsupported platformsThis commit removes MPE/iX
Improves certificates HOWTO adds links to various related documents fixes a few typos rewords a few sentences
Small typo
RT3548: Remvoe unsupported platformsThis commit removes SunOS a sentimental favorite of mine
Fix incorrect OPENSSL_assert usageReturn an error code for I/O errors instead of an assertion failurePR3470
RT3548: Remove outdated platformsThis commit removes all mention of NeXT and NextStep
Fix a problem if CFLAGS is too long cversionc fails to compile when configis run with strictwarnings
Made it an error to define OPENSSL_USE_DEPRECATED if OpenSSL has been builtwith OPENSSL_NO_DEPRECATED defined
Update CHANGES for deprecated updates
make update following changes to default config settings
Change all instances of OPENSSL_NO_DEPRECATED to OPENSSL_USE_DEPRECATEDIntroduce use of DECLARE_DEPRECATED
Remove redundant OPENSSL_NO_DEPRECATED suppression
Turn on OPENSSL_NO_DEPRECATED by defaultAlso introduce OPENSSL_USE_DEPRECATED If OPENSSL_NO_DEPRECATED isdefined at config stage then OPENSSL_USE_DEPRECATED has no effect deprecated functions are not availableIf OPENSSL_NO_DEPRECATED is not defined at config stage thenapplications must define OPENSSL_USE_DEPRECATED in order to accessdeprecated functionsAlso introduce compiler warnings for gcc for applications usingdeprecated functions
RT3548: Remove some obsolete platformsThis commit removes Sony NEWS4
Return error when a bit string indicates an invalid amount of bits left
Fix yet anoither 'make clean' breakage
RT3548: Remove some obsolete platformsThis commit removes BEOS
RT3544: Restore MWERKS for NetWare
Reject invalid constructed encodingsAccording to X690 null, object identifier, boolean, integer and enumeratedtypes can only have primitive encodings: return an error if any ofthese are received with a constructed encoding
Add a comment noting the padding oracle
Revert "RT3425: constanttime evp_enc"Causes more problems than it fixes: even though error codesare not part of the stable API, several users rely on thespecific error code, and the change breaks them Conversely,we don't have any concrete usecases for constanttime behaviour hereThis reverts commit 4aac102f75b517bdb56b1bcfd0a856052d559f6e
Build fixesVarious build fixes, mostly uncovered by clang's unusedconstvariableand unusedfunction errors
Premaster secret handling fixesFrom BoringSSL Send an alert when the client key exchange isn't correctly formatted Reject overly short RSA ciphertexts to avoid a benign outofbounds memory access
Clear warnings/errors within RL_DEBUG code sections RL_DEBUG should be renamed
Clear warnings/errors within TLS_DEBUG code sections
Clear warnings/errors within KSSL_DEBUG code sections
Clear warnings/errors within CIPHER_DEBUG code sections
Clear warnings/errors within CIPHER_DEBUG code sections
Clear warnings/errors within BN_CTX_DEBUG code sections
Check for invalid divisors in BN_divInvalid zeropadding in the divisor could cause a division by 0
The dtls1_output_cert_chain function no longer exists so remove it fromssl_loclh
Don't set client_version to the ServerHello versionThe client_version needs to be preserved for the RSA key exchangeThis change also means that renegotiation will, like TLS, repeat the oldclient_version rather than advertise only the final version Either way,version change on renego is not allowed This is necessary in TLS to workaround an SChannel bug, but it's not strictly necessary in DTLSFrom BoringSSL
Add more meaningful OPENSSL_NO_ECDH error message for suite b mode
Rename gost2814789tc to gost2814789testc The old name caused problemsfor dummytest if gost is compiled out, since the name of the test is notstandard dummytest segfaults Also the old name caused problems for gitbecause the executable was not in the gitignore file
Add missing OPENSSL_NO_EC guards
Add OPENSSL_NO_ECDH guards
Remove extraneous white space, and add some braces
DTLS fixes for signed/unsigned issues
RT3497: The ticket that keeps on givingDon't remove c_rehash that wasn't created by make; this scriptis created by configureThis fix brought to you by the letter "f" and
Allow using SSLv2 again when setting Protocol in the configRT3625
RT3497: Fix; don't remove header filesDoing 'config ; make clean' broke because clean removedheader files that normal build didn't create  So don'tremove those files  Hopefully will be better addressed byGeoff's nosymlinks patch
Fix unused variable warningThe temporary variable causes unused variable warnings in opt mode with clang,because the subsequent assert is compiled out
Fixed memory leak if BUF_MEM_grow fails
RT1688: Add dependencies for parallel make
make update
Minor doc fixesIn EVP_EncryptInit remove duplicate mention of EVP_idea_cbcIn EVP_PKEY_CTX_ctrlpod remove EVP_PKEY_get_default_digest_nidsince it is documented elsewhere
RT3497: Clean up "dclean" targetsSome Makefiles had actions for "dclean" that really belongedto the "clean" target  This is wrong because clean ends up,well, not really cleaning everything
RT3543: Remove ifdef LINTI also replaced some exit/return wrappers in variousprograms from main to standardize on return
Remove old private pod2manInclude Richard's point to remove the 'sh c' wrapper
capi_ctrl, capi_vtrace: check for NULL after allocating and free it
tree_print: check for NULL after allocating errSignedoffby: Kurt Roeckx <kurt@roeckxbe>
tls1_heartbeat: check for NULL after allocating bufSignedoffby: Kurt Roeckx <kurt@roeckxbe>
tls1_process_heartbeat: check for NULL after allocating bufferSignedoffby: Kurt Roeckx <kurt@roeckxbe>
SSL_set_session: check for NULL after allocating s>kssl_ctx>client_princSignedoffby: Kurt Roeckx <kurt@roeckxbe>
serverinfo_process_buffer: check result of reallocctx>cert>key>serverinfo and don't leak memory if it failsSignedoffby: Kurt Roeckx <kurt@roeckxbe>
ssl3_digest_cached_records: check for NULL after allocating s>s3>handshake_dgstSignedoffby: Kurt Roeckx <kurt@roeckxbe>
ssl3_get_certificate_request: check for NULL after allocating s>cert>ctypesSignedoffby: Kurt Roeckx <kurt@roeckxbe>
SSL_COMP_add_compression_method: exit if allocating the new compression method struct failsSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Move bn internal functions into bn_inth and bn_lclh
Update documentation following BN opaquify
Make bn opaque
Update apps for bn opaque change
Disable engines that will fail to build when bn is made opaque
Implement internally opaque bn access from ts
Implement internally opaque bn access from srp
Implement internally opaque bn access from rsa
Implement internally opaque bn access from evp
Implement internally opaque bn access from ec
Implement internally opaque bn access from dsa
Implement internally opaque bn access from dh
Implement internally opaque bn access from asn1
Prepare exptest for bn opaquify
Prepare for bn opaquify Implement internal helper functions
Remove internal bn dependancies from speedc
Include <openssl/fooh> instead of "fooh"Exported headers shouldn't be included as "fooh" by code from the samemodule, it should only do so for moduleinternal headers This isbecause the symlinking of exported headers from include/openssl/foohto crypto/foo/fooh is being removed, and the exported headers arebeing moved to the include/openssl/ directory insteadChangeId: I4c1d80849544713308ddc6999a549848afc25f94Signedoffby: Geoff Thorpe <geoff@opensslorg>
Fixed memory leak in the event of a failure of BUF_MEM_grow
Fix memory leak in SSL_new if errors occur
Remove fips directories from mkfilespl
Remove references to deleted fips directory from Makefileorg
remove OPENSSL_FIPSAPI
remove FIPS__SIZE_T
remove FIPS module code from crypto/evp
remove FIPS module code from crypto/bn
remove FIPS module code from crypto/ecdh
remove FIPS module code from crypto/ecdsa
Remove FIPS module code from crypto/dh
remove FIPS module code from crypto/dsa
remove FIPS module code from crypto/rsa
Remove FIPS error library from opensslec mkerrpl
make depend
Remove fipsh reference
Remove fips_constseg references
remove another FIPSCANISTER reference
remove unnecessary OPENSSL_FIPS reference
Remove OPENSSL_FIPSCANISTER codeOPENSSL_FIPSCANISTER is only set if the fips module is being builtas opposed to being used Since the fips module wont be built inmaster this is redundant
Remove FIPSCANISTERINTERNAL reference
Remove fips utility build rules from test/MakefileThe fips test utilities are only build if an FIPS module is beingbuilt from source As this isn't done in master these are redundant
Remove fipscanister build functionality from makefiles
Remove fipscanister from Configure, delete fips directory
Remove some unnecessary OPENSSL_FIPS referencesFIPS_mode exists in all versions of OpenSSL but always returns 0 if OpenSSL is not FIPScapable
Add CHANGES entry for OCB
Added OPENSSL_NO_OCB guards
Add documentation for OCB mode
Add tests for OCB mode
Add EVP support for OCB mode
Add support for OCB mode as per RFC7253
Clarify the return values for SSL_get_shared_curve
Add extra checks for oddlength EC curve listsOddlength lists should be rejected everywhere upon parsing Nevertheless,be extra careful and add guards against offbyone readsAlso, driveby replace inexplicable doublenegation with an explicit comparison
Reject elliptic curve lists of odd lengthsThe Supported Elliptic Curves extension contains a vector of NamedCurvesof 2 bytes each, so the total length must be even Accepting oddlengthlists was observed to lead to a nonexploitable onebyte outofboundsread in the latest development branches 102 and master Releasedversions of OpenSSL are not affectedThanks to Felix Groebert of the Google Security Team for reporting this issue
Fix broken buildAdd includes missing from commit 33eab3f6af51c6d7fe68ee4960930df4f1616bd5
Replace GOST_R_MALLOC_FAILURE and GOST_R_NO_MEMORY with ERR_R_MALLOC_FAILURE
capi_get_provname: Check return values
ssl_create_cipher_list: check whether push onto cipherstack succeedsSignedoffby: Kurt Roeckx <kurt@roeckxbe>
ssl_cert_dup: Fix memory leakAlways use goto err on failure and call ssl_cert_free on the error path so allfields and "ret" itself are freedSignedoffby: Kurt Roeckx <kurt@roeckxbe>
dtls1_new: free s on error path
dtls1_heartbeat: check for NULL after allocating s>cert>ctypesSignedoffby: Kurt Roeckx <kurt@roeckxbe>
dtls1_process_heartbeat: check for NULL after allocating bufferSignedoffby: Kurt Roeckx <kurt@roeckxbe>
capi_get_key: check for NULL after allocating keySignedoffby: Kurt Roeckx <kurt@roeckxbe>
capi_cert_get_fname: check for NULL after allocating wfnameSignedoffby: Kurt Roeckx <kurt@roeckxbe>
capi_get_provname: free name on error if it was malloc'edSignedoffby: Kurt Roeckx <kurt@roeckxbe>
pkey_gost_mac_keygen: check for NULL after allocating keydataSignedoffby: Kurt Roeckx <kurt@roeckxbe>
pkey_gost_ctrl: check for NULL after allocating pctx>shared_ukmSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Update changes to indicate that SSLv2 support has been removed
Remove incorrect code inadvertently introduced through commit 59669b6ab
Remove SSLv2 supportThe only support for SSLv2 left is receiving a SSLv2 compatible client hello
New location on website for binaries
Remove "if 0" code
Only use the fallback mtu after 2 unsuccessful retransmissions if it is lessthan the mtu we are already using
Updates to s_client and s_server to remove the constant 28 for IPv4 headerand UDP header when setting an mtu This constant is not always correct egif using IPv6 Use the new DTLS_CTRL functions instead
If we really get a situation where the underlying mtu is less than the minimumwe will support then dtls1_do_write can go into an infinite loop This commitfixes that
Fix dtls_query_mtu so that it will always either complete with an mtu that isat least the minimum or it will failThere were some instances in dtls1_query_mtu where the final mtu can end upbeing less than the minimum, ie where the user has set an mtu manually Thisshouldn't be allowed Also remove dtls1_guess_mtu that, despite havinglogic for guessing an mtu, was actually only ever used to work out the minimummtu to use
Remove instances in libssl of the constant 28 for size of IPv4 header + UDPand instead use the value provided by the underlying BIO Also provide somenew DTLS_CTRLs so that the library user can set the mtu without needing toknow this constant These new DTLS_CTRLs provide the capability to set thelink level mtu to be used ie including this IP/UDP overhead The previousDTLS_CTRLs required the library user to subtract this overhead first
There are a number of instances throughout the code where the constant 28 isused with no explanation Some of this was introduced as part of RT1929 Thevalue 28 is the length of the IP header 20 bytes plus the UDP header 8bytes However use of this constant is incorrect because there may beinstances where a different value is needed, eg an IPv4 header is 20 bytesbut an IPv6 header is 40 Similarly you may not be using UDP eg SCTPThis commit introduces a new BIO_CTRL that provides the value to be used forthis mtu "overhead" It will be used by subsequent commits
The first call to query the mtu in dtls1_do_write correctly checks that themtu that we have received is not less than the minimum If its less it uses theminimum instead The second call to query the mtu does not do that, butinstead uses whatever comes back We have seen an instance in RT3592 where wehave got an unreasonably small mtu come back This commit makes both querychecks consistent
The SSL_OP_NO_QUERY_MTU option is supposed to stop the mtu from beingautomatically updated, and we should use the one provided insteadUnfortunately there are a couple of locations where this is not respected
Verify that we have a sensible message len and fail if notRT3592 provides an instance where the OPENSSL_assert that this commitreplaces can be hit I was able to recreate this issue by forcing theunderlying BIO to misbehave and come back with very small mtu values Thishappens the second time around the while loop after we have detected that theMTU has been exceeded following the call to dtls1_write_bytes
Use the SSLv23 method by defaultIf SSLv2 and SSLv3 are both disabled we still support SSL/TLS
Remove all cvsignore files
Check for FindNextFile when defining it rather than FindFirstFile
[PR3597] Advance to the next state variant when reusing messagesPreviously, state variant was not advanced, which resulted in statebeing stuck in the st1 variant usually "_A"This broke certificate callback retry logic when accepting connectionsthat were using SSLv2 ClientHello hence reusing the message, becausetheir state never advanced to SSL3_ST_SR_CLNT_HELLO_C variant requiredfor the retry code pathReported by Yichun Zhang agentzhSignedoffby: Piotr Sikora <piotr@cloudflarecom>
Correct some layout issues, convert all remaining tabs to appropriate amounts of spaces
Improves the proxy certificates howto docThe current documentation contains a bunch of spelling and grammar mistakes I alsofound it hard to understand some paragraphs, so here is my attempt to improve itsreadability
Fix warning in ssl2_enc
Remove more references to dtls1_enc
Check EVP_Cipher return values for SSL2
Delete unused file
Add checks to the return value of EVP_Cipher to prevent silent encryption failurePR1767
Remove redundant checks in ssl_cert_dup This was causing spurious error messages when using GOSTPR3613
Tidy up ocsp help output
Add documentation on timeout option in the ocsp utilityPR3612
NetWare compilation fixWorkaround for NetWare CodeWarrior compiler which doesn't properly lookupincludes when in same directory as the C file which includes itPR3569
Updates to X509_NAME_get_index_by_NIDpod submitted by user Bernardh via the wikiMinor changes made by Matt Caswell
Updates to X509_NAME_add_entry_by_txtpod submitted by user Bernardh via the wikiMinor changes made by Matt Caswell
Updates to EVP_PKEY_encryptpod submitted by user Bernardh via the wikiMinor changes made by Matt Caswell
Add include of sslh which is required by srtph
Fixed memory leak due to incorrect freeing of DTLS reassembly bit maskPR3608
Corrected comments in sslh about SSLv23_method and friendsPR3574
Print out Suite B statusWhen using the xcert option to test certificate validity print outif we pass Suite B compliance We print out "not tested" if we aren'tin Suite B mode
Fix SuiteB chain checking logic
RT2679: Fix error if keysize too shortIn keygen, return KEY_SIZE_TOO_SMALL not INVALID_KEYBITS I also increased the minimum from 256 to 512, which is nowdocumented in CHANGES file 
RT3488: Update doc for OPENSSL_configFix CONF_load_modules to CONF_modules_loadDocument that it calls exitAdvise against using it nowAdd an error print to stderr
Do not resume a session if the negotiated protocol version does not matchthe session's version serverSee also BoringSSL's commit bdf5e72f50e25f0e45e825c156168766d8442dde
When using EVP_PKEY_derive with a KDF set, a negative error fromECDH_compute_key is silently ignored and the KDF is run on duff dataThanks to github user tomykaira for the suggested fix
Clean up CHANGES
Ensure SSL3_FLAGS_CCS_OK or d1>change_cipher_spec_ok for DTLS is resetonce the ChangeCipherSpec message is received Previously, the server wouldset the flag once at SSL3_ST_SR_CERT_VRFY and again at SSL3_ST_SR_FINISHEDThis would allow a second CCS to arrive and would corrupt the server stateBecause the first CCS would latch the correct keys and subsequent CCSmessages would have to be encrypted, a MitM attacker cannot exploit this,thoughThanks to Joeri de Ruiter for reporting this issue
Always require an advertised NewSessionTicket messageThe server must send a NewSessionTicket message if it advertised onein the ServerHello, so make a missing ticket message an alertin the clientAn equivalent change was independently made in BoringSSL, see commit6444287806d801b9a45baf1f6f02a0e3a16e144c
Remove ssl3_check_finishedThe client sends a session ID with the session ticket, and usesthe returned ID to detect resumption, so we do not need to peekat handshake messages: s>hit tells us explicitly if we're resumingAn equivalent change was independently made in BoringSSL, see commit407886f589cf2dbaed82db0a44173036c3bc3317
Set s>hit when resuming from external preshared secretThe same change was independently made in BoringSSL, see commit9eaeef81fa2d4fd6246dc02b6203fa936a5eaf67
Reset s>tlsext_ticket_expected in ssl_scan_serverhello_tlsextThis ensures that it's zeroed even if the SSL object is reusedas in ssltestc It also ensures that it applies to DTLS, too
Fix s_server ssl2 Previously this reported "Error setting EC curve"
Fix excert logicIf no keyfile has been specified use the certificate file insteadFix typo: we need to check the chain is not NULL, not the chain file
New option nossl3method which removes SSLv3_methodWhen nossl3 is set only make SSLv3 disabled by default Retain ssl3options for s_client/s_server/ssltestWhen nossl3method is set SSLv3_method is removed and all ssl3optionsWe should document this somewhere, eg wiki, FAQ or manual page
Only handle RI extension for SSLv3Don't send or parse any extensions other than RI which is neededto handle secure renegotation for SSLv3
Process signature algorithms before deciding on certificateThe supported signature algorithms extension needs to be processed beforethe certificate to use is decided and before a cipher is selected as theset of shared signature algorithms supported may impact the choice
Added references to RFC 7027
Prevent use of binary curves when OPENSSL_NO_EC2M is defined
Fixed cmstestpl for noec2m
Updated comment references to draftietftlsecc12 to refer to RFC4492 instead
Don't use msg on errorDon't attempt to access msg structure if recvmsg returns an errorPR3483
Add whrlpool and camellia s files to perlasm listChangeId: I626d751f19f24df6b967c17498d6189cc0acb96cSignedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
Add missing SRC variableThis is the only Makefile without SRC defined This change enables astandard Makefile include directive to cover crypto/jpake/d filesThis was automatically applied by AddSrcVarIfNeeded in:https://codegooglecom/p/mikebland/source/browse/openssl/update_makefilespyChangeId: I030204a1bc873b5de5b06c8ddc0b94bb224c6650Signedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
Remove redundant test targets outside of test/These correspond to targets of the same name in test/Makefile that clash whenusing the singlemakefile build method using GitConfigure and GitMakeChangeId: If7e900c75f4341b446608b6916a3d76f202026eaSignedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
Improve variable parsing when generating MINFOBefore this change, variables for which a '' appeared in the assignment wouldbe parsed as the entire string up until the final '' For example:BUILD_CMDshlib_target; if [ n "$SHARED_LIBS" ]; then \would result in the variable name "BUILD_CMDshlib_target" This doesn'tappear to harm the current generation of MINFO, but creates problems for otherMakefilerelated work I'm attemptingChangeId: I1f3a606d67fd5464bb459e8f36c23b3e967b77e1Signedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
{,darwin64}debugtest64clang Configure targetsThese are based on debugbendebug64clang and is intended to produceconsistent settings for folks involved in the unit testing effort detailed at:http://wikiopensslorg/indexphp/Unit_Testingfsanitize has been removed from the set of clang flags for now Apparentlyclang 31, which ships with FreeBSD 91, completely ignores fsanitize Clang33, which ships with FreeBSD 92, compiles with it, but fails to link due tothe absence of libasan:http://listsfreebsdorg/pipermail/freebsdhackers/2013December/043995htmlhttps://wwwmailarchivecom/cfecommits@csuiucedu/msg92260htmlhttp://reviewsllvmorg/D2644We need Wnoerrorunusedconstvariable because of this error:/crypto/ec/ec_libc:74:19: error: unused variable 'EC_version' [Werror,Wunusedconstvariable]static const char EC_version[]  "EC" OPENSSL_VERSION_PTEXT;ChangeId: I2cba53537137186114c083049ea1233550a741f9Signedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
Emit PERLASM_SCHEME to fix GitMake on OS XThis fixes the errors when trying to assemble s files using GitMake on OS XChangeId: I2221f558619302d22e0c57d7203173d634155678Signedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
Add cscopeout and d files to gitignorecscopeout is generated by cscope as described in:http://wikiopensslorg/indexphp/Testing_and_Development_Tools_and_Tipsd files are compilergenerated Makefile dependency files eg using'gcc MMD MP fooc'ChangeId: I2338858a6b6ee0527837d10a8b55cff1689023fdSignedoffby: Mike Bland <mbland@acmorg>Signedoffby: Geoff Thorpe <geoff@opensslorg>
Additional output for ssltestPrint out more details of the conection in ssltest specifically:server certificate curve name for EC, server temporary key if anyand peer signing digest
Add SSL_CONF support to ssltestAdd command line support for SSL_CONF: server side arguments areprefixed by s_ eg s_no_ssl3 and client side with c_
Fix cross reference table generatorIf the hash or public key algorithm is "undef" the signature typewill receive special handling and shouldn't be included in thecross reference table
Fixes a minor typo in the EVP docsOut is the buffer which needs to contain at least inl + cipher_block_size  1 bytes Outlis just an int
Correct timestamp output when clock_precision_digits > 0PR3535
Fix free of garbage pointer PR3595
Fix warning about negative unsigned intergers
Fix datarace reported by valgrind/helgrindThis doesn't really fix the datarace but changes it so it can only happensonce This isn't really a problem since we always just set it to the samevalue We now just stop writing it after the first timePR3584, https://bugsdebianorg/534534Signedoffby: Kurt Roeckx <kurt@roeckxbe>
Fix spelling of EECDH
armv4cpuidS: fix compilation error in preARMv7 buildPR: 3474
Fix WIN32 build by disabling bn callsThe trial division and probable prime with coprime tests are disabledon WIN32 builds because they use internal functions not exported fromthe WIN32 DLLs
ec/asm/ecp_nistz256x86_64pl: fix inconsistency in path handling
md32_commonh: address compiler warning in HOST_c2l
Use only unsigned arithmetic in constanttime operationsSignedoffby: Kurt Roeckx <kurt@roeckxbe>
Tighten session ticket handlingTighten clientside session ticket handling during renegotiation:ensure that the client only accepts a session ticket if the server sendsthe extension anew in the ServerHello Previously, a TLS client wouldreuse the old extension state and thus accept a session ticket if one wasannounced in the initial ServerHello
Add missing CHANGES interval [101h, 101i]
Sync CHANGES
Fix ssltest logic when some protocols are compiled out
Copy negotiated parameters in SSL_set_SSL_CTXSSL_set_SSL_CTX is used to change the SSL_CTX for SNI, keep thesupported signature algorithms and raw cipherlist
Process signature algorithms in ClientHello late
ecp_nistz256 updateFacilitate switch to custom scattergather routines This modificationdoes not change algorithms, only makes it possible to implementalternative This is achieved by a moving precompute table to assemblyperlasm parses ecp_nistz256_tablec and is free to rearrange data tomatch gathering algorithm; b adhering to explicit scatter subroutinewhich for now is simply a memcpy First implementations that will usethis option are 32bit assembly implementations, ARMv4 and x86, whereequivalent of current readwholetableselectsinglevalue algorithmis too timeconsuming [On side note, switching to scattergather onx86_64 would allow to improve serverside ECDSA performance by ~5]
Configure: add ios64 target
Add missing credit
Fix and improve SSL_MODE_SEND_FALLBACK_SCSV documentation
When processing ClientHellocipher_suites, don't ignore cipher suiteslisted after TLS_FALLBACK_SCSVRT: 3575
Keep old method in case of an unsupported protocolWhen we're configured with nossl3 and we receive an SSL v3 Client Hello, we setthe method to NULL  We didn't used to do that, and it breaks things  This is aregression introduced in 62f45cc27d07187b59551e4fad3db4e52ea73f2c  Keep the oldmethod since the code is not able to deal with a NULL method at this timeCVE20143569, PR3571
nossl2 with nossl3 does not mean drop the ssl lib
RT3547: Add missing static qualifier
Add constant_time_loclh to HEADERS,so the Win32 compile picks it up correctly
Include "constant_time_loclh" rather than "/constant_time_loclh"The different I compiler parameters will take care of the rest
Updates to NEWS file
Updates CHANGES file
Fix nossl3 configuration optionCVE20143568
Fix for session tickets memory leakCVE20143567
Fix SRTP compile issues for windowsRelated to CVE20143513This fix was developed by the OpenSSL Team
Fix for SRTP Memory LeakCVE20143513This issue was reported to OpenSSL on 26th September 2014, based on an originalissue and patch developed by the LibreSSL project Further analysis of the issuewas performed by the OpenSSL teamThe fix was developed by the OpenSSL team
Fix SSL_R naming inconsistency
aesnix86_64pl: make ECB subroutine Windows ABI compliantRT: 3553
Add TLS_FALLBACK_SCSV documentation, and move s_client fallback_scsvhandling out of ifndef OPENSSL_NO_DTLS1 section
Support TLS_FALLBACK_SCSV
Remove reference to deleted md4c
Disable encrypt them mac for SSL 30 and stream ciphers RC4 only
Removed duplicate definition of PKCS7_type_is_encryptedPatch supplied by Matthieu Patou <mat@matwsnet>, and modified to alsoremove duplicate definition of PKCS7_type_is_digestPR3551
Fix single makefile
RT3462: Document actions when dataNULLIf data is NULL, return the size needed to hold thederived key  No other API to do this, so documentthe behavior
DTLS 12 support has been added to 102
crypto/cast/asm/cast586pl: +5 on PIII and remove obsolete readme
RT3549: Remove obsolete files in crypto
RT2910: Remove desc and its Makefile target
RT2309: Fix podpage MMNNFFPPS>MNNFFPPS
Parse custom extensions after internal extensions
e_osh: refine inline override logic to address warnings in debug build
crypto/bn/bn_nistc: bring original failing code back for referenceRT: 3541
Add additional explanation to CHANGES entry
Add additional DigestInfo checksReencode DigestInto in DER and check against the original: thiswill reject any improperly encoded DigestInfo structuresNote: this is a precautionary measure, there is no known attackwhich can exploit thisThanks to Brian Smith for reporting this issue
Remove ifdef's for IRIX_CC_BUG
RT3544: Must update TABLE after Configure changeAlso add comment to Configure reminding people to do that
Add missing testsAccidentally omitted from commit 455b65dfab0de51c9f67b3c909311770f2b3f801
Use correct function name: CMS_add1_signer
crypto/bn/bn_nistc: work around MSC ARM compiler bugRT: 3541
e_osh: allow inline functions to be compiled by legacy compilers
RT3544: Remove MWERKS supportThe following ifdef tests were all removed:__MWERKS__MAC_OS_pre_XMAC_OS_GUSI_SOURCEMAC_OS_pre_XOPENSSL_SYS_MACINTOSH_CLASSICOPENSSL_SYS_MACOSX_RHAPSODY
RT3425: constanttime evp_encDo the final padding check in EVP_DecryptFinal_ex in constant time toavoid a timing leak from padding failure
RT3067: simplify patchOriginal commit adb46dbc6dd7347750df2468c93e8c34bcb93a4bUse the new constanttime methods consistently in s3_srvrc
RT3066: rewrite RSA padding checks to be slightly more constant timeAlso tweak s3_cbcc to use new constanttime methodsAlso fix memory leaks from internal errors in RSA_padding_check_PKCS1_OAEP_mgf1This patch is based on the original RT submission by Adam Langley <agl@chromiumorg>,as well as code from BoringSSL and OpenSSL
make updateSync libeaynum from 102
Note i2d_re_X509_tbs and related changes in CHANGES
CHANGES: mention ECP_NISTZ256
crypto/rsa/rsa_chkc: harmonize error codes
crypto/ecp_nistz256c: harmonize error codes
Fixed error introduced in commit f2be92b94dad3c6cbdf79d99a324804094cf1617that fixed PR3450 where an existing cast masked an issue when i was changedfrom int to long in that commitPicked up on z/linux s390 where sizeofint!sizeoflong
Harmonize Tru64 and Linux make rulesRT: 3333,3165
Fix warning
RT3291: Add crl and revoke options to CAplDocument the new features
RT2301: GetDIBits, not GetBitmapBits in rand_winGetDIBits has been around since Windows2000 andBitBitmapBits is an old Win16 compatibility functionthat is much slower
crypto/bn/asm/x86_64montpl: add missing clang detection
Configure: engage ECP_NISTZ256RT: 3149
Add ECP_NISTZ256 by Shay Gueron, Intel CorpRT: 3149
Reserve option to use BN_mod_exp_mont_consttime in ECDSASubmitted by Shay Gueron, Intel CorpRT: 3149
perlasm/x86_64xlatepl: handle interbank movd
RT2772 update: c_rehash was brokenMove the readdir lines out of the if statement, sothat flist is available globally
RT3271 update; extra; semicolon; confuses; some;
RT2560: missing NULL check in ocsp_req_find_signerIf we don't find a signer in the internal list, then fallthrough and look at the internal list; don't just return NULL
RT2196: Clear up some README wordingSay where to email bug reportsMention general RT tracker info in a separate paragraph
RT3192: spurious error in DSA verifyThis is funny; Ben commented in the source, Matt opend a ticket,and Rich is doing the submit  Need more codereview? :
Merge branch 'master' of gitopensslorg:opensslPrevious commit was reviewed by Geoff, not Stephen:
RT3271: Don't use "if !" in shell linesFor portability don't use "if ! expr"
RT3271: Don't use "if !" in shell linesFor portability don't use "if ! expr"
RT1909: Omit version for v1 certificatesWhen calling X509_set_version to set v1 certificate, thatshould mean that the version number field is omitted
RT3506: typo's in ssltest
RT2841: Extra return in check_issued
RT2626: Change default_bits from 1K to 2KThis is a more comprehensive fix  It changes allkeygen apps to use 2K keys It also changes thedefault to use SHA256 not SHA1  This is fromKurt's upstream Debian changes
RT2600: Change Win lineendings to UnixFor consistency
RT2272: Add oldstyle hash to c_rehashIn addition to Matthias's change, I also added n tonot remove links And updated the manpage
RT671: exporti2s|s2i|i2v|v2i_ASN1_IA5|BITSTRINGThe EXT_BITSTRING and EXT_IA5STRING are defined in x509v3h, butthe lowlevel functions are not public They are useful, no needto make them static Note that BITSTRING already was exposed sincethis RT was created, so now we just export IA5STRING functions
RT468: SSL_CTX_sess_set_cache_size wrongThe documentation is wrong about what happens when thesession cache fills up
RT3301: Discard toolong heartbeat requests
RT3291: Add crl and revoke options to CAplI added some errorchecking while integrating this patch
RT2518: fix pod2man errorspod2man now complains when item tags are not sequentialAlso complains about missing back and other tagsSilence the warnings; most were already done
RT992: RSA_check_key should have a callback argThe original RT request included a patch  By the timewe got around to doing it, however, the callback schemehad changed So I wrote a new function RSA_check_key_exthat uses the BN_GENCB callback  But thanks very muchto Vinet Sharma <vineetsharma@gmailcom> for theinitial implementation
RT3108: OPENSSL_NO_SOCK should imply OPENSSL_NO_DGRAM
RT3031: Need to undef some names for win32Copy the ifdef/undef stanza from x509h to x509v3h
RT2849: Redundant check of "dsa" variableIn the current code, the check isn't redundantAnd in fact the REAL check was missingThis avoids a NULLderef crash
RT2843: Remove another spurious closecomment token
RT2842: Remove spurious closecomment markerAlso, I rsalz changed "ifdef undef" to "if 0"
Merge branch 'master' of gitopensslorg:opensslempty merge; script hiccup
RT1834: Fix PKCS7_verify return valueThe function returns 0 or 1, only
RT1832: Fix PKCS7_verify return valueThe function returns 0 or 1, only
RT1771: Add stringh include
RT1325,2973: Add more extensions to c_rehashRegexp was bracketed wrong
make update
Add i2d_re_X509_tbsi2d_re_X509_tbs reencodes the TBS portion of the certificate
Add CHANGES entry for SCT viewer code
sync ordinals with 102
psk_client_callback, 128byte id bugFix a bug in handling of 128 byte long PSK identity inpsk_client_callbackOpenSSL supports PSK identities of up to and including 128 bytes inlength PSK identity is obtained via the psk_client_callback,implementors of which are expected to provide a NULLterminatedidentity However, the callback is invoked with only 128 bytes ofstorage thus making it impossible to return a 128 byte long identity andthe required additional NULL byteThis CL fixes the issue by passing in a 129 byte long buffer into thepsk_client_callback As a safety precaution, this CL also zeroes out thebuffer before passing it into the callback, uses strnlen for obtainingthe length of the identity returned by the callback, and aborts thehandshake if the identity without the NULL terminator is longer than128 bytesOriginal patch amended to achieve strnlen in a different way
Followup on RT3334 fix: make sure that a directory that's the emptystring returns 0 with errno  ENOENT
RT3334: Fix crypto/LPdir_winc
RT3140: Possiblyunit variable in pem_libcCan't really happen, but the flow of control isn't obviousAdd an initializer
Make the inline consttime functions static"inline" without static is not correct as the compiler may choose to ignore itand will then either emit an external definition, or expect one
RT3508: Remove unused variable introduced by b09eb24
RT3511: doc fix; req default serial is randomRT842, closed back in 2004, changed the default serial numberto be a random number rather than zero  Finally time to updatethe doc
Add explanatory note to crypto/store/README
RT1325,2973: Add more extensions to c_rehashAdd crt/cer/crl to the filenames parsedI also updated the podpage since it didn't exist whenthis ticket was first created, nor when it was recreatedseven years later
Configure: add configuration for crypto/ec/asm extensions
md5x86_64pl: work around warning
x86[_64] assembly pack: add Silvermont performance data
Remove some outdated README files, to avoid confusing people
RT2820: caseinsensitive filenames on DarwinAndy pointed out there is also darwin64, so tweak the pattern
RT2119,3407: Updated to dgstpodReorder algorithm listBe consistent in command synopsisAdd content about signingAdd EXAMPLE sectionAdd some missing options: r, fipsfingerprint nonfipsallowVarious other fixes
RT2379: Additional typo fixAndy found an additional typo "can be can be"Now I have that silly "Que sera sera" song stuck in my head
RT1941: c_rehashpod is missingAdd the file written by James Westby, graciously contributedunder the terms of the OpenSSL license
apps/speedc: add misalign commandline argumentNew option allows to perform benchmarks on misaligned data
RT2379: Bug in BIO_set_accept_portpodThe doc says that port can be "" to mean any portThat's wrong
Fixed double inclusion of stringhPR2693
RT2880: HFS is caseinsensitive filenamesAdd Darwin to list of caseinsensitive filenames wheninstalling manapges  When doing this, I noticed thatwe weren't setting "filecase" for the HTML doc install
RT3246: req command prints version number wrongMake X509_REQ_print_ex do the same thing thatX509_REQ_print does
RT1665,2300: Crypto doc cleanupsRT1665: aes documentationPaul Green wrote a nice aespod fileBut we now encourage the EVP interfaceSo I took his RT item and used it as impetus to addthe AES modes to EVP_EncryptInitpodI also noticed that rc4pod has spurious references to some othercipher pages, so I removed themRT2300: Clean up MD history merged into RT1665Put HISTORY section only in EVP_DigestInitpod Also add wordsto discourage use of older cipherspecific API, and remove SEE ALSOlinks that point to themMake sure digest pages have a NOTE that says use EVP_DigestInitReview feedback:More cleanup in EVP_EncryptInitpodFixed SEE ALSO links in ripemd160pod, shapod, mdc2pod, blowfishpod,rc4d, and despod  Reorder sections in despod for consistency
RT2193: ifdef errors in bss_dgramcProblem with ifdef in the BIO_CTRL_DGRAM_MTU_DISCOVER case thatis different from the BIO_CTRL_DGRAM_QUERY_MTU one which seemscorrect
RT3102: Document verify_error_return flagAlso moved some options around so all the "verify" optionsare clumped together
Fix comments, add new testFix comments in ssltestc: return value of 0 now means extension isomitted and add_cb is not called for servers if the correspondingextension is absent in ClientHelloTest add_cb is not called if extension is not received
Custom extension documentation
Rename some callbacks, fix alignment
Use consistent function namingInstead of SSL_CTX_set_custom_cli_ext and SSL_CTX_set_custom_srv_extuse SSL_CTX_add_client_custom_ext and SSL_CTX_add_server_custom_ext
New function SSL_extension_supported
New extension callback featuresSupport separate parse and add callback argumentsAdd new callback so an application can free extension dataChange return value for send functions so < 0 is an error 0omits extension and > 0 includes it This is more consistentwith the behaviour of other functions in OpenSSLModify parse_cb handling so < 0 is an errorMake SSL_CTX_set_custom_cli_ext and SSL_CTX_set_custom_cli_ext argumentorder consistentNOTE: these changes WILL break existing codeRemove now inaccurate in line documentation
Callback revisionUse "parse" and "add" for function and callback names instead of"first" and "second"Change arguments to callback so the extension type is unsigned intand the buffer length is size_t Note: this will break existing code
Remove serverinfo checksSince sanity checks are performed for all custom extensions theserverinfo checks are no longer needed
Add custom extension sanity checksReject attempts to use extensions handled internallyAdd flags to each extension structure to indicate if an extensionhas been sent or received Enforce RFC5246 compliance by rejectingduplicate extensions and unsolicited extensions and only send aserver extension if we have sent the corresponding client extension
Custom extension revisionUse the same structure for client and server custom extensionsAdd utility functions in new file t1_extcUse new utility functions to handle custom server and client extensionsand remove a lot of code duplication
fix warning
Constanttime utilitiesPull constanttime methods out to a separate header, add tests
RT2400: ASN1_STRING_to_UTF8 missing initializer
Merge branch 'master' of gitopensslorg:opensslGah, I hate when I forget to pull before merging
RT2308: Add extern "C" {  } wrapperAdd the wrapper to all public header files Configuregenerates one  Don't bother for those that are justlists of define's that do renaming
Explicitly check for empty ASN1 strings in d2i_ECPrivateKeyThe old code implicitly relies on the ASN1 code returning a \0prefixed bufferwhen the buffer length is 0 Change this to verify explicitly that the ASN1 stringhas positive length
RT3065: automatically generate a missing EC public keyWhen d2i_ECPrivateKey reads a private key with a missing optional public key,generate one automatically from the group and private key
RT3065: ec_private_key_dont_crashThis change saves several EC routines from crashing when an EC_KEY ismissing a public key The public key is optional in the EC private keyformat and, without this patch, running the following through `opensslec` causes a crash:BEGIN EC PRIVATE KEYMBkCAQEECAECAwQFBgcIoAoGCCqGSM49AwEHEND EC PRIVATE KEY
RT2210: Add missing EVP_cleanup to exampleI also removed some trailing whitespace and cleanedup the "see also" list
Add tags/TAGS target; rm tags/TAGS in clean
Merge branch 'master' of gitopensslorg:opensslStupid git tricks :
RT1744: SSL_CTX_set_dump_dh doc feedbackThe description of when the server creates a DH key isconfusing  This cleans it uprsalz: also removed trailing whitespace
RT1744: SSL_CTX_set_dump_dh doc feedbackThe description of when the server creates a DH key isconfusing  This cleans it uprsalz: also removed trailing whitespace
RT1804: fix EXAMPLE in EVP_EncryptInitpodThe EXAMPLE that used FILE and RC2 doesn't compile due to afew minor errors  Tweak to use IDEA and AES128 Removeexamples about RC2 and RC5
Typo fixes to evp documentationThis patch was submitted by user "Kox" via the wiki
RT 3060: amend patchUse existing error code SSL_R_RECORD_TOO_SMALL for too many empty recordsFor ease of backporting the patch to release branches
RT3061: slightly amend patchAdd an extra NULL dereference check
Improve EVP_PKEY_sign documentationClarify the intended use of EVP_PKEY_sign Make the code example compile
RT3142: Extra initialization in state_machineRemove extra initialization calls in the sample program
define inline for Visual StudioIn Visual Studio, inline is available in C++ only, however __inline is available for C, seehttp://msdnmicrosoftcom/enus/library/z8y1yy88aspx
Fix build when BSAES_ASM is defined but VPAES_ASM is not
bn/asm/rsazpl: allow spaces in Perl path nameRT: 2835
sha1mbx86_64pl: add commentary
PR2490: Remove unused local variable bn ecp_nistc
crypto/evp/e_aes_cbc_hmac_sha[1|256]c: fix compiler warnings
sha1mbx86_64pl: fix typo
RT2847: Don't "check" uninitialized memoryDon't check err variable until after it's been set
RT2848: Remove extra NULL checkDon't need to check auth for NULL since we did when weassigned to it
RT2513: Fix typo's paramter>parameterI also found a couple of others padlock and signinitand fixed them
Merge branch 'master' of gitopensslorg:openssl
PR2401: Typos in FAQAlso rewrite section on compiler bugs; Matt pointed out thatit has some grammatical issues
PR2401: Typos in FAQAlso rewrite section on compiler bugs; Matt pointed out thatit has some grammatical issues
RT2724: Remove extra declarationExtra SSL_get_selected_srtp_profile declaration in ssl/srtphcauses Werror builds to fail
RT2492: Remove extra NULL check
RT2489: Remove extra "sig" local variable
RT2942: CRYPTO_set_dynlock_create_callback doc fixThe file param is "const char" not "char"
RT2163: Remove some unneeded include'sSeveral files include stdioh and don't need itAlso, per tjh, remove BN_COUNT
RT1815: More const'ness improvementsAdd a dozen more const declarations where appropriateThese are from Justin; while adding his patch, I noticedASN1_BIT_STRING_check could be fixed, too
pub_decode_gost94, pub_decode_gost01: check for NULL after allocating databuf pub_encode_gost94, pub_encode_gost01: check for NULL after allocating databuf and octetSignedoffby: Kurt Roeckx <kurt@opensslorg>
engine_md_copy: check for NULL after allocating to_md>HashBufferSignedoffby: Kurt Roeckx <kurt@opensslorg>
process_pci_value: free policy>data before setting to NULL after failed reallocSignedoffby: Kurt Roeckx <kurt@opensslorg>
do_ext_i2d: free ext_der or ext_oct on error pathSignedoffby: Kurt Roeckx <kurt@opensslorg>
do_othername: check for NULL after allocating objtmpSignedoffby: Kurt Roeckx <kurt@opensslorg>
NETSCAPE_SPKI_b64_encode: free der_spki and b64_str on error pathSignedoffby: Kurt Roeckx <kurt@opensslorg>
get_cert_by_subject: check for NULL when allocating hentSignedoffby: Kurt Roeckx <kurt@opensslorg>
UI_construct_prompt: check for NULL when allocating promptSignedoffby: Kurt Roeckx <kurt@opensslorg>
hashbn: check for NULL result when allocating bin and return an error if it fails all indirect callers of hashbn: propagate potential error in hashbnSignedoffby: Kurt Roeckx <kurt@opensslorg>
JPAKE_CTX_new: check for NULL result when allocating ctxSignedoffby: Kurt Roeckx <kurt@opensslorg>
old_hmac_encode: check for NULL result when allocating pderSignedoffby: Kurt Roeckx <kurt@opensslorg>
dev_crypto_md5_copy: return error if allocating to_md>data failsSignedoffby: Kurt Roeckx <kurt@opensslorg>
dev_crypto_md5_update: check result of reallocmd_data>data and don't leak memory if it failsSignedoffby: Kurt Roeckx <kurt@opensslorg>
dev_crypto_cipher: return immediately if allocating cin/cout failedSignedoffby: Kurt Roeckx <kurt@opensslorg>
dev_crypto_init_key: return error if allocating CDATActx>key failedSignedoffby: Kurt Roeckx <kurt@opensslorg>
Add support for Camellia HMACBased cipher suites from RFC6367While RFC6367 focuses on CamelliaGCM cipher suites, it also adds a fewcipher suites that use SHA2 based HMAC that can be very easilyaddedTested against gnutls 335PR3443
Fixed outofbounds read errors in ssl3_get_key_exchangePR3450
RT2751: Declare get_issuer_sk earlierAdd a declaration for get_issuer_sk so that otherfunctions in x509_vfc could use it  Planned workaround crosscertification chains
cryptodev_digest_copy: return error if allocating dstate>mac_data failsSignedoffby: Kurt Roeckx <kurt@opensslorg>
cryptodev_digest_update: don't leak original state>mac_data if realloc failsSignedoffby: Kurt Roeckx <kurt@opensslorg>
cms_SignerInfo_content_sign: free sig on failure pathSignedoffby: Kurt Roeckx <kurt@opensslorg>
rtcp_new: return failure if allocation of bi>ptr failedSignedoffby: Kurt Roeckx <kurt@opensslorg>
multi_split: check for NULL when allocating parts and bpart, and for failure of sk_BIO_pushSignedoffby: Kurt Roeckx <kurt@opensslorg>
BIO_new_dgram_sctp, dgram_sctp_read: zero entire authchunksSignedoffby: Kurt Roeckx <kurt@opensslorg>
mime_hdr_addparam: free tmpname, tmpval and mparam on error path, and check whether sk_MIME_PARAM_push succeedsSignedoffby: Kurt Roeckx <kurt@opensslorg>
mime_hdr_new: free mhdr, tmpname, tmpval on error pathSignedoffby: Kurt Roeckx <kurt@opensslorg>
ASN1_verify, ASN1_item_verify: cleanse and free buf_in on error pathSignedoffby: Kurt Roeckx <kurt@opensslorg>
SetBlob: free rgSetBlob on error pathSignedoffby: Kurt Roeckx <kurt@opensslorg>
Fix use after free bug
RT783: Minor optimization to ASN1_INTEGER_setRemove local variable and avoid extra assignment
RT2465: Silence some gcc warnings"Another machine, another version of gcc, another batchof compiler warnings"  Add "NULL" to some local variabledeclarations that are set by passing thier address into autility function; confuses GCC it might not be set
RT3023: Redundant logical expressionsRemove some redundant logical expressions
Merge branch 'master' of gitopensslorg:openssl
RT3268: Fix spelling errors in CHANGES fileFix a bunch of typo's and speling sic errors in the CHANGES file
Revision of custom extension codeMove custom extension structures from SSL_CTX to CERT structureThis change means the form can be revised in future without binarycompatibility issues Also since CERT is part of SSL structuresso perSSL custom extensions could be supported in future as well asper SSL_CTX
Include error messages on extension check failure
make depend
Further improve/fix ec_GFp_simple_points_make_affine ecp_smplc andgroup_order_tests ectestc  Also fix the EC_POINTs_mul documentation ech
RT1665: Fix podpath to get xref's rightIn Makefile, when build manpages, put the current directoryat the start of the podpath so that crossrefs find thelocal directory first
RT3239: Extra comma in NAME lines of two manpagesIn two OpenSSL manual pages, in the NAME section, the last word of thename list is followed by a stray trailing comma While this may seemminor, it is worth fixing because it may confuse some makewhatis8implementationsWhile here, also add the missing word "size" to the one linedescription in SSL_CTX_set_max_cert_list3Reviewed by: Dr Stephen Henson <shenson@drhconsultancycouk>
Merge branch 'master' of gitopensslorg:openssl
PR 719: Configure not exiting with child statusIf subcommand fails, just die
PR 718: Configure not exiting with child statusIf subcommand fails, just die
PR 2580: dgst missing current SHA algorithmsUpdate the dgstpod page to include SHA224512 algorithmsUpdate apps/progspl to add them to the digest command table
Revert "RT 2820: Caseinsensitive filenames on Darwin"This reverts commit 691edc997a35682eb7fa29445036182d2c9eb1de
RT2609: Typo in EXAMPLE section of reqpodThe x509_extensions should be req_extensions in theconfig example in reqpod
Fix d4a4370050f7d72239b92a60ab9d4a2dd5e9fd84Fully remove old error, per drH
RT 2820: Caseinsensitive filenames on DarwinAdd darwincc as one of the systems for caseinsensitivefilenames  Fixes the manpage install so it doesn't createlooping symlinks
Merge branch 'master' of gitopensslorg:openssl
Undo 77bf69dced875200f6f0e385a4a270298f8d3c45Not approved; mistakenly pushed commit that added READMEmd
RT 2517: Various typo's
RT 2517: Various typo'sMany of these were already fixed, this catches the lastfew that were missed
Add READMEmdA small markdown README for GitHub users; points them tothe right README and the website and RT tracker
Fix SRP authentication ciphersuitesThe addition of SRP authentication needs to be checked in various placesto work properly Specifically:A certificate is not sentA certificate request must not be sentServer key exchange message must not contain a signatureIf appropriate SRP authentication ciphersuites should be chosen
Test SRP authentication ciphersuites
Undo a90081576c94f9f54de1755188a00ccc1760549aUndo unapproved commit that removed DJGPP and WATT32
RT 1988: Add "const" to SSL_use_RSAPrivateKey_ASN1The "unsigned char d" should be const
RT 1505: Use SSL3_AL_FATAL not "2"Use SSL3_AL_FATAL instead of the literal constant "2"Every bit of cleanup helps
Remove DJGPP and therefore WATT32 ifdef'sDJGPP is no longer a supported platform  Remove all ifdef, etc,cases that refer to it  DJGPP also define'd WATT32, so thatis now removed as well
Check SRP parameters earlyCheck SRP parameters when they are received so we can send back anappropriate alert
Fix SRP buffer overrun vulnerabilityInvalid parameters passed to the SRP code can be overrun an internalbuffer Add sanity check that g, A, B < N to SRP codeThanks to Sean Devlin and Watson Ladd of Cryptography Services, NCCGroup for reporting this issue
Fix SRP ciphersuite DoS vulnerabilityIf a client attempted to use an SRP ciphersuite and it had not beenset up correctly it would crash with a null pointer read A maliciousserver could exploit this in a DoS attackThanks to Joonas Kuorilehto and Riku Hietamki from Codenomiconfor reporting this issueCVE20142970
Fix race condition in ssl_parse_serverhello_tlsextCVE20143509
Fix OID handling: Upon parsing, reject OIDs with invalid base128 encoding Always NULterminate the destination buffer in OBJ_obj2txt printing functionCVE20143508
Fix DTLS anonymous ECDH denial of serviceCVE20143510
Fix protocol downgrade bug in case of fragmented packetsCVE20143511
Remove some duplicate DTLS codeIn a couple of functions, a sequence number would be calculated twiceAdditionally, in |dtls1_process_out_of_seq_message|, we know that|frag_len| < |msg_hdr>msg_len| so the later tests for |frag_len <msg_hdr>msg_len| can be more clearly written as |frag_len !msg_hdr>msg_len|, since that's the only remaining case
Applying same fix as in dtls1_process_out_of_seq_message A truncated DTLS fragment would cause ok to be clear, but the return value would still be the number of bytes readProblem identified by Emilia Ksper, based on previous issue/patch by AdamLangley
Fix return code for truncated DTLS fragmentPreviously, a truncated DTLS fragment in|dtls1_process_out_of_seq_message| would cause ok to be cleared, butthe return value would still be the number of bytes read This wouldcause |dtls1_get_message| not to consider it an error and it wouldcontinue processing as normal until the calling function noticed thatok was zeroI can't see an exploit here because |dtls1_get_message| uses|s>init_num| as the length, which will always be zero from what I cansee
Fix memory leak from zerolength DTLS fragmentsThe |pqueue_insert| function can fail if one attempts to insert aduplicate sequence number When handling a fragment of an out ofsequence message, |dtls1_process_out_of_seq_message| would not call|dtls1_reassemble_fragment| if the fragment's length was zero It wouldthen allocate a fresh fragment and attempt to insert it, but ignore thereturn value, leaking the fragmentThis allows an attacker to exhaust the memory of a DTLS peerFixes CVE20143507
Fix DTLS handshake message size checksIn |dtls1_reassemble_fragment|, the value of|msg_hdr>frag_off+frag_len| was being checked against the maximumhandshake message size, but then |msg_len| bytes were allocated for thefragment buffer This means that so long as the fragment was within theallowed size, the pending handshake message could consume 16MB + 2MBfor the reassembly bitmap Approx 10 outstanding handshake messagesare allowed, meaning that an attacker could consume ~180MB per DTLSconnectionIn the nonfragmented path in |dtls1_process_out_of_seq_message|, nocheck was appliedFixes CVE20143506Wholly based on patch by Adam Langley with one minor amendment
Added comment for the frag>reassembly  NULL case as per feedback from Emilia
Avoid double free when processing DTLS packetsThe |item| variable, in both of these cases, may contain a pointer to a|pitem| structure within |s>d1>buffered_messages| It was being freedin the error case while still being in |buffered_messages| When theerror later caused the |SSL| to be destroyed, the item would be doublefreedThanks to WahTeh Chang for spotting that the fix in 1632ef74 wasinconsistent with the other error paths but correctFixes CVE20143505
Update $default_depflags to match current defaults
Sync with cleanup 102 CHANGES fileIf a change is already present in 101f or 101h,don't list it again under changes between 101h and 102
Sync with current 102 CHANGES file
Simplify and fix ec_GFp_simple_points_make_affinewhich didn't always handle value 0 correctly
Add conditional unit testing interfaceDon't call internal functions directly call them throughSSL_test_functions This also makes unit testing work onWindows and platforms that don't export internal functionsfrom shared librariesBy default unit testing is not enabled: it requires the compiletime option "enableunittest"
Don't call setenv in gost2814789tcThe call to setenv in gost2814789tc is not portable and maynot reflect the location of the GOST ENGINE on all platforms anywayInstead set OPENSSL_ENGINES in test/Makefile
Remove demos/tunalaThis has been unmaintained for a long time If it's still of interestto anyone, it can be obtained easily enough by reverting this commitIt could join other demo code in some other repository, perhaps Inany case we don't want it taking up space in the baseline sourcepackage, so <snip>Signedoffby: Geoff Thorpe <geoff@opensslorg>
CHANGES: mention new platforms
"EC_POINT_invert" was checking "dbl" function pointer instead of "invert"PR2569
Remove old unused and unmaintained demonstration code
sha1ppcpl: shave off one cycle from BODY_20_39and improve performance by 10 on POWER[78]
Minor documentation update removing "really" and astatement of opinion rather than a fact
Add test header, sync ordinals with 102
Engage GHASH for PowerISA 207[and split ppccapc to ppccapc and ppc_archh]
Add GHASH for PowerISA 207
Windows build fixesAdd cmach to mkdefplRemove ENGINE_load_rsax from engineh: no longer builtUpdate ordinals
Fix documentation for RSA_set_method3PR1675
Check the test registry size during add_test
Update heartbeat_test includesssl/ssl_loclh now comes first to ensure that it will compile standalonetest/testutilh is considered to be in the same directory as the test file,since the test file will be linked into test/ and built there
Use testutil registry in heartbeat_test
test/testutilc test registry functionsThese help standardize the structure of main and result reporting
RFC 5649 supportAdd support for RFC5649 key wrapping with paddingAdd RFC5649 tests to evpteststxtBased on PR3434 contribution by Petr Spacek <pspacek@redhatcom>EVP support and minor changes added by Stephen HensonDoxygen comment block updates by Tim Hudson
Make Final work for key wrap again
Sanity check lengths for AES wrap algorithm
Fix typo, add referencePR3456
Disabled XTS mode in enc utility as it is not supportedPR3442
Revert "Add GHASH for PowerISA 207"This reverts commit 927f2e5dea1da17bcc2c3d2baf7258318b57515c
Revert "Engage GHASH for PowerISA 207"This reverts commit 14aaf883d93fb2e321ef1fe25f687fb7b62ef8fe
Engage GHASH for PowerISA 207
Add GHASH for PowerISA 207
Add Matt Caswell's fingerprint, and general update on the fingerprints file to bring it up to date
Clarify Verify and PSKPR3452
Fix DTLS certificate requesting codeUse same logic when determining when to expect a clientcertificate for both TLS and DTLSPR3452
Don't allow www etc options with DTLSThe options which emulate a web server don't make sense when doing DTLSExit with an error if an attempt is made to use themPR3453
Merge branch 'master' of gitopensslorg:openssl
Use case insensitive compare for servernamePR3445
document nextprotoneg option in man pagesAdd description of the option to advertise support ofNext Protocol Negotiation extension nextprotoneg toman pages of s_client and s_serverPR3444
Use more common name for GOST key exchange
Fix typo
Add tags/TAGS; approved by tjh
Fixed valgrind complaint due to BN_consttime_swap reading uninitialised dataThis is actually ok for this function, but initialised to zero anyway ifPURIFY definedThis does have the impact of masking any real unitialised data reads in bn thoughPatch based on approach suggested by Rich SalzPR3415
Add names of GOST algorithmsPR3440
 crypto/ui/ui_libc: misplaced brace in switch statementDetected by dcruette@qualitesyscom
Don't clean up uninitialised EVP_CIPHER_CTX on error CID 483259
Fix memory leak in BIO_free if there is no destroy functionBased on an original patch by Neitrino Photonov <neitrinoph@gmailcom>PR3439
x86_64 assembly pack: improve masm support
Please Clang's sanitizer, addendum
Please Clang's sanitizerPR: 3424,3423,3422
apps/speedc: fix compiler warnings in multiblock_speed
sha[1|512]x86_64pl: fix logical errors with $shaext0
Prevent infinite loop loading config filesPR2985
Improve X509_check_host documentationBased on feedback from Jeffrey Walton
Update API to use char  for email addresses and hostnamesReduces number of silly casts in OpenSSL code and likely mostapplications  Consistent with char  for "peername" value fromX509_check_host and X509_VERIFY_PARAM_get0_peername
Usage for hack and prexit verify_return_error
Document certificate status request options
s_server usage for certificate status requests
Sanity check keylength in PVK filesPR2277
Added reference to platform specific cryptographic acceleration such as AESNI
Fixed error in pod files with latest versions of pod2man
sha512x86_64pl: fix typoPR: 3431
s3_pktc: fix typo
apps/speedc: add multiblock benchmark
Return smaller of ret and fPR3418
Set optional peername when X509_check_host succeedsPass address of X509_VERIFY_PARAM_ID peername to X509_check_hostDocument modified interface
New peername element in X509_VERIFY_PARAM_IDDeclaration, memory management, accessor and documentation
Reduce casting nastiness
Reduce casting nastiness
Don't limit message sizes in ssl3_get_cert_verifyPR319 reoponed version
Add license info
typocherry picked from commit 2cfbec1caea8f9567bdff85d33d22481f2afb40a
Remove all RFC5878 codeRemove RFC5878 code It is no longer needed for CT and has numerous bugs
Update ticket callback docs
Close 3170, remove reference to Ariel Glenn's old 098 doc
RT 1638; EVP_Final should mention they no longer cleanup the ctx
RT3408; fix some not all suggested typo's in opensslcnf
Merge branch 'rsalzdocfixes'
Close a whole bunch of documentationrelated tickets:298 424 656 882 939 1630 1807 2263 2294 2311 2424 26232637 2686 2697 2921 2922 2940 3055 3112 3156 3177 3277
e_osh: limit _MSC_VER trickery to older compilersPR: 3390
bn_expc: fix x86_64specific crash with oneword modulusPR: 3397
Fix doc typoERR_get_error3 references the nonexistentERR_get_last_error_line_data instead of the one that does exist,ERR_peek_last_error_line_dataPR3283
Make disabling last cipher work
ASN1 sanity checkPrimitive encodings shouldn't use indefinite length constructedformPR2438 partial
Add support for SHA2 in CAPI ENGINEPR2706 though patch is from PR3366
Fix possible buffer overruncherry picked from commit 2db3ea29298bdc347f15fbfab6d5746022f05101Conflicts:ssl/t1_libc
RT 1528; misleading debug print, "premaster" should be "master key"
perlasm/ppcxlatepl update
Engage SHA256/512 for PowerISA 207
Add SHA256/512 for PowerISA 207
RT 1530; fix incorrect comment
RT 1229; typo in comment "dont't">"don't"
RT 3245; it's "bitwise or" not "logical or"
Fix RT 3211; "and are" >"are"
Fix RT 2567; typo in pkeyutl page
Fix RT 2430; typo's in capod
Fix RT 3193
sha512x86_64pl: fix linking problem under Windows
Windows build fixes
Fix warningcherry picked from commit c97ec5631bb08a2171a125008d2f0d2a75687aaa
Make NO_SYS_UN_H compile
Accessor functions for app_data in ECDSA_METHOD
Test copying of contexts in evp_testTest EVP_CIPHER_CTX_copy in evp_test This will catch anyproblems with copying in underlying ciphers
Make depend
Fix copy for CCM, GCM and XTSInternal pointers in CCM, GCM and XTS contexts should either beNULL or set to point to the appropriate key schedule This needsto be adjusted when copying contexts
Don't core dump when using CMAC with dgstWe can't unfortunately print the CMAC cipher used without extending the APIPR2579
Clarified that the signature's buffer size, `s`, is not used as anIN parameterUnder the old docs, the only thing stated was "at mostEVP_PKEY_sizepkey bytes will be written" It was kind of misleadingsince it appears EVP_PKEY_sizepkey WILL be written regardless of thesignature's buffer size
More constification
Make EVP_CIPHER_CTX_copy work in GCM modePR3272
Add 3072, 7680 and 15360 bit RSA tests to openssl speedPR3412
Constification  mostly originally from Chromium
Merge branch 'master' of gitopensslorg:openssl
Fix typo in message RT 3107
Fix memory leakPR2531
TypoPR3173
Show errors on CSR verification failureIf CSR verify fails in ca utility print out error messagesOtherwise some errors give misleading output: for exampleif the key size exceeds the library limitPR2875
Make nossl3 nossl2 do more sensible things
Clarify protocols supportedUpdate protocols supported and note that SSLv2 is effectively disabledby defaultPR3184
Handle BER length encodingTolerate BER length encoding which may include leading zeroesPR2746
x86_64 assembly pack: refine clang detection
TypoPR3107
Don't disable state strings with nossl2Some state strings were erronously not compiled when nossl2was setPR3295
Fix compilation with DSSL_DEBUG DTLS_DEBUG DKSSL_DEBUGPR3141
Fix typo in ideatestc
Remove redundant checkPR3174
Fix for EVP_PBE_alg_addIn EVP_PBE_alg_add don't use the underlying NID for the cipheras it may have a nonstandard key sizePR3206
bn/asm/rsazavx2pl: fix occasional failures
RT 487  Mention that generated primes are "at least" B<bits> long
Tolerate critical AKID in CRLsPR3014
Add SHA256 Camellia ciphersuites from RFC5932PR2800
Handle IPv6 addresses in OCSP_parse_urlPR2783
Don't advertise ECC ciphersuits in SSLv2 compatible client helloPR3374
Clarify docsDocument that the certificate passed to SSL_CTX_add_extra_chain_certshould not be freed by the applicationPR3409
Rebuild OID table
Fix OID encoding for one componentOIDs with one component don't have an encodingPR2556 Bug1
Memory leak and NULL dereference fixesPR3403
Make sure BN_sqr can never return a negative valuePR3410
Remove ancient obsolete files under pkcs7
bn_expc: move check for ADX to rsazavx2plThis ensures high performance is situations when assembler supportsAVX2, but not ADX
aesp8ppcpl: rigid input verification in key setup
aesv8armxpl: rigid input verification in key setup
x86_64 assembly pack: addendum to last clang commit
x86_64 assembly pack: allow clang to compile AVX code
aesv8armxpl: inclrease interleave factorThis is to compensate for higher aes instruction latency on CortexA57
ARMv8 assembly pack: add Cortex performance numbers
One more typo when changing !result to result < 0
Fix typo in last commit
Multiple verifier reference identitiesImplemented as STACK_OFOPENSSL_STRING
Implement sk_deep_copy
More complete input validation of X509_check_mumble
X509_check_mumble failure is < 0, not just 0
Drop hostlen from X509_VERIFY_PARAM_IDJust store NULterminated strings  This works better when we addsupport for multiple hostnames
More complete X509_check_host documentation
Fix offbyone errors in ssl_cipher_get_evpIn the ssl_cipher_get_evp function, fix offbyone errors in index validation before accessing arraysBug discovered and fixed by Miod Vallat from the OpenBSD teamPR3375
Revert "Fix offbyone errors in ssl_cipher_get_evp"This reverts commit abfb989fe0b749ad61f1aa4cdb0ea4f952fc13e0Incorrect attribution
Fixed Windows compilation failure
Fix minor typos
add references to verify1 man page for args_verify optionscms, ocsp, s_client, s_server and smime tools also use args_verifyfor parsing options, that makes them most of the same optionsverify tool does Add those options to man pages and referencetheir explanation in the verify man page
sort the options in verify man page alphabeticallyjust making sure the options are listed in the alphabetical orderboth in SYNOPSIS and DESCRIPTION, no text changes
add description of missing options to verify man pageThe options related to policy used for verification, verificationof subject names in certificate and certificate chain handlingwere missing in the verify1 man page This fixes this issue
smime man page: add missing options in SYNOPSISCAfile and CApath is documented in OPTIONS but is missingin SYNOPSIS, add them there
Document trusted_first option in man pages and helpAdd trusted_first description to help messages and man pagesof tools that deal with certificate verification
Tidied up, added include to stdlib, removed "goto bad" usage
Conform to whitespace conventions
Added documentation for iter for PKCS8
Added custom PBKDF2 iteration count to PKCS8 tool
Fix signed/unsigned comparisons
Fix shadow declaration
aesnisha[1|256]x86_64pl: fix logical error and MacOS X build
aesp8ppcpl: add CTR mode
Enforce _X509_CHECK_FLAG_DOT_SUBDOMAINS internalonly
Accept CCS after sending finishedAllow CCS after finished has been sent by client: at this pointkeys have been correctly set up so it is OK to accept CCS fromserver Without this renegotiation can sometimes failPR3400
evp/e_aes_cbc_sha[1|256]c: fix DPEDANTIC build
aesnisha256x86_64pl: add missing rex in shaextPR: 3405
sha1x86_64pl: add missing rex prefix in shaextPR: 3405
Fixed incorrect return code handling in ssl3_final_finish_macBased on an original patch by Joel Sing OpenBSD who also originally identified the issue
Revert "Fixed incorrect return code handling in ssl3_final_finish_mac"This reverts commit 2f1dffa88e1b120add4f0b3a794fbca65aa7768dMissing attribution
Clientside namecheck wildcardsA client reference identity of "examplecom" matches a servercertificate presented identity that is any subdomain of "examplecom"eg "wwwsubexamplecomWith the X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS flag, it matchesonly direct child subdomains eg "wwwsubexamplecom"
Fix offbyone errors in ssl_cipher_get_evpIn the ssl_cipher_get_evp function, fix offbyone errors in index validation before accessing arraysPR3375
Facilitate backporting of AESNI and SHA modulesFix SEH and stack handling in Win64 build
Added OPENSSL_assert check as per PR3377 reported by Rainer Jung <rainerjung@kippdatade>
Fix Windows buildcherry picked from commit 5f4c5a902b0508eab235adecb34b236cdc0048a5
Enable multiblock support by default
Fix compilation with nocomp
ghashx86_64pl: optimize for upcoming Atom
Add support for Intel SHA extension
Separate the SCT List parser from the SCT List viewer
Fixed incorrect return code handling in ssl3_final_finish_mac
aesnimbx86_64pl: add Win64 SEH
add ECC strings to ciphers1, point out difference between DH and ECDH Make a clear distinction between DH and ECDH key exchange Group all key exchange cipher suite identifiers, first DH then ECDH add descriptions for all supported DH identifiers add ECDSA authentication descriptions add example showing how to disable all suites that offer noauthentication or encryption
Create test/testutilh for unit test helper macrosDefines SETUP_TEST_FIXTURE and EXECUTE_TEST, and updates ssl/heartbeat_testcusing these macros SETUP_TEST_FIXTURE makes use of the new TEST_CASE_NAMEmacro, defined to use __func__ or __FUNCTION__ on platforms that support thosesymbols, or to use the file name and line number otherwise This should fixseveral reported build problems related to lack of C99 support
Fix null pointer errorsPR3394
SRP ciphersuite correctionSRP ciphersuites do not have no authentication They have authenticationbased on SRP Add new SRP authentication flag and cipher string
Update strength_bits for 3DESFix strength_bits to 112 for 3DES
Link heartbeat_test with the static version of the librariesIt's using an internal API that that might not be available in the sharedlibrary
Create ~/rnd with mode 0600 instead of 0666Because of a missing include <fcntlh> we don't have O_CREATE and don't createthe file with open using mode 0600 but fall back to using fopen with thedefault umask followed by a chmodProblem found by Jakub Wilk <jwilk@debianorg>
Make tls_session_secret_cb work with CVE20140224 fixIf application uses tls_session_secret_cb for session resumptionset the CCS_OK flag
Add official extension valueEncrypt then MAC now has an official extension value, see:http://wwwietforg/id/draftietftlsencryptthenmac02txt
Fixed minor duplication in docs
ARM assembly pack: get ARMv7 instruction endianness rightPointer out and suggested by: Ard Biesheuvel
sha[1|512]armv8pl: get instruction endianness rightSubmitted by: Ard Biesheuvel
Engage GHASH for ARMv8
Add GHASH for ARMv8 Crypto ExtensionResult of joint effort with Ard Biesheuvel
Update NEWS
aesv8armxpl update: fix 32bit build submitted by Ard Biesheuvel; fix performance issue in CTR;
Update value to use a free bit
Fix for CVE20140195A buffer overrun attack can be triggered by sending invalid DTLS fragmentsto an OpenSSL DTLS client or server This is potentially exploitable torun arbitrary code on a vulnerable client or serverFixed by adding consistency check for DTLS fragmentsThanks to Jri Aedla for reporting this issuecherry picked from commit 1632ef744872edc2aa2a53d487d3e79c965a4ad3
Fix for CVE20140224Only accept change cipher spec when it is expected instead of at anytime This prevents premature setting of session keys before the mastersecret is determined which an attacker could use as a MITM attackThanks to KIKUCHI Masashi Lepidum Co Ltd for reporting this issueand providing the initial fix this patch is based oncherry picked from commit bc8923b1ec9c467755cd86f7848c50ee8812e441
Additional CVE20140224 protectionReturn a fatal error if an attempt is made to use a zero lengthmaster secretcherry picked from commit 006cd7083f76ed5cb0d9a914857e9231ef1bc317
Fix CVE20140221Unnecessary recursion when receiving a DTLS hello request can be used tocrash a DTLS client Fixed by handling DTLS hello request without recursionThanks to Imre Rad SearchLab Ltd for discovering this issuecherry picked from commit d3152655d5319ce883c8e3ac4b99f8de4c59d846
Fix CVE20143470Check session_cert is not NULL before dereferencing itcherry picked from commit 8011cd56e39a433b1837465259a9bd24a38727fb
aesp8ppcpl: fix typos
evp/e_aesc: add erroneously omitted break;
Corrected OPENSSL_NO_EC_NISTP_64_GCC_128 usage in ec_lclh PR3370
Check there is enough room for extension
Free up s>d1>buffered_app_dataq properlyPR3286
evp/e_aesc: populate HWAES_ to remaning modesSubmitted by: Ard Biesheuvel
Allow reordering of certificates when signingAdd certificates if nocerts and certfile specified when signingin smime application This can be used this to specify theorder certificates appear in the PKCS7 structure: some brokenapplications require a certain orderingPR3316
Typo: set i to 1 before gotoPR3302
Engage POWER8 AES support
Added SSLErr call for internal error in dtls1_buffer_record
Delays the queue insertion until after the ssl3_setup_buffers call due to useafterfree bug PR3362
armv4cpuidS: switch to CNTVCT tick counter
sha[1|256]armv4: harmonize with arm_archh
Engage ARMv8 AES support
Recognise padding extension
Option to disable padding extensionAdd TLS padding extension to SSL_OP_ALL so it is used with other"bugs" options and can be turned offThis replaces SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG which is an ancientoption referring to SSLv2 and SSLREFPR3336
linuxaarch64: engage SHA modules
Add SHA for ARMv8
Add linuxaarch64 tagetarmcapc is shared between 32 and 64bit builds and features linktimedetection of getauxvalSubmitted by: Ard Biesheuvel
Merge branch 'erbridgeprobable_primes'
Credit to FelixCloses 116
Tidy up, don't exceed the number of requested bits
Constify and reduce coprime random bits to allow for multiplier
Zero prime doits
Add option to run all prime tests
Add a test to check we're really generating probable primes
Remove unused BIGNUMs
Only count successful generations
Refactor the first prime index
Try skipping over the adding and just picking a new random numberGenerates a number coprime to 2, 3, 5, 7, 11Speed:Trial div add : trial div retry : coprime1 : 042 : 084
Remove editor barf on updating copyright
Add python script to generate the bits needed for the prime generator
Generate safe primes not divisible by 3, 5 or 7~2 speed improvement on trial division
Add a method to generate a prime that is guaranteed not to be divisible by 3 or 5Possibly some reduction in bias, but no speed gains
Run the prime speed tests for 10 seconds
Tidy up speedc a little
Add speed test for prime trial division
Remove static from probable_prime_dh
Remove indentation from the goto targets
Strip trailing whitespace from Configure
Add a new target to Configure for me
Set default global mask to UTF8 only
Allocate extra space when NETSCAPE_HANG_BUG definedMake sure there is an extra 4 bytes for server done message whenNETSCAPE_HANG_BUG is definedPR3361
Initialise algPR3313
Use correct digest when exporting keying materialPR3319
Don't compile heartbeat test code on Windows for now
add description of attime to man pagethe verify app man page didn't describe the usage of attime optioneven though it was listed as a valid option in the help messageThis patch fixes this omission
add description of no_ecdhe option to s_server man pageWhile the help message references this option, the man pagedoesn't mention the no_ecdhe optionThis patch fixes this omission
aesv8armxpl: add CTR implementationSubmitted by: Ard Biesheuvel
Set version number correctlyPR3249
Fix memory leakPR3278
remove duplicate 0x for default RSASSAPSS salt len
aesp8ppcpl: optimize CBC decrypt even further1019 improvement depending on key length and endianness
Fix for test_bn regular expression to work on Windows using MSYS PR3346
Changed strictpem to use PEM_read_bio
Added strictpem parameter to enable processing of PEM files with data prior to the BEGIN marker
Fix cast of boolean where cast of LHS intendedCloses 74
Fixed error in args for SSL_set_msg_callback and SSL_set_msg_callback_arg
Make it buildCloses 31
add test case to makefiles
Implement tests for PKCS5 PBKDF2 HMAC
Don't use expired certificates if possibleWhen looking for the issuer of a certificate, if current candidate isexpired, continue looking Only return an expired certificate if no validcertificates are foundPR3359
Rename vpm_inth to x509_lclh
Fix for non compilation with TLS_DEBUG defined
Only copy opensslconfh at init time
Modify the description of noout to match the manpage PR3364
Add an NSS output format to sess_id to export to export the session id and the master key in NSS keylog format PR3352
OpenSSL is able to generate a certificate with name constraints with any possiblesubjectAltName field The Name Contraint example in x509v3_config5 even use IPas an example:nameConstraintspermitted;IP:19216800/25525500However, until now, the verify code for IP name contraints did not exist Anycheck with a IP Address Name Constraint results in a "unsupported name constrainttype" errorThis patch implements support for IP Address Name Constraint v4 and v6 This codevalidaded correcly certificates with multiple IPv4/IPv6 address checking againsta CA certificate with these constraints:permitted;IP110900/25525500permitted;IP2104800/25525500permitted;IP31014800/25525500permitted;IP4fdc8:123f:e31f::/ffff:ffff:ffff::Signedoffby: Luiz Angelo Daros de Luca <luizluca@gmailcom>
aesp8ppcpl: add optimized CBC decrypt
vpaesppcpl: comply with ABI
Merge branch 'heartbeattest' of git://githubcom/mbland/openssl
Fix heartbeat_test for DOPENSSL_NO_HEARTBEATSReplaces the entire test with a trivial implementation whenOPENSSL_NO_HEARTBEATS is defined
Check length first in BUF_strnlen
Fixed minor copy&paste error, and stray space causing rendering problem
Fixed unterminated B tag, causing build to fail with newer pod2man versions
Remove redundant test
Implement BUF_strnlen and use it instead of strlen
Fixes to host checkingFixes to host checking wild card support and add support forsetting host checking flags when verifying a certificatechain
Fix for PKCS12_create if norc2 specifiedUse triple DES for certificate encryption if norc2 isspecifiedPR3357
Change default cipher in smime app to des3PR3357
aesv8armxpl: fix typo
aesv8armxpl: optimize by adding 128bit code paths
Don't allocate more than is needed in BUF_strndup
For portability use BUF_strndup instead of strndup
Adding padding extension to trace code
Fix bug in signature algorithm copy
Fix a wrong parameter count ERR_add_error_data
Merge branch 'mblandheartbeattest'
Fixup for ancient compilers
Zeroinitialize heartbeat test write bufferThe previous calls to memset were added to tear_down when I noticed thetest spuriously failing in opt mode, with different results each time Thisappeared to be because the allocator zeros out memory in debug mode, but notin opt mode Since the heartbeat functions silently drop the request on errorwithout modifying the contents of the write buffer, whatever random contentswere in memory before being reallocated to the write buffer used in the testwould cause nondeterministic test failures in the Heartbleed regression casesAdding these calls allowed the test to pass in both debug and opt modesBen Laurie notified me offline that the test was aborting indebugbendebug64clang mode, configured with GitConfigure and built withGitMake Looking into this, I realized the first memset call was zeroing outa reference count used by SSL_free that was checked indebugbendebug64clang mode but not in the normal debug modeRemoving the memset calls from tear_down and adding a memset for thewrite buffer in set_up addresses the issue and allows the test tosuccessfully execute in debug, opt, and debugbendebug64clang modes
More through error checks in set_upChecks the return values of ssl_init_wbio_buffer and ssl3_setup_buffers
Make it build/run
Unit/regression test for TLS heartbeatsRegression test against CVE20140160 HeartbleedMore info: http://mikeblandcom/tags/heartbleedhtml
Add "teaser" AES module for ARMv8"Teaser" means that it's initial proofofconcept to build EVP moduleupon
Moved note about lack of support for AEAD modes out of BUGS section to SUPPORTED CIPHERS section bug has been fixed, but still no support for AEAD
Enc doesn't support AEAD cipherscherry picked from commit 09184dddead165901700b31eb39d540ba30f93c5
Fix grammar error in verify pod PR3355
Add information to BUGS section of enc documentation PR3354
Corrected POD syntax errors PR3353
Have the pc files depend on each other rather than duplicating thevarious link settings PR3332
Check sk_SSL_CIPHER_num after assigning sk
Correct the return type on the signature for X509_STORE_CTX_get_ex_data given in the pod file
Replace manual ASN1 decoder with ASN1_get_objectReplace manual ASN1 decoder with ASN1_get object Thiswill decode the tag and length properly and check againstit does not exceed the supplied buffer lengthPR3335
Correct example
Add "teaser" AES module for PowerISA 207"Teaser" means that it's not integrated yet and purpose of thiscommit is primarily informational, to exhibit design choices,such as how to handle alignment and endianness In other wordsit's proofofconcept code that EVP module will build upon
Fixed NULL pointer dereference See PR3321
Set authkey to NULL and check malloc return value
dgram_sctp_ctrl: authkey memory leakPR: 3327
Avoid outofbounds write in SSL_get_shared_ciphersPR: 3317
Fix infinite loop PR3347
Move length check earlier to ensure we don't go beyond the end of the user's buffer PR3320
safety check to ensure we dont send out beyond the users buffer
Fixed CRLF in file
Return an error if no recipient type matchesIf the key type does not match any CMS recipient type returnan error instead of using a random key MMA mitigation Thisdoes not leak any useful information to an attackerPR3348
s_client/s_server: support unix domain socketsThe "unix <path>" argument allows s_server and s_client to use a unixdomain socket in the filesystem instead of IPv4 "connect", "port","accept", etc If s_server exits gracefully, such as when "naccept"is used and the requested number of SSL/TLS connections have occurred,then the domain socket file is removed On ctrlC, it is likely thatthe stale socket file will be left over, such that s_server wouldnormally fail to restart with the same arguments For this reason,s_server also supports an "unlink" option, which will clean up anystale socket file before startingIf you have any reason to want encrypted IPC within an O/S instance,this concept might come in handy Otherwise it just demonstrates thatthere is nothing about SSL/TLS that limits it to TCP/IP in any wayThere might also be benchmarking and profiling use in this path, asunix domain sockets are much lower overhead than connecting over localIP addressesSignedoffby: Geoff Thorpe <geoff@opensslorg>
coverity 966576  close socket in error path
PR3342 fix resource leak coverity issue 966577
fix coverity issue 966597  error line is not always initialised
Fixed NULL pointer dereference in PKCS7_dataDecode reported by David Ramos in PR3339
evp: prevent underflow in base64 decodingThis patch resolves RT ticket 2608Thanks to Robert Dugal for originally spotting this, and to DavidRamos for noticing that the ball had been droppedSignedoffby: Geoff Thorpe <geoff@opensslorg>
bignum: allow concurrent BN_MONT_CTX_set_lockedThe lazyinitialisation of BN_MONT_CTX was serialising all threads, asnoted by Daniel Sands and co at Sandia This was to handle the case that2 or more threads race to lazyinit the same context, but stunted allscalability in the case where 2 or more threads are doing unrelatedthings! We favour the latter case by punishing the former The init workgets done by each thread that finds the context to be uninitialised, andwe then lock the "set" logic after that work is done  the winningthread's work gets used, the losing threads throw away what they've doneSignedoffby: Geoff Thorpe <geoff@opensslorg>
Initialize num properlyPR3289PR3345
Set Enveloped data version to 2 if ktri version not zero
 fix coverity issues 966593966596
apps/s_server: document 'naccept' cmdline argumentSignedoffby: Geoff Thorpe <geoff@opensslorg>
md5/asm/md5[586|x86_64]pl: +15 on Atom[MD5 is hardly relevant, just cleaning up repository]
C64x+ assembply pack: add RC4 module
C64x+ assembly pack: make it work with older toolchain
sha/asm/sha1armv4largepl: add NEON and ARMv8 code pathssha/asm/sha256armv4pl: add ARMv8 code path
crypto/armcapc: detect ARMv8 capabilities [in 32bit build]
Double free in i2o_ECPublicKeyPR: 3338
dso: eliminate VMS code on nonVMS systemsEven though the meat of dso_vmsc is compiled out on nonVMS builds,the precompiler still traverses some of the macro handling Thistrips up at least one nonVMS build configuration, so this commitmakes the skipVMS case more robustSignedoffby: Geoff Thorpe <geoff@opensslorg>
typo in SSL_get_peer_cert_chain docsRT: 3304
Fixed spelling error in error message Fix supplied by Marcos Marado
bignum: fix boundary condition in montgomery logicIt's not clear whether this inconsistency could lead to an actualcomputation error, but it involved a BIGNUM being passed around themontgomery logic in an inconsistent state This was found using flagsDBN_DEBUG DBN_DEBUG_RAND, and working backwards from this assertionin 'ectest';ectest: bn_mulc:960: BN_mul: Assertion `_bnum2>top  0 ||_bnum2>d[_bnum2>top  1] ! 0' failedSignedoffby: Geoff Thorpe <geoff@opensslorg>
More warnings
Fix SSL_CONF_cmd missing back
Fixed minor errors in docs
PKCS5_PBKDF2_HMAC documentation submitted by Jeffrey Walton
doc: Add missing back directiveSignedoffby: Chris Rorvick <chris@rorvickcom>
Fix version documentationSpecify f is for compilation flags Add d to synopsis sectionCloses 77
Fix eckey_priv_encodeFix eckey_priv_encode to return an error on failure of i2d_ECPrivateKey
make depend
apps: constify some string parametersThere are certainly many more constifiable strings in the variousinterfaces, which I hope to get to eventuallySignedoffby: Geoff Thorpe <geoff@opensslorg>
util/mkerrpl: fix perl warningGets rid of this;defined@array is deprecated at /util/mkerrpl line 792Maybe you should just omit the defined?defined@array is deprecated at /util/mkerrpl line 800Maybe you should just omit the defined?Signedoffby: Geoff Thorpe <geoff@opensslorg>
Remove latest version, it's pretty redundant and just one more thingto keep up to date with releases  Reported becausehttp://wwwopensslorg/support/faqhtmlMISC1 was out of date
util/mkdefpl: o_timeh doesn't exist any moreo_timeh was removed in commit ff49a94, which breaks "make update"unless mkdirpl is updated accordinglySignedoffby: Geoff Thorpe <geoff@opensslorg>
Add new sponsors
bn/asm/armv4gf2mpl, modes/asm/ghasharmv4pl: faster multiplicationalgorithm suggested in following paper:Cmara, D; Gouva, C P L; Lpez, J & Dahab, R: Fast SoftwarePolynomial Multiplication on ARM Processors using the NEON Enginehttp://conradoplgcryptolandnet/files/2010/12/mocrysen13pdf
aes/asm/bsaesx86_64pl: Atomspecific optimization
Fix use after free
Fix double frees
Fix SSL_CTX_get{first,next}_certificateFix typo that stopped SSL_CTX_get_{first,next}_certificate from working
Document debug_decrypt option
Extension checking fixesWhen looking for an extension we need to set the last foundposition to 1 to properly search all extensionsPR3309
Clarify CMS_decrypt behaviour
Add new key fingerprint
Fix free errors in ocsp utilityKeep copy of any host, path and port values allocated byOCSP_parse_url and free as necessary
ssleay_rand_add returns a value in 110
Update NEWS
Return if ssleay_rand_add called with zero numTreat a zero length passed to ssleay_rand_add a no op: the existing logiczeroes the md value which is very bad OpenSSL itself never does thisinternally and the actual call doesn't make sense as it would be passingzero bytes of entropyThanks to Marcus Meissner <meissner@susede> for reporting this bugcherry picked from commit 5be1ae28ef3c4bdec95b94f14e0e939157be550a
Add heartbeat extension bounds checkA missing bounds check in the handling of the TLS heartbeat extensioncan be used to reveal up to 64k of memory to a connected client orserverThanks for Neel Mehta of Google Security for discovering this bug and toAdam Langley <agl@chromiumorg> and Bodo Moeller <bmoeller@acmorg> forpreparing the fix CVE20140160cherry picked from commit 96db9023b881d7cd9f379b0c154650d6c108e9a3
Document verify_return_error option
crypto/modes/gcm128c: more strict aliasing fixes
vpaes[x86_64|ppc]pl: fix typo, which for some reason triggers rkhunter
Set TLS padding extension valueEnable TLS padding extension using official value from:http://wwwianaorg/assignments/tlsextensiontypevalues/tlsextensiontypevaluesxhtml
For more than 160 bits of security disable SHA1 HMAC
Update security framework docs
Update FAQ
Use correct length when prompting for passwordUse bufsiz  1 not BUFSIZ  1 when prompting for a password inthe openssl utilityThanks to Rob Mackinnon, Leviathan Security for reporting this issue
Document new crl option
Add option to generate old hash formatNew hash_old to generate CRL hashes using oldbefore OpenSSL 100 algorithm
Fix base64 decoding bugA short PEM encoded sequence if passed to the BIO, and the filehad 2 \n following would failPR3289
Don't try and verify signatures if key is NULL CVE20130166Add additional check to catch this in ASN1_item_verify toocherry picked from commit 66e8211c0b1347970096e04b18aa52567c325200
Fix warning
Add initial security framework docs
Set security level in cipher stringAllow setting of security level in cipher string using the@SECLEVELN syntax
Set security level to zero is ssltestSince ssltest needs to test low security ciphersuites and keysset security level to zero so they aren't rejected
Security callback debug print outAdd a debugging security callback option to s_client/s_server This willprint out each security parameter as it is accepted or rejected
Security frameworkSecurity callback: selects which parameters are permitted includingsensible defaults based on bits of securityThe "parameters" which can be selected include: ciphersuites,curves, key sizes, certificate signature algorithms, supportedsignature algorithms, DH parameters, SSL/TLS version, session ticketsand compressionIn some cases prohibiting the use of a parameters will mean they arenot advertised to the peer: for example cipher suites and ECC curvesIn other cases it will abort the handshake: eg DH parameters or thepeer key sizeDocumentation to follow
Check return value of ssl3_output_cert_chain
Allow return of supported ciphersNew function ssl_cipher_disabledCheck for disabled client ciphers using ssl_cipher_disabledNew function to return only supported ciphersNew option to ciphers utility to print only supported ciphers
Auto DH supportAdd auto DH parameter support This is roughly equivalent to theECDH auto curve selection but for DH An application can just callSSL_CTX_set_auto_dhctx, 1;and appropriate DH parameters will be used based on the size of theserver keyUnlike ECDH there is no way a peer can indicate the range of DH parametersit supports Some peers cannot handle DH keys larger that 1024 bits forexample In this case if you call:SSL_CTX_set_auto_dhctx, 2;Only 1024 bit DH parameters will be usedIf the server key is 7680 bits or more in size then 8192 bit DH parameterswill be used: these will be very slowThe old export ciphersuites aren't supported but those are veryinsecure anyway
Add functions returning security bitsAdd functions to return the "bits of security" for various public keyalgorithms Based on SP80057
Fix memory leak with client authcherry picked from commit bc5ec653ba65fedb1619c8182088497de8a97a70
Add no_resumption_on_reneg to SSL_CONFcherry picked from commit 1f44dac24d1cb752b1a06be9091bb03a88a8598e
Update chain building functionDon't clear verification errors from the error queue unlessSSL_BUILD_CHAIN_FLAG_CLEAR_ERROR is setIf errors occur during verification and SSL_BUILD_CHAIN_FLAG_IGNORE_ERRORis set return 2 so applications can issue warningscherry picked from commit 2dd6976f6d02f98b30c376951ac38f780a86b3b5
Allow duplicate certs in ssl_build_cert_chain
Workaround for some CMS signature formatsSome CMS SignedData structure use a signature algorithm OID suchas SHA1WithRSA instead of the RSA algorithm OID Workaround thiscase by tolerating the signature if we recognise the OID
Retry callback only after ClientHello received
Update ordinalsUse a previously unused value as we will be updating multiple releasedbranchescherry picked from commit 0737acd2a8cc688902b5151cab5dc6737b82fb96
Fix for CVE20140076Fix for the attack described in the paper "Recovering OpenSSLECDSA Nonces Using the FLUSH+RELOAD Cache Sidechannel Attack"by Yuval Yarom and Naomi Benger Details can be obtained from:http://eprintiacrorg/2014/140Thanks to Yuval Yarom and Naomi Benger for discovering thisflaw and to Yuval Yarom for supplying a fixcherry picked from commit 2198be3483259de374f91e57d247d0fc667aef29Conflicts:CHANGES
typo
Simplify ssl_add_cert_chain logic
Remove WX option from debugVCWIN32cherry picked from commit 7a3e67f029969620966b8a627b8485d83692cca5
engines/ccgost/gosthashc: simplify and avoid SEGVPR: 3275
SPARC T4 assembly pack: treat zero input length in CBCThe problem is that OpenSSH calls EVP_Cipher, which is not asprotective as EVP_CipherUpdate Formally speaking we ought todo more checks in _cipher methods, including rejectinglengths not divisible by block size unless ciphertext stealingis in place But for now I implement check for zero length inlowlevel based on precedentPR: 3087, 2775
dh_checkc: check BN_CTX_get's return value
test/Makefile: allow emulated test eg under wineSubmitted by: Roumen Petrov
bss_dgramc,d1_libc: make it compile with mingwSubmitted by: Roumen Petrov
For self signed root only indicate one errorcherry picked from commit bdfc0e284c89dd5781259cc19aa264aded538492
PKCS8 support for alternative PRFsAdd option to set an alternative to the default hmacWithSHA1 PRFfor PKCS8 private key encryptions This is used automaticallyby PKCS8_encrypt if the nid specified is a PRFAdd option to pkcs8 utilityUpdate docscherry picked from commit b60272b01fcb4f69201b3e1659b4f7e9e9298dfb
Fix memory leakcherry picked from commit 124d218889dfca33d277404612f1319afe04107e
Add function to free compression methodsAlthough the memory allocated by compression methods is fixed andcannot grow over time it can cause warnings in some leak checkingtools The function SSL_COMP_free_compression_methods will freeand zero the list of supported compression methods This shouldonly be called in a single threaded context when an applicationis shutting down to avoid interfering with existing contextsattempting to look up compression methodscherry picked from commit 976c58302b13d085edb3ab822f5eac4b2f1bff95
Makefileorg: fix syntax error on SolarisPR: 3271
Configure: mark unixware target as elf1
perlasm/x86asmpl: recognize elf1 denoting old ELF platforms
perlasm/x86gaspl: limit special OPENSSL_ia32cap_P treatment to ELF
rc4/asm/rc4586pl: allow for 386only build
des/asm/des586pl: shortcut reference to DES_SPtrans
CABForum EV OIDs for Subject Jurisdiction of Incorporation or Registration
Fix for WIN32 builds with KRB5cherry picked from commit 3eddd1706a30cdf3dc9278692d8ee9038eac8a0d
sha/asm/sha256586pl: don't try to compile SIMD with nosse2
sha/asm/sha512x86_64pl: fix compilation error on Solaris
Configure: blended processor target in solarisx86cc
ssl/t1_encc: check EVP_MD_CTX_copy return valuePR: 3201
aes/asm/vpaesppcpl: fix traceback info
Don't use BN_ULLONG in n2l8 use SCTS_TIMESTAMPcherry picked from commit 3678161d717d0f46c5b5b052a6d6a33438b1df00
Fix for v3_sctscNot all platforms define BN_ULLONG Define SCTS_TIMESTAMP as a typewhich should work on all platformscherry picked from commit 6634416732b94627eba1c47de3c3a6321a5458f0
Add show_chain option to print out verified chain
Avoid Windows 8 Getversion deprecated errorsWindows 8 SDKs complain that GetVersion is deprecatedWe only use GetVersion like this:GetVersion < 0x80000000which checks if the Windows version is NT based Use a macro check_winntwhich uses GetVersion on older SDK versions and true otherwise
Parse nonv1 SCTs less awkwardly
ms/do_win64abat: forward to NUL, not NUL:Allegedly formwarding to NUL: sometimes creates NUL file in filesystemPR: 3250
BC32pl: refresh Borland C supportPR: 3251Suggested by: Thorsten Sch\F6ning
x509/by_dirc: fix runaway pointer and potential SEGVwhen adding duplicates in add_cert_dirPR: 3261Reported by: Marian Done
config: recognize ARMv8/AArch64 target
Only set current certificate to valid valuesWhen setting the current certificate check that it has a correspondingprivate key
New chain building flagsNew flags to build certificate chains The can be used to rearrangethe chain so all an application needs to do is add all certificatesin arbitrary order and then build the chain to check and correct themAdd verify error code when building chainUpdate docs
Option to set current cert to server certificate
aes/asm/aesnix86[_64]pl: minor Atomspecific performance tweak
fix WIN32 warningscherry picked from commit b709f8ef54b1c9ad513878ba0213aa651a9acef8
make depend
Move CT viewer extension code to crypto/x509v3
make depend
Remove references to o_timeh
Move gmtime functions to cryptoh
Make i2r_sctlist static
Reverse export of o_timeh
Merge branch 'sctviewermaster' of https://githubcom/robstradling/openssl into sctviewer
Move the SCT List extension parser into libsslAdd the extension parser in the s_client, ocsp and x509 apps
Don't use CRYPTO_AES_CTR if it isn't defined
Restore SSL_OP_MSIE_SSLV2_RSA_PADDINGThe flag SSL_OP_MSIE_SSLV2_RSA_PADDING hasn't done anything since OpenSSL097h but deleting it will break source compatibility with any softwarethat references it Restore it but define to zerocherry picked from commit b17d6b8d1d49fa4732deff17cfd1833616af0d9c
Don't use getcwd in noncopy builds
Remove duplicate statement
Add support for aes128/192/256ctr to the cryptodev engineThis can be used to speed up SRTP with libsrtp, eg on TI omap/sitara based devices
Show the contents of the RFC6962 Signed Certificate Timestamp List Certificate/OCSP ExtensionsAdd the RFC6962 OIDs to the objects table
Use defaults bits in req when not givenIf you use "newkey rsa" it's supposed to read the default number of bits from theconfig file  However the value isn't used to generate the key, but it doesprint it's generating such a key  The set_keygen_ctx doesn't callEVP_PKEY_CTX_set_rsa_keygen_bits and you end up with the default set inpkey_rsa_init 1024  Afterwards the number of bits gets read from the configfile, but nothing is done with that anymoreWe now read the config first and use the value from the config file when no sizeis givenPR: 2592
Fix additional pod errors with numbered items
Fix various spelling errors
Document pkcs12 password behaviorapps/pkcs12c accepts password as an argument  The document authoralmost certainly meant to write "password, passin"However, that is not correct, either  Actually the code treatspassword as equivalent to passin, EXCEPT when export is alsospecified, in which case password as equivalent to passout
ssl/s3_pktc: detect RAND_bytes error in multiblock
x86[_64]cpuidpl: add lowlevel RDSEED
aes/asm/aesnix86_64pl: further optimization for Atom SilvermontImprove CBC decrypt and CTR by ~13/16, which adds up to ~25/33improvement over "preSilvermont" version [Add performance table toaesnix86pl]
Include TA in checks/callback with partial chainsWhen a chain is complete and ends in a trusted root checks are alsoperformed on the TA and the callback notified with ok1 Forconsistency do the same for chains where the TA is not self signed
Don't do loop detection for self signed check
Add suppot for ASCII with CRLF canonicalisation
fix error discrepancycherry picked from commit a2317c3ffde3f1f73bd7fa3f08e420fb09043905
evp/e_aes_cbc_hmac_shac: improve cache locality
ghashx86[_64]pl: ~15 improvement on Atom Silvermontother processors unaffected
Fix warning
Build on MacOS
Return previous compression methods when setting them
Oops, get selection logic right
Fix warnings
Don't break out of the custom extension callback loop  continue insteadThe contract for custom extension callbacks has changed  all custom extension callbacks are triggered
Fix whitespace, newstyle comments
Readd alert variables removed during rebaseWhitespace fixes
Updating DTCP authorization type to expected value
Update custom TLS extension and supplemental data 'generate' callbacks to support sending an alertIf multiple TLS extensions are expected but not received, the TLS extension and supplemental data 'generate' callbacks are the only chance for the receiveside to trigger a specific TLS alert during the handshakeRemoved logic which noop'd TLS extension generate callbacks as the generate callbacks need to always be called in order to trigger alerts, and updated the serverinfospecific custom TLS extension callbacks to track which custom TLS extensions were received by the client, where noops for 'generate' callbacks are appropriate
Return percertificate chain if extra chain is NULLIf an application calls the macro SSL_CTX_get_extra_chain_certsreturn either the old "shared" extra certificates or those associatedwith the current certificateThis means applications which call SSL_CTX_use_certificate_chain_fileand retrieve the additional chain using SSL_CTX_get_extra_chain_certswill still work An application which only wants to check the sharedextra certificates can call the new macroSSL_CTX_get_extra_chain_certs_only
e_aes_cbc_hmac_sha[1|256]c: fix compiler warning
ssl/s3_pktc: move multiblock processing to ssl3_write_bytesThis allows to process multiple fragmets of maximum fragment size,as opposite to chopping maximumsized fragments to multiple smallerones This approach relies on dynamic allocation of larger buffers,which we trade for performance improvement, for several times insome situations
evp/e_aes_cbc_hmac_shac: additional CTRL to query buffer requirements
[aesni|sha]mbx86_64pl: add data prefetching
s3_pktc: move ssl3_release_write_buffer to ssl3_write_bytesIf application has more data than maximum fragment, hold to bufferfor whole write, as opposite to perfragment strategy
Add quotes as CC can contain spacesPR3253
New ctrl to set current certificateNew ctrl sets current certificate based on certain criteria Currentlytwo options: set the first valid certificate as current and set thenext valid certificate as current Using these an application caniterate over all certificates in an SSL_CTX or SSL structure
Demo of use of errors in applications
modes/asm/ghashs390xpl: +15 performance improvement on z10
crypto/aes/asm/aesnix86[_64]pl update, up to 14 improvement onAtom Silvermont On other CPUs one can observe 1 loss on somealgorithms
crypto/sha/asm/sha1x86_64pl update:+5 on Atom Silvermont, up to +8 improvement of legacy codeHarmonize sha1586pl and aesnisha1x86_86p with sha1x86_64pl
Clarify docsRemove reference to ERR_TXT_MALLOCED in the error library as that isonly used internally Indicate that returned error data must not befreedcherry picked from commit f2d678e6e89b6508147086610e985d4e8416e867
typo
Check i before r[i]PR3244cherry picked from commit 9614d2c676ffe74ce0c919d9e5c0d622a011cbed
Fix demo comment: 099 never released
Add loaded dynamic ENGINEs to listAlways add a dynamically loaded ENGINE to list Otherwise it can causeproblems when multiply loaded, especially if it adds new public key methodsFor all current engines we only want a single implementation anyway
New function to set compression methods so they can be safely freed
Compare encodings in X509_cmp as well as hash
Add cert callback retry test
Certificate callback doc
Support retries in certificate callback
Add new function SSL_CTX_get_ssl_methodPartial fix for PR3183
Omit initial status request callback checkPR3178
typo
Use rdrand as additional entropy sourceIf available rdrand is used as an additional entropy source for thePRNG and for additional input in FIPS mode
typo
typo
Fix bug in X509_V_FLAG_IGNORE_CRITICAL CRL handling
update remaining documentation to move from EDH to DHEchange documentation and comments to indicate that we prefer thestandard "DHE" naming scheme everywhere over the older "EDH"
Replace EDHRSADESCBCSHA, etc with DHERSADESCBCSHAReplace the full ciphersuites with "EDH" in their labels with "DHE"so that all DHE ciphersuites are referred to in the same wayLeave backwardcompatible aliases for the ciphersuites in question sothat configurations which specify these explicitly will continueworking
change SSL3_CK_EDH_ to SSL_CK_DHE_ with backwardcompatibilityThis change normalizes the SSL_CK_DHE_ defines to use the common term"DHE", while permitting older code that uses the more uncommon "EDH"constants to compile properly
documentation should use "DHE" instead of "EDH"
use SSL_kDHE throughout instead of SSL_kEDHDHE is the standard term used by the RFCs and by other TLSimplementations  It's useful to have the internal variables use thestandard terminologyThis patch leaves a synonym SSL_kEDH in place, though, so that oldercode can still be built against it, since that has been thetraditional API  SSL_kEDH should probably be deprecated at somepoint, though
emit "DHE" instead of "edh" for kX packet trace outputother parts of packet tracing emit the standard "DHE" label instead of"edh"  This change brings the output of ssl_print_client_keyex andssl_print_server_keyex into accordance with the standard term
Allow "DHE" and "kDHE" as synonyms of "EDH" and "kEDH" when specifiying ciphersThe standard terminology in https://toolsietforg/html/rfc5426 is"DHE"  "openssl ciphers" outputs "DHE" for the most part  Butusers of the library currently cannot specify "DHE", they mustcurrently specify "EDH"This change allows users to specify the common term in cipher suitestrings without breaking backward compatibility
use SSL_kECDHE throughout instead of SSL_kEECDHECDHE is the standard term used by the RFCs and by other TLSimplementations  It's useful to have the internal variables use thestandard terminologyThis patch leaves a synonym SSL_kEECDH in place, though, so that oldercode can still be built against it, since that has been thetraditional API  SSL_kEECDH should probably be deprecated at somepoint, though
emit "ECDHE" instead of "EECDH" for kX packet trace outputother parts of packet tracing emit the standard "ECDHE" label insteadof "EECDH"  This change brings the output of ssl_print_client_keyexand ssl_print_server_keyex into accordance with the standard term
Allow "ECDHE" as a synonym of "EECDH" when specifiying ciphersThe standard terminology in https://toolsietforg/html/rfc4492 isECDHE  "openssl ciphers" outputs ECDHE  But users of the librarycurrently cannot specify ECDHE, they must specify EECDHThis change allows users to specify the common term in cipher suitestrings without breaking backward compatibility
bn/asm/x86_64mont5pl: fix compilation error on Solaris
update FAQ
PPC assembly pack: relax 64bit requirement for littleendian support
aes/asm/vpaesppcpl: add littleendian support
update NEWS
Add fix for CVE20134353cherry picked from commit 6b42ed4e7104898f4b5b69337589719913b36404
Sync NEWS
sha/asm/sha256armv4pl: add NEON code pathand shave off cycle even from integeronly code
aesnisha1x86_64pl: refine Atomspecific optimizationand update performance data, and fix typo
Add ServerInfoFile to SSL_CONF, update docs
Use algorithm specific chains for certificatesFix a limitation in SSL_CTX_use_certificate_chain_file: use algorithmspecific chains instead of the shared chainUpdate docs
ssl/t1_encc: optimize PRF suggested by Intel
aesnisha1x86_64pl: add stiched decrypt procedure,but keep it disabled, too little gain Add some Atomspecificoptimization
Don't change version number if session establishedWhen sending an invalid version number alert don't change theversion number to the client version if a session is alreadyestablishedThanks to Marek Majkowski for additional analysis of this issuePR3191
Update curve list sizecherry picked from commit cfa86987a8d9d2b8cc5e5fea2d3260c46542cdb9
sparcv9capc: omit random detectionPR: 3202
FAQ: why SIGILL?
ARM assembly pack: make it work with older toolchain
Canonicalise input in CMS_verifyIf content is detached and not binary mode translate the input toCRLF format Before this change the input was verified verbatimwhich lead to a discrepancy between sign and verify
Fix DTLS retransmission from previous sessionFor DTLS we might need to retransmit messages from the previous sessionso keep a copy of write context in DTLS retransmission buffers insteadof replacing it after sending CCS CVE20136450cherry picked from commit 34628967f1e65dc8f34e000f0f5518e21afbfc7b
Ignore NULL parameter in EVP_MD_CTX_destroycherry picked from commit a6c62f0c25a756c263a80ce52afbae888028e986
sha1x86_64pl: harmonize Win64 SE handlers for SIMD code pathesand ensure stack alignment in the process
evp/e_[aes|camellia]c: fix typo in CBC subroutineIt worked because it was never called
PPC assembly pack update addendum
sha512c: fullfull implicit API contract in SHA512_TransformSHA512_Transform was initially added rather as tribute to traditionthan for practucal reasons But use was recently found in ssl/s3_cbccand it turned to be problematic on platforms that don't toleratemisasligned references to memory and lack assembly subroutine
PPC assembly pack: improve AIX support enable vpaesppc
Check EVP errors for handshake digestsPartial mitigation of PR3200cherry picked from commit 0294b2be5f4c11e60620c0018674ff0e17b14238
Update demo
Add opaque ID structureMove the IP, email and host checking fields from the publicX509_VERIFY_PARAM structure into an opaque X509_VERIFY_PARAM_IDstructure By doing this the structure can be modified in futurewithout risk of breaking any applicationscherry picked from commit adc6bd73e3bd10ce6e76867482e8d137071298d7Conflicts:crypto/x509/x509_vpmc
Update to pad extensionFix padding calculation for different SSL_METHOD types Use thestandard name as used in draftagltlspadding02
Fix for partial chain notificationFor consistency with other cases if we are performingpartial chain verification with just one certificatenotify the callback with ok1cherry picked from commit 852553d9005e13aed7feb986a5d71cb885b994c7
Verify parameter retrieval functionsNew functions to retrieve internal pointers to X509_VERIFY_PARAMfor SSL_CTX and SSL structurescherry picked from commit be0c9270690ed9c1799900643cab91de146de857
Don't use rdrand engine as default unless explicitly requestedcherry picked from commit 16898401bd47a153fbf799127ff57fdcfcbd324f
remove obsolete STATUS file
Add release dates to NEWS
x86_64xlatepl: minor update
bn/asm/x86_64mont5pl: add MULX/ADX code pathThis also eliminates code duplication between x86_64mont and x86_64montand optimizes even original nonMULX code
bn/asm/armv4montpl: add NEON code path
perlasm/ppcxlatepl: add support for AltiVec/VMX and VSXSuggested by: Marcello Cerri
perlasm/ppcxlatepl: improve linux64le supportSuggested by: Marcello Cerri
aes/asm/vpaesppcpl: comply with ABI
Configure: remove vpaesppc from aix targetsAIX assembler doesn't hanle align, which is essential for vpaes module
bn/asm/x86_64mont5pl: comply with Win64 ABIPR: 3189Submitted by: Oscar Ciurana
crypto/bn/asm/rsazx86_64pl: make it work on Win64
crypto/bn/rsaz: fix licensing notersaz_expc: harmonize line terminating;asm/rsazpl: minor optimizations
bn/asm/rsazx86_64pl: fix prototype
Simplify and update opensslspec
vpaesppcpl: fix bug in IV handling and comply with ABI
ppc64montpl: eliminate dependency on GPRs' upper halves
Take vpaesppc module into loop
Add Vector Permutation AES for PPC
New functions to retrieve certificate from SSL_CTXNew functions to retrieve current certificate or private keyfrom an SSL_CTXConstify SSL_get_private_key
Don't define SSL_select_next_proto if OPENSSL_NO_TLSEXT set
Use correct header length in ssl3_send_certifcate_request
Constifycherry picked from commit 1abfa78a8ba714f7e47bd674db53dbe303cd1ce7
Fix compilation with nonextprotonegPR3106
Flag to disable automatic copying of contextsSome functions such as EVP_VerifyFinal only finalise a copy of the passedcontext in case an application wants to digest more data Doing this whenit is not needed is inefficient and many applications don't require itFor compatibility the default is to still finalise a copy unless theflag EVP_MD_CTX_FLAG_FINALISE is set in which case the passedcontext is finalised an no further data can be digested afterfinalisation
Allow match selecting of current certificateIf pointer comparison for current certificate fails checkto see if a match using X509_cmp succeeds for the currentcertificate: this is useful for cases where the certificatepointer is not available
Additional "chain_cert" functionsPR3169This patch, which currently applies successfully against master and1_0_2, adds the following functions:SSL_[CTX_]select_current_cert  set the current certificate withoutdisturbing the existing structureSSL_[CTX_]get0_chain_certs  get the current certificate's chainSSL_[CTX_]clear_chain_certs  clear the current certificate's chainThe patch also adds these functions to, and fixes some existing errorsin, SSL_CTX_add1_chain_certpod
Delete duplicate entryPR3172
Configure: add linuxppc64le targetSubmitted by: Marcelo Cerri
srp/srp_grpsh: make it Compaq CfriendlyPR: 3165Submitted by: Daniel Richard G
modes/asm/ghashalphapl: fix typo
Make Makefiles OSFmakefriendlyPR: 3165
Fix memory leak
Support setting of "no purpose" for trustIf the oid parameter is set to NULL in X509_add1_trust_objectcreate an empty list of trusted purposes corresponding to"no purpose" if trust is checked
Update FAQ
Makfileorg: make FIPS build work with BSD make
Update FAQ with PGP note
Fix for some platforms where "char" is unsigned
Document RSAPublicKey_{in,out} options
Add CMS_SignerInfo_get0_signature functionAdd function to retrieve the signature from a CMS_SignerInfo structure:applications can then read or modify it
Check for missing components in RSA_check
modes/asm/ghashalphapl: make it work with older assembler for realPR: 3165
engines/ccgost/gost89h: make word32 defintion unconditionalOriginal definition depended on __LONG_MAX__ that is not guaranteed tobe present As we don't support platforms with int narrower that 32 bitsit's appropriate to make defition inconditionalPR: 3165
modes/asm/ghashalphapl: make it work with older assemblerPR: 3165
Experimental workaround TLS filler WTF extensionBased on a suggested workaround for the "TLS hang bug" see FAQ and PR2771:if the TLS Client Hello record length value would otherwise be > 255 and lessthat 512 pad with a dummy extension containing zeroes so it is at least 512To enable it use an unused extension number for example 0x4242 usingeg DTLSEXT_TYPE_wtf0x4242WARNING: EXPERIMENTAL, SUBJECT TO CHANGE
Enable PSK in FIPS modeEnable PSK ciphersuites with AES or DES3 in FIPS mode
Sync error codes with 102stable
Initialise context before using itcherry picked from commit a4947e4e064d2d5bb622ac64cf13edc4a46ed196
PBKDF2 should be efficient Contributed by Christian Heimes<christian@pythonorg>
Add brainpool curves to trace outputcherry picked from commit bd80d0229c9a154f569b046365bc85d76b59cfc5
DTLS/SCTP struct authchunks BugPR: 2809DTLS/SCTP requires DATA and FORWARDTSN chunks to be protected withSCTPAUTH  It is checked if this has been activated successfully forthe local and remote peer Due to a bug, however, thegauth_number_of_chunks field of the authchunks struct is missing onFreeBSD, and was therefore not considered in the OpenSSL implementationThis patch sets the corresponding pointer for the check correctlywhether or not this bug is presentcherry picked from commit f596e3c491035fe80db5fc0c3ff6b647662b0003
DTLS/SCTP Finished Auth BugPR: 2808With DTLS/SCTP the SCTP extension SCTPAUTH is used to protect DATA andFORWARDTSN chunks The key for this extension is derived from themaster secret and changed with the next ChangeCipherSpec, whenever a newkey has been negotiated The following Finished then already uses thenew key  Unfortunately, the ChangeCipherSpec and Finished are part ofthe same flight as the ClientKeyExchange, which is necessary for thecomputation of the new secret Hence, these messages are sentimmediately following each other, leaving the server very little time tocompute the new secret and pass it to SCTP before the finished arrivesSo the Finished is likely to be discarded by SCTP and a retransmissionbecomes necessary To prevent this issue, the Finished of the client isstill sent with the old keycherry picked from commit 9fb523adce6fd6015b68da2ca8e4ac4900ac2be2
Fix SSL_OP_SINGLE_ECDH_USEDon't require a public key in tls1_set_ec_id if compression status isnot needed This fixes a bug where SSL_OP_SINGLE_ECDH_USE wouldn't workcherry picked from commit 5ff68e8f6dac3b0d8997b8bc379f9111c2bab74f
Add ecdh_single optionAdd ecdh_single option to set SSL_OP_SINGLE_ECDH_USE on the command linecherry picked from commit f14a4a861d2d221ed565a75441a218f85b8db530
Fix warning
Fix warning
sha/asm/sha512ppcpl: fix typoSubmitted by: Marcelo Cerri
perlas/ppcxlatepl: fix typo
aes/asm/aesppcpl: add littleendian supportSubmitted by: Marcelo Cerri
perlasm/ppcxlatepl: add quad directivesha/asm/sha512ppcpl: add littleendian supportSubmitted by: Marcelo Cerri
sha/asm/sha1ppcpl: add littleendian supportSubmitted by: Marcelo Cerri
engines/e_aepc: make it BN_ULONGsize and endian "neutral"
bn/asm/x86_64montpl: minor optimization [for Decoded ICache]
POD: Fix list terminationThis fixes problems in POD list formatting: extra or missing backsequencesdoc/ssl/SSL_CTX_set1_curvespod around line 90: back without overdoc/ssl/SSL_CTX_set1_verify_cert_storepod around line 73: back without overdoc/ssl/SSL_CTX_add1_chain_certpod around line 82: back without overdoc/crypto/evppod around line 40: 'item' outside of any 'over'crypto/des/despod around line 184: You forgot a 'back' before 'head1'PR3147
POD: Fix item numberingNewer pod2man considers item [19] part of a numbered list, while item0 starts an unnumbered list Add a zero effect formatting mark to overridethisdoc/apps/smimepod around line 315: Expected text after item, not anumberPR3146
Update test server details
Add SSL_CONF command to set DH Parameters
Fix argument processing
Constification
Update demos/bio/README
Remove unused variable
Fix another gmt_unix_time case in server_random
Do not include a timestamp in the Client/ServerHello Random fieldInstead, send random bytes, unless SSL_SEND_{CLIENT,SERVER}RANDOM_MODEis setThis is a forwardport of commits:4af793036f6ef4f0a1078e5d7155426a98d50e37f4c93b46edb51da71f09eda99e83eaf193a33c083da721dac9382c48812c8eba455528fd59af2eef2583270191a8b27eed303c03ece1da97b9b69fd3While the gmt_unix_time record was added in an ostensible attempt tomitigate the dangers of a bad RNG, its presence leaks the host's viewof the current time in the clear  This minor leak can helpfingerprint TLS instances across networks and protocols and what'sworse, it's doubtful thet the gmt_unix_time record does any good atall for its intended purpose, since: It's quite possible to open two TLS connections in one second If the PRNG output is prone to repeat itself, ephemeralhandshakes and who knows what else besides are broken
Fix various typos
Modify sample acceptcnf
Remove gratuitous patent references
Add demo for SSL server using SSL_CONF
Extend SSL_CONFExtend SSL_CONF to return command value typesAdd certificate and key optionsUpdate documentation
Typo
Time value for various platformsThe function gettimeofday is not supported on all platforms Usemore portable versions Adapted from FIPS code
Prevent use of RSA+MD5 in TLS 12 by defaultRemoving RSA+MD5 from the default signature algorithm listprevents its use by defaultIf a broken implementation attempts to use RSA+MD5 anyway the sanitychecking of signature algorithms will cause a fatal alert
Add clang debug target
PPC assembly pack: make new size directives profilerfriendlySuggested by: Anton Blanchard
Add brainpool curves to NID table too
Fix warning
Add test vectors from RFC7027
RFC7027 Brainpool for TLS support
Sync OID numbers with 102 branch
PPC assembly pack: add size directives
bn/asm/x86_64pl: correct assembler requirement for adx
Initial aarch64 bits
MIPS assembly pack: get rid of deprecated instructionsLatest MIPS ISA specification declared 'branch likely' instructionsobsolete To makes code futureproof replace them with equivalent
evp/e_aes_cbc_hmac_shac: limit multiblock fragmentation to 1KBExcessive fragmentation put additional burden of addtional MACcalculations on the other size and limiting fragments it to 1KBlimits the overhead to ~6
aes/asm/bsaesx86_64pl: fix Windowsspecific bug in XTSPR: 3139
bn/asm/rsaxavx2pl: minor optimization [for Decoded ICache]
bn/bn_expc: prefer MULX/ADX over AVX2
Configure: recognize experimentalmultiblock
ssl/s3_pktc: add initial multiblock encrypt
evp/e_aes_cbc_hmac_shac: harmonize names, fix bugs
evp/evph: add multiblock contstants and parameter type
sha/asm/shambx86_64pl: commentary update
Constification
aes/asm/bsaespl: improve decrypt performanceImprove decrypt performance by 1020 depending on platform Thanksto Jussi Kivilinna for providing valuable hint Also thanks to ArdBiesheuvel
Support new asm files
evp/e_des3c: fix typo with potential integer overflow on 32bit platformsSubmitted by: Yuriy Kaminskiy
perlasm/sparcv9_modespl: make it work even with seasoned perlPR: 3130
bn/asm/x86_64montpl: add MULX/ADCX/ADOX code path
rsazx86_64pl: add MULX/ADCX/ADOX code path
x86_64xlatepl: fix jrcxz in nasm case
evp/e_aes_cbc_hmac_shac: multiblock glue code
Configire: take multiblock modules into build loop
x86_64 assembly pack: add multiblock AESNI, SHA1 and SHA256
evp/e_aes_cbc_hmac_sha256c: enable is on all AESNI platforms, not only on AVX
aes/asm/armvpl: compensate for inconsistencies in toolchainsSuggested by: Ard Biesheuvel
Produce PEM we would consume
Show useful errorsConflicts:apps/s_serverc
Mix time into the pool to avoid repetition of the Android duplicated PID problem
Merge remotetracking branch 'trevp/pemfix' into trevpemfix
More diagnostics for invalid OIDs
aesarmv4pl, bsaesarmv7pl: add Linux kernel and Thumb2 supportSubmitted by: Ard Biesheuvel
Add functions to set ECDSA_METHOD structureAdd various functions to allocate and set the fields of an ECDSA_METHODstructure
Fix error code clashes
DTLS version usage fixesMake DTLS behave like TLS when negotiating version: record layer hasDTLS 10, message version is 12Tolerate different version numbers if version hasn't been negotiatedyet
Move change note for SSL_OP_SAFARI_ECDHE_ECDSA_BUGThis went into 102 too, so it's not actually a changebetween 10x and 110
Move the change note for partial chain verification: this is code fromthe main branch http://cvsopensslorg/chngview?cn19322 later addedto the 102 branch http://cvsopensslorg/chngview?cn23113, andthus not a change "between 102 and 110"
Redo deletion of some serverinfo code that supplemental data code mistakenly reinstated
Sync CHANGES and NEWS filesVarious changes from the master branch are now in the 102 branch too
Fix overly lenient comparisons: EC_GROUP_cmp shouldn't consider curves equal just becausethe curve name is the same They really should be the samein this case, but there's an EC_GROUP_set_curve_name API,which could be misused EC_POINT_cmp shouldn't return 0 for ERR_R_SHOULD_NOT_HAVE_BEEN_CALLEDor EC_R_INCOMPATIBLE_OBJECTS errors because in a cmp API, 0 indicatesequality not an errorReported by: king cope
crypto/armcapc: fix typo in rdtsc subroutinePR: 3125Submitted by: Kyle McMartin
Add support for Cygwinx86_64PR: 3110Submitted by Corinna Vinschen
bsaesarmv7pl: remove partial register operations in CTR subroutine
bsaesarmv7pl: remove byte order dependency and minor optimization
Added support for ARM/NEON based bit sliced AES in XTS modeSignedoffby: Ard Biesheuvel <ardbiesheuvel@linaroorg>
Update docs to mention "BEGIN SERVERINFO FOR "
Require ServerInfo PEMs to be named "BEGIN SERVERINFO FOR"
Redo deletion of some serverinfo code that supplemental data code mistakenly reinstated
Update CHANGES
Tidy up comments
Use TLS version supplied by client when fingerprinting Safari
Fix compilation with noec and/or notlsext
typo
Initialize next_proto in s_server  resolves incorrect attempts to free
Constification
crypto/modes/asm/aesnigcmx86_64pl: minor optimizationAvoid occasional up to 8 performance drops
crypto/bn/asm/x86_64montpl: minor optimization
Remove ancient PATENTS section and FAQ reference
Partial path fixWhen verifying a partial path always check to see if the EE certificateis explicitly trusted: the path could contain other untrusted certificates
Document extension clash
Experimental encryptthenmac supportExperimental support for encrypt then mac fromdraftgutmanntlsencryptthenmac02txtTo enable it set the appropriate extension number 0x10 for the test serverusing eg DTLSEXT_TYPE_encrypt_then_mac0x10For noncompliant peers ie just about everything this should have noeffect
Set TLS v12 disabled mask properly
Const fix
Free generated supp data after handshake completion, add comment regarding use of num_renegotiations in TLS and supp data generation callbacks
More cleanup
Make it build
Add callbacks supporting generation and retrieval of supplemental data entries, facilitating RFC 5878 TLS auth extensionsRemoved prior audit proof logic  audit proof support was implemented using the generic TLS extension APITests exercising the new supplemental data registration and callback api can be found in ssltestcImplemented changes to s_server and s_client to exercise supplemental data callbacks via the auth argument, as well as additional flags to exercise supplemental data being sent only during renegotiation
s/recommend/recommended/
misspellings fixes by https://githubcom/vlajos/misspell_fixer
Clean up layout
Add an "xmpphost" option to s_client Many XMPP servers are configured with multiple domains virtual hosts In order to establish successfully the TLS connection you have to specifywhich virtual host you are trying to connect Test this, for example with :: Fail:openssl s_client connect talkgooglecom:5222 starttls xmpp Works:openssl s_client connect talkgooglecom:5222 starttls xmpp xmpphost gmailcom
Add "xmpp" to the list of supported starttls protocols on s_client manpage
Fix infinite loop on s_client starttls xmpp When the host used in "connect" is not what the remote XMPP server expectsthe server will return an error like this:<stream:error><hostunknown xmlns'urn:ietf:params:xml:ns:xmppstreams'/></stream:error> But the actual code will stay on the loop forever because the stop condition"/stream:features>" will never happen, Make this more robust: The stop condition should be that BIO_read failed Test if for example with ::openssl s_client  connect randomjabb3rnet:5222 starttls xmpp
Fix XMPP code detection on s_client starttls xmpp Some XMPP Servers OpenFire use double quotes This makes s_client starttls work with this servers Tested with OpenFire servers from http://xmppnet/ ::openssl s_client connect coderollerscom:5222 starttls xmpp
Don't prefer ECDHEECDSA ciphers when the client appears to be Safari on OS XOS X 1081083 has broken support for ECDHEECDSA ciphers
Document supported curve functions
Document force_pubkey option
Correct ECDSA example
Correctly test for noec
Fix compile errors
Typo: don't call RAND_cleanup during app startupcherry picked from commit 90e7f983b573c3f3c722a02db4491a1b1cd87e8c
Add documentationPreliminary documentation for chain and verify stores and certificate chainsetting functions
Don't run ECDH CMS tests if EC disabled
Make noec compilation work
Return 1 when setting ECDH auto mode
Add the server 'hang' issue to the FAQ
DTLS message_sequence number wrong in rehandshake ServerHelloThis fix ensures that A HelloRequest is retransmitted if not responded by a ClientHello The HelloRequest "consumes" the sequence number 0 The subsequentServerHello uses the sequence number 1 The client also expects the sequence number of the ServerHello tobe 1 if a HelloRequest was received earlierThis patch fixes the RFC violation
DTLS handshake fixReported by: Prashant Jaikumar <rmstar@gmailcom>Fix handling of application data received before a handshake
Fix for PEM_X509_INFO_read_bioPR: 3028Fix bug introduced in PEM_X509_INFO_bio which wouldn't process RSA keyscorrectly if they appeared first
Update cms docs
Add X942 DH test
Add X942 DH certificate to S/MIME test
CMS RFC2631 X942 DH enveloped data support
Add KDF for DHAdd X942 DH KDF Move sharedinfo generation code to CMS library as thesame structure is used by DH and ECDHMove ASN1_OBJECT typedef to ossl_typh so it can be picked up by dh headerswithout the need to use ASN1
Extend DH parameter generation supportAdd support for DH parameter generation using DSA methods includingFIPS 1863
Enhance DH dup functionsMake DHparams_dup work properly with X942 DH parameters
If present print j, seed and counter values for DH
Minor optimisation to KDF algorithmDon't need to use temporary buffer if remaining length equals digest length
Algorithm parameter supportCheck and set AlgorithmIdenfier parameters for key wrap algorithmsCurrently these just set parameters to NULL
crypto/evp/e_aesc: fix logical preprocessor bug and formattingBug would emerge when XTS is added to bsaesarmv7pl Pointed out byArd Biesheuvel of Linaro
crypto/bn/asm/rsaxx86_64pl: make it work on Darwin
crypto/sha/asm/shax86_64pl: comply with Win64 ABI
Various custom extension fixesForce no SSL2 when custom extensions in useDon't clear extension state when cert is setClear on renegotiate
Add tests for ALPN functionalityConflicts:ssl/ssltestc
Add a noopt 64bit target
Support ALPNThis change adds support for ALPN[1] in OpenSSL ALPN is the IETFblessed version of NPN and we'll be supporting both ALPN and NPN forsome time yet[1] https://toolsietforg/html/draftietftlsapplayerprotoneg00Conflicts:ssl/ssl3hssl/t1_libc
Make ecdsatest work with noncesUpdate ecdsatest to use ECDSA_sign_setup and ECDSA_sign_ex, thisavoids the nonce generation which would otherwise break the testReinstate ecdsatest
Temporarily disable ECDSA testDisable ECDSA test temporarily: it is incompatible with ECDSA nonces
New CMS testsAdd some ECDH CMS tests
Scripts to recreate S/MIME test certificatesAdd a script to generate keys and certificates for the S/MIME and CMStestsUpdate certificates and add EC examples
Custom key wrap option for cms utility
Return correct enveloped data type in ASN1 methodsFor RSA and DSA keys return an appropriate RecipientInfo type By settingCMS_RECIPINFO_NONE for DSA keys an appropriate error is returned ifan attempt is made to use DSA with enveloped data
Add support for ECDH KARIAdd support for ECDH in enveloped data The CMS ctrls for the EC ASN1method decode/encode the appropriate parameters from the CMS ASN1 dataand send appropriate data to the EC public key method
Add support for X962 KDFAdd X962 KDF to EC EVP_PKEY_METHOD
Add new OIDs from RFC5753Add OIDs for KDF schemes from RFC5753 and add cross references foreach type and the appropriate digest to use
CMS support for key agreeement recipient infoAdd hooks to support key agreement recipient info type KARI usingalgorithm specific code in the relevant public key ASN1 method
Set CMS EnvelopedData version correctly
EVP support for wrapping algorithmsAdd support for key wrap algorithms via EVP interfaceGeneralise AES wrap algorithm and add to modes, making existingAES wrap algorithm a special caseMove test code to evpteststxt
Typo
Avoid need to change function codeKeep original function names for nonce versions so we don't have to changeerror function codes
Make `safe' ECDSA nonces the defaultThis change updates 8a99cb29 to make the generation of ECDSA noncesusing the message digest the default It also reverts the changes toECDSA_METHOD structureIn addition to making it the default, removing the flag from EC_KEYmeans that FIPS modules will no longer have an ABI mismatch
bn/asm/rsazavx2pl: Windowsspecific fix
Fix verify loop with CRL checkingPR 3090Reported by: Franck Youssef <fry@opench>If no new reason codes are obtained after checking a CRL exit with anerror to avoid repeatedly checking the same CRLThis will only happen if verify errors such as invalid CRL scope areoverridden in a callback
Clarify FIXME
Note nonexport of CC
Support new rsaz asm stuff
s/rsaz_eligible/rsaz_avx2_eligible/
sha512586pl: fix typoSubmitted by: Gisle Vanem
Remove RSAX engine, superseded by RSAZ module
Take RSAZ modules into build loop, add glue and engageRT: 2582, 2850
Add RSAZ assembly modulesRT: 2582, 2850
bn/asm/x86_86montpl: optimize reduction for Intel Core family
bn/bn_expc: harmonize
Fix multiple cosmetic typos
Initialise CMS signature buffer length properly
config: fix executable format detection on latest FreeBSDSubmitted by: Bryan DreweryPR: 3075
bn/bn_expc: Solarisspecific fix, T4 MONTMUL relies on alloca
x86_64xlatepl: Windows fixes
aesnisha256x86_64pl: fix typo in Windows SEH
Cosmetic touchups
Fix duplicate error code
Update CHANGES
Update cms docsDocument use of keyopt to use RSAPSS and RSAOAEP modes
Add new CMS testsAdd new tests to cmstestpl covering PSS and OAEP
Add keyopt option to cms utilityAdd support for custom public key parameters in the cms utility usingthe keyopt switch Works for sign and also encrypt if recip is used
CMS RSAOAEP and RSAPSS supportExtend RSA ASN1 method to support CMS PSS signatures for both signand verifyFor signing the EVP_PKEY_CTX parameters are read and the appropriateCMS structures set upFor verification the CMS structures are analysed and the correspondingparameters in the EVP_PKEY_CTX setAlso add RSAOAEP supportFor encrypt the EVP_PKEY_CTX parameters are usedFor decrypt the CMS structure is uses to set the appropriate EVP_PKEY_CTXparameters
CMS public key parameter supportAdd support for customisation of CMS handling of signed and envelopeddata from custom public key parametersThis will provide support for RSAPSS and RSAOAEP but could also beapplied to other algorithms
Update to OAEP supportAdd OAEP ctrls to retrieve MD and label Return errors ifan attempt is made to set or retrieve OAEP parameters whenpadding mode is not OAEP
Add control to retrieve signature MD
Add new OID to pSpecified from PKCS1
Cleanup of custom extension stuffserverinfo rejects nonempty extensionsOmit extension if no relevant serverinfo dataImprove errorhandling in serverinfo callbackCosmetic cleanupss_client documentations_server documentationSSL_CTX_serverinfo documentationCleaup 1 and NULL callback handling for custom extensions, add testsCleanup ssl_rsac serverinfo codeWhitespace cleanupImprove comments in sslh for serverinfoWhitespaceCosmetic cleanupReject nonzerolen serverinfo extensionsWhitespaceMake it build
SPARC T4 DES support: fix typo
Optimize SPARC T4 MONTMUL supportImprove RSA sing performance by 2030 by: switching from floatingpoint to integer conditional moves; daisychaining sqrsqrsqrsqrsqrmul sequences; using MONTMUL even during powers table setup;
PARISC assembler pack: switch to bve in 64bit buildsPR: 3074
Add secure DSA nonce flagThis change adds the option to calculate ECDSA nonces by hashing themessage and private key along with entropy to avoid leaking the privatekey if the PRNG fails
Limit the number of empty records that will be processed consecutivelyin order to prevent ssl3_get_record from never returningReported by "oftc_must_be_destroyed" and George Kadianakis
Don't SEGFAULT when trying to export a public DSA key as a private key
This change alters the processing of invalid, RSA premaster secrets sothat bad encryptions are treated like random session keys in constanttime
Ignore onemakefile stuff
Document updates from wikiPR3071The primary changes made are: Updates to the "NAME" section of many pages to correctly reflect thefunctions defined on those pages This section is automatically parsedby the util/extractnamespl script, so if it is not correct thenrunning "man" will not correctly locate the right manual pages Updates to take account of where functions are now deprecated Full documentation of the ec sublibrary A number of other typo corrections and other minor tweaks
Exetended OAEP supportExtend OAEP support Generalise the OAEP padding functions to supportarbitrary digests Extend EVP_PKEY RSA method to handle the new OAEPpadding functions and add ctrls to set the additional parameters
Typo
Add support for arbitrary TLS extensionsContributed by Trevor Perrin
Add aesnisha256x86_64
aesnisha1x86_64pl: update performance data
aesnisha256x86_64pl: harmonize with latest sha512x86_64pl
sha1x86_64pl: add AVX2+BMI code path
sha512x86_64pl: upcomingAtomspecific optimization
sha[256|512]586pl: add more SIMD code paths
ghashx86_64pl: add Haswell performance data
x86cpuidpl: fix extended feature flags detection
Fix PSS signature printingFix PSS signature printing: consistently use 0x prefix for hex values forpadding length and trailer fields
Reencode with X509_CRL_ctx_sign too
Ensure that, when generating small primes, the result is actually of therequested size Fixes OpenSSL 2701This change does not address the cases of generating safe primes, orwhere the |add| parameter is nonNULLConflicts:crypto/bn/bnhcrypto/bn/bn_errc
Ensure that x0 mod 1  0
Add volatile qualifications to two blocks of inline asm to stop GCC fromeliminating them as dead codeBoth volatile and "memory" are used because of some concern that the compilermay still cache values across the asm block without it, and because this wassuch a painful debugging session that I wanted to ensure that it's neverrepeated
Remove added ;
Missing prototypes
crypto/bn/bn_expc: SPARC portability fix
aesnix86_64pl: optimize XTSPR: 3042
aesnisha1x86_64pl: Atomspecific optimization
sha512x86_64pl: +16 optimization for Atomand pending AVX2 changes
vpaesx86[_64]pl: minor Atomspecific optimization
Add AESSHA256 stitch
x86_64xlatepl: minor size/performance improvement
aesnix86_64pl: minor CTR performance improvement
Tests pass!
Ugly hack to avoid recompiling the same thing multiple times in parallel
Reencode certificates in X509_sign_ctxReencode certificates in X509_sign_ctx as well as X509_signThis was causing a problem in the x509 application when it modified anexisting certificate
bsaesarmv7pl: add bsaes_cbc_encrypt and bsaes_ctr32_encrypt_blocksSubmitted by: Ard Biesheuvel <ardbiesheuvel@linaroorg>Contributor claims ~50 improvement in CTR and ~9 in CBC decrypton CortexA15
bsaesarmv7pl: take it into build loop
Typo
Fix Windows linking error in GOST test case
crypto/modes/modes_lclh: let STRICT_ALIGNMENT be on ARMv7While ARMv7 in general is capable of unaligned access, not all instructionsactually are And trouble is that compiler doesn't seem to differentiatethose capable and incapable of unaligned access Side effect is that kernelgoes into endless loop retrying same instruction triggering unaligned trapProblem was observed in xts128c and ccm128c modules It's possible toresolve it by using volatile u32 casts, but letting STRICT_ALIGNMENTbe feels more appropriate
Suite B support for DTLS 12Check for Suite B support using method flags instead of version numbers:anything supporting TLS 12 cipher suites will also support Suite BReturn an error if an attempt to use DTLS 10 is made in Suite B mode
Always return errors in ssl3_get_client_helloIf we successfully match a cookie don't set return value to 2 as thisresults in other error conditions returning 2 as wellInstead set return value to 2 which can be checked later if everythingelse is OK
Dual DTLS version methodsAdd new methods DTLS__method which support both DTLS 10 and DTLS 12 andpick the highest version the peer supports during negotiationAs with SSL/TLS options can change this behaviour specificallySSL_OP_NO_DTLSv1 and SSL_OP_NO_DTLSv1_2
Set s>d1 to NULL after freeing it
Asm build portabilityDon't use Win32 specific options in mk1mfpl to build assembly languagefiles
Make sure all tests are actually run, plus some fixups for things thatturn out to be made somewhere by existing Makefiles
Use original alltests target for definitive test list
Missing semicolon
Fix noncopy buildsOnly use MMD and sinclude in copy builds: other platforms don'tsupport them
Missing file
Make executable
Helper scripts for one makefile build
Merge, go back to copyifdifferent
Fix test_ss
Add new asm target
Show start/end of tests
Avoid collisions
Make session ID test work
Make S/MIME test work
Make RSA test work
Make PKCS7 test work
Make OCSP test work
More progress towards working tests
Get closer to a working single Makefile with test support
Fix warnings
Make TLS 12 ciphers work againSince s>method does not reflect the final client version when a clienthello is sent for SSLv23_client_method it can't be relied on to indicateif TLS 12 ciphers should be used So use the client version instead
cryptlibc: fix typo in OPENSSL_showfatal
aesnix86_64pl: optimize CBC decryptGive CBC decrypt approximately same treatment as to CTR and collect 25
e_aesc: reserve for future extensions
gcm128c: fix linking problems in 32bit Windows build
dest4sparcv9pl: add clarification comment
evpteststxt: add XTS test vectors
Use $PERL when calling scripts in mk1mfpl
Typo
Add support for SPARC T4 DES opcode
des_encm4: add missing includeSubmitted by: David Miller
Add AESNI GCM stitch
aesnix86_64pl: fix typo and optimize small block performance
Call RAND_cleanup in openssl applicationcherry picked from commit 944bc29f9004cf8851427ebfa83ee70b8399da57
Enable TLS 12 ciphers in DTLS 12Port TLS 12 GCM code to DTLS Enable use of TLS 12 only ciphers when inDTLS 12 mode too
Update fixed DH requirementsThe relaxed signing requirements for fixed DH certificates apply to DTLS 12too
DTLS 12 cached record supportAdd DTLS12 support for cached records when computing handshake macsinstead of the MD5+SHA1 case for DTLS < 12 this is a port of theequivalent TLS 12 code to DTLS
Make binary curve ASN1 work in FIPS modeDon't check for binary curves by checking methods: the values willbe different in FIPS mode as they are redirected to the validated moduleversion
Provisional DTLS 12 supportAdd correct flags for DTLS 12, update s_server and s_client to handleDTLS 12 methodsCurrently no support for version negotiation: ie if client/server selectsDTLS 12 it is that or nothing
Remove versions test from dtls1_buffer_messageSince this is always called from DTLS code it is safe to assume the headerlength should be the DTLS value This avoids the need to check the versionnumber and should work with any version of DTLS not just 10
Extend DTLS method macrosExtend DTLS method creation macros to support version numbers and encryptionmethods Update existing code
Enable various DTLS extensionsSome TLS extensions were disabled for DTLS Possibly because they causedproblems with the old duplicated code Enable them again
aesnix86_64pl: optimize CTR even furtherBased on suggestions from Shay Gueron and Vlad KrasnovPR: 3021
ghashx86_64pl: add AVX code path
aesnix86_64pl: optimize CTR even further
ghashx86_64pl: minor optimization
Disable compression for DTLSThe only standard compression method is stateful and is incompatible withDTLS
Typo
e_aes_cbc_hmac_sha1c: fix rare bad record mac on AESNI plaformsPR: 3002
Use enc_flags when deciding protocol variationsUse the enc_flags field to determine whether we should use explicit IV,signature algorithms or SHA256 default PRF instead of hard coding whichversions support each requirement
Use appropriate versions of SSL3_ENC_METHOD
DTLS revisionRevise DTLS code There was a lot of code duplication in theDTLS code that generates records This makes it harder to maintain andsometimes a TLS update is omitted by accident from the DTLS codeSpecifically almost all of the record generation functions have code likethis:some_pointer  buffer + HANDSHAKE_HEADER_LENGTH; Record creation stuff set_handshake_headerssl, SSL_MT_SOMETHING, message_len;write_handshake_messagessl;Where the "Record creation stuff" is identical between SSL/TLS and DTLS orin some cases has very minor differencesBy adding a few fields to SSL3_ENC to include the header length, some flagsand function pointers for handshake header setting and handshake writing thecode can cope with both casesNote: although this passes "make test" and some simple DTLS tests there maybe some minor differences in the DTLS code that have to be accounted for
Avoid unnecessary fragmentation
Encode INTEGER correctlyIf an ASN1_INTEGER structure is allocated but not explicitly set encodeit as zero: don't generate an invalid zero length INTEGERcherry picked from commit 1643edc63c3e15b6db5a15a728bc288f2cc2bbc7
Typocherry picked from commit 1546fb780bc11556a18d70c5fb29af4a9d5beaff
DTLS trace supportAdd DTLS record header parsing, different client hello format and addHelloVerifyRequest message typeAdd code to d1_pktc to send message headers to the message callback
evpteststxt: additional GCM test vectors
GCM and CCM test supportAdd code to support GCM an CCM modes in evp_test On encrypt thiswill compare the expected ciphertext and tag On decrypt it willcompare the expected plaintext: tag comparison is done internallyAdd a simple CCM test case and convert all tests from crypto/modes/gcm128c
Add CCM ciphers to tables
ghashx86_64pl: fix length handling bugThanks to Shay Gueron & Vlad Krasnov for report
typo
Initial CCM codeSimple example of CCM code use: translated from the FIPS self tests
Use CFLAG for LFLAGS instead of the nonexistent CFLAGS
Ignore mk1mfpl output directories
Remove unused variable
Actually comment out the cpuid asm!
Merge branch 'master' of opensslnet:opensslConflicts:util/mk1mfpl
Fix WIN32 buildMake assembly language handling conditional on the "copy" platformas Windows does its own thing here
x86cpuidpl: make it work with older CPUsPR: 3005
Only copy headers if they've changed
Don't make CPUID stuff twice
Handle assembler files
Missing MINFO generation
Override local vars for MINFO build
Allow variables to be overridden on the command line
Take the first definition of a variable
Use "copy" instead of "auto"
Remove pointless diagnostic
Preserve the C compiler
Inherit CFLAGS when plaform is "auto"
Include correctly
Remove empty command
Spelling
Add dependency on destination directory
Spelling
Add reallyclean target
x86_64gf2mpl: fix typo
x86_64gf2mpl: add missing Windows build fix for 2963PR: 3004
Ignore MINFO
Missing files target
Add function CMS_RecipientInfo_encryptAdd CMS_RecipientInfo_encrypt: this function encrypts an existing contentencryption key to match the key in the RecipientInfo structure: this isuseful if a new recpient is added to and existing enveloped data structureAdd documentation
Fix error codes
Demo code for SSL_CONF APITwo example programs one for command line argument processing andone for configuration file processing
Update SSL_CONF docsFix some typos and update version number first added: it has now beenbackported to OpenSSL 102
Fix ignored return value warningsNot sure why I am getting these now and not before
make depend
Fix POD errors to stop make install_docs dying with pod2man 250+podlators 250 has switched to dying on POD syntax errors This meansthat a bunch of longstanding erroneous POD in the openssl documentationnow leads to fatal errors from pod2man, halting installationUnfortunately POD constraints mean that you have to sort numeric listsin ascending order if they start with 1: you cannot do 1, 0, 2 even ifyou want 1 to appear first I've reshuffled such alas, I wish therewere a better way but I don't know of one
sha256586pl: code refresh
sha1586pl: code refresh
ghashx86[_64]pl: code refresh
[aesni]sha1x86_64pl: code refresh
sha512x86_64pl: add AVX2 code path
bn_nistc: work around clang 30 bug
Upate FAQAdd description of "allocate and encode" operation for ASN1 routinesDocument how versioning will for after the letter release reachesy
Check DTLS_BAD_VER for version numberThe version check for DTLS1_VERSION was redundant asDTLS1_VERSION > TLS1_1_VERSION, however we do need tocheck for DTLS1_BAD_VER for compatibilityPR:2984
Fix in ssltest is nossl2 configuredcherry picked from commit cbf9b4aed3e209fe8a39e1d6f55aaf46d1369dc4
update FAQ
FAQ/README: we are now using Git instead of CVScherry picked from commit f88dbb8385c199a2a28e9525c6bba3a64bda96af
sparccpuidS: work around emulator bug on T1
s3_cbcc: make CBC_MAC_ROTATE_IN_PLACE universal
s3_cbcc: get rid of expensive divisions
s3_cbcc: fix warning [in Windows build]
e_aes_cbc_hmac_sha1c: align calculated MAC at cache lineIt also ensures that valgring is happy
ssl/: revert "remove SSL_RECORD>orig_len" and merge "fix IV"Revert is appropriate because binary compatibility is not an issuein 11
Fix for EXPRC2CBCMD5MD5 should use little endian order Fortunately the only ciphersuiteaffected is EXPRC2CBCMD5 TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 whichis a rarely used export grade ciphersuitecherry picked from commit f306b87d766e6ecf30824635c7c395b67cff9dbc
e_aes_cbc_hmac_sha1c: cleanse temporary copy of HMAC secretcherry picked from commit 529d27ea472fc2c7ba9190a15a58cb84012d4ec6
e_aes_cbc_hmac_sha1c: address the CBC decrypt timing issuesAddress CBC decrypt timing issues and reenable the AESNI+SHA1 stitchcherry picked from commit 125093b59f3c2a2d33785b5563d929d0472f1721
ssl/: remove SSL3_RECORD>orig_len to restore binary compatibilityKludge alert This is arranged by passing padding length in unusedbits of SSL3_RECORD>type, so that orig_len can be reconstructedcherry picked from commit 8bfd4c659f180a6ce34f21c0e62956b362067fba
Don't access EVP_MD_CTX internals directlycherry picked from commit 04e45b52ee3be81121359cc1198fd01e38096e9f
s3/s3_cbcc: allow for compilations with NO_SHA256|512cherry picked from commit d5371324d978e4096bf99b9d0fe71b2cb65d9dc8
ssl/s3_cbcc: md_state alignment portability fixRISCs are picky and alignment granted by compiler for md_state can beinsufficient for SHA512cherry picked from commit 36260233e7e3396feed884d3f501283e0453c04f
ssl/s3_cbcc: uint64_t portability fixBreak dependency on uint64_t It's possible to declare bits asunsigned int, because TLS packets are limited in size and 32bitvalue can't overflowcherry picked from commit cab13fc8473856a43556d41d8dac5605f4ba1f91
typocherry picked from commit 34ab3c8c711ff79c2b768f0b17e4b2a78fd1df5d
Add ordinal for CRYPTO_memcmp: since this will affect multiplebranches it needs to be in a "gap"cherry picked from commit 81ce0e14e72e8e255ad1bd9c7cfaa47a6291919c
Timing fix mitigation for FIPS modeWe have to use EVP in FIPS mode so we can only partially mitigatetiming differencesMake an extra call to EVP_DigestSignUpdate to hash additonal blocksto cover any timing differences caused by removal of paddingcherry picked from commit b908e88ec15aa0a74805e3f2236fc4f83f2789c2
Oops Add missing filecherry picked from commit 014265eb02e26f35c8db58e2ccbf100b0b2f0072
Update DTLS code to match CBC decoding in TLSThis change updates the DTLS code to match the constanttime CBCbehaviour in the TLScherry picked from commit 9f27de170d1b7bef3d46d41382dc4dafde8b3900
Don't crash when processing a zerolength, TLS > 11 recordThe previous CBC patch was bugged in that there was a path through encin s3_pktc/d1_pktc which didn't set orig_len orig_len would be leftat the previous value which could suggest that the packet was asufficient length when it wasn'tcherry picked from commit 6cb19b7681f600b2f165e4adc57547b097b475fd
Make CBC decoding constant timeThis patch makes the decoding of SSLv3 and TLS CBC records constanttime Without this, a timing sidechannel can be used to build a paddingoracle and mount Vaudenay's attackThis patch also disables the stitched AESNI+SHA mode pending a similarfix to that codeIn order to be easy to backport, this change is implemented in ssl/,rather than as a generic AEAD mode In the future this should be changedaround so that HMAC isn't in ssl/, but crypto/ as FIPS expectscherry picked from commit e130841bccfc0bb9da254dc84e23bc6a1c78a64e
Add and use a constanttime memcmpThis change adds CRYPTO_memcmp, which compares two vectors of bytes inan amount of time that's independent of their contents It also changesseveral MAC compares in the code to use this over the standard memcmp,which may leak information about the size of a matching prefixcherry picked from commit 2ee798880a246d648ecddadc5b91367bee4a5d98
Fix for trace code: SSL3 doesn't include a length value forencrypted premaster secret value
x86_64 assembly pack: keep making Windows build more robustPR: 2963 and a number of others
Don't use C++ style comments
Fix warning: lenmax isn't used any more
Don't include comph in cmd_cdc if OPENSSL_NO_COMP set
fix domd
x86_64 assembly pack: make Windows build more robustPR: 2963 and a number of others
TABLE update
Configure: update linuxmips lines
bn/asm/mipspl: hardwire local call to bn_div_words
sha512ppcpl: minimize stack frame
gost2814789tc: portability fixes
Fix warnings
Don't include comph if nocomp set
Improve WINCE supportSubmitted by: Pierre Delaage
Merge branch 'master' of opensslnet:openssl
More gitignore adjustments
Merge branch 'master' of opensslnet:openssl
Remove kludge to use RC4 asm
Build/test cleanly on MacOS
gost_cryptc: add assertionsSubmitted by: Seguei LeontievPR: 2821
engines/ccgost: add test caseSubmitted by: Serguei LeontievPR: 2821
sha512ppcpl: add PPC32 code, >2x improvement on inorder cores
Remove extraneous brackets clang doesn't like them
Can't check a size_t for < 0
Make "make depend" work on MacOS out of the box
gitignore adjustments
Typo PR2959
Fix some clang warnings
Correct EVP_PKEY_verifyrecover to EVP_PKEY_verify_recover RT 2955
Change default bits to 1024
Add some missing files, make paths absolute
Fix warning
Initial gitignore
make nocomp compile
make JPAKE work again, fix memory leaks
stop warning when compiling with nocomp
Portability fix: use BIO_snprintf and pick up strcasecmp alternativedefinitions from e_osh
missing tab
typo
Fix tocsp: we don't need trust_other any moreFix typo
Make partial chain checking work if we only have the EE certificate inthe trust store
add missing newline
revert OCSP_basic_verify changes: they aren't needed now we support partial chain verification and can pass verify options to ocsp utility
Update test OCSP script "tocsp" to use shell functions and to useDecember 17th as check date to avoid certificate expiry errors
gost_cryptc: more intuitive ceiling
correct CHANGES
engines/cchost/gost_cryptc: fix typo
engines/e_capic: fix typoSubmitted by: Pierre Delaage
engine/cchost: fix bugsPR: 2821Submitted by: Dmitry Belyavsky, Serguei Leontiev
dso/dso_win32c: fix compiler warning
util/pl/VC32pl fix typo
Use client version when deciding which cipher suites to disable
util/pl/VC32pl: refresh, switch to ws2, add crypt32, fix typo based onsuggestions from Pierre Delaage
VC32pl: fix typoSubmitted by: Pierre Delaage
d1_libc,bss_dgramc: eliminate dependency on _ftime
add rmd option to set OCSP response signing digest
Check chain is not NULL before assuming we have a validated chainThe modification to the OCSP helper purpose breaks normal OCSP verificationIt is no longer needed now we can trust partial chains
Return success when the responder is activeDon't verify our own responses
typo
Add support for '' as input and output filenames in ocsp utilityRecognise verification arguments
oops, revert, committed in error
apps/ocspc
Documentation improvements by Chris Palmer Google
fips/fipsld: improve crosscompile support
Use new partial chain flag instead of modifying input parameters
New verify flag to return success if we have any certificate in thetrusted store instead of the default which is to return an error ifwe can't build the complete chain
Document pubkey
Improve my 64bit debug target
add crl_download option to s_server
add cert_chain option to s_client
Make openssl verify return errors
Update ignores
Tabification Remove accidental duplication
revert SUITEB128ONLY patch, anything wanting to use P384 can use SUITEB128 instead
add badsig option to ocsp utility too
allow ECDSA+SHA384 signature algorithm in SUITEB128ONLY mode
send out the raw SSL/TLS headers to the msg_callback and display them in SSL_trace
Fix OCSP checking
typo
really fix automatic ;
documentation fixes
fix handling of "automatic" in file mode
Add code to download CRLs based on CRLDP extensionJust a sample, real world applications would have to be cleverer
remove print_ssl_cert_checks from openssl application: it is no longer used
Fix two bugs which affect delta CRL handling:Use 1 to check all extensions in CRLsAlways set flag for freshest CRL
Integrate host, email and IP address checks into X509_verifyAdd new verify options to set checksRemove previous check commands from s_client and s_server
aess390xpl: fix XTS bugs in z196specific code path
don't print verbose policy check messages when quiet is selected even on error
ghashsparcv9pl: shave off one more xmulx, improve T3 performance by 7
initial support for delta CRL generations by diffing two full CRLs
make subj always override config file
check mval for NULL too
fix leak
oops, really check brief mode only ;
don't check errno is zero, just print out message
if no error code and brief selected print out connection closed instead of read error
add badsig option to corrupt CRL signatures for testing too
New option to add CRLs for s_client and s_server
add option to get a certificate or CRL from a URL
return error if Suite B mode is selected and TLS 12 can't be used Correct error coded
cryptlibc: fix logical error
aesnix86_64pl: CTR face lift, +25 on Bulldozer
aess390xpl: harmonize softwareonly code path [and minor optimization]
Add new test option set the version in generated certificates: thisis needed to test some profiles/protocols which reject certificateswith unsupported versions
PR: 2803Submitted by: jeanetienneschwartz@bullnetIn OCSP_basic_varify return an error if X509_STORE_CTX_init fails
add wrapper function for certificate download
constify
Generalise OCSP I/O functions to support dowloading of other ASN1structures using HTTP Add wrapper function to handle CRL download
C64x+ assembly pack: improve EABI support
Update support for Intel compiler: add linuxx86_64icc and fix problems
New functions to set lookup_crls callback and to retrieve internal X509_STOREfrom X509_STORE_CTX
Print out point format list for clients too
Use default point formats extension for server side as well as clientside, if possibleDon't advertise compressed char2 for SuiteB as it is not supported
change inaccurate error message
set auto ecdh parameter selction for Suite B
set cmdline flag in s_server
option to output corrupted signature in certificates for testing purposes
AES for SPARC T4: add XTS, reorder subroutines to improve TLB locality
add Suite B 128 bit mode offering only combination 2
Don't display messages about verify depth in s_server if quiet it setAdd support for separate verify and chain stores in s_client
Add support for printing out and retrieving EC point formats extension
reject zero length point format list or supported curves extensions
support quiet with msg or trace
curves can be set in both client and server
use correct return values when callin cmd
only use a default curve if not already set
Reorganise parameters for OPENSSL_gmtime_diffMake ASN1_UTCTIME_cmp_time_t more robust by using the new time functions
Submitted by: Florian Weimer <fweimer@redhatcom>PR: 2909Update test cases to cover internal error return valuesRemove IDNA wildcard filter
PR: 2908Submitted by: Dmitry Belyavsky <beldmit@gmailcom>Fix DH double free if parameter generation fails
fix printout of expiry days if enddate is used in ca
don't use psec or pdays if NULL
first parameter is difference in days, not years
reorganise SSL_CONF_cmd manual page and update some links
fix leaks
with rev close connection if client sends "CLOSE"
update usage messages
correct docs
document trace and msgfile options
update docs for s_server/s_client
make depend
new function ASN1_TIME_diff to calculate difference between two ASN1_TIME structures
x86_64gccc: resore early clobber constraintSubmitted by: Florian Weimer
make depend
don't call gethostbyname if OPENSSL_SSL_DEBUG_BROKEN_PROTOCOL is set
remove obsolete code
fix typo and warning
clarify docs
fix manual page file name
document naccept option
add naccept <n> option to s_server to automatically exit after <n> connections
PR: 2880Submitted by: "Florian Rchel" <florianruechel@ruhrunibochumde>Correctly handle local machine keys in the capi ENGINE
PR: 2909Contributed by: Florian Weimer <fweimer@redhatcom>Fixes to X509 hostname and email address checking Wildcard matching supportNew test program and manual page
remove redundant code from demo
cryptlibc: revert typo
Extend OPENSSL_ia32cap_P with extra word to accomodate AVX2 capability
perlasm/sparcv9_modespl: addendum to commit22966
fix error messages
Delegate command line handling for many common options in s_client/s_serverto the SSL_CONF APIsThis is complicated a little because the SSL_CTX structure is not availablewhen the command line is processed: so just check syntax of commands initiallyand store them, ready to apply later
initial decription of GCM/CCM usage via EVP
Support for SPARC T4 MONT[MUL|SQR] instructionsSubmitted by: David Miller, Andy Polyakov
fix typos in SSL_CONF documentation
add SSL_CONF functions and documentation
typo
update ciphers documentation to indicate implemented fixed DH ciphersuites
initial update of ciphers doc
new command line option stdname to ciphers utility
add "missing" TLSv12 cipher alias
aesx86_64pl: Atomspecific optimizations, +10vpaesx86_64pl: minor performance squeeze
aes586pl: Atomspecific optimization, +44/29, minor improvement on othersvpaesx86pl: minor performance squeeze
ppccapc: fix typo
ppccapc: restrict features on AIX 5
bn_wordc: fix overflow bug in BN_add_word
new feature: if ctxNULL in SSL_CTX_ctrl perform syntax checking only for some operations currently curves and signature algorithms
contify
crypto/modes: even more strict aliasing fixes [and fix bug in cbc128c fromprevious cbc128c commit]
More strict aliasing fix
correct error function code
cbc128c: fix strict aliasing warning
e_camilliac: remove copynpaste artifact, EVP_CIPH_FLAG_FIPS, andleave comment about CTR mode
ghashsparcv9pl: 22 improvement on T4
Remove unused static function
Fix gcc 48 warning strict aliasing violation
mk1mfpl: correct flags
e_osh: keep stdin redifinitions to "normal" Windows
util/fipslinkpl: further adjustments
util/fipslinkpl: fix typo
e_osh: skip redundant headers in fipscanister build
util/fipslinkpl: allow for singlestep link
util/pl/VC32pl: make fipscanisterlib universally usable
typo
test_t4: cover even Camellia
SPARCv9 assembly pack: harmonize ABI handling so that it's handled in oneplace at a time, by preprocessor in S case and perl  in s
[aes|cmll]t4sparcv9pl: unify argument handling
perlasm/sparcv9_modespl: fix typo in IV save code and switch to lessaggressive ASI
oops, add missing asn_mstblc
ghashsparcv9pl: add VIS3 code path
New config module for string tables This can be used to add newmulti string components as used in DN fields or request attributesor change the values of existing ones
use correct year automatically
linuxpcc: make it more robust and recognize KERNEL_BITS variable
Add VIS3capable sparcv9gf2m module
Add VIS3 Montgomery multiplication
fix ASN1_STRING_TABLE_add so it can override existing string table values
fix error code
add simple AES GCM code example
Don't require tag before ciphertext in AESGCM mode
aix[64]cc: get MT support right gcc targets are not affected
sparcv9_modespl: membars are reported as musthave
md5sparcv9pl: avoid asi modifications, improve short input performanceby 3020
[md5|sha1|sha512]sparcv9pl: "cooperative" optimizations based onsuggestions from David Miller
[aes|cmll]t4sparcv9pl: addendum to previous sparcv9_modespl commit
perlasm/sparcv9_modespl: "cooperative" optimizations based on suggestionsfrom David Miller
Add SPARC T4 Camellia supportSubmitted by: David Miller
aest4sparcv9pl: split it to AESspecific and reusable part
oops, fix compilation errors in s_server
New functions to check a hostname email or IP address against acertificate Add options to s_client, s_server and x509 utilitiesto print results of checks
Add SPARC T4 AES supportSubmitted by: David Miller
Fix EC_KEY initialization raceSubmitted by: Adam Langley
If OPENSSL_SSL_DEBUG_BROKEN_PROTOCOL is set allow the use of "SCSV" asa ciphersuite to position the SCSV value in different places for testingpurposes
sha[1|512]sparcv9pl: add hardware SPARC T4 supportSubmitted by: David Miller
md5sparcv9pl: add hardware SPARC T4 supportSubmitted by: David Miller
sparc_archh: add assembler helpers and make it work on SolarisSubmitted by: David Miller
md5sparcv9pl: more accurate performance result
Fix Valgrind warningSubmitted by: Adam Langley
 Configure: make the debuglevittelinux{elf,noasm} less extreme
Add md5sparcv9pl
sparcv9capc: add SPARCT4 feature detectionSubmitted by: David Miller
 ssl/t1_encc tls1_change_cipher_state: Stupid bug  Fortunately indebugging code that's seldom used
config: detect linuxmips targets
Configure: allow for compiler options starting with double dash
MIPS assembly pack: add support for SmartMIPS ASE
Fix warningSubmitted by: Chromium Authors
Configure: add MIPS targets
MIPS assembly pack: add MIPS[32|64]R2 code
aesmipspl: interleave load and integer instructions for better performance
sha512sparcv9pl: fix binutils compilation errorSubmitted by: David Miller
e_aesc: uninitialized variable in aes_ccm_init_keyPR: 2874Submitted by: Tomas Mraz
Add rev test option to s_server to just reverse order of characters receivedby client and send back to server Also prints an abbreviated summary ofthe connection parameters
Add brief option to s_client and s_server to summarise connection detailsNew option verify_quiet to shut up the verify callback unless there isan error
Add ctrl and utility functions to retrieve raw cipher list sent by client inclient hello message Previously this could only be retrieved on an initialconnection and it was impossible to determine the cipher IDs of any uknownciphersuites
enhance EC method to support setting curve type when generating keys and add parameter encoding option
fix memory leak
Minor enhancement to PR2836 fix Instead of modifying SSL_get_certificatechange the current certificate in s>cert>key to the one used and thenSSL_get_certificate and SSL_get_privatekey will automatically work
Call OCSP Stapling callback after ciphersuite has been chosen, so theright response is stapled Also change SSL_get_certificate so itreturns the certificate actually sent  Seehttp://rtopensslorg/Ticket/Displayhtml?id2836
fix memory leak
update README
Extend certificate creation examples to include CRL generation and samplescripts running the test OCSP responder
New valid option to add a certificate to the ca indextxt that is valid and not revoked
new ctrl to retrive value of received temporary key in server key exchange message, print out details in s_client
store and print out message digest peer signed with in TLS 12
bsaesarmv7pl: closest shave While 03 cpb improvement on S4 appearsinsignificant, it's actually 4 cycles less for 14 instructions sequence!
bsaesarmv7pl: even closer shave
bsaesarmv7pl: minor performance squeeze on Snapdragon S4
sha512armv4pl: optimize for Snapdragon S4
bn_lclh: gcc removed support for "h" constraint, which broke inlineassembler
Don't load GOST ENGINE if it is already loadedMultiple copies of the ENGINE will cause problems when it is cleaned up asthe methods are stored in static structures which will be overwritten andfreed up more than onceSet static methods to NULL when the ENGINE is freed so it can be reloaded
perform sanity checks on server certificate type as soon as it is received instead of waiting until server key exchange
make EC test certificates usable for ECDH
give more meaningful error if presented with wrong certificate type by server
x86cpuidpl: hide symbols [backport from x86_64]
TABLE update addendum to commit22775
Harmonize CHANGES in HEAD
Add linuxx32 target
Add compilation flag to disable certain protocol checks and allow use ofsome invalid operations for testing purposes Currently this can be usedto sign using digests the peer doesn't support, EC curves the peerdoesn't support and use certificates which don't match the type associatedwith a ciphersuite
oops, typo
New compile time option OPENSSL_SSL_TRACE_CRYPTO, when set this passesall derived keys to the message callbackAdd code to SSL_trace to include support for printing out keys
update debugsteve configurations
PR: 2786Reported by: Tomas Mraz <tmraz@redhatcom>Treat a NULL value passed to drbg_free_entropy callback as nonop Thiscan happen if the call to fips_get_entropy fails
sha1armv4largepl: comply with ABI
Configure: add mipsmont to MIPS32 builds
MIPS assembly pack: assign default value to $flavour
Oops  didn't mean to change Makefile on previous submit
Enable message names for TLS 11, 12 with msg
Add three Suite B modes to TLS code, supporting RFC6460
bss_dgramc: fix compilation failure and warning on Windows withcontemporary SDK
gosthashc: use memmove in circle_xor8, as input pointers can be equalPR: 2858
/Configure: libcryptoa can grow to many GB because of ar bugPR: 2838
gcm128c: fix AADonly case with AAD length not divisible by 16PR: 2859Submitted by: John Foley
sha512x86_64pl: revert previous change and solve the problem throughperlasm/x86_64xlatepl instead
sha512x86_64pl: minimum gas requirement for AMD XOP
update ordinals
Rename Suite B functions for consistencyNew function X509_chain_up_ref to dup and up the reference count ofa STACK_OFX509: replace equivalent functionality in several placesby the equivalent call
add suite B chain validation flags and associated verify errors
Make tls1_check_chain return a set of flags indicating checks passedby a certificate chain Add additional tests to handle clientcertificates: checks for matching certificate type and issuer namecomparisonPrint out results of checks for each candidate chain tested ins_server/s_client
Abort handshake if signature algorithm used not supported by peer
check EC tmp key matches preferences
typo
Add support for certificate stores in CERT structure This makes itpossible to have different stores per SSL structure or one store inthe parent SSL_CTX Include distint stores for certificate chainverification and chain building New ctrl SSL_CTRL_BUILD_CERT_CHAINto build and store a certificate chain in CERT structure: returingan error if the chain cannot be built: this will allow applicationsto test if a chain is correctly configuredNote: if the CERT based stores are not set then the parent SSL_CTXstore is used to retain compatibility with existing behaviour
update NEWS
set ciphers to NULL before calling cert_cb
stop warning
add ssl_loclh to err header files, rebuild ssl error strings
Don't ignore \! reference count in X509_STORE_free
New function ssl_set_client_disabled to set masks for any ciphersuitesthat are disabled for this session as opposed to always disabled byconfiguration
reinclude cryptoh: this is needed in HEAD only to get the __fips_constseg definition
update trace messages
sha1[586|x86_64]pl: shave off one instruction from body_40_59, it's2 less instructions in SIMD code paths, so 2 improvement in average:
mk1mfpl: replace chop to make it work in mixture of perls for Windows
test_aesni: harmonize with AESNI support at EVP layer
wpx86_64pl: ~10 performance improvement
sha512s390xpl: lingering comment update
sha512ia64pl: 1520 performance improvement
sha256armv4pl: 4 performance improvement
sha1s390xpl: lingering comment update
rc5h: stop wasting space on 64bit platforms [breaks binary compatibility!]
wpmmxpl: ~10 performance improvement
sha512586pl: optimize SSE2 code path, +57 on most CPUs, +13 on AMD K8
sha1586pl: let masm compile AVX code
x86gaspl: treat OPENSSL_ia32cap_P accordingly to hidden status
Add new ctrl to retrieve client certificate types, print outdetails in s_clientAlso add ctrl to set client certificate types If not used sensible valueswill be included based on supported signature algorithms: for example ifwe don't include any DSA signing algorithms the DSA certificate type isomittedFix restriction in old code where certificate types would be truncatedif it exceeded TLS_CT_NUMBER
Install srtph
Add d1_srtp and t1_trce
Add the missing modules for Camellia, as well as dh_rfc5114 and evp_cnf
Harmonise symhacksh in this branch with lower versionsAdd aliases for SSL_CTX_set_not_resumable_session_callback andSSL_set_not_resumable_session_callback on top of that
add missing evp_cnfc file
PR: 2840Reported by: David McCullough <david_mccullough@mcafeecom>Restore fips configuration module from 098
Fix memory leakAlways perform nexproto callback argument initialisation in s_serverotherwise we use uninitialised data if nocert is specified
cert_flags is unsigned
add support for client certificate callbak, fix memory leak
new function SSL_is_server to which returns 1 is the corresponding SSL context is for a server
no need to check s>server as default_nid is never used for TLS 12 client authentication
Separate client and server permitted signature algorithm support: by defaultthe permitted signature algorithms for server and client authenticationare the same but it is now possible to set different algorithms for clientauthentication only
bn_nistc: compensate for VC bug [with optimization off!]PR: 2837
crypto/bn/h: move PTR_SIZE_INT to private header
remove unnecessary attempt to automatically call OPENSSL_init
Fix Win32 build
recognise OPENSSL_NO_SSL_TRACE
bss_dgramc: fix typos in Windows code
sha256586pl: fix typos
Add certificate callback If set this is called whenever a certificateis required by client or server An application can decide whichcertificate chain to present based on arbitrary criteria: for examplesupported signature algorithms Add very simple example to s_serverThis fixes many of the problems and restrictions of the existing clientcertificate callback: for example you can now clear existing certificatesand specify the whole chain
Function tls1_check_ec_server_key is now redundant as we makeappropriate checks in tls1_check_chain
Add new "valid_flags" field to CERT_PKEY structure which determines whatthe certificate can be used for if anything Set valid_flags fieldin new tls1_check_chain function Simplify ssl_set_cert_masks which usedto have similar checks in itAdd new "cert_flags" field to CERT structure and include a "strict mode"This enforces some TLS certificate requirements such as only permittingcertificate signature algorithms contained in the supported algorithmsextension which some implementations ignore: this option should be usedwith caution as it could cause interoperability issues
don't use pseudo digests for default values of keys
x86_64 assembly pack: make it possible to compile with Perl located onpath with spacesPR: 2835
sha512x86_64pl: fix typo
Reorganise supported signature algorithm extension processingOnly store encoded versions of peer and configured signature algorithmsDetermine shared signature algorithms and cache the result along with NIDequivalents of each algorithm
sha512x86_64pl: add SIMD code paths
Add support for application defined signature algorithms for use withTLS v12 These are sent as an extension for clients and during a certificaterequest for serversTODO: add support for shared signature algorithms, respect shared algorithmswhen deciding which ciphersuites and certificates to permit
oops, add debug_decrypt option which was accidenatally left out
sha512x86_64pl: fix typo
sha256586pl: fix linking error
fix clashing error code
Make it possible to delete all certificates from an SSL structure
Initial record tracing code Print out all fields in SSL/TLS recordsfor debugging purposes Needs "enablessltrace" configuration option
New functions to retrieve certificate signatures and signature OID NID
sha256tc: make sure unrolled loop is tested
sha256586pl: add AVX and XOP code paths
sha256586pl: squeeze some more, most notably ~10 on Nehalem
x86[_64] assembly pack: update benchmark results
print out issuer and subject unique identifier fields in certificates
bss_dgramc: add BIO_CTRL_DGRAM_SET_DONT_FRAGPR: 2830Submitted by: Robin Seggelmann
bss_dgramc: make getsockopt work in cases when optlen is 64bit value
Fix memory leak
b_sockc: make getsockopt work in cases when optlen is 64bit value
Rearrange and test authz extension
Fix memory leak
Parse authz correctly
Revert random changes from commit22606
Version skew reduction: trivia I hope
RFC 5878 support
Build on FreeBSD with gcc 46
sha256586pl: full unroll to deliver additional ~16, add Sandy Bridgespecific code path
sha512x86_64pl: >5 better performance
aesnix86_64pl: make it possibel to use in Linux kernel
sha256586pl: tune away regression on Nehalem core and incidentallyimprove performance on Atom and P4
sha256586pl optimization
s2_clntc: compensate for compiler bug
ppccapc: assume no features under 32bit AIX kernelPR: 2810
PR: 2813Reported by: Constantine Sapuntzakis <csapuntz@gmailcom>Fix possible deadlock when decoding public keys
PR: 2811Reported by: Phil Pennock <openssldev@spodhuisorg>Make renegotiation work for TLS 12, 11 by not using a lower recordversion client hello workaround if renegotiating
Fix warning
Padlock doesn't build I don't even know what it is
PR: 2806Submitted by: PK <runningdoglackey@yahoocom>Correct ciphersuite signature algorithm definitions
Sanity check record length before skipping explicit IV in TLS 12, 11 andDTLS to fix DoS attackThanks to Codenomicon for discovering this issue using FuzzoMaticfuzzing as a service testing platformCVE20122333
update FAQ
Reported by: Solar Designer of OpenwallMake sure tkeylen is initialised properly when encrypting CMS messages
Correct environment variable is OPENSSL_ALLOW_PROXY_CERTS
perlasm: fix symptomless bugs, missing semicolons and 'my' declarations
ppccpuidpl: branch hints in OPENSSL_cleanse impact small block performanceof digest algorithms, mosty SHA, on Power7 Mystery of century, why SHA,why slower algorithm are affected morePR: 2794Submitted by: Ashley Lai
Don't try to use unvalidated composite ciphers in FIPS mode
update NEWS
update FAQ
CHANGES: clarify
CHANGES: fix typos and clarify
Change value of SSL_OP_NO_TLSv1_1 to avoid clash with SSL_OP_ALL andOpenSSL 100 Add CHANGES entry noting the consequences
s23_clntc: ensure interoperability by maitaining client "version capability"vector contiguousPR: 2802
Submitted by: Peter Sylvester <petersylvester@edelwebfr>Reviewed by: steveImproved localisation of TLS extension handling and code tidy
oops, not yet ;
update NEWS
objxrefpl: improve portability
correct error code
check correctness of errors before updating them so we don't get bogus errors added
correct old FAQ answers
PR: 2239Submitted by: Dominik Oepen <oepen@informatikhuberlinde>Add Brainpool curves from RFC5639Original patch by Annie Yousar <ayousar@informatikhuberlinde>
e_rc4_hmac_md5c: last commit was inappropriate for nonx86[_64] platformsPR: 2792
Check for potentially exploitable overflows in asn1_d2i_read_bioBUF_mem_grow and BUF_mem_grow_clean Refuse attempts to shrink bufferin CRYPTO_realloc_cleanThanks to Tavis Ormandy, Google Security Team, for discovering thisissue and to Adam Langley <agl@chromiumorg> for fixing it CVE20122110
update FAQ
Makefileorg: clear yet another environment variablePR: 2793
recognise X942 DH certificates on servers
correct error codes
e_rc4_hmac_md5c: harmonize zerolength fragment handling withe_aes_cbc_hmac_sha1c mostly for aesthetic reasons
e_rc4_hmac_md5c: oops, can't use rc4_hmac_md5_cipher on legacy Intel CPUsPR: 2792
C64x+ assembler pack linuxc64xplus build is not tested nor can it betested, because kernel is not in shape to handle it yet The code iscommitted mostly to stimulate the kernel development
Disable SHA2 ciphersuites in < TLS 12 connectionsTLS 12 clients could end up negotiating these with an OpenSSL serverwith TLS 12 disabled, which is problematicSubmitted by: Adam Langley
Additional workaround for PR2771If OPENSSL_MAX_TLS1_2_CIPHER_LENGTH is set then limit the size of clientciphersuites to this value A value of 50 should be sufficientDocument workarounds in CHANGES
Partial workaround for PR2771Some servers hang when presented with a client hello record length exceeding255 bytes but will work with longer client hellos if the TLS record versionin client hello does not exceed TLS v10 Unfortunately this doesn't fix allcases
OPENSSL_NO_SOCK fixesPR: 2791Submitted by: Ben Noordhuis
Minor compatibility fixesPR: 2790Submitted by: Alexei Khlebnikov
s3_srvrc: fix typoPR: 2538
e_aes_cbc_hmac_sha1c: handle zerolength payload and engage empty fragcountermeasurePR: 2778
ghashs390xpl: fix typo [that can induce SEGV in 31bit build]
Add options to set additional type specific certificate chains tos_server
use different variable for chain iteration
fix reset fix
make reinitialisation work for CMAC
update rather ancient EVP digest documentation
aess390xpl: fix crash in AES_set_decrypt_key in linux32s390x build
Submitted by: Peter Sylvester <petersylvester@edelwebfr>Localize client hello extension parsing in t1_libc
Add support for automatic ECDH temporary key parameter selection Whenenabled instead of requiring an application to hard code a possiblyinappropriate parameter set and delve into EC internals we justautomatically use the preferred curve
add FAQ about version numbers
aesarmv4pl: make it more foolproof [inspired by aess390xpl in 101]
aess390xpl: make it more foolproof [inspired by 101]
ssl/ssl_ciphc: interim solution for assertion in d1_pktc444PR: 2778
Tidy up EC parameter check code: instead of accessing internal structuresadd utility functions to t1_libc to check if EC certificates and parametersare consistent with peer
Update ordinals
CHANGES: harmonize with 100 and 101
PR: 2778partSubmitted by: John Fitzgibbon <john_fitzgibbon@yahoocom>Time is always encoded as 4 bytes, not sizeofTime
modes_lclh: make it work on i386PR: 2780
vpaesx86[_64]pl: handle zero length in vpaes_cbc_encryptPR: 2775
util/cygwinsh updatePR: 2761Submitted by: Corinna Vinschen
don't shadow
bn/bn_gf2mc: make new BN_GF2m_mod_inv work with BN_DEBUG_RAND
modes/gcm128c: fix selftest
sha512armv4pl: optimize NEON code path by utilizing vbsl, bitwise select
perlasm/x86masmpl: fix last fix
ans1/tasn_prnc: avoid bool in variable namesPR: 2776
Initial revision of ECC extension handlingTidy some code upDon't allocate a structure to handle ECC extensions when it is used fordefault valuesMake supported curves configurableAdd ctrls to retrieve shared curves: not fully integrated with rest ofECC code yet
fix leak
Submitted by: Markus Friedl <mfriedl@gmailcom>Fix memory leaks in 'goto err' cases
use client version when deciding whether to send supported signature algorithms extension
e_padlockx86[_64]pl: better understanding of prefetch errata and properworkaround
eng_allc: revert previous "disable Padlock" commit, which was unjustified
Always use SSLv23_{client,server}_method in s_clientc and s_serverc,the old code came from SSLeay days before TLS was even supported
vpaesx86_64pl: outofdate Apple assembler fails to calculatedistance between local labelsPR: 2762
bsaesx86_64pl: optimize key conversion
bsaesarmv7pl: optmize Sbox and key conversion
oops, revert unrelated patches
update FAQ, NEWS
ghashx86pl: omit unreferenced rem_8bit from nosse2 build
ssl/t1_encc: pay attention to EVP_CIPH_FLAG_CUSTOM_CIPHER
x86_64xlatepl: remove old kludgePR: 2435,2440
corrected fix to PR2711 and also cover mime_param_cmp
Fix for CMS/PKCS7 MMA If RSA decryption fails use a random key andcontinue with symmetric decryption process to avoid leaking timinginformation to an attackerThanks to Ivan Nestlerode <inestlerode@usibmcom> for discoveringthis issue CVE20120884
update NEWS
PR: 2744Submitted by: Dmitry Belyavsky <beldmit@gmailcom>CMS support for ccgost engine
Submitted by: Peter Sylvester <petersylvester@edelwebfr>Add more extension names in s_cbc extension printing code
PR: 2756Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Fix DTLS timeout handling
check return value of BIO_write in PKCS7_decrypt
New ctrls to retrieve supported signature algorithms and curves andextensions to s_client and s_server to print out retrieved valuedExtend CERT structure to cache supported signature algorithm data
PR: 2755Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reduce MTU after failed transmissions
PR: 2748Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Fix possible DTLS timer deadlock
don't do loop check for single self signed certificate
Configure: make nowhirlpool work
bsaesarmv7pl: change preferred contact
Add bitsliced AES for ARM NEON This initial version is effectivelyreference implementation, it does not interface to OpenSSL yet
PR: 2743Reported by: Dmitry Belyavsky <beldmit@gmailcom>Fix memory leak if invalid GOST MAC key given
PR: 2742Reported by: Dmitry Belyavsky <beldmit@gmailcom>If resigning with detached content in CMS just copy data across
Fix memory leak cause by race condition when creating public keysThanks to Ivan Nestlerode <inestlerode@usibmcom> for reporting this bug
x86cpuidpl: fix processor capability detection on pre586
PR: 2736Reported by: Remi Gacogne <rgacognebugs@coredumpfr>Preserve unused bits value in noncanonicalised ASN1_STRING structuresby using ASN1_STRING_copy which preseves flags
PR: 2737Submitted by: Remi Gacogne <rgacognebugs@coredumpfr>Fix double free in PKCS12_parse if we run out of memory
PR: 2739Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Fix padding bugs in Heartbeat support
PR: 2735Make cryptodev digests work Thanks to Nikos Mavrogiannopoulos forthis fix
free headers after use in error message
Detect symmetric crypto errors in PKCS7_decryptThanks to Ivan Nestlerode <inestlerode@usibmcom> for reporting this bug
Configure: I remove adding of D_XPG4_2 D__EXTENSIONS__ in sctp builds forfollowing reasons: it's not the way to engage XPG4v2 mode, defining _XOPEN_SOURCE tovalue less than 500 is see standards5; we need to work out strategy to handle _XOPEN_SOURCE, current statewhen we define eg _XOPEN_SOURCE to 500 in some files is inappropriate; sctp implementation on Solaris is incomplete, in sense that bss_dgramcdoesn't compile, because not all structures are defined, so thatenabling sctp doesn't work anyway;
seedc: incredibly enough seedc can fail to compile on Solaris with certainflags, because SS is defined after inclusion of <stdlibh>, in <sys/regseth>
PR: 2730Submitted by: Arpadffy Zoltan <ZoltanArpadffy@scientificgamesse>VMS fixes: disable SCTP by default
ABI fixes from 101stable
PR: 2711Submitted by: Tomas Mraz <tmraz@redhatcom>Tolerate bad MIME headers in parser
PR: 2696Submitted by: Rob Austein <sra@hactrnnet>Fix inverted range problem in RFC3779 codeThanks to Andrew Chi for generating test cases for this bug
PR: 2727Submitted by: Bruce Stephens <brucestephens@isodecom>Use same construct for EXHEADER in srp/Makefile as other makefiles to copewith possibly empty EXHEADER
ABI compliance fixesMove new structure fields to end of structures
SSL export fixes from Adam Langley [original from 101]
initialise i if n  0
Add new APIs EC_curve_nist2nid and EC_curve_nid2nist which convertbetween NIDs and the more common NIST names such as "P256" Enhanceecparam utility and ECC method to recognise the NIST names for curves
Fix bug in CVE20114619: check we have really received a client hellobefore rejecting multiple SGC restarts
Additional compatibility fix for MDC2 signature formatUpdate RSA EVP_PKEY_METHOD to use the OCTET STRING form of MDC2 signature:this will make all versions of MDC2 signature equivalent
An incompatibility has always existed between the format used for RSAsignatures and MDC2 using EVP or RSA_sign This has become more apparentwhen the dgst utility in OpenSSL 100 and later switched to using theEVP_DigestSign functions which call RSA_signThis means that the signature format OpenSSL 100 and later used withdgst sign and MDC2 is incompatible with previous versionsAdd detection in RSA_verify so either format worksNote: MDC2 is disabled by default in OpenSSL and very rarely used in practice
PR: 2713Submitted by: Tomas Mraz <tmraz@redhatcom>Move libraries that are not needed for dynamic linking to Libsprivate inthe pc files
PR: 2717Submitted by: Tim Rice <tim@multitalentsnet>Make compilation work on OpenServer 507
PR: 2716Submitted by: Adam Langley <agl@googlecom>Fix handling of exporter return value and use OpenSSL indentation ins_client, s_server
PR: 2703Submitted by: Alexey Melnikov <alexeymelnikov@isodecom>Fix some memory and resource leaks in CAPI ENGINE
PR: 2705Submitted by: Alexey Melnikov <alexeymelnikov@isodecom>Only create ex_data indices once for CAPI engine
Submitted by: Eric Rescorla <ekr@rtfmcom>Further fixes for use_srtp extension
apps/s_cbc: recognized latest TLS version
PR: 2704Submitted by: Peter Sylvester <petersylvester@edelwebfr>Fix srp extension
PR: 2710Submitted by: Tomas Mraz <tmraz@redhatcom>Check return codes for load_certs_crls
PR: 2714Submitted by: Tomas Mraz <tmraz@redhatcom>Make nosrp work
only cleanup ctx if we need to, save ctx flags when we do
add fips blocking overrides to command line utilities
Submitted by: Eric Rescorla <ekr@rtfmcom>Fix encoding of use_srtp extension to be compliant with RFC5764
oops, revert unrelated changes
Modify client hello version when renegotiating to enhance interop withsome servers
typo
bn_nistc: make new optimized code dependent on BN_LLONG
hpuxparisc2: engage assembler
Add support for distinct certificate chains per key type and per SSLstructureBefore this the only way to add a custom chain was in the parent SSL_CTXwhich is shared by all key types and SSL structures or rely on autochain building which is performed on each handshake from the trust store
code tidy
Revise ssl code to use a CERT_PKEY structure when outputting acertificate chain instead of an X509 structureThis makes it easier to enhance code in future and the chainoutput functions have access to the CERT_PKEY structure beingused
Tidy/enhance certificate chain output codeNew function ssl_add_cert_chain which adds a certificate chain toSSL internal BUF_MEM Use this function in ssl3_output_cert_chainand dtls1_output_cert_chain instead of partly duplicating code
allow key agreement for SSL/TLS certificates
initialise dh_clnt
ghashx86pl: engage original MMX version in nosse2 builds
add example for DH certificate generation
add support for use of fixed DH client certificates
oops revert debug change
return error if md is NULL
x86_64xlatepl: proper solution for RT2620
Fix for DTLS DoS issue introduced by fix for CVE20114109Thanks to Antonio Martin, Enterprise Secure Access Research andDevelopment, Cisco Systems, Inc for discovering this bug andpreparing a fix CVE20120050
fix CHANGES entry
Support for fixed DH ciphersuitesThe cipher definitions of these ciphersuites have been around since SSLeaybut were always disabled Now OpenSSL supports DH certificates they can befinally enabledVarious additional changes were needed to make them work properly: manyunused fixed DH sections of code were untested
cryptlibc: sscanf warning
Fix OPNESSL vs OPENSSL typosPR: 2613Submitted by: Leena Heino
fix warning
cryptlibc: make even nonWindows builds "strtoullagnostic"
sha512sparcv9pl: work around V8+ warning
aesppcpl, sha512ppcpl: comply even with Embedded ABI specificationmost restrictive about r2 and r13 usage
Sanitize usage of <ctypeh> functions It's important that charactersare passed zeroextended, not signextendedPR: 2682
ec_pmethc: fix typo in commentaryPR: 2677Submitted by: Annue Yousar
doc/apps: formatting fixesPR: 2683Submitted by: Annie Yousar
speedc: typo in pkey_print_messagePR: 2681Submitted by: Annie Yousar
ecdsapod: typoPR: 2678Submitted by: Annie Yousar
asn1/t_x509c: fix serial number print, harmonize with a_intcPR: 2675Submitted by: Annie Yousar
aessparcv9pl: clean up regexpPR: 2685
fix warning revert original patch
cmacc: optimize make_kn and move zero_iv to const segment
bn_nistc: harmonize buf in BN_nist_mod_256 with other mod functions
Update for 098s and 100f, and for 101 branchWhile the 100f CHANGES entry on VOS PRNG seeding was missingin HEAD, the actual code is here already
Fix usage indentation
Fix for builds without DTLS supportSubmitted by: Brian Carlstrom
PR: 2671Submitted by: steveUpdate maximum message size for certifiate verify messages to support4096 bit RSA keys again as TLS v12 messages is two bytes longer
Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveSend fatal alert if heartbeat extension has an illegal value
disable heartbeats if tlsext disabled
update CHANGES
Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>, Michael Tuexen <tuexen@fhmuensterde>Reviewed by: steveFix for DTLS plaintext recovery attack discovered by Nadhem Alfardan andKenny Paterson
Clear bytes used for block padding of SSL 30 records CVE20114576
Only allow one SGC handshake restart for SSL/TLS CVE20114619
fix CHANGES
Check GOST parameters are not NULL CVE20120027
Prevent malformed RFC3779 data triggering an assertion failure CVE20114577
update FAQ
fix warnings
Submitted by: Adam Langley <agl@chromiumorg>Reviewed by: steveFix memory leaks
oops, revert wrong patch
only send heartbeat extension from server if client sent one
incomplete provisional OAEP CMS decrypt support
recognise HEARTBEATS in mkdefpl script
update CHANGES
PR: 2658Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveSupport for TLS/DTLS heartbeats
make update
update default depflags
fix error code
fix deprecated statement
PR: 1794Submitted by: Peter Sylvester <petersylvester@edelwebfr>Reviewed by: steve remove some unncessary SSL_err and permitan srp user callback to allow a worker to obtaina user verifier cleanup and comments in s_server and demonstrationfor asynchronous srp user lookup
PR: 2326Submitted by: Tianjie Mao <tjmao@tjmaonet>Reviewed by: steveFix incorrect comma expressions and goto f_err as alert has been set
recognise nosctp
recognise SCTP in mkdefpl script
PR: 2535Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveAdd SCTP support for DTLS RFC 6083
typo
recognise DECLARE_PEM_write_const, update ordinals
delete unimplemented function from header file, update ordinals
sync and update ordinals
remove prototype for deleted SRP function
New ctrl values to clear or retrieve extra chain certs from an SSL_CTXNew function to retrieve compression method from SSL_SESSION structureDelete SSL_SESSION_get_id_len and SSL_SESSION_get0_id functionsas they duplicate functionality of SSL_SESSION_get_id Note: these functionshave never appeared in any release version of OpenSSL
PR: 2563Submitted by: Paul Green <PaulGreen@stratuscom>Reviewed by: steveImproved PRNG seeding for VOS
update CHANGES
update CHANGES
apps/speedc: fix typo in last commit
apps/speedc: Cygwin alarm fails sometimesPR: 2655
vpaesx86pl: revert previous commit and solve the problem through x86masmplPR: 2657
PR: 1794Submitted by: Peter Sylvester <petersylvester@edelwebfr>Reviewed by: steveRemove unnecessary code for srp and to add some comments tos_client the callback to provide a user during client connect isno longer necessary since rfc 5054 a connection attemptwith an srp cipher and no user is terminated when thecipher is acceptable comments to indicate in s_client the nonusefulness ofth primalaty tests for non known group parameters
Add private keys and generation scripts for test certificates in appsdirectory
vpaesx86pl: portability fixPR: 2657
Remove redundant TLS exporter
Padlock engine doesn't build the asm parts are not built for some reason,so remove for now
Fix warning
Back out redundant verification time change
Make it possible to set a time for verification
modexp512x86_64pl: Solaris protability fixPR: 2656
detect and use older PKITS data
Updates from fips2 branch: close streams in test utilities, use cofactor ECDHadd new key and signature generation tests to fips_test_suite
add cofactor ECDH support from fips branch
use different names for asm temp files to avoid problems on some platforms
add commented out option to allow use of older PKITS data
update CHANGES
implement attime option as a verify parameter then it works with all relevant applications
perlasm/x86gaspl: give a hand old assemblers assembling loop instruction
x86montpl: fix bug in integeronly squaring pathPR: 2648
Replace expired test server and client certificates with new ones
transparently handle X942 DH parameters
fix error discrepancy
Document RFC5114 "generation" options
Initial experimental support for X942 DH parameter format to handleRFC5114 parameters and X942 DH public and private keys
The default CN prompt message can be confusing when often the CN needs tobe the server FQDN: change it[Reported by PSW Group]
Resolve a stack setup race condition if the list of compressionmethods isn't presorted, it will be sorted on first readSubmitted by: Adam Langley
Fix ecdsatestcSubmitted by: Emilia Kasper
Update HEAD CHANGES file
Fix BIO_f_bufferSubmitted by: Adam LangleyReviewed by: Bodo Moeller
Update DH_check to peform sensible checks when q parameter is present
Correct some parameter values
bn/asm/mipspl: fix typos
return error if counter exceeds limit and seed value supplied
check counter value against 4  L, not 4096
PR: 1794Submitted by: Peter Sylvester <petersylvester@edelwebfr>Reviewed by: steveMake SRP conformant to rfc 5054Changes are: removal of the addition state after client hello removal of all prerfc srp alert ids sending a fatal alert when there is no srp extension but when theserver wants SRP removal of unnecessary code in the client
Fix NPN implementation for renegotiationProblem pointed out by Ben MurphySubmitted by: Adam Langley
sync and update ordinals
add cryptlibh to mkdefpl
sync and update ordinals
add strph to mkdefpl headers
move internal functions to ssl_loclh
bcmp doesn't exist on all platforms, replace with memcmp
bsaesx86_64pl: fix buffer overrun in tail processing
In EC_KEY_set_public_key_affine_coordinates include explicit check to see passed components do not exceed field order
Add TLS exporter
Add DTLSSRTP
Configure: reimplement commit21695
Configure, e_aesc: allow for XTS assembler implementation
Fix some warnings caused by __owur Temporarily I hope remove the moreaspirational __owur annotations
bsaesx86_64pl: add Win64 SEH and "hadrware" calls to aesx86_64pl
bn_nistc: fix strictaliasing compiler warning
Add RFC5114 DH parameters to OpenSSL Add test data to dhtest
PR: 1794Submitted by: Peter Sylvester <petersylvester@edelwebfr>Reviewed by: steveDocument unknown_psk_identify alert, remove preRFC 5054 string fromssl_statc
rc4testc: commit21684 broke x86_64 shared Linux build This is temporarysolution so that one can build rc4test
e_aesc: additional sanity check in aes_xts_cipher
cryptlibc, etc: fix linker warnings in 64bit Darwin build
Configure, x86gaspl: fix linker warnings in 32bit Darwin build
engines/: get rid of cvs warnings on MacOS X, proper clean in ccgost
Makefileorg: proper libclean on MacOS X
portability fix for some perl versions
bsaesx86_64pl: add bsaes_xts_[en|de]crypt
arm_archh: allow to specify __ARM_ARCH__ elsewhere
x86cpuidpl: compensate for imaginary virtual machines
Configure: harmonize darwin64x86_64cc line with assembler pack
config: KERNEL_BITS envrionment variable to control choice between 32and 64bit Solaris builds
config: KERNEL_BITS envrionment variable to control choice between 32 and64bit darwin builds
Configure: initial support for iOS
Configure: allow /config to pass compiler flags with white spaces
fips_canisterc: add crosscompiler support for iOS it applies even toMacOS X, because it's easier to handle it this way
fips_premainc: fix warning about _exit on MacOS X
fipsld, incore: switch to new crosscompile support
e_aesc: fold aesni_xts_cipher and [most importantly] fix aes_xts_cipher'sreturn value after custom flag was rightly reverted
check for unset entropy and nonce callbacks
Update fips_test_suite to take multiple command line options andan induced error checking function
typo
make post failure simulation reversible in all cases
typo: use key for POST callback
fix set but unused warnings
armv4cpuidS, armv4gf2mpl: make newest code compilable by older assembler
x86cpuidpl: don't punish "lastyear" OSes on "thisyear" CPUsPR: 2633
ppcpl: fix bug in bn_mul_comba4PR: 2636Submitted by: Charles Bryant
Add single call public key sign and verify functions
Add support for memory leak checking in fips_algvsFix many memory leaks in algorithm test utilities
Remove duplicate test from health checkFix memory leaks by uninstantiating DRBG before reinitialising it
Print out an error for "make test" in FIPS builds from FIPS stable
Add fips_algvs utility from FIPS 20 stable branch
Typo
bsaesx86_64pl: add CBC decrypt and engage it in e_aesc
Add missing algorithms to disable, and in particular, disableEC_NISTP_64_GCC_128 by default, as GCC isn't currently supported onVMS  Synchronise with Unix
Teach mksharedcom to have a look for disabled algorithms in opensslconfh
bn_expc: fix corner case in new constanttime codeSubmitted by: Emilia Kasper
bsaesx86_64pl: optimize InvMixColumns
bsaesx86_64pl: add decryption procedure with unoptimized referenceInvMixColumns
PR: 2628Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveSend alert instead of assertion failure for incorrectly formatted DTLSfragments
PR: 2628Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix for ECC keys and DTLS
PR: 2632Submitted by: emmanuelazencot@bullnetReviewed by: steveReturn 1 immediately if not affine coordinates as BN_CTX has not beenset up
Use correct tag for SRP username
typo
e_aesc: fold even aesni_ccm_cipher
e_aesc: prevent potential DoS in aes_gcm_tls_cipher
cryptlibc: remove stdio dependency in Windows fipscanisterlib
No need for custom flag in XTS mode: block length is 1
fips_canisterc: harmonize fingerprinting for all Windows, CE or not
config: in crosscompile case interrogate crosscompiler, not host, workaround subshell limitation
Check for selftest failure in various places
x86gaspl: relax init segment alignment
mk1mkpl: cleanup engines' handling and make fips build work on WIN64I
Update error codes
fipsc: remove preprocessor artefact
fix ? AVX clearing
Check for uninitialised DRBG_CTX and don't free up default DRBG_CTX
fipsc: x86[_64] capability masking
armcapc: autosetup processor capability vector
Fix error codes
fips/fips_[canister|premain]c: make it work with VC6 and add sentinelseven to code segments
sha1mipspl: fix typo
Drain unused MacOS directory
Add "nopass" for empty password too
add authentication parameter to FIPS_module_mode_set
vxworksmips: unify and add assembler
Remove superseded MIPS assembler modules
fips_canisterc: more crosscompiler platfroms verified
arm_archh: add missing predefined macro, __ARM_ARCH_5TEJ__
"make update" partial
BN_BLINDING multithreading fixSubmitted by: Emilia Kasper Google
Typo ?
Build fipscanistero only by default Utility build now needsmake build_tests
Recognise new option
Fix indentation
Fix warningsAlso, use the common Configure mechanism for enabling/disabling the 64bit ECC code
Update premain fingerprint
Improve optional 64bit NISTP224 implementation, and add NISTP256 andNISTP521 Now DEC_NISTP_64_GCC_128 enables all three of these;DEC_NISTP224_64_GCC_128 no longer worksSubmitted by: Google Inc
fipssymsh: assign alias to newly introduced bn_gather5
fips/: extend fipsro segmenting to all _MSC_VER builds including WinCE
fips_encc: assign minimal block size to bad_cipher [to avoid arithmeticexceptions in TLS layer]
engines/cvsignore: stop whining about e_padlocks
evp/e_aesc: fold AESNI modes that heavily rely on indirect callstrade 2 smallblock performance, engage bitsliced AES in GCM
x86_64xlatepl: make vpaesx86_64pl and rc4md5x86_64 work with ml64,fix bug in crt section alignmentPR: 2620, 2624
bsaesx86_64pl: make it work with ml64
[bs|vp]aesx86[_64]pl: typos and clarifications
c_allcc: add aesxts to loop
Do global replace to remove assembly language object files
bn_montc: get corner cases right in updated BN_from_montgomery_word
bn_expc: further optimizations using more ideas fromhttp://eprintiacrorg/2011/239
x86_64montpl: minor optimization
bn_montc: simplify BN_from_montgomery_word
bn_shiftc: minimize reallocations, which allows BN_FLG_STATIC_DATA tobe shifted in specific cases
Engage bsaesx86_64pl, bitsliced AES
L3072, N256 provides 128 bits of security not 112
Add androidx86
Clarify usage message
more vxworks patches
Allow override of GCCVER and noexecstack checking from environmentVxworks support
Don't use TPREFIX shell variable for minimal script
Add usage messages
e_aesc: fix bug in aesni_gcm_tls_cipher
aesnix86[_64]pl: fix bug in CCM code
Remove eng_aesnic as AESNI support is integrated directly at EVP
use no_ecdhe when using no_dhe
Oops  ectestc finds further problems beyond those exposed by bntextc
Avoid failed assertion in BN_DEBUG builds
Make CTR mode behaviour consistent with other modes: clear ctx>num in EVP_CipherInit_ex adapt e_easc changes from http://cvsopensslorg/chngview?cn19816for eng_aesnicSubmitted by: Emilia Kasper
Clarify warning
typo
In ssl3_clear, preserve s3>init_extra along with s3>rbufSubmitted by: Bob Buckholz <bbuckholz@googlecom>
Fix OPENSSL_BN_ASM_MONT5 for corner cases; add a testSubmitted by: Emilia Kasper
Print curve type for signature tests
increase test RSA key size to 1024 bits
Update READMEFIPS for new FIPS 20 testvectors
Remove o_inito special case from Makefile: this doesn't work
Skip ECDH sanity check Add compareall to run comparison tests onall files instead of sanity checks
Handle partial test where H is absent: needed to check g generation
Update instructions
Updates to handle some verification of v2 testsNow enable v2 by default and require a disablev2 option to run theold v1 tests
Handle broken test on verify too
ECDH POST selftest failure inducing support
Fix warnings
Only include one ECDH selftest
e_padlockx86[_64]pl: protection against prefetch errata
update pkey method initialisation and copy
print out subgroup order if present
def_rsa_finish not used any more
remove some debugging code
fix leak properly this time
add GCM ciphers in SSL_library_init
disable GCM if not available
Don't disable TLS v12 by default now
Synv ordinals with 101stable
fix CHANGES entry
fix memory leaks
e_padlockx86_64pl: brownbag bug in stack pointer handling
Sync ordinals with 101stable
PR: 2482Submitted by: Rob Austein <sra@hactrnnet>Reviewed by: steveDon't allow inverted ranges in RFC3779 code, discovered by Frank Ellermann
e_padlockx86[_64]pl: SHA fixes, comply with specification and fix bug
Add fips/ecdh directory
New force_pubkey option to x509 utility to supply a different publickey to the one in a request This is useful for cases where the publickey cannot be used for signing eg DH
use client version when eliminating TLS v12 ciphersuites in client hello
? crypto/aes/aesarmv4S? crypto/aes/aesnisha1x86_64s? crypto/aes/aesnix86_64s? crypto/aes/foopl? crypto/aes/vpaesx86_64s? crypto/bn/bn_libcswp? crypto/bn/armv4gf2mS? crypto/bn/diffs? crypto/bn/modexp512x86_64s? crypto/bn/x86_64gf2ms? crypto/bn/x86_64mont5s? crypto/ec/bctxt? crypto/ec/diffs? crypto/modes/aout? crypto/modes/diffs? crypto/modes/ghasharmv4S? crypto/modes/ghashx86_64s? crypto/modes/oph? crypto/modes/tstc? crypto/modes/xh? crypto/objects/obj_xreftxtswp? crypto/rand/diffs? crypto/sha/sha512? crypto/sha/sha1armv4largeS? crypto/sha/sha256armv4S? crypto/sha/sha512armv4SIndex: crypto/objects/obj_xrefcRCS file: /v/openssl/cvs/openssl/crypto/objects/obj_xrefc,vretrieving revision 19diff u r19 obj_xrefc crypto/objects/obj_xrefc	5 Nov 2008 18:38:58 0000	19+++ crypto/objects/obj_xrefc	6 Oct 2011 20:30:21 0000@@ 110,8 +110,10 @@endifif rv  NULLreturn 0;	pdig_nid  rv>hash_id;	ppkey_nid  rv>pkey_id;+	if pdig_nid+		pdig_nid  rv>hash_id;+	if ppkey_nid+		ppkey_nid  rv>pkey_id;return 1;}@@ 144,7 +146,8 @@endifif rv  NULLreturn 0;	psignid  rv>sign_id;+	if psignid+		psignid  rv>sign_id;return 1;}Index: crypto/x509/x509typecRCS file: /v/openssl/cvs/openssl/crypto/x509/x509typec,vretrieving revision 110diff u r110 x509typec crypto/x509/x509typec	26 Oct 2007 12:06:33 0000	110+++ crypto/x509/x509typec	6 Oct 2011 20:36:04 0000@@ 100,20 +100,26 @@break;}	iX509_get_signature_typex;	switch i+	iOBJ_obj2nidx>sig_alg>algorithm;+	if i && OBJ_find_sigid_algsi, NULL, &i{	case EVP_PKEY_RSA:		ret|EVP_PKS_RSA;		break;	case EVP_PKEY_DSA:		ret|EVP_PKS_DSA;		break;	case EVP_PKEY_EC:		ret|EVP_PKS_EC;		break;	default:		break;++		switch i+			{+		case NID_rsaEncryption:+		case NID_rsa:+			ret|EVP_PKS_RSA;+			break;+		case NID_dsa:+		case NID_dsa_2:+			ret|EVP_PKS_DSA;+			break;+		case NID_X9_62_id_ecPublicKey:+			ret|EVP_PKS_EC;+			break;+		default:+			break;+			}}if EVP_PKEY_sizepk < 1024/8/ /8 because it's 1024 bits we look
e_padlock: add CTR mode
e_padlockx86_64pl: fix typo
e_padlockx86pl: Nanorelated update
Make fips algorithm test utilities use RESP_EOL for end of line charactersThis should be CRLF even under nix
e_padlockx86pl: previous C3specific fix was incomplete
e_padlockx86pl: make it work on VIA C3 which doesn't support SSE2
Never echo Num lines for PQGGen DSA2 test
make depend
Add FIPS selftests for ECDH algorithm
Remove s  s  P deferral
Check return codes properly
Fix output format for DSA2 parameter generation
bsaesx86_64pl: add due credit
fix signed/unsigned warning
Add a disableall option to disable all tests
Handle provable prime parameters for canonical g generation which aresometimes erroneously included
Add bitsliced AES x86_64 assembler, see http://homesesatkuleuvenbe/~ekasper/software for background information It's not integrated into build system yet
make sure eivlen is initialised
use keyformat for x509toreq, don't hard code PEM
PR: 2606Submitted by: Christoph Viethen <cv@kawo2rwthaachende>Reviewed by: steveHandle timezones correctly in UTCTime
PR: 2602Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS bug which prevents manual MTU setting
PR: 2347Submitted by: Tomas Mraz <tmraz@redhatcom>Reviewed by: steveFix usage message
Run PQGVer test before DSA2 tests
Typo
Use function name FIPS_drbg_health_check for health check functionAdd explanatory comments to health check code
Don't print out errors in cases where errors are expected: testingDSA parameter validity and EC public key validity
Remove unused variable
Perform health check on all reseed operations not associated withprediction resistance requests Although SP 80090 is arguably unclearon whether this is necessary adding an additional check has minimalpenalty very few applications will make an explicit reseed request
Revise DRBG to split between internal and external flagsOne demand health check functionPerform generation test in fips_test_suiteOption to skip dh test if fips_test_suite
Update error codes
Allow reseed interval to be set
Make latest assembler additions vpaes and e_padlock work in Windows build
sha256586pl: minor optimization, +02 on all CPUs, +7 on Westmere
sha512x86_64pl: +15 better performance on Westmere and incidentally AtomOther Intel processors +5, Opteron 2
Sync error codes with 101stable
clarify comment
Minor code tidy and bug fix: need to set t  s after first pass andt and s do not need to have independent values after the first passso set t  s
Don't use vpaes in fips builds and exclude from restricted tarball
Integrate Vector Permutation AES into build system
Make HMAC kat symbols static
Fix warning
Allow for dynamic base in Win64 FIPS module
Update CMAC/HMAC sefltests to use NIDs instead of function pointersSimplify HMAC selftest as each test currently uses the same key andhash data
Remove fipsdso target: it isn't supported in the 20 module
new function to lookup FIPS supported ciphers by NID
More extensive DRBG health check New function to call health checkfor all DRBG combinations
Check length of additional input in DRBG generate function
Delete strength parameter from FIPS_drbg_generate It isn't very usefulstrength can be queried using FIPS_drbg_get_strength  and adds asubstantial extra overhead to health check need to check every combinationof parameters
Check we recognise DRBG type in fips_drbgvsc initialised DRBG_CTX if wedon't set type in FIPS_drbg_new
vpaesx86[_64]pl: fix typo
Add so called Vector Permutation AES x86[_64] assembler, seehttp://cryptostanfordedu/vpaes/ for background informationIt's not integrated into build system yet
Fix 3DES Monte Carlo test file output which previously outputtedextra bogus lines Update fipsalgtestpl to tolerate the old format
Add support for Dual EC DRBG from SP80090 Include updates to algorithmtests and POST code
Add /fixed option to linker with fips builds
Put quick DRBG selftest return after first generate operation
engines/asm/e_padlockx86_64pl: name it right and fix small bug
Add error codes for DRBG KAT failuresAdd abbreviated DRBG KAT for POST which only performs a single generateoperations instead of four
Padlock engine: make it independent of inline assembler
Initialise X509_STORE_CTX properly so CRLs with nextUpdate date in the pastproduce an error CVE20113207
Update FAQ
config: don't add Wa options with noasm
crypto/bn/bn_gf2mc: make it work with BN_DEBUG
Check reseed interval before generating output
Place DRBG in error state if health check fails
oops
Fix session handling
Fix d2i_SSL_SESSION
ECDH memory handling fixesSubmitted by: Adam Langley
Fix memory leak on bad inputs
make update
Fix expected DEFFLAG for default config
Fix error codes
Synchronize with 101 CHANGES file
Don't perform full DRBG health check on all DRBG types on power up, justone shorter KAT per mechanism
Update dependencies
Add header to Makefile
Extension of DRBG selftests using new dataTest PR and no PR and test initial generate before the reseed tooMove selftest data to separate fips_drbg_selftesth header file
Rename some more symbols for fips module
Don't use from++ in tolower as this is implemented as a macro on someplatforms Thanks to Shayne Murray <ShayneMurray@Polycomcom> forreporting this issue
PR: 2576Submitted by: Doug Goldstein <cardoe@gentooorg>Reviewed by: steveInclude header file stdlibh which is needed on some platforms to getgetenv declaration
Sync ordinals with 101stable
PR: 2340Submitted by: "Mauro H Leggieri" <mxmauro@caimancomar>Reviewed by: steveStop warnings if OPENSSL_NO_DGRAM is defined
make timing attack protection unconditional
Stop warnings
PR: 2573Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS buffering and decryption bug
PR: 2589Submitted by: Thomas Jarosch <thomasjarosch@intra2netcom>Reviewed by: steveInitialise p pointer
PR: 2588Submitted by: Thomas Jarosch <thomasjarosch@intra2netcom>Reviewed by: steveClose file pointer
PR: 2586Submitted by: Thomas Jarosch <thomasjarosch@intra2netcom>Reviewed by: steveZero structure fields properly
PR: 2586Submitted by: Thomas Jarosch <thomasjarosch@intra2netcom>Reviewed by: steveFix brace mismatch
Print private key component is exout parameter is given
Fix ecdh primitives test command line
bn_expc: improve portability
util/incore: fix typo
Add support for DSA2 PQG generation of g parameter
Add support for canonical generation of DSA parameter gModify fips_dssvs to support appropriate file format
Fix warning
Don't use some object files in FIPS build
Rename sparc symbols
Add RC4MD5 and AESNISHA1 "stitched" implementations
eng_rsaxc: improve portability
Correct maximum request length SP80090 quotes maximum bits, not bytes
modexp512x86_64pl: make it work with ml64
Fix fipsalgtestpl to still work with old test vectors
typo
Update instructions to recommend use of included incore script
Makefileorg: get commit21249 right
Delete library install from Makefilefips: it isn't usedRevert change to Makefileorg: it breaks install
quote LIBS to copy with empty string
Enable rsapss0 for nonv2 tests
Remove hard coded ecdsaWithSHA1 hack in ssl routines and check for RSAusing OBJ xref utilities instead of string comparison with OID nameThis removes the arbitrary restriction on using SHA1 only with some ECCciphersuites
bn_divc: remove duplicate code by merging BN_div and BN_div_no_branch
x86_64mont5pl: add missing Win64 support
eng_rdrandc: make it link in '/config 386' case
armv4montpl: profilerassisted optimization gives 814 improvementmore for longer keys on RSA/DSA
SPARC assembler pack: fix FIPS linking errors
x86_64xlatepl: fix movzw
This commit completes recent modular exponentiation optimizations onx86_64 platform It targets specifically RSA1024 sign using ideasfrom http://eprintiacrorg/2011/239 and adds more than 10 on mostplatforms Overall performance improvement relative to 100 is ~40in average, with best result of 54 on Westmere Incidentally ~40is average improvement even for longer key lengths
alphacpuidpl: fix alignment bugalphamontpl: fix typoPR: 2577
aesni TLS GCM support
prevent compilation errors and warnings
Include armcapc in fips tarball
Remove redundant assignment
Add provisory support for RDRAND instruction
x86_64montpl: futher optimization resulting in up to 48 improvement4096bit RSA sign benchmark on Core2 in comparison to initial versionfrom 2005
Add HMAC DRBG from SP80090
Use "resp" for default directory name for rsp files
Fix DSA to skip EOL test when parsing mod line
Initial support for tests for 20 module Not complete and not all workingyetAllow test type to be determined by a regexp on the pathname So tests like:DSA/SigVer, DSA2/SigVer, ECDSA/SigVer, ECDSA2/SigVer can all bedistinguished
aes/asm/aesnipl: fix CCM and further optimize itmodes/ccm128c: minor branch optimization
fix memory leak
Expand range of ctrls for AES GCM to support retrieval and setting ofinvocation fieldAdd complete support for AES GCM ciphersuites including all those inRFC5288 and RFC5289
recognise ecdsaWithSHA1 OID
Fix warnings
Update CHANGES
oops, remove debug option
Add HMAC ECC ciphersuites from RFC5289 Include SHA384 PRF support andprohibit use of these ciphersuites for TLS < 12
cryptlibc: OPENSSL_ia32cap environment variable to interpret ~ as cpuid mask
More symbol renaming
Make sure OPENSSL_FIPSCANISTER is visible to ARM assembly language files
util/incore: fix brownbag bug
util/incore: make transition smoother
fips_canisterc: add support for embedded ppc linux
stop warnings
Rename another symbol
aesppcpl: minor optimization favoring embedded processors performanceof "big" processors is unaffected
Add RSAX builtin engine It optimizes RSA1024 sign benchmark
PR: 2559Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS socket error bug
PR: 2555Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS sequence number bug
PR: 2550Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS HelloVerifyRequest Timer bug
sha512sparcv9pl: minor optimization of sha256
Add support for ECCCDH test format
ARM assembler pack: add platform runtime detection
PR: 2556 partialReported by: Daniel Marschall <danielmarschall@viathinksoftde>Reviewed by: steveFix OID routinesCheck on encoding leading zero rejection should start at beginning ofencodingAllow for initial digit when testing when to use BIGNUMs which can increasefirst value by 2  40
fips/Makefile: HPUXspecific update
ms/uplinkc: fix Visual Studio 2010 warning
config: detect if assembler supports noexecstack and pass it down
perlasm/cbcpl: fix tail processing bugPR: 2557
ssl/ssl_ciphc: allow to switch to predefined "composite" cipher/maccombos that can be implemented as AEAD ciphers
ssl/t1_encc: initial support for AEAD ciphers
evph: add flag to distinguish AEAD ciphers and pair of control codes
Fix typoSubmitted by: Jim Morrison
Add a tool that semiautomatically created the API documentationrequired for FIPS
Rename symbol
x86_64montpl: add squaring procedure and improve RSA sign performanceby up to 38 4096bit benchmark on Core2
Add functions to return FIPS module version
x86_64xlatepl: sha1 and md5 warnings made it to nasm 209, extend gnuassembler workaround to all assemblers
sha1x86_64pl: nasm 207 screws up labels if AVX path is compiled
s390xgf2mpl: commentary update final performance numbers turned to behigher
If make clean fails it is not a fatal error
Additional error checking
sha1x86_64pl: fix win64specific typos and add masm support
x86_64xlatepl: masmspecific update
Delete any EXARG value first
Add noasm argument to Configure if needed
Recognise fipscheck option and call fipsas for WIN64 builds
crypto/aes/Makefile: make it work on IRIX
crypto/whrlpool/wp_blockc: harmonize OPENSSL_ia32cap_P
crypto/sha/asm/sha[1|512]mipspl: minor updates
rc4586pl: add Atom performance results
md5x86_86pl: remove redundant instructions
crypto/bn/Makefile: fix typo
auto detect configuration using KERNEL_BITS and CC
Configure: clean up linux32s390x line
s390x assembler pack: add s390xgf2mpl and harmonize AES_xts_[en|de]crypt
rc4x86_64pl: commentary update
Minor x86_64 perlasm update
Fix CPRNG test for Hash DRBG
typo
Add stub for HMAC DRBG
allow KERNEL_BITS to be specified in the environment
get the filename right
Add sparcv9capc to restricted tarball
Add a symbol for the first parameter to OPENSSL_showfatal
Add symbols for the parameters on a couple more functions
PR: 2470Submitted by: Corinna Vinschen <vinschen@redhatcom>Reviewed by: steveDon't call ERR_remove_state from DllMain
PR: 2543Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveCorrectly handle errors in DTLSv1_handle_timeout
PR: 2540Submitted by: emmanuelazencot@bullnetReviewed by: stevePrevent infinite loop in BN_GF2m_mod_inv
correctly encode OIDs near 2^32
typo
stop complaints about no CVS version
Now the FIPS capable OpenSSL is available simplify the various FIPS testbuild optionsAll fispcanisterbuild builds only build fipscanistero and include symbolrenamingMove all renamed symbols to fipssymshUpdate READMEFIPS
add symbol rename
allow MD5 use for computing old format hash links
Don't set FIPS rand method at same time as RAND method as this can cause theFIPS library to fail Applications that want to set the FIPS rand method can doso explicitly and presumably they know what they are doing
Add prototype for null cipher
make EVP_dss work for DSA signing
typo
add null cipher to FIPS module
Correction
Strip CRs when installing fips_premainc Correct compat library rulein FIPS mode
Initial FIPS capable OpenSSL information
Give parameters names in prototypes
Option "fipscheck" which checks to see if FIPS is autodetected ina build Use this for WIN32 builds
Don't include desh any more: it is not needed
Update to mk1mfpl and ms\do_fipsbat to install relevant files forWIN32 FIPS builds
Fix the version history: changes going into 110 that are also goinginto 101 should not be listed as "changes between 101 and 100"This makes the OpenSSL_1_0_1stable and HEAD versions of this fileconsistent with each other the HEAD version has the additional 110section, but doesn't otherwise differ
set FIPS allow before initialising ctx
make sure custom cipher flag doesn't use any mode bits
Allow applications to specify alternative FIPS RAND methods if theyare sure they are OKAPI to retrieve FIPS rand method
sync and update ordinals
Don't export functions marked as FIPSCAPABLE
Use FIPSCAPABLE for FIPS module functions used in FIPS capable OpenSSL
HMAC fips prototypes
CMAC FIPS prototypes
undef bn_div_words as it is defined for FIPS builds
Update dependencies for m_dssc too
Remove x509h from SHA1 clone digests, update dependencies
Install FIPS module in FIPSDIR if set
more prototypes in fipsh
Add more prototypes
fix memory leak
Add flags for DH FIPS methodUpdate/fix prototypes in fipsh
Set flags in ECDH and ECDSA methods for FIPS
rc4_skeyc: remove dead/redundant code it's never compiled andmisleading/obsolete comment
Add prototypes for some FIPS EC functions
Set SSL_FIPS flag in ECC ciphersuites
Move function prototype to fipsh
e_aesc: move AESNI runtime switch and implement the switch for remaining modes
x86_64cpuidpl: fix typo
x86[_64]cpuidpl: add function accessing rdrand instruction
No spaces in assignements in a shell script
fix error discrepancy
license correction, no EAY code included in this file
Add "OPENSSL_FIPSCAPABLE" define for a version of OpenSSL which isFIPS capable: ie FIPS module is supplied externally
Constify RSA signature buffer
Typo
Remove FIPS RSA functions from crypto/rsa
Move FIPS RSA function definitions to fipshNew function to lookup digests by NID in moduleMinor optimisation: if supplied hash is NULL to FIPS RSA functions andwe are using PKCS padding get digest NID from otherwise unused saltlenparameter instead
Simple automated certificate creation demo
Clone digest prototypes
Add DSA and ECDSA "clone digests" to module for compatibility with oldapplications
typo
set FIPS permitted flag before initalising digest
Fake CPU caps so fips_standalone_sha1 compilesInitialise update function for bad digest inits
Don't round up partitioned premaster secret length if there is only onedigest in use: this caused the PRF to fail for an odd premaster secretlength
Output supported curves in preference order instead of numerically
e_aesc: fix typo
e_aesc: fix aes_cfb1_cipher
e_aesc: integrate AESNI directly into EVP
aesnix86[_64]pl: relax alignment requirement
Add more cipher prototypes
Prototypes for more FIPS functions for use in FIPS capable OpenSSL
Various mingw64 fixes
sha1586|x86_64pl: minor portability fix
x86cpuidpl: last commit broke platforms with perl with 64bit integer
sha1586|x86_64pl: add SSSE3 and AVX code paths
Add FIPS_digestinit prototype for FIPS capable OpenSSL
Add prototypes for FIPS EVP implementations: for use in FIPS capableOpenSSL
aesppcpl: handle unaligned data on page boundaries
Rename many internal only module functions from FIPS_ to fips_
rc4x86_64pl: fix due credit
rc4x86_64pl: RC4_options fixup
x86[_64]cpuidpl: harmonize usage of reserved bits 20 and 30
PPC assembler pack: adhere closer to ABI specs, add PowerOpen traceback data
rc4x86_64pl: major optimization for contemporary Intel CPUs
rc4586pl: optimize even further
Typo
Use FIPSLD_LIBCRYPTO for consistency with other env variables in fipsldUse current directory for fips_premain_dso
In fipsld use FIPSLIBCRYPTO environment variable to specify an alternativelocation for libcryptoa, support shared library builds in differentsource tree
Install fips_standalone_sha1 and make use of it in fipsld script
x86_64cpuidpl: get AVX masking right
Only install FIPS related files for fipscanisteronly build
More symbol renaming
Don't advertise or use MD5 for TLS v12 in FIPS mode
PR: 2533Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveSetting SSL_MODE_RELEASE_BUFFERS should be ignored for DTLS, but instead causesthe program to crash This is due to missing version checks and is fixed withthis patch
PR: 2529Submitted by: Marcus Meissner <meissner@susede>Reviewed by: steveCall ssl_new to reallocate SSL BIO internals if we want to replacethe existing internal SSL structure
PR: 2527Submitted by: Marcus Meissner <meissner@susede>Reviewed by: steveSet cnf to NULL to avoid possible double free
Fix the ECDSA timing attack mentioned in the paper at:http://eprintiacrorg/2011/232pdfThanks to the original authors Billy Bob Brumley and Nicola Tuveri forbringing this to our attention
Fix the ECDSA timing attack mentioned in the paper at:http://eprintiacrorg/2011/232pdfThanks to the original authors Billy Bob Brumley and Nicola Tuveri forbringing this to our attention
Some nextproto patches broke DTLS: fix
Oops use up to date patch for PR2506
PR: 2512Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix BIO_accept so it can be bound to IPv4 or IPv6 sockets consistently
PR: 2506Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFully implement SSL_clear for DTLS
PR: 2505Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS session resumption timer bug
use TLS1_get_version macro to check version so TLS v12 changes don't interfere with DTLS
e_padlockc: fix typo
rc4586pl: optimize unused code path
e_padlockc: last x86_64 commit didn't work with some optimizers
rc4586pl: 50 improvement on Core2 and 80 on Westmere
PR: 2522Submitted by: Henrik Grindal Bakken <henribak@ciscocom>Don't compare past end of buffer
spacrv9capc: addenum to recent EC optimizations
aesnix86[_64]pl: optimize for Sandy Bridge and add XTS mode
x86_64gf2mpl: add Win64 SEH
ppccapc: addenum to recent EC optimizations
ec_cvtc: ARM comparison results were wrong, clarify the background
ec_cvtc: avoid EC_GFp_nist_method on platforms with bn_mul_mont [seecommentary for details]
PR: 2295Submitted by: Alexei Khlebnikov <alexeikhlebnikov@operacom>Reviewed by: steveOOM checking Leak in OOM fix Fallthrough comment Duplicate codeelimination
Add CHANGES entry: add FIPS support to ssl
Implement FIPS_mode and FIPS_mode_set
oops
update date
inherit HMAC flags from MD_CTX
set encodedPoint to NULL after freeing it
aesnix86_64pl: make it compile on MacOS X
x86gaspl: don't omit comm OPENSSL_ia32cap_P on MacOS X
x86_64xlatepl: add interregister movq and make x86_64gfms compile onSolaris, MacOS X, elderly gas
x86_64cpuidpl: allow shared build to work without BsymbolicPR: 2466
e_padlockc: make it compile on MacOS X
x86[_64]cpuidpl: handle new extensions
ppcxlatepl: get linux64 declaration right
cmstestpl: make it work with notsolatest perl
x86gaspl: add palignr and move pclmulqdq
x86_64 assembler pack: add x86_64gf2m module
x86_64xlatepl: allow "baseless" effective address, add palignr, movepclmulqdq
new flag to stop ENGINE methods being registered
NULL is a valid cspname
Typo
typo
Recognise NO_NISTP22464GCC128
Enter FIPS mode by calling FIPS_module_mode_set in opensslc untilFIPS_mode_set is implemented
Provisional support for TLS v12 client authentication: client side onlyParse certificate request message and set digests appropriatelyGenerate new TLS v12 format certificate verify messageKeep handshake caches around for longer as they are needed for client auth
Process signature algorithms during TLS v12 client authenticationMake sure message is long enough for signature algorithms
Fix error discrepancy
Add SSL_INTERN definition
Sync ordinals
make kerberos work with OPENSSL_NO_SSL_INTERN
bn_nistc: fix shadowing warnings
fips_canisterc: pick more neutral macro name
Reorder signature algorithms in strongest hash first order
Set FIPS mode for values other than 1 The only current effectis to return a consistent value So calling FIPS_module_mode_setnfor n ! 0 will result in FIPS_module_mode returning n Thiswill support future expansion of more FIPS modes eg a Suite B mode
Rename FIPS_mode_set and FIPS_mode Theses symbols will be defined inthe FIPS capable OpenSSL
Inlcude READMEECC in FIPS restricted tarball
Add NSA sublicense info
Update instructions
Typo
fips_canisterc: fix typo
fips_canisterc: initial support for crosscompiling "Initial" refersto the twoentry list of verified platforms in ifndefFIPS_REF_POINT_IS_SAFE_TO_CROSS_COMPILE preprocessor section
Initialise rc
Initial TLS v12 client support Include a default supported signaturealgorithms extension including everything we support Swicth to newsignature format where needed and relax ECC restrictionsNot TLS v12 client certifcate support yet but client will handle casewhere a certificate is requested and we don't have one
Call fipsaspl directly for parisc targets
Optimized bn_nistc Performance improvement varies from one benchmarkand platform to another It was measured to deliver 2030 betterperformance on x86 platforms and 3040 on x86_64, on nistp384 benchmark
allow SHA384, SHA512 wit DSA
Remove gf2m modules from bn_asm if noec2m set
Remove FIXME comments
Omit GF2m properly this time ;
Don't include GF2m source files is NOEC2M set
IA64 assembler pack: fix typos and make it work on HPUX
x86 assembler pack: add bn_GF2m_mul_2x2 implementations see x86gf2mpl fordetails and performance data
Fixes for WIN64 FIPS build
Get OPENSSL_FIPSSYMS from environment in fipsaspl, include ppccapc and Sfiles in fipsdist
Don't fail WIN32 builds on warnings
Return error codes for selftest failure instead of hard assertion errors
Continuing TLS v12 support: add support for server parsing ofsignature algorithms extension and correct signature format forserver key exchangeAll ciphersuites should now work on the server but no client support andno client certificate support yet
Hide more symbols
ARM assembler pack: engage newly introduced armv4gf2m module
Fix warning of signed/unsigned comparison
ARM assembler pack Add bn_GF2m_mul_2x2 implementation see source codefor details and performance data
Remove superfluous PRNG self testsPrint timer resolution
xts128c: minor optimizaton
Update status
Remove debugging printExplicitly use LINKDIRS for fipsdist links
bn_gf2mc: optimized BN_GF2m_mod_inv delivers sometimes 2x of ECDSA signExact improvement coefficients vary from one benchmark and platform toanother, eg it performs 7033 better on ARM, hereafter less forlonger keys, and 10090 better on x86_64
Fix warning
Include fipssymsh for ARM builds to translate symbolsTranslate arm symbol to fips_
Remove useless setting
PR: 2499Submitted by: "James 'JC' Jones" <jamesjcjones@gmailcom>Typos
Fix do_fips script
Use faster curves for ECDSA self test
Use more portable clock_gettime for fips_test_suite timingOutput times of each subtest
Stop warning in VxWorks
Quick hack to time POST
Two more symbol renames
Handle multiple CPUID_OBJ correctly
Rename some more symbols
Include cryptoh in ppccapc
Add ppc_capc to restricted tarball
For FIPS algorithm test utilities use our own version of strcasecmp andstrncasecmp to cover cases where platforms don't support them
Some changes to support VxWorks in the validted module
Disable SHA256 if not supported
Update symbol translation table
no need to include memoryh
Initial incomplete TLS v12 support New ciphersuites added, new versionchecking added, SHA256 PRF support addedAt present only RSA key exchange ciphersuites work with TLS v12 as thenew signature format is not yet implemented
Initial "opaque SSL" framework If an application definesOPENSSL_NO_SSL_INTERN all ssl related structures are opaqueand internals cannot be directly accessed Many applicationswill need some modification to support this and most likely someadditional functions added to OpenSSLThe advantage of this option is that any application supportingit will still be binary compatible if SSL structures change
Don't assume version of rm supports rf: use RM instead
Stop warnings about undefined _exit on AndroidAdditional script output options to fipsalgtestpl
Fix warning
Recognise invalid enable/disable optionsOption to shut up bogus warnings
Clarification
gcm128c: minor optimization
ccm128c: add CRYPTO_ccm128_[en|de]crypt_ccm64 and minor optimization
fips_check_dsa_prng should only be built when OPENSSL_FIPS is defined
Error discrepancy corrected
More fixes for DSA FIPS overrides
Make sure overrides work for RSA/DSA
Oops, work out expanded buffer length before allocating it
Always return multiple of block length bytes from default DRBG seedcallbackHandle case where no multiple of the block size is in the interval[min_len, max_len]
Add PRNG security strength checking
xts128c: fix bug introduced in commit20704 Bug affected encryption ofvectors whose lenght was not multiples of 16 bytes
Return errors instead of aborting when selftest fails
Add XTS test vector support to fipsalgtestpl
Rewrite OutputValue to avoid use of buffer when printing out hex valuesDelete unused functions from fips_utlhIncrease xts line buffer
Initial do_fipsbat build script for WIN32 fipscanister
Reconise noecnistp22464gcc128 option
Make fipscanisteronly auto detect work on WIN32
Fix WIN32 warning
Update ordinals
Add continuous RNG test to entropy source Entropy callbacks now needto specify a "block length"
Update DRBG to use new POST scheme
Add periodic DRBG health checks as required by SP80090
Add partial GCM tests to fipsalgtestpl
Add partial DH and ECDH primitives only testing to fipsalgtestpl
Warn if lines are truncated in algorithm test utilitiesSupport for new test files: DRBG and CCM
xts128c: minor optimization and clarified prototype
perlasm/x86gaspl: make OPENSSL_instrument_bus[2] compile
Add AES CCM selftest
Use 0 for tbslen to perform strlen
Add fips/cmac directory to WIN32 build
Fix EVP CCM decrypt Add decrypt support to algorithm test program
Typo
ccm128c: fix Win32 compiler warning
perlasm/x86[nm]asmpl: make OPENSSL_instrument_bus[2] compile
ccm128c: fix STRICT_ALIGNMENT another bug in CRYPTO_ccm128_decrypt
Override flag for XTS length limit
CCM encrypt algorithm test support
Initial untested CCM support via EVP
Compile ccm128c, move some structures to modes_lclh add prototypes
Don't need separate tag buffer for GCM mode: use EVP_CIPHER_CTX buffield which is not unused for custom ciphers
Remove shlib_wrapsh as it is not needed all algorithm tests arestaticly linked to fipscanistero Add option to generate a shellscript to run all tests: this is useful for platforms that don't haveperl
Multiple assembler packs: add experimental memory bus instrumentation
Remove PSS salt length detection hack from fipslagtestpl by allowing a regexpsearch of the file to determine its type This will be needed for other testslater
ccm128c: minor optimization and bugfix in CRYPTO_ccm128_[en|de]crypt
Add "post" option to fips_test_suite to run the POST only and exit
Add length limitation from SP80038E
Add XTS selftest, include in fips_test_suite
Add algorithm driver for XTS mode Fix several bugs in EVP XTS implementation
Add new POST support to X931 PRNG
Report each cipher used with CMAC testsOnly add one error to error queue if a specific test type fails
Revise fips_test_suite to use table of IDs for human readable stringsModify HMAC selftest callbacks to notify each digest type used
Update CMAC, HMAC, GCM to use new POST systemFix crash if callback not set
Remove several of the old obsolete FIPS_corrupt_ functions
Initial incomplete POST overhaul: add support for POST callback toallow status of POST to be monitored and/or failures induced
Remove duplicate flag
Use consistent FIPS tarball nameAdd XTS to FIPS buildHide XTS symbol names
Provisional AES XTS support
Update fips_pkey_signature_test: use fixed string if supplies tbs isNULL Always allocate signature bufferUpdate ECDSA selftest to use fips_pkey_signature_test Add copyright noticeto file
Complete rewrite of FIPS_selftest_dsa Use hardcoded 2048 bit DSA keyand SHA384 Use fips_pkey_signature_test
Update RSA selftest code to use a 2048 bit RSA and only a single KATfor PSS+SHA256
Fix memory leaks: uninstantiate DRBG during health checks Cleanup md_ctxwhen performing ECDSA selftest
Stop warning and fix memory leaks
No need to disable leak checking for FIPS builds now we use internalmemory callbacks
Update ECDSA selftest to use hard coded private keys Include tests forprime and binary fields
Update fips_premainc fingerprint
Update copyright yearZero ciphertext and plaintext temporary buffersCheck FIPS_cipher return value
Use correct version number
Add mem_clrc explicity for noasm builds
Fix warning
Set length to 41 40 hex characters + null
Reorder headers to get definitions before they are used
Don't give dependency warning for fips buildsGive error for "make depend" in restricted tarball buildsDocument how restricted tarballs work
Typo: fix duplicate call
fix fipscanisteronly autodetect
Auto detect noec2m add option to make noec2m tarball
set OPENSSL_FIPSSYMS for restricted buils and auto detect noec2m
Clarify READMEFIPS
Auto configure for fips is from restricted tarballRemove more unnecessary files form fips tarball
Remove unused build targets from Makefilefips, add cmac to dist list
remove ENGINE dependency from ecdh
Add error for health check failureRebuild all FIPS error codes to clean out old obsolete codes
Before initalising a live DRBG ie not in test mode run a complete healthcheck on a DRBG of the same type
New function to return security strength of PRNG
DH keys have an until now unused 'q' parameter When creatingfrom DSA copy q across and if q present generate DH key in thecorrect range
Only use fake rand once per operation This stops the ECpairwise consistency test interfering with the test
Update CHANGES
Add fips hmac key to dgst utility
Update OpenSSL DRBG support code Use date time vector as additional dataSet FIPS RAND_METHOD at same time as OpenSSL RAND_METHOD
Add missing error code strings
Remove rand files from fipscanistero
check buffer is larger enough before overwriting
updated FIPS status
Update fipssymsh to keep all symbols in FIPS,fips namespaceRename drbg_cprng_test to fips_drbg_cprng_testRemove rand files from Makefilefips
Extensive reorganisation of PRNG handling in FIPS module: all callsnow use an internal RAND_METHOD All dependencies to OpenSSL standardPRNG are now removed: it is the applications resposibility to setupthe FIPS PRNG and initalise itInitial OpenSSL RAND_init_fips function that will setup the DRBGfor the "FIPS capable OpenSSL"
Rename deprecated FIPS_rand functions to FIPS_x931 These shouldn't beused by applications directly and the X931 PRNG is deprecated by newFIPS1402 rules anyway
FIPS mode support for openssl utility: doesn't work properly yet dueto missing DRBG support in libcrypto
Updated error codes for FIPS library
Set error code is additional data callback fails
Use environment when builds libcrypto shared library so CC value is picked upin FIPS builds
Change FIPS locking functions to macros so we get useful line informationSet fips_thread_set properly
gcm128c: fix shadow warnings
Disable test fprintf
Change RNG test to block oriented instead of request oriented, add optionto test a "stuck" DRBG
check RAND_pseudo_bytes return value
PR: 2462Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS Retransmission Buffer Bug
PR: 2458Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveDon't change state when answering DTLS ClientHello
PR: 2457Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steveFix DTLS fragment reassembly bug
Make WIN32 static builds work again
ARM assembler pack: add missing arm_archh
ARM assembler pack: profilerassisted optimizations and NEON support
gcm128c: tidy up, minor optimization, rearrange gcm128_context
restore cvsignore
restore cvsignore
delete lib file
temporarily update cvsignore
Only zeroise sensitive parts of DRBG context, so the type and flagsare undisturbedAllow setting of "rand" callbacks for DRBG
Allow FIPS malloc callback setting Automatically set some callbacksin OPENSSL_init
Add additional OPENSSL_init handling add dummy call to hopefullyensure OPENSSL_init is always linked into an application
Provisional support for auto called OPENSSL_init function This can beused to set up any appropriate functions such as FIPS callbacks withoutrequiring an explicit application call
Initial switch to DRBG base PRNG in FIPS mode Include bogus seeding fortest applications
Unused, untested, provisional RAND interface for DRBG
Remove redundant definitions Give error code if DRBG sefltest fails
Reorganise DRBG API so the entropy and nonce callbacks can return apointer to a buffer instead of copying to a fixed length buffer Thisremoves the entropy and nonce length restrictions
fix warnings
Update cvsignore
Add cvsignore
Have all algorithm test programs call fips_algtest_init at startup:this will perform all standalone operations such as setting errorcallbacks, entering FIPS mode etc
Disable cmac tests by default so the old algorithm test vectors work
Corrections to the VMS build systemSubmitted by Steven M Schweda <sms@antinodeinfo>
Allow setting of get_entropy and get_nonce callbacks outside test modeTest mode is now set when a DRBG context is initialised
Add cvsignore
Remove unused function
Fix compiler warnings
Make some Unix builds work again
Typo
For VMS, implement the possibility to choose 64bit pointers withdifferent options:"64"		The build system will choose /POINTER_SIZE64ARGV ifthe compiler supports it, otherwise /POINTER_SIZE64"64"		The build system will force /POINTER_SIZE64"64ARGV"	The build system will force /POINTER_SIZE64ARGV
make update
 Configure, crypto/ec/ech, crypto/ec/ecp_nistp224c, util/mkdefpl:Have EC_NISTP224_64_GCC_128 treated like any algorithm, and havedisabled by default  If we don't do it this way, it screws uplibeaynum util/libeaynum: make update
 fips/cmac/fips_cmac_selftestc: Because the examples in SP_80038Baren't trustworthy see examples 13 and 14, they have the same mac,as do examples 17 and 18, use examples from official test vectorsinstead
 fips/fipsalgtestpl: Test the testvectors for all the CMAC cipherswe support
 fips/cmac/fips_cmactestc: Some say TDEA, others say TDES  Supportboth names
 fips/cmac/fips_cmactestc: Changed to accept all the ciphers wesupport Two Key TDEA is not supported, to handle really bigmessages some of the test vectors have messages 65536 bytes long,and to handle cases where there are several keys Three Key TDEA
 Makefilefips: Update and add details about cmac
make update
Implement FIPS CMAC fips/fips_test_suitec, fips/fipsalgtestpl, test/Makefile: Hook intest cases and build test program
Implement FIPS CMAC fips/cmac/: Implement the basis for FIPS CMAC, using FIPS HMAC asan example crypto/cmac/cmacc: Enable the FIPS API  Change to use M_EVP macroswhere possible crypto/evp/evph: some of the macros get added with this change fips/fipsh, fips/utl/fips_encc: Add a few needed functions and usemacros to have cmacc use these functions Makefileorg, fips/Makefile, fips/fipsc: Hook it in
make update 110devThis meant alarger renumbering in util/libeaynum due to symbolsappearing in 100stable and 101stable  However, since there'sbeen no release on this branch yet, it should be harmless
 crypto/cryptolibcom: Add a few more missing modules
 util/mkdefpl: Add crypto/o_strh and crypto/o_timeh  Maybe somemore need to be added
Use a signed value to check return value of do_cipher
Free DRBG context in self tests
 apps/makeappscom: Add srp
 apps/makeappscom: Forgot to end the check for /POINTER_SIZE64ARGVwith turning trapping back on test/maketestscom: Do the same check for /POINTER_SIZE64ARGVhere test/cleantestcom: A new script for cleaning up
 apps/opensslc: For VMS, take care of copying argv if needed much earlier,directly in main  'if needed' also includes when argv is a 32 bitpointer in an otherwise 64 bit environment apps/makeappscom: When using /POINTER_SIZE64, try to use the additionalARGV, but only if it's supported  Fortunately, DCL is very helpfultelling us in this case
A few more long symbols need shortening
Add missing source  Also, have the compile also use [MODES] asinclude directory, as other parts notably, EVP seem to need it
After some adjustments, apply the changes OpenSSL 100d on OpenVMSsubmitted by Steven M Schweda <sms@antinodeinfo>
Typo
Implement continuous RNG test for SP80090 DRBGs
Implement health checks needed by SP80090Fix warningsInstantiate DRBGs at maximum strength
Fix warnings about ignored return values
Fix broken SRP error/function code assignment
Add extensive DRBG selftest data and option to corrupt it in fips_test_suite
Missing SRP files
Fix Tom Wu's email
PR: 2469Submitted by: Jim Studt <jim@studtnet>Reviewed by: steveCheck mac is present before trying to retrieve mac iteration count
Fix warnings: signed/unisgned comparison, shadowing in some cases globalfunctions such as rand 
Remove redundant check to stop compiler warning
Note SRP support
Add SRP support
Fix warning
Check requested security strength in DRBG Add function to retrieve thesecurity strength
make nodsa work again
Update status
Make noec2m work again
Add a few more symbol renames
Add ECDH to validated module
Enter FIPS mode in fips_dhvs Support file I/O in fips_ecdsavs
Update fips_dhvs to handle functional test by generating keys
Update cvsignore
Typo
New initial DH algorithm test driver
New SP 80056A compliant version of DH_compute_key
Add meaningful error codes to DRBG
Add file I/O to fips_drbgvs program
Support I/O with files in new fips_gcmtest program
Remove redirection from fipsalgtestpl script
Remove need for redirection on RNG and DSS algorithm test programs: someplatforms don't support it
Uninstantiate and free functions for DRBG
Fix couple of bugs in CTR DRBG implementation
Updates to DRBG: fix bugs in infrastructure Add initial experimentalalgorithm test generator
Initial, provisional, subject to wholesale change, untested, probablynot working, incomplete and unused SP80090 DRBGs for CTR and Hash modesDid I say this was untested?
ia64montpl: optimize shortkey performance
ghashx86pl: optimize for Sandy Bridge
xts128c: minor optimization
s390x assembler pack: tuneup and support for new z196 hardware
Update status information
Stop warnings
Use more portable options when making links in Makefilefips
Add DllMain to fips symbols: will need to call this in FIPS capable OpenSSL
Add new symbols to fipssymsh
Make DOPENSSL_FIPSSYMS work under WIN32: run perl script whenWIN32 assembly language files are created, add norunasm optionto just translate and not run the assembler
Make mkfilespl work with fipscanisteronly
Include ms directory for fips distribution
Make fipscanisteronly work with WIN32 build system
Add fips/ecdsa directory to mkfilespl
Remove duplicate test rule
Add modes_lclh to header list
Removing debugging print
Don't try and update c_rehash for fipscanisteronly builds
Make "make links" work in fipscanisteronly builds
typo
Initial perl script to filter out unneeded files for a fips tarball
Call Makefilefips when making a fips tarball
Remove debugging option
 empty log message 
Remove unnecessary link directories
Update dependencies
Create fips links even if not compiling in fips mode
Remove unnecessary dependencies
Need to link additional directories for fipscanisteronly build
x509v3h header file not needed in fips algorithm test utilities
tools and rehash not needed for fips build
 empty log message 
Make fipscanisteronly build only required files
Move gcm128_context definition to modes_lclh along with some relateddefinitions so we can use it in EVP GCM code avoiding need to allocateit
add ECDSA POST
AES GCM selftests
Make DOPENSSL_FIPSSYMS work for assembly language builds
Experimental perl script to edit assembly language source files,call the assembler, then restore original fileThis makes OPENSSL_FIPSSYMS work for assembly language builds
Correct fipssymsh for more assembly language symbols
Update auto generated comment
Remove debugging commandReorder fipssymsh to include assembly language symbols at the end
Don't need err library for Makefilefips
Include openssl/cryptoh first in several other files so FIPS renamingis picked up
Experimental FIPS symbol renamingFixups under fips/ to make symbol renaming work
Experimental symbol renaming to avoid clashes with regular OpenSSLMake sure cryptoh is included first in any affected files
Add pairwise consistency test to EC
Use SHA256 in fips_test_suite
Update pairwise consistency checks to use SHA256
Add nonFIPS algorithm blocking and selftest checking
Add FIPS flags to AES ciphers and SHA digests
Ignore final '\n' when checking if hex line length is odd
Add support for SigGen and KeyPair tests
Update ECDSA test program to handle ECDSA2 format filesCorrectly handle hex strings with an odd number of digits
Add cvsignore
Add ECDSA functionality to fips module Initial very incomplete versionof algorithm test program
Include support for an add_lock callback to tiny FIPS locking API
Don't use FIPS api for ec2_octc
Reorganise ECC code for inclusion in FIPS moduleMove compression, point2oct and oct2point functions into separate filesAdd a flags field to EC_METHODAdd a flag EC_FLAGS_DEFAULT_OCT to use the default compession and octfunctions all existing methods do this This removes dependencies fromEC_METHOD while keeping original functionality
Use BN_nist_mod_func to avoid need to peek error queue
New function BN_nist_mod_func which returns an appropriate functionif the passed prime is a NIST prime
Remove dependency of dsa_signo and dsa_vrfo: new functions FIPS_dsa_sig_newand FIPS_dsa_sig_free, reimplment DSA_SIG_new and DSA_SIG_free from ASN1library
Change FIPS source and utilities to use the "FIPS_" names directlyinstead of using regular OpenSSL API names
Make noec2m work on Win32 build Add nexprotoneg support too
Disable some functions in headers with noec2m
New option to disable characteristic two fields in EC code
dso_dlfcnc: make it work on Tru64 40PR: 2316
Configure: engage assembler in Android target
gcm128c: make it work with nosse2
Add Makefilefips
New "fispcanisteronly" build option: only build fipscanistero andassociated utilities This functionality will be used by the validatedtarball
Make Windows build work with GCM
In FIPS mode only use "Generation by Testing Candidates" equivalent
Return security strength for supported DSA parameters: will be usedlater
Free keys if DSA pairwise error
x86gaspl: make data_short work on legacy systems
xts128c: initial draft
Disable FIPS restrictions when doing GCM testing
Add GCM IV generator Add some FIPS restrictions to GCM Update fips_gcmtest
ccm128c: initialize ctx>block what I was smoking?
ccm128c: initial draft
Equally experimental encrypt side for fips_gcmtest Currently this uses IVsin the request file need to update it to generate IVs once we have an IVgenerator in place
Sync with 101 branchCVE20110014 OCSP stapling fix has been applied to HEAD as well
Set values to NULL after freeing them
Experimental incomplete AES GCM algorithm test program
OCSP stapling fix OpenSSL 098r/100dSubmitted by: Neel Mehta, Adam Langley, Bodo Moeller
Link GCM into FIPS module Check return value in EVP gcm
Synchronize with 100 branch
gcm128c: add boundary condition checks
Initial very experimental EVP support for AESGCM Note: probably verybroken and subject to change
Add CRYPTO_gcm128_tag function to retrieve the tag
Use 0 not 1 since type is size_t for finalisation argument to do_cipher:the NULL value for the input buffer is sufficient to notice this case
Typo
New flags EVP_CIPH_FLAG_CUSTOM_CIPHER in cipher structures if an underlyingcipher handles all cipher symantics itself
Fix memory leak
Use default ASN1 if flag set
gcm128c: allow multiple calls to CRYPTO_gcm128_aad
gcm128c: fix bug in OPENSSL_SMALL_FOOTPRINT decryptPR: 2432Submitted by: Michael Heyman
Fix duplicate code and typo
Remove unneeded functions, make some functions and variables static
Add FIPS support to the WIN32 build system
Transfer error redirection to fipsh, add OPENSSL_FIPSAPI to source filesthat use it
Rename crypto/fips_errc to fips_ersc to avoid clash with other fips_errc
Include fips header file in err_allc if needed
Add FIPS error codes
add stripcr option to copypl from 098
Add Windows FIPS build utilities
For now disable EC_GFp_nistp224_method for WIN32 so the WIN32 buildcompletes without linker errors
Add FIPS support to mkdefpl script, update ordinals
Use single X931 key generation source file for FIPS and nonFIPS builds
Assorted bugfixes: safestack macro changes for C++ were incomplete RLE decompression boundary case SSL 20 key arg length checkSubmitted by: Google Adam Langley, Neel Mehta, Bodo Moeller
fix omissions
CVE20104180 fix from OpenSSL_1_0_0stable
make update
Fix error codes
Cope with new DSA2 file format where some p/q only tests are made
Fix target config errors
Make noasm work in fips mode Add android platform
Add sign/verify digest API to handle an explicit digest instead of finalisinga context
Remove DSA parameter generation from DSA selftest It is unnecessary andcan be very slow on embedded platforms Hard code DSA parameters instead
Don't try to set pmd if it is NULL
Add DSA2 support to final algorithm tests: keypair and keyver
Support more DSA2 tests
Tolerate mixed case and leading zeroes when comparing
fixes for DSA2 parameter generation
update READMEFIPS
Since FIPS 1863 specifies we use the leftmost bits of the digestwe shouldn't reject digest lengths larger than SHA256: the FIPSalgorithm tests include SHA384 and SHA512 tests
Provisional, experimental support for DSA2 parameter generation algorithmNot properly integrated or tested yet
stop warnings about no previous prototype when compiling shared engines
Fix shared build for fips
Add fips option into Configure, disable endian code for noasm and FIPSMake shared library default for fips
add fiplibdir and basedir options to Configure
use different default fips install directory
update version to 20
typo
don't descend fips directory if not in fips mode
Add preliminary FIPS information
Move all FIPSAPI renames into fipsh header file, include early incryptoh if neededModify source tree to handle change
add cvsignore
add FIPS API malloc/free
Redirect FIPS memory allocation to FIPS_malloc routine, removeOpenSSL malloc dependencies
add fips_dsatestc file
Update source files to handle new FIPS_lock location Add FIPS_lockdefinition Remove stale function references from fipsh
Change OPENSSL_FIPSEVP to OPENSSL_FIPSAPI as it doesn't just referto EVP any moreMove locking define into fipshSet FIPS locking callbacks at same time as OpenSSL locking callbacks
Include thread ID code in fips module
New FIPS_lock function for minimal FIPS locking API: to avoid dependencieson OpenSSL locking code Use API in some internal FIPS filesRemove redundant ENGINE defines from fipsh
Move locking and thread ID functions into new files lockc and thr_idc,redirect locking to minimal FIPS_lock function where required
use FIPSEVP in some bn and rsa files
update cvsignore
Internal version of BN_mod_inverse allowing checking of noinverse withoutneed to inspect error queue
FIPS changes to test/Makefile: rules to build FIPS test applications
Use ARX in crypto/Makefile
FIPS HMAC changes:Use EVP macrosUse tiny EVP in FIPS mode
Change AR to ARX to allow exclusion of fips object modules
FIPS mode ERR changes Redirect errors to tiny FIPS callbacks to avoid ERRlibrary dependencies
FIPS DH changes: selftest checks and key range checks
FIPS mode DSA changes:Check for selftest failuresPairwise consistency test for RSA key generationUse some EVP macros instead of EVP functionsUse minimal FIPS EVP where neededKey size restrictions
FIPS mode RSA changes:Check for selftest failuresPairwise consistency test for RSA key generationUse some EVP macros instead of EVP functionsUse minimal FIPS EVP where needed
add new RAND errors
FIPS mode EVP changes:Set EVP_CIPH_FLAG_FIPS on approved ciphersSupport "default ASN1" flag which avoids need for ASN1 dependencies in FIPScodeInclude some defines to redirect operations to a "tiny EVP" implementationin some FIPS source filesChange m_sha1c to use EVP_PKEY_NULL_method: the EVP_MD sign/verify functionsare not used in OpenSSL 10 and later for SHA1 and SHA2 ciphers: the EVP_PKEYAPI is used instead
FIPS mode changes to make RNG compile this will need updating later as weneed a whole new PRNG for FIPS1 avoid use of ERR_peek2 If compiling with FIPS use small FIPS EVP and disable ENGINE
Add fipscanisterbuild configuration option and update Makefileorg: doesn't compile yet
FIPS_allow_md5 no longer exists and is no longer required
Add rsa_crpt
update mkerrpl for use fips directory, add arxpl script
add fips_premaincsha1
add fips_sha1_selftestc
add fips/sha files
add fips/aes/Makefile
add fips/des/Makefile
add fips/Makefile
add some missing fips files
And so it begins againInitial FIPS 1402 code ported to HEAD Doesn't even compile yet, may havemissing files, extraneous files and other nastinessIn other words: it's experimental ATM, OK?
Move RSA encryption functions to new file crypto/rsa/rsa_crptc to separatecrypto and ENGINE dependencies in RSA library
Move BN_options function to bn_printc to remove dependency for BIO printfroutines from bn_libc
Move DSA_sign, DSA_verify to dsa_asn1c and include separate versions ofDSA_SIG_new and DSA_SIG_free to remove ASN1 dependencies from DSA_do_signand DSA_do_verify
recalculate DSA signature if r or s is zero FIPS 1863 requirement
revert Makefile change
PR: 2433Submitted by: Chris Wilson <chris@qwirxcom>Reviewed by: steveConstify ASN1_STRING_set_default_mask_asc
New function EC_KEY_set_affine_coordinates this performs all theNIST PKV tests
check EC public key isn't point at infinity
PR: 1612Submitted by: Robert Jackson <robert@rjswebnet>Reviewed by: steveFix EC_POINT_cmp function for case where b but not a is the point at infinity
oops, revert mistakenly committed EC changes
Add additional parameter to dsa_builtin_paramgen to output the generatedseed to: this doesn't introduce any binary compatibility issues as thefunction is only used internallyThe seed output is needed for FIPS 1402 algorithm testing: the functionalityused to be in DSA_generate_parameters_ex but was removed in OpenSSL 100
add va_list version of ERR_add_error_data
stop warning with noengine
PR: 2425Synchronise VMS build with Unixly build
Constify
Fix warning
missed change in ACKNOWLEDGEMENTS file
move some string utilities to buf_strc to reduce some dependencies from 098 branch
add X931 prime generation routines from 098 branch
PR: 2407Fix fault includeSubmitted by Arpadffy Zoltan <ZoltanArpadffy@scientificgamesse>
Don't use decryption_failed alert for TLS v11 or later
Since DTLS 10 is based on TLS 11 we should never return a decryption_failedalert
oops missed an assert
PR: 2411Submitted by: Rob Austein <sra@hactrnnet>Reviewed by: steveFix corner cases in RFC3779 code
Fix escaping code for string printing If any escaping is enabled wemust escape the escape character itself backslash
PR: 2410Submitted by: Rob Austein <sra@hactrnnet>Reviewed by: steveUse OPENSSL_assert instead of assert
PR: 2413Submitted by: Michael Bergandi <mbergandi@gmailcom>Reviewed by: steveFix typo in crypto/bio/bss_dgramc
avoid verification loops in trusted store when path building
Part of the IF structure didn't get pasted herePR: 2393
e_capic: rearrange includes to improve portabilityPR: 2394
First attempt at adding the possibility to set the pointer size for the builds on VMSPR: 2393
Support routines for ASN1 scanning function, doesn't do much yet
e_capic: change from ANSI to TCHAR domain This makes it compilable onWindows CE/Mobile, yet keeps it normal Windows loopPR: 2350
apps/x590c: harmonize usage of STDout and out_errPR: 2323
bss_filec: refine UTF8 logicPR: 2382
ignore leading null fields
update FAQ
PR: 2386Submitted by: Stefan Birrer <stefanbirrer@adnovumch>Reviewed by: steveCorrect SKM_ASN1_SET_OF_d2i macro
fix doc typos
use right version this time in FAQ
update FAQ
Configure: make mnocygwin optional on mingw platformsPR: 2381
PR: 2385Submitted by: Stefan Birrer <stefanbirrer@adnovumch>Reviewed by: steveZero key>pkeyptr after it is freed so the structure can be reused
Better method for creating SSLROOT:Make sure to include the path to evptesttxt
TABLE update
s390x assembler pack: adapt for m31 build, see commentary in Configurefor more details
apply JPKAKE fix to HEAD original by Ben
Some of the MS_STATIC use in crypto/evp is a legacy from the days whenEVP_MD_CTX was much larger: it isn't needed anymore
PR: 2240Submitted by: Jack Lloyd <lloyd@randombitnet>, "Mounir IDRASSI" <mouniridrassi@idrixnet>, steveReviewed by: steveAs required by RFC4492 an absent supported points format by a server isnot an error: it should be treated as equivalent to an extension onlycontaining uncompressed
using_ecc doesn't just apply to TLSv1
fix typo in HMAC redirection, add HMAC INIT tracing
VERY EXPERIMENTAL HMAC redirection example in OpenSSL ENGINE Untested at thisstage and probably wont work properly
add "missing" functions to copy EVP_PKEY_METHOD and examine info
oops, revert invalid change
use generalise mac API for SSL key generation
constify EVP_PKEY_new_mac_key
INSTALLW32: document trouble with symlinks under MSYSPR: 2377
Use the same directory for architecture dependent header files as inthe branches OpenSSL1_0_0stable and OpenSSL1_0_1stable
Implement bc test strategy as submitted by Steven M Schweda <sms@antinodeinfo>Make sure we move to '__here' before trying to use it to build local sslroot:
Print openssl version information at the end of the tests
Give the architecture dependent directory higher priority
Don't define an empty CFLAGS, it's much more honest not to defined it at allMake sure to remove any [CRYTO]BUILDINFH so it doesn't get used instead of[''ARCH'CRYPTO]BUILDINFH
 testscom: Add the symbol openssl_conf, so the openssl applicationstops complaining about a missing configuration file  Define the logicalname PERL_ENV_TABLES with values to Perl considers the DCL symbol tableas part of the environment see 'man perlvms' for details, so cmstestplcan get the value of EXE_DIR from testscom, among others cmstestpl: Make changes to have it work on VMS as well  Upper or mixedcase options need to be quoted and the openssl command needs a VMSspecifictreatment  It all should work properly on Unix, I hope it does on Windowsas well
Better way to build tests  Taken from OpenSSL1_0_1stable
Synchronise with Unix and do all other needed modifications to have itbuild on VMS again
s390xS: fix typo in bn_mul_wordsPR: 2380
Taken from OpenSSL_1_0_0stable:Include proper header files for time functionsSubmitted by Arpadffy Zoltan <ZoltanArpadffy@scientificgamesse>
add pice of PR2295 not committed to HEAD
PR: 2376Submitted by: Guenter <lists@gknwnet>Reviewed by: steveCleanup alloca use, fix Win32 target for OpenWatcom
PR: 2375Submitted by: Guenter <lists@gknwnet>Reviewed by: stevecleanup/fix e_aepc for OpenWatcom
PR: 2374Submitted by: Guenter <lists@gknwnet>Reviewed by: steveDon't compile capi ENGINE on mingw32
Tell the user what test is being performed
We expect these scripts not to bail on error, so make sure that's what happens
Synchronise with Unix tests
We redid the structure on architecture dependent source files, butapparently forgot to adapt the copying to the installation directory
remove duplicate statement
compile cts128c on VMS
fix no SIGALRM case in speedc
PR: 2372Submitted by: "WCA Wijngaards" <wouter@nlnetlabsnl>Reviewed by: steveFix OpenBSD compilation failure
oops, reinstate TLSv1 string
Don't assume a decode error if session tlsext_ecpointformatlist is not NULL: it can be legitimately set elsewhere
bring HEAD up to date, add CVE20103864 fix, update NEWS files
add TLS v11 options to s_server
If EVP_PKEY structure contains an ENGINE the key is ENGINE specific andwe should use its method instead of any generic one
Only use explicit IV if cipher is in CBC mode
Get correct GOST private key instead of just assuming the last one iscorrect: this isn't always true if we have more than one certificate
preliminary acknowledgments file
Submitted By: Bogdan Harjoc <harjoc@gmailcom>Add missing debug WIN64 targets
PR: 2366Submitted by: Damien Miller <djm@mindrotorg>Reviewed by: steveStop pkeyutl crashing if some arguments are missing Also make str2fmttolerate NULL parameter
Submitted by: Jonathan Dixon <joth@chromiumorg>Reviewed by: steveIf store is NULL set flags correctly
Configure: update mips[32|64]_asm lines
sha512mipspl: add missing 64bit byte swap
Add aesmipspl assembler module
sha512mipspl: fix "littleendian" typos
PR: 2295Submitted by: Alexei Khlebnikov <alexeikhlebnikov@operacom>Reviewed by: steveOOM checking Leak in OOM fix Fallthrough comment Duplicate codeelimination
x86_64xlatepl: fix LNK4078 and LNK4210 link warningsPR 2356
move CHANGES entry to correct place
PR: 2314Submitted by: Mounir IDRASSI <mouniridrassi@idrixnet>Reviewed by: steveFix for double free bug in ssl/s3_clntc CVE20102939
We can't always read 6 bytes in an OCSP response: fix so error statusesare read correctly for nonblocking I/O
fix signature printing routines
fix warnings
Minor documentation fixes, PR2345
Minor documentation fixes, PR2344
Typo, PR2346
Add call to ENGINE_register_all_complete to ENGINE_load_builtin_engines,this means that some implementations will be used automatically, eg aesni,we do this for cryptodev anywaySetup cpuid in ENGINE_load_builtin_engines too as some ENGINEs use it
sha512mipspl: add missing byte swap for littleendians
MIPS assembler pack: enable it in Configure, add SHA2 module, fix make rules,update commentary
Add unified mipspl, which will replace mips3s
sha1mipspl, mipsmontpl: unify MIPS assembler modules in respect toABI and binutils
ghashs390xpl: reschedule instructions for better performance
s390x assembler pack: extend OPENSSL_s390xcap_P to 128 bits
VC32pl: default to nasm if neither nasm or nasmw is is found at the momentPR: 2338
Alpha assembler pack: adapt for LinuxPR: 2335
sha1armv4largepl: more readable input pickup
Configure: remove redundant DMD32_REG_Tint
crypto/ppc[cpuid|cap]: call CPU detection once and detect AltiVec
crypto/bn/asm/s390xS: drop redundant instructions
Add ghashs390xpl
modes/asm/ghashpl: switch to [more reproducible] performance resultscollected with 'apps/openssl speed ghash'
ghashia64pl: 50 performance improvement of gcm_ghash_4bit
sparcv9capc: disengange Solarisspecific CPU detection routine in favourof unified procedure relying on SIGILLPR: 2321
Fixes to NPN from Adam Langley
NPN tests
Fix warnings
make nogost work on Windows
fix bug in AES_unwrap
More C language police work
C conformity fixes: Move declarations before statements in all blocks
C conformity fixes: Move declarations before statements in all blocks Where 64bit type is required, use it explicitly not 1l
PR: 1833Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fix other cases not covered by original patch
Update version numbers
For better forwardsecurity support, add functionsSSL_[CTX_]set_not_resumable_session_callbackSubmitted by: Emilia Kasper Google[A part of this change affecting ssl/s3_libc was accidentally commitedseparately, together with a compilation fix for that file;see s3_libc CVS revision 1133 http://cvsopensslorg/chngview?cn19855]
Patch from PR 1833 was broken: there's no s>s3>new_sessiononly s>new_session
formatting error
New 64bit optimized implementation EC_GFp_nistp224_methodThis will only be compiled in if explicitly requestedifdef EC_NISTP224_64_GCC_128Submitted by: Emilia Kasper Google
sync and update ordinals
PR: 1833Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Support for abbreviated handshakes when renegotiating
ECC library bugfixesSubmitted by: Emilia Kasper Google
Harmonize with OpenSSL_1_0_1stable version of CHANGES
util/cygwinsh: maintainer's updateSubmitted by: Corinna Vinschen
engine/Makefile: harmonize engine install rule for dylib extension on MacOS XPR: 2319
gcm128c: fix typo in CRYPTO_gcm128_encrypt_ctr32 name
Makefileshare: fix brownbag typo in link_odarwin
crypto/modes/Makefile: fix typo in ghashpariscs rule
PR: 2315Use consistent calculation for PSS salt length
sha1armv4largepl: reschedule instructions for dualissue pipeline
rc5_loclh: make inline assembler clangfriendly
gcm128c: add CRYPTO_gcm128_[en|de]crypt_ctr32
md32_commonh: modify MD32_REG_T preprocessing logic [triggered by clang]
Fix ctr mode properly this time
Make ctr mode behaviour consistent with other modes
Add Next Protocol Negotiation
alphacpuidpl: fix brownbag bug
Sign mismatch
Missing prototype
aesx86_64pl: commit19797 was overzealous, partially reverse
Replace alphacpuids with alphacpuidpl to ensure it makes to release tarballsPR: 2309
ms/: update do_win64bat and remove redundant mingw32bat
sha1alphapl: commentary update
rc4s390xpl: harmonize build rule with other similar rules
ghashia64pl: excuse myself from implementing "528B" variant
modes/Makefile: update clean rule
eng_aesnic: switch to CRYPTO_ctr128_encrypt_ctr32
aesx86_64pl: remove redundant instructions
perlasm/x86_64xlatepl: extend SSE>2 to ml64
aesnix86_64pl: fix typos
perlasm/x86asmpl: move aesni and pclmulqdq opcodes to aesnix86pl andghashx86pl
Add new type ossl_ssize_t instead of ssize_t and move definitions toe_os2h, this should fix WIN32 compilation issues and hopefully avoidconflicts with other headers which may workaround ssize_t in different ways
if out deleted function from headers so it isn't picked up by WIN32 buildsystem
WIN32 build fix
Sync ordinals and update
Update symhacks
Add modesh and cmac to WIN32 build system
aesnix86[_64]pl: finetune, add CCM subroutine, add performance data
Fix WIN32 build system to correctly link ENGINE DLLs contained in adirectory: currently the GOST ENGINE is the only case
Add call to ENGINE_register_all_complete to ENGINE_load_builtin_engines,this means that some implementations will be used automatically, eg aesni,we do this for cryptodev anywaySetup cpuid in ENGINE_load_builtin_engines too as some ENGINEs use it
PR: 1830Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>, Steve HensonSupport for RFC5705 key extractor
oops, revert wrong patch
Fix warnings From HEAD, original patch by Ben
Makefileshared: link_odarwin comment update
Configure: suppress $multilib with nonsystem $prefixPR: 2307
Makefileshared: debugging line slipped through in previous commit
Makefileshared: update link_odawrin rulePR: 2306
aess390xpl: revisit buffer allocation and add performance data
sha1armv4largepl: add performance data for Cortex A8 core
ARM assembler pack: reschedule instructions for dualissue pipelineModest improvement coefficients mean that code already had someparallelism and there was not very much room for improvement Specialthanks to Ted Krovetz for benchmarking the code with such patience
PR: 2297Submitted by: Antony, Benoy <bantony@ebaycom>Approved by: steve@opensslorgFix bug in AES wrap code when t > 0xff
Configure: fix aes_ctro regexp
INSTALLW32: mention _OPENSSL_isservicePR: 2194
gcm128c: API modification and readability improvements,add ghash benchmark to apps/speedc
Rework framework for assembler support for AES counter mode and addAES_ctr32_encrypt to aess390xpl
Harmonize s390x assembler modules with "catchall" rules from commit19749
armv4montpl: addenum to previous commit19749
crypto//Makefile: unify "catchall" assembler make rules and harmonizeARM assembler modules
rand_nwc: compensate for gcc bug using edx instead of eax at O3PR: 2296
PROBLEMS: MacOS X is not necessarily a problem anymore
sparcv9capc: reiterate CPU detection logic
i variable is used on some platforms
ghasharmv4pl: excuse myself from implementing "528B" flavour
ghashsparcv9pl: fix Makefile rule and add performance data for T1
crypto/sparc: eliminate _sparcv9_rdwrasi
SPARCv9 assembler pack: refine CPU detection on Linux, fix for "unalignedopcodes detected in executable segment" error
no need for empty fragments with TLS 11 and later due to explicit IV
clarify comment
Fix warnings
VC32pl: fix /Fd name generationPR: 2284
ghashx86_64pl: "528B" variant delivers further >30 improvement
ghashx86pl: commentary updates
ghashx86pl: "528B" variant of gcm_ghash_4bit_mmx gives 2040improvement
x86 perlasm: add support for 16bit values
update FAQ
add CVE20100742 and CVS20101633 fixes
VC32pl: unconditionally generate symbolspdb
x86_64xlatepl: refine mingw support and regexps, update commentary
Configure: update mingw configlines
fix PR2261 in a different way
PR: 2278Submitted By: Mattias Ellert <mattiasellert@fysastuuse>Fix type checking macro SKM_ASN1_SET_OF_i2d
update NEWS
PR: 2262Submitted By: Victor Wagner <vitus@cryptocomru>Fix error reporting in load_key function
PR: 2261Submitted By: De Rudder, Stephen L" <s_derudder@tditxcom>Workaround for newer Windows headers which define EADDRINUSE but not to thesame value as WSAEADDRINUSE
PR: 2258Submitted By: Ger Hobbelt <ger@hobbeltcom>Base64 BIO fixes:Use OPENSSL_assert instead of assertUse memmove as buffers overlapFix write retry logic
PR: 2266Submitted By: Jonathan Gray <jsg@goblincx>Correct ioctl definitions
gcm128c: PM Hager has tipped about possibility to fold reductionsin gcm_ghash_4bit Taking the idea a step further I've added extra256+16 bytes of perkey storage, so that one can speak about 3rd variantin addition to "256B" and "4KB": "528B" one Commonly it should be~50 faster than "256B" implementation or ~25 slower than "4KB" one
Avoid use of ex_data free function in Chil ENGINE so it can be safelyreloaded
ghashx86pl: MMX optimization +2040 and commentary update
gcm128c: commentary update
PR: 2254Submitted by: Ger Hobbelt <ger@hobbeltcom>Approved by: steve@opensslorgCheck for < 0 i2d return value
PR: 2251Submitted by: Ger Hobbelt <ger@hobbeltcom>Approved by: steve@opensslorgMemleak, BIO chain leak and realloc checks in v3_pcic
Stop compiler complaining in pedantic mode: may be a better way to do this
oops, typo
Update cmstestpl to handle some Unix like Windows environments wherecalling shlib_wrapsh doesn't work
PR: 2259Submitted By: Artem Chuprina <ran@cryptocomru>Check return values of HMAC in tls_P_hash and tls1_generate_key_blockAlthough the previous version could in theory crash that would only happen if adigest call failed The standard software methods can never fail and only oneENGINE currently uses digests and it is not compiled in by default
oops, revert test patch
PR: 2253Submitted By: Ger Hobbelt <ger@hobbeltcom>Check callback return value when outputting errors
PR: 2255Submitted By: Ger Hobbelt <ger@hobbeltcom>Place RSA dependent variable under ifndef OPENSSL_NO_RSA
rc4x86_64pl: "Westmere" optimization
ghashx86[_64]pl: add due credit
GCM "jumbo" update: gcm128c: support for Intel PCLMULQDQ, readability improvements; asm/ghashx86pl: splitted vanilla, MMX, PCLMULQDQ subroutines; asm/ghashx86_64pl: add PCLMULQDQ implementations
x86asmpl: consistency imrovements
x86_64xlatepl: refine some regexp's and add support for OWORD/QWORD PTR
Revert previous Linuxspecific/centric commit19629 If it really has tobe done, it's definitely not the way to do it So far answer to thequestion was to /config Wa,noexecstack adopted by RedHat
Nonexecutable stack in asm
"Jumbo" update for crypto/modes: introduce common modes_lclh; ctr128c: implement additional CRYPTO_ctr128_encrypt_ctr32 interface; gcm128c: add omitted ARM initialization, remove ctxctr;
Add ghasharmv4pl
PR: 2252Submitted By: Ger Hobbelt <ger@hobbeltcom>Update docs to BIO_f_buffer
PR: 2230Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fix bug in bitmask macros and stop warnings
PR: 2244Submitted By: "PMHager" <hager@dortmundnet>Initialise pkey callback to 0
PR: 2250Submitted By: Ger Hobbelt <ger@hobbeltcom>Don't overwrite return value with strlenf
experimental function to convert ASN1_TIME to tm, not used or even compiled in yet
Missing declarations, no assembler in PEDANTIC
bss_filec: refine UTF8 logic on Windows
Add ghashpariscpl
Take gcm128c and ghash assembler modules into the build loop
bss_filec: reserve for option to encode file name with UTF8
md5ia64S: fix assembler warning
PR: 2241Submitted By: Artemy Lebedev <vagranast@gmailcom>Typo
new function to diff tm structures
oops revert patch not part of Configure diff
oops, commit Configure part of PR2234
PR: 2234Submitted By: Matthias Andree <matthiasandree@gmxde>Use correct path to openssl utility in c_rehash script
PR: 2235Submitted By: Bruce Stephens <brucestephens@isodecom>Make ts/Makefile consistent with other Makefiles
x86_64cpuidpl: ml64 is allergic to db on label line
gcm128c and assembler modules: change argument order for gcm_ghash_4bitghashx86pl: fix performance numbers for Core2, as it turned outprevious ones were "tainted" by variable clock frequency
update FAQ
[co]fb128c: fix "n0" bug
fix signed/unsigned comparison warnings
fix bug in ccgost CFB mode code
check ASN1 type before using it
PR: 2230Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fix various DTLS fragment reassembly bugs
PR: 2229Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Don't drop DTLS connection if mac or decryption failed
PR: 2228Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fix DTLS buffer record MAC failure bug
aesppcpl: 10 performance improvement on Power6
AESNI engine: update test_aesni
gcm128c: commentary and formatting updates
cts128c: add support for NIST "Ciphertext Stealing" proposal
AESNI engine: add counter mode
perlasm/x86: add support to SSE>2 and pclmulqdq x86_64xlatepl providescorrect solution to problem addressed in committ 19244
sha1alphapl: addenum till commit 19547
ctr129c: fix typo, simplify ctr128_inc and fix "n0" bug
Add ghashalphapl assembler module
sha1alphapl: engage it in build
sparccpuidS: some assembler is allergic to apostrophes in comments
alphamontpl: comply with stack alignment requirements
make GOST MAC work again
Add SHA2 algorithms to SSL_library_init Although these aren't useddirectly by SSL/TLS SHA2 certificates are becoming more common andapplications that only call SSL_library_init and notOpenSSL_add_all_alrgorithms will fail when verifying certificatesUpdate docs
Remove obsolete PRNG note Add comment about use of SHA256 et al
PR: 2209Submitted Daniel Mentz <danielml@sentcom>Documentation typo
PR: 2218Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fixes for DTLS replay bug
PR: 2219Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fixes for DTLS buffering bug
PR: 2223Submitted By: Robin Seggelmann <seggelmann@fhmuensterde>Fixes for DTLS timeout bug
PR: 2220Fixes to make OpenSSL compile with norc4
fix FAQ again
update FAQ
fix FAQ
update FAQ
update FAQ
update HEAD FAQ
cryptlibc: allow application to override OPENSSL_isservicePR: 2194
ARMv4 assembler: fix compilation failure Fix is actually unconfirmed, butI can't think of any other cause for failure
dso_dlfcnc: fix compile failure on Tru64
PR: 1696Check return value if d2i_PBEPARAM
PR: 1763Remove useless num  0 assignmentRemove redundant cases on sock_ctrl: default case handles them
sync ordinals with 100
PR: 1904Submitted by: David Woodhouse <dwmw2@infradeadorg>Pass passphrase minimum length down to UI
PR: 1813Submitted by: Torsten Hilbrich <torstenhilbrich@secunetcom>Fix memory leak when engine name cannot be loaded
update FAQ
Fix for "Record of death" vulnerability CVE20100740Also, add missing CHANGES entry for CVE20093245 code changes submitted to this branch on 23 Feb 2010,and further harmonize this version of CHANGES with the versions in the current branches
initialise buf if wrong_info not used
PR: 1731 and maybe 2197Clear error queue in a few places in SSL code where errors are expectedso they don't stay in the queue
rand_winc: fix logical bug in readscreen
bss_filec: fix MSC 60 warning
GHASH assembler: new ghashsparcv9pl module and saner descriptions
e_capic: fix typo
Fix UPLINK typo
ghashia64pl: new file, GHASH for Itaniumghashx86_64pl: minimize stack frame usageghashx86pl: moduloscheduling MMX loop in respect to input vectorresults in up to 10 performance improvement
workaround for missing definition in some headers
print signature parameters with CRLs too
free up sigopts STACK
clear bogus errors in ca utility
update CHANGES
add sigopt option to ca utility
add X509_CRL_sign_ctx function
new sigopt and PSS support for req and x509 utilities
PR: 2192Submitted By: Jaroslav Imrich <jaroslavimrich@disigsk>The prompt_info and wrong_info parameters can be empty strings whichcan produce confusing prompts Treat empty string same as NULL
missing goto meant signature was never printed out
This entry was in 098m changelog but missing from here, since it'ssecurity relevent we'd better list it
Submitted by: Martin KaiserReject PSS signatures with unsupported trailer value
alg2 can be NULL
Add GHASH x86_64 assembler
typo
RSA PSS ASN1 signing method
typo
ctrl operations to retrieve RSA algorithm settings
Add support for new PSS functions in RSA EVP_PKEY_METHOD
Extend PSS padding code to support different digests for MGF1 and message
Algorithm specific ASN1 signing functions
update cms code to use X509_ALGOR_set_md instead of internal function
New function X509_ALGOR_set_md to set X509_ALGOR DigestAlgorithmIdentifierfrom a digest algorithm
don't leave bogus errors in the queue
Add GHASH x86 assembler
PR: 2188Submitted By: Jaroslav Imrich <jaroslavimrich@disigsk>Add "missing" functions to get and set prompt constructor
PR: 2186Submitted By: "Joel Rabinovitch" <JoelRabinovitch@tecsyscom>Detect aix64gcc
reserve a few more bits for future cipher modes
gcm128c: add option for streamed GHASH, simple benchmark, minor namingchange
RSA PSS verification support including certificates and certificaterequests Add new ASN1 signature initialisation function to handle thiscase
correct error code
print outermost signature algorithm parameters too
oops
The OID sanity check was incorrect It should only disallow leading 0x80values
although AES is a variable length cipher, AES EVP methods have a fixed key length
oops, make EVP ctr mode work again
typo
add separate PSS decode function, rename PSS parameters to RSA_PSS_PARAMS
add MGF1 digest ctrl
update ASN1 sign/verify to use EVP_DigestSign and EVP_DigestVerify
don't add digest alias if signature algorithm is undefined
Add PSS algorithm printing This is an initial step towards full PSS supportUses ASN1 module in Martin Kaiser's PSS patch
fix indent, newline
Add algorithm specific signature printing An individual ASN1 method cannow print out signatures instead of the standard hex dumpMore complex signatures eg PSS can print out more meaningful informationSample DSA version included that prints out the signature parameters r, s[Note EVP_PKEY_ASN1_METHOD is an application opaque structure so addingnew fields in the middle has no compatibility issues]
Fix memory leak: free up ENGINE functional reference if digest is notfound in an ENGINE
Add engine_impl option to dgst which will use an implementation ofan algorithm from the supplied engine instead of just the default one
option to replace extensions with new ones: mainly for creating crosscertificates
PR: 2183PR1999 broke fork detection by assuming HAVE_FORK was set for all platformsInclude original HAVE_FORK detection logic while allowing it to beoverridden on specific platforms with DHAVE_FORK1 or DHAVE_FORK0
Submitted by: Tomas Hoger <thoger@redhatcom>Fix for CVE20100433 where some kerberos enabled versions of OpenSSLcould be crashed if the relevant tables were not present eg chrooted
don't mix definitions and code
Initial version of Galois Counter Mode implementation Interface is stillsubject to change
ppccapc: portability fix
Fix s390xspecific HOST_l2c|c2lSubmitted by: Andreas Krebbel
PR: 2178Submitted by: "Kennedy, Brendan" <brendankennedy@intelcom>Handle error codes correctly: cryptodev returns 0 for success whereas OpenSSLreturns 1
use supplied ENGINE in genrsa
oops, reinstate correct prototype
'typo'
make USE_CRYPTODEV_DIGESTS work
load cryptodev if HAVE_CRYPTODEV is set too
update cryptodev to match 100 stable branch version
Fix warnings note that gcc 42 has a bug that makes one of itswarnings hard to fix without major surgery
algorithms field has changed in 100 and later: update
oops, revert verifyc change
Add Kerberos fix which was in 098stable but never committed to HEAD and100 Original fix was on 2007Mar09 and had the log message: "Fix kerberosciphersuite bugs introduced with PR:1336"
include TVS 11 version string
Revert CFB block length change Despite what SP80038a says the input toCFB mode does not have to be a multiple of the block length and severalother specifications eg PKCS11 do not require this
oops, use correct date
update NEWS
update FAQ
add trusted_first option and verify flag
tidy verify code xn not used any more and check for self signed more efficiently
Experimental support for partial chain verification: if an intermediatecertificate is explicitly trusted using addtrust option to x509 utilityfor example the verification is sucessful even if the chain is not complete
allow setting of verify names in command line utilities and print out verify names in verify utility
verify parameter enumeration functions
Include selfsigned flag in certificates by checking SKID/AKID as wellas issuer and subject names Although this is an incompatible changeit should have little impact in pratice because selfissued certificatesthat are not selfsigned are rarely encountered
add anyExtendedKeyUsage OID
prevent warning
Reserve for option to implement AES counter in assembler
Add AES counter mode to EVP
Add assigned OIDs, as well as "anonymous" ones for AES counter mode
The meaning of the X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY andX509_V_ERR_UNABLE_TO_GET_ISSUER_CERT error codes were reversed inthe verify application documentation
Always check bn_wexpend return values for failure CVE20093245The CHANGES entry covers the change from PR 2111 as well, submitted byMartin OlssonSubmitted by: Neel Mehta
Fix X509_STORE locking
clarify documentation
OR default SSL_OP_LEGACY_SERVER_CONNECT so existing options are preserved
Allow renegotiation if SSL_OP_LEGACY_SERVER_CONNECT is set as well asinitial connection to unpatched servers There are no additional securityconcerns in doing this as clients don't see renegotiation during anattack anyway
PR: 2100Submitted by: James Baker <jbaker@tableausoftwarecom> et alWorkaround for slow Heap32Next on some versions of Windows
Submitted by:  Dmitry Ivanov <vonami@gmailcom>Don't leave dangling pointers in GOST engine if calls fail
PR: 2171Submitted by: Tomas Mraz <tmraz@redhatcom>Since SSLv2 doesn't support renegotiation at all don't reject it iflegacy renegotiation isn't enabledAlso can now use SSL2 compatible client hello because RFC5746 supports it
The "block length" for CFB mode was incorrectly coded as 1 all the time Itshould be the number of feedback bits expressed in bytes For CFB1 mode setthis to 1 by rounding up to the nearest multiple of 8
Correct ECB mode EVP_CIPHER definition: IV length is 0
add EVP_CIPH_FLAG_LENGTH_BITS from 098stable
PR: 2164Submitted by: "Noszticzius, Istvan" <inoszticzius@rightnowcom>Don't clear the output buffer: ciphers should correctly the same inputand output buffers
update references to new RI RFC
PR: 2170Submitted by: Magnus Lilja <liljamagnus@gmailcom>Make c option in dgst work again
Fix memory leak in ENGINE autoconfig code Improve error logging
update year
Use supplied ENGINE when initialising CMAC Restore pctx setting
add cvsignore
Make update
Make CMAC API similar to HMAC API Add methods for CMAC
Initial experimental CMAC implementation
make update
oops, use new value for new flag
Add missing function EVP_CIPHER_CTX_copy Current code uses memcpy to copyan EVP_CIPHER_CTX structure which may have problems with external ENGINEswho need to duplicate internal handles etc
don't assume 0x is at start of string
tolerate broken CMS/PKCS7 implementations using signature OID instead of digest
PR: 2161Submitted by: Doug Goldstein <cardoe@gentooorg>, SteveMake nodsa, noecdsa and norsa compile again
PR: 2160Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Make session tickets work with DTLS
PR: 2159Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Typo in PR1949 bug, oops!
Typo
The previous take went wrong, try again
Architecture specific header files need special handling
If opensslconfh and buildinfh are to be in an architecture specificdirectory, place it in the same tree as the other architecturespecific things
typo
Experimental renegotiation support in s_server test www server
In engine_table_select don't clear out entire error queue: just clearout any we added using ERR_set_mark and ERR_pop_to_mark otherwiseerrors from other sources eg SSL library can be wiped
oops revert test code accidentally committed
revert previous change
reword RI description
revert wrongly committed test code
update documentation to reflect new renegotiation options
Some shells print out the directory name if CDPATH is set breaking thepod2man test Use /util instead to avoid this
typo
PR: 2157Submitted by: "Green, Paul" <PaulGreen@stratuscom>Typo
Have the VMS build system catch up with the 100stable branch
Apparently, test/testtsacom was only half done
size_t doesn't compare less than zero
PR: 1949Submitted by: steve@opensslorgMore robust fix and workaround for PR1949 Don't try to work out if thereis any write pending data as this can be unreliable: always flush
PR: 2138Submitted by: Kevin Regan <kregan@f5com>Clear stat structure if DPURIFY is set to avoid problems on someplatforms which include unitialised fields
Add flags functions which were added to 098 for fips but not 100 andlater
OPENSSL_isservice is now defined on all platforms not just WIN32
export OPENSSL_isservice and make update
Typo
pariscmontpl: PARISC 20 code path optimization based on intructionlevel profiling data resulted in almost 50 performance improvementPARISC 11 is also reordered in same manner, mostly to be consistent,as no gain was observed, not on PA7100LC
PR: 2149Submitted by: Douglas Stebila <douglas@stebilaca>Fix wap OIDs
There's really no need to use $ENV::HOME
Forgot to correct the definition of __arch in this fileSubmitted by Steven M Schweda <sms@antinodeinfo>
It seems like sslroot: needs to be defined for some tests to workSubmitted by Steven M Schweda <sms@antinodeinfo>
Compile t1_reneg on VMS as wellSubmitted by Steven M Schweda <sms@antinodeinfo>
A few more macros for long symbolsSubmitted by Steven M Schweda <sms@antinodeinfo>
ia64cpuidS: OPENSSL_cleanse to accept zero length parameter
PR: 2153, 2125Submitted by: steve@opensslorgThe original fix for PR2125 broke compilation on some Unixware platforms:revert and make conditional on VMS
pariscidpl: OPENSSL_cleanse to compile on PARISC 20W and to accept zerolength parameter
OPENSSL_cleanse to accept zero length parameter [matching C implementation]
The fix for PR1949 unfortunately broke cases where the BIO_CTRL_WPENDINGctrl is incorrectly implemented eg some versions of Apache As a workaroundcall both BIO_CTRL_INFO and BIO_CTRL_WPENDING if it returns zero This shouldboth address the original bug and retain compatibility with the old behaviour
Tolerate PKCS8 DSA format with negative private key
If legacy renegotiation is not permitted then send a fatal alert if a patchedserver attempts to renegotiate with an unpatched client
typo
fix comments
oops
update NEWS file
Update demo
Support L options in VC++ link
rand_winc: fix time limit logic
The use of NIDs in the password based encryption table can result inalgorithms not found when an application uses PKCS12 and only callsSSL_library_init instead of OpenSSL_add_all_algorithms Simplework around is to add the missing algorithm 40 bit RC2 inSSL_library_init
PR: 2141Submitted by: "NARUSE, Yui" <naruse@airemixjp>Remove nonASCII comment which causes compilation errors on some versionsof VC++
PR: 2144Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Better fix for PR2144
Enable PARISC assembler in Configure feedback from PARISC 20 is stillneeded
x86_64xlatepl: refine sign extension logic when handling leaPR: 2094,2095
rand_winc: handle GetTickCount wraparound
s390x assembler update: add support for runtime facility detection
apps/speedc: limit loop counters to 2^31 in order to avoid overflowsin performance calculations For the moment there is only one codefast enough to suffer from this: Intel AESNI enginePR: 2096
Minor updates to ppccapc and ppccpuidpl
bn_lclh: add MIPS IIIspecific BN_UMULT_LOHI as alternative to portingcrypto/bn/asm/mips3s from IRIX Performance improvement is not asimpressive as with complete assembler, but still it's almost 25x[on R5000]
ia64montpl: add shorter vector support "shorter" refers to 512 bits andless
PR: 2135Submitted by: Mike Frysinger <vapier@gentooorg>Change missed references to lib to $LIBDIR
PR: 2144Submitted by: steve@opensslorgFix DTLS connection so new_session is reset if we read second client hello:new_session is used to detect renegotiation
PR: 2133Submitted by: steve@opensslorgAdd missing DTLS state strings
convert to Unix EOL form
make update
PR: 2125Submitted by: "Alon BarLev" <alonbarlev@gmailcom>Fix gccaix compilation issue
Fix version handling so it can cope with a major version >3Although it will be many years before TLS v20 or later appears old versionsof servers have a habit of hanging around for a considerable time so bestif we handle this properly now
Modify compression code so it avoids using ex_data free functions Thisstops applications that call CRYPTO_free_all_ex_data prematurely leakingmemory
update and sync ordinals
PR: 2136Submitted by: Willy Weisz <weisz@vcpcunivieacat>Add options to output hash using older algorithm compatible with OpenSSLversions before 100
Simplify RI+SCSV logic:1 Send SCSV is not renegotiating, never empty RI2 Send RI if renegotiating
ia64montpl: addp4 is not needed when referring to stack this is 32bitHPUX thing
http://cvsopensslorg/chngview?cn19053 made me wonder if bind andconnect are as finicky as sendto when it comes to socket addresslength As it turned out they are, therefore the fix Note that youcan't reproduce the problem on Linux, it was failing on Solaris,FreeBSD, most likely on more
sendto is reportedly picky about destination socket address lengthPR: 2114Submitted by: Robin Seggelmann
Fix compilation on older Linux Linux didn't always have sockaddr_storage,not to mention that first sockaddr_storage had __ss_family, not ss_familyIn other words it makes more sense to avoid sockaddr_storage
Updates to conform with draftietftlsrenegotiation03txt:1 Add provisional SCSV value2 Don't send SCSV and RI at same time3 Fatal error is SCSV received when renegotiating
Missing commit from change ofr compress_meth to unsigned
compress_meth should be unsigned
ENGINE_load_capi now exists on all platforms but no op on nonWIN32
ppc64montpl: commentary update
Add Montgomery multiplication module for IA64
PR: 2102Submitted by: John Fitzgibbon <john_fitzgibbon@yahoocom>Remove duplicate definitions
Typo
PR: 2132Submitted by: steveFix bundled pod2manpl to handle alternative comment formats
Remove tabs on blank lines: they produce warnings in pod2man
Client side compression algorithm sanity checks: ensure old compressionalgorithm matches current and give error if compression is disabled andserver requests it shouldn't happen unless server is broken
Compression handling on session resume was badly broken: it alwaysused compression algorithms in client hello a legacy from whenthe compression algorithm wasn't serialized with SSL_SESSION
Include CHANGES entry for external cache
b_sockc: correct indirect calls on WinSock platformsPR: 2130Submitted by: Eugeny Gostyukhin
Adapt mingw config for newer mingw environment Note modified conditionalcompilation in e_capicPR: 2113
ppccapc: fix compiler warning and perform sanity check outside signal maskingppc64montpl: clarify comment and fix spelling
Deploy multilib configline parameter It was added in February to allowfor kind of installation suggested in ticket 2003 from August What iteffectively does now, is arrange preconfigured default $libdir valueNote that it also fixes ENGINESDIR, ie harmonizes it with install path
PARISC assembler: missing symbol and typos
return v11 methods for client/server
Add simple external session cache to s_server This serialises sessionsjust like a "real" server making it easier to trace any problems
Typo
Update RI to match latest specMCSV is now called SCSVDon't send SCSV if renegotiatingAlso note if RI is empty in debug messages
Update sha512pariscpl and add make rules
Throw in more PARISC assembler
Switch to new uplink assembler
ppccapc: tidy upppc64montpl: missing predicate in commentary
ppc64montpl: adapt for 32bit and engage for all builds
Traditional Yuletide commit ;Add Triple DES CFB1 and CFB8 to algorithm list and NID translation
Use properly local variables for threadsafetySubmitted by: Martin Rex
Constify crypto/cast
Constify crypto/cast
Alert to use is now defined in spec: update code
PR: 2127Submitted by: Tomas Mraz <tmraz@redhatcom>Check for lookup failures in EVP_PBE_CipherInit
New option to enable/disable connection to unpatched servers
Allow initial connection but no renegoriation to servers which don't supportRIReorganise RI checking code and handle some missing cases
Move SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION out of SSL_OP_ALL and move SSL_OP_NO_TLSv1_1
clarify docs
Document option clearning functionsInitial secure renegotiation documentation
remove DEBUG_UNUSED from config for now
Check s3 is not NULL
Add patch to crypto/evp which didn't apply from PR2124
Revert lhash patch for PR2124
PR: 2124Submitted by: Jan Pechanec <JanPechanec@SunCOM>Check for memory allocation failures
Add ctrls to clear options and modeChange RI ctrl so it doesn't clash
Send no_renegotiation alert as required by spec
Add ctrl and macro so we can determine if peer support secure renegotiation
Add support for magic cipher suite value MCSV Make secure renegotiationwork in SSLv3: initial handshake has no extensions but includes MCSV, ifserver indicates RI support then renegotiation handshakes include RINB: current MCSV value is bogus for testing only, will be updated when wehave an official valueChange mismatch alerts to handshake_failure as required by specAlso have some debugging fprintfs so we can clearly see what is going onif OPENSSL_RI_DEBUG is set
PR: 2121Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Add extension support to DTLS code mainly using existing implementation forTLS
Initial experimental TLSv11 support
PR: 2111Submitted by: Martin Olsson <molsson@operacom>Check for bn_wexpand errors in bn_mulc
Update CHANGES
Replace the broken SPKAC certification with the correct version
Check it actually compiles this time ;
PR: 2120Submitted by: steve@opensslorgInitialize fields correctly if pem_str or info are NULL in  EVP_PKEY_asn1_new
Ooops
check DSA_sign return value properly
PR: 2115Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgAdd Renegotiation extension to DTLS, fix DTLS ClientHello processing bug
PR: 1432Submitted by: "Andrzej Chmielowiec" <achmielowiec@enigmacompl>, steve@opensslorgApproved by: steve@opensslorgTruncate hash if it is too large: as required by FIPS 1863
PR: 2118Submitted by: Mounir IDRASSI <mouniridrassi@idrixnet>Approved by: steve@opensslorgCheck return value of ECDSA_sign properly
typo
bss_dgramc: refix BIO_CTRL_DGRAM_GET_PEERPR: 2110
Experimental CMS password based recipient Info support
Make CHANGES in CVS head consistent with the CHANGES files in thebranchesThis means that http://wwwopensslorg/news/changeloghtml willfinally describe 098l
Add OID for PWRI KEK algorithm
Add PBKFD2 prototype
Split PBES2 into cipher and PBKDF2 versions This tidies the code somewhatand is a prerequisite to adding password based CMS support
cmstestpl: use EXE_EXTPR: 2107
util/pl/VC32pl: bufferoverflowulib only when actually needed andeliminate duplicate codePR: 2086
Servers can't end up talking SSLv2 with legacy renegotiation disabled
Don't use SSLv2 compatible client hello if we don't tolerate legacy renegotiation
Include a more meaningful error message when rejecting legacy renegotiation
PR: 2103Submitted by: Rob Austein <sra@hactrnnet>Approved by: steve@opensslorgInitialise atmflags to 0
PR: 2101 additionalSubmitted by: Roumen Petrov <openssl@roumenpetrovinfo>Approved by: steve@opensslorgAnother mingw fix
OPENSSL_ia32cappod update
Add sha512pariscpl
SHA1 assembler show off: minor performance updates and new modules forforgotten CPUs
sha512c: there apparently is ILP32 PowerPC platform, where it is safe toinline 64bit assembler instructions Normally it's inappropriate, becausesignalling doesn't preserve upper halves of general purpose registersMeaning that it's only safe if signals are blocked for the time "wide"code executesPR: 1998
x86_64xlatepl: new gas requires sign extention in lea instructionThis resolves md5x86_64pl and sha1x86_64pl bugs, but without modifyingthe codePR: 2094,2095
x86masmpl: eliminate linker "multiple sections found with differentattributes" warning
bss_dgramc: more elegant solution to PR2069 Use socklen_t heuristicfrom b_sockc, don't assume that caller always passes pointer to bufferlarge enough to hold sockaddr_storagePR: 2069
b_sockc: fix compiler warning
aesnix86pl: eliminate development comments
PR: 2101Submitted by: Doug Kaufman <dkaufman@rahulnet>Approved by: steve@opensslorgFixes for tests in cmstestpl
PR: 2088Submitted by: Aleksey Samsonov <s4ms0n0v@gmailcom>Approved by: steve@opensslorgFix memory leak in d2i_PublicKey
set engine to NULL after releasing it
Update from 100stable
PR: 2098Submitted by: Corinna Vinschen <vinschen@redhatcom>Approved by: steve@opensslorgFor Cygwin enable zlib and mdc2 by default
add missing parts of reneg port, fix apps patch
commit missing apps code for reneg fix
PR: 1686Submitted by: Hanno Bck <hanno@hboeckde>Approved by: steve@opensslorgCreate engines dir if it doesn't already exist
PR: 2091Submitted by: Martin Kaiser <lists@kaisercx>, Stephen HensonApproved by: steve@opensslorgIf an OID has no short name or long name return the numerical representation
PR: 2090Submitted by: Martin Kaiser <lists@kaisercx>, Stephen HensonApproved by: steve@opensslorgImprove error checking in asn1_genc
First cut of renegotiation extension port to HEAD
update CHANGES
make udpate
Remove BF_PTR2 from configuration: it doesn't improve performance any more and causes gcc warnings about arrays out of range
If it is a new session don't send the old TLS ticket: send a zero lengthticket to request a new session
Ooops, revert committed conflict
PR: 2089Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDTLS Fragment size bug fix
Add missing functions to allow access to newer X509_STORE_CTX statusinformation Add more informative message to verify callback to indicatewhen CRL path validation is taking place
Add option to allow inband CRL loading in verify utility Add functionload_crls and tidy up load_certs Remove useless purpose variable fromverify utility: now done with args_verify
Generate stateless session ID just after the ticket is received insteadof when a session is loaded This will mean that applications thatjust hold onto SSL_SESSION structures and never call d2i_SSL_SESSIONwill still work
Move CHANGES entry to 098l section
Fix statless session resumption so it can coexist with SNI
Don't attempt session resumption if no ticket is present and sessionID length is zero
oops!
PR: 2085Submitted by: Mike Frysinger <vapier@gentooorg>Approved by: steve@opensslorgChange domd test to match 100+ version: check $MAKEDEPENDends in "gcc" to support cross compilers
Add no_cache option to s_server
Don't replace whole AR line
PR: 2081Submitted by: Mike Frysinger <vapier@gentooorg>Approved by: steve@opensslorgRespect AR and RANLIB environment variables if set
PR: 2080Submitted by: Mike Frysinger <vapier@gentooorg>Approved by: steve@opensslorgRespect MAKE environment variable if set
PR: 2078Submitted by: Dale Anderson <dra@redevisednet>Approved by: steve@opensslorgCorrections to bn_internal documentation
Clarification
Add an FAQ
If not checking all certificates don't attempt to find a CRLfor the leaf certificate of a CRL path
Need to check < 0 here
PR: 2070Submitted by: Alexander Nikitovskiy <Nikitovski@yaru>Approved by: steve@opensslorgFix wrong cast
make update
Use new X509_STORE_set_verify_cb function instead of old macro
take install prefix from the environment
Document more error codes
Verification callback functions
Add "missing" function X509_STORE_set_verify_cb
Clarification
Preliminary documentation for X509_VERIFY_PARAM
Add docs for X509_STORE_CTX_new and related functions
More X509 verification docs
Typo
Manual page for X509_verify_cert
PR: 2074Submitted by: Bram Neijt <bneijt@gmailcom>Approved by: steve@opensslorgTypo: "contet"
PR: 2072Submitted by: Tomas Mraz <tmraz@redhatcom>Approved by: steve@opensslorgAvoid potential doublefree and reuse of freed handshake_buffer
PR: 2073Submitted by: Tomas Mraz <tmraz@redhatcom>Approved by: steve@opensslorgDon't access freed SSL_CTX in SSL_free
Fixes to CROSS_COMPILE, don't override command line option from environment
Fix for WIN32 and possibly other platforms which don't define in_port_t
Update ordinals
PR: 2069Submitted by: Michael Tuexen <tuexen@fhmuensterde>Approved by: steve@opensslorgIPv6 support for DTLS
PR: 1847Submitted by: Tomas Mraz <tmraz@redhatcom>Approved by: steve@opensslorgIntegrated patches to CAsh to bring it into line with CApl functionality
Revert extra changes from previous commit
PR: 2066Submitted by: Guenter <lists@gknwnet>Approved by: steve@opensslorgAdd r option to dgst to produce format compatible with core utilities
Rename CROSS_COMPILE_PREFIX to CROSS_COMPILE
Allow uname values to be overridden by the environment
Allow cross compilation prefix to come from CROSS_COMPILE environment variable
Combat gcc 441 aliasing rules
Fix unitialized warnings
Fix warnings about ignoring fgets return value
Prevent ignored return value warning
Prevent aliasing warning
Typo
Yes it is a typo ;
PR: 2061Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect i2b_PVK_bio error handling in rsac, dsac
PR: 2062Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect BN_rand error handling in bntestc
PR: 2059Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect EVP_SealInit error handling in pem_sealc
PR: 2056Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect BIO_wirte error handling in asn1_parc
PR: 2055Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect BIO_ctrl error handling in s2_srvrc
PR: 2054Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect BIO_ctrl error handling
PR: 2063Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect BIO_write error handling in ocsp_prnc
PR: 2057Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect BIO_write, BIO_printf, i2a_ASN1_INTEGER and i2a_ASN1_OBJECTerror handling in OCSP print routines
PR: 2058Submitted by: Julia Lawall <julia@dikudk>Approved by: steve@opensslorgCorrect EVP_DigestVerifyFinal error handling
Change version from 099 to 100 in docs
PR: 2064, 728Submitted by: steve@opensslorgAdd support for custom headers in OCSP requests
Free SSL_CTX after BIO
Fixup sureware ENGINE to handle new RAND_METHOD
Audit libcrypto for unchecked return values: fix all cases enountered
Add more return value checking attributes to evph and hmach
Add DEBUG_UNUSED to debugsteve entries
Add attribute to check if return value of certain functions is incorrectlyignored
PR: 2050Submitted by: Michael Tuexen <tuexen@fhmuensterde>Approved by: steve@opensslorgFix handling of ENOTCONN and EMSGSIZE for dgram BIOs
PR: 2047Submitted by: David Lee <live4thee@gmailcom>, steve@opensslorgApproved by: steve@opensslorgFix for IPv6 handling in BIO_get_accept_socket
Ooops, missing close quote
Don't use __try+__except unless on VC++
add version info for VCWIN64I too
PR: 2048Submitted by: john blair <mailtome200420032002@yahoocom>Approved by: steve@opensslorgAdd version info in VCWIN64A too
cmllx86_64pl: small buglet in CBC subroutinePR: 2035
PR: 2039Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDTLS listen bug fix,
Submitted by:  Julia Lawall <julia@dikudk>The functions ENGINE_ctrl, OPENSSL_isservice, EVP_PKEY_sign,CMS_get1_RecipientRequest and RAND_bytes can return <0 on error fixso the return code is checked correctly
PR: 2023Submitted by: James Beckett <jmbopenssl@nospamhackerynet>, steveApproved by: steve@opensslorgFix documentation errors in d2i_X509 manual pages
PR: 2025Submitted by: Tomas Mraz <tmraz@redhatcom>Approved by: steve@opensslorgConstify SSL_CIPHER_description
PR: 1411Submitted by: steve@opensslorgAllow use of trusted certificates in SSL_CTX_use_chain_file
PR: 2038Submitted by: Artem Chuprina <ran@cryptocomru>Approved by: steve@opensslorgAvoid double call to BIO_free
PR: 2033Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDTLS listen support
Add new option strictwarnings to Configure script This is used to addin devteam warnings into other configurations
Seed PRNG with DSA and ECDSA digests for additional protection againstpossible PRNG state duplication
PR: 2031Submitted by: steve@opensslorgTolerate application/timestampresponse which some servers send out
Typo presumably
Make update, deleting bogus DTLS error code
PR: 1644Submitted by: steve@opensslorgFix to make DHparams_dup et al work in C++For 10 fix the final argument to ASN1_dup so it is void  Replace some_dup macros with functions
PR: 2028Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgFix DTLS cookie management bugs
Correction: salt is now default
Oops, s can be NULL
PR: 2020Submitted by: Keith Beckman <kbeckman@mcgedu>,  Tomas Mraz <tmraz@redhatcom>Checked by: steve@opensslorgFix improperly capitalized references to WWW::Curl::Easy
PR: 2029Submitted by: Tomas Mraz <tmraz@redhatcom>Checked by: steve@opensslorgFix so that the legacy digest EVP_dss1 still works
PR: 2013Submitted by: steve@opensslorgInclude a flag ASN1_STRING_FLAG_MSTRING when a multi string type is createdThis makes it possible to tell if the underlying type is UTCTime,GeneralizedTime or Time when the structure is reused and X509_time_adj_excan handle each case in an appropriate mannerAdd error checking to CRL generation in ca utility when nextUpdate is beingset
PR: 2009Submitted by: "Alexei Khlebnikov" <alexeikhlebnikov@operacom>Approved by: steve@opensslorgAvoid memory leak and fix error reporting in d2i_SSL_SESSION NB: althoughthe ticket mentions buffer overruns this isn't a security issue becausethe SSL_SESSION structure is generated internally and it should never bepossible to supply its contents from an untrusted application this wouldamong other things destroy session cache security
PR: 2022Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgFix DTLS record header length bug
Tidy up and fix verify callbacks to avoid structure dereference, use ofobsolete functions and enhance to handle new conditions such as policy printing
Missing break
PR: 2005Submitted by: steve@opensslorgSome systems have broken IPv6 headers and/or implementations IfOPENSSL_USE_IPV6 is set to 0 IPv6 is not used, if it is set to 1 it is usedand if undefined an attempt is made to detect at compile time by checkingif AF_INET6 is set and excluding known problem platforms
PR: 2006Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDo not use multiple DTLS records for a single user message
PR: 2015Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDefine LIBDIR properly
sha1x86 assembler update: F_40_59 and Atomspecific optimizations
Stop unused variable warning on WIN32 et al
Use SHA1 and not deprecated MD5 in demos
Update default dependency flagsMake error name discrepancies a fatal errorFix error codesmake update
Enable mdc2 support by default as the patent has now expired
Update README with bug report and contribution details
PR: 1997Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDTLS timeout handling fix
Typo
PR: 1999Submitted by: "Bayram Kurumahmut" <kbayram@ubicomcom>Approved by: steve@opensslorgDon't use HAVE_FORK in apps/speedc it can conflict with configured version
PR: 2004Submitted by: Peter Sylvester <petersylvester@edelwebfr>Approved by: steve@opensslorgHandle fractional seconds properly in ASN1_GENERALIZEDTIME_print
PR: 2003Make it possible to install OpenSSL in directories with name otherthan "lib" for example "lib64" Based on patch from Jeremy Utley
Add COMP error strings
Fix error code
Reject leading 0x80 in OID subidentifiers
PR: 2002Submitted by: Tomas Mraz <tmraz@redhatcom>Obtained from: steve@opensslorgFix bug in libssl and krb5 linking in Makefileorg
Oops!
Update from 100stable
PR: 2001Submitted by: Tomas Mraz <tmraz@redhatcom>Approved by: steve@opensslorgAdd patch: http://cvsopensslorg/chngview?cn14635 which never made it to100, HEAD
Update from 100stable
Update from 100stable
Fix warnings
Update from 098stable
Remove MD2 test from WIN32 as we don't compile it in by default any more
Fix typos
New debug targets from 100stable
PR: 1990Update from 098stable
Document removal of digest+signature algorithm link
PR: 1993Fix from 098stable
Fix from 098stable
Update from 098stable
Update from 098stable
Update from 098stable
Use correct extension and OSX detection
Updates from 100stable
Update from 100stable
Updates from 100stable
Updates from 100stable
Document MD2 deprecation
Update from 100stable
Use new time routines to avoid possible overflow
Update from 098stable
PR: 1624Submitted by: "Simon L Nielsen" <simon@FreeBSDorg>Obtained from: steve@opensslorgCorrect FreeBSD check
Update from 100stable
Make update
Delete MD2 from algorithm tables as in 098stable However since this isa new branch we can also disable it by default
Fix warnings
PR: 1981Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDTLS record header bugfix
Upadte from 100stable
Update from 100stable
Update from 100stable
Update from 100stable
Update from 100stable
Update from 100stable
Update from 100stable
Update from 098stable
Typo
Use common verify parameters instead of the small adhoc subset ins_client, s_server
Updates from 100stable
Update from 100stable
Update from 100stable
Update from 100stable
Allow setting of verify depth in verify parameters as opposed to the depthimplemented using the verify callback
Update from 098stable
Fix from 098stable
Update from 098stable
Update from 100stable
Stop warnings in gcc where "a" is const passed as a nonconst argument
Update from 100stable
Update FAQ with note about online docs
Initialize outlen
Add beos as a supported DSO scheme
Rename asc2uni and uni2asc functions to avoid clashes
Update from 100stable
PR: 1958Submitted by: Sean Boudreau <seanb@qnxcom>Approved by: steve@opensslorgqnx6 support
PR: 1956Submitted by: Guenter <lists@gknwnet>Approved by: steve@opensslorgNetware doesn't have stringsh
Submitted by: Peter Gutmann <pgut001@csaucklandacnz>Approved by: steve@opensslorgCheck return values for NULL in case of malloc failure
PR: 1946Submitted by: Guenter <lists@gknwnet>Approved by: steve@opensslorgNetware header fix
Submitted by: Artem Chuprina <ran@cryptocomru>Reviewed by: steve@opensslorgVarious GOST ciphersuite and ENGINE fixes IncludingAllow EVP_PKEY_set_derive_peerkey in encryption operationsNew flag when certificate verify should be omitted in client key exchange
Update from 098stable
Fix error codes
Update from 100stable
PR: 1952Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Reviewed by: steve@opensslorgECDH negotiation bug
Updates from 100stable
Update from 100stable
PR: 1946Submitted by: Guenter <lists@gknwnet>Reviewed by: steve@opensslorgGet timeval definition on Netware
PR: 1938Submitted by: Mark Phalan <MarkPhalan@SunCOM>Reviewed by: steve@opensslorgPatch to pem and hmac manual pages NAME sections
PR: 1945Submitted by: Guenter <lists@gknwnet>Approved by: steve@opensslorgNetware compilation fix for nonexistent header
Oops, update CHANGES entry
Update from 100stable
Update from 100stable
Add ignored FIPS options to evph change clashing flag value
Update from 098stable
Update from 100stable
Sync ordinals from 100stable
Update from 100stable
Add CHANGES entries from 098stable
Update from 100stable
Update from 100stable
Update from 100stable
Stupid typo
Fix from 100stable
Update from 100stable
Update from 100stable
Update from 100 stable branch
PR: 1929Submitted by: Robin Seggelmann <seggelmann@fhmuensterde>Approved by: steve@opensslorgDTLS MTU bug
Update from 100stable
Update from 100stable
Functional VMS changes submitted by sms@antinodeinfo Steven M SchwedaThank you\!note: not tested for now, a few nightly builds should give indications though
Have mkdefpl also handle VAX and NonVAX differences for VMS
Add a comment about libeaynum and ssleaynum
x86[_64]cpuidpl: further refine shared cache detection
Update from stable branch
Update from 100stable
Update from stable branch
x86cpuidpl: sync OPENSSL_ia32_cpuid with x86_64cpuidpl
x86_64cpuidpl: refine shared cache detection logic
x86_64xlatepl: small commentary update
e_padlockc: fix typo missing endif and switch to __builtin_allocawith introduction of 64bit support alloca must be  declared and thereis no standard way of doing that, switching to __bultin_alloca isconsidered appropriate because code explicitly targets gcc anyway
Forgotten comma
Typo
Typo
Update from 100stable branch
Do not try to link the support files, as they aren't a completeengine ;
Make sure the padlock code compiles correctly even on hardware thatdoesn't have padlocks
Synchronise VMS with Unixly build
Fix from 100stable
Move the time fetching code to its own static function, and therebymake sure that BOTH instances of said code get the VMS modification
cryptlibc: refine logic in OpenSSLDie addenum to commit18118
libeaynum: add ENGINE_load_aesni
Avoid double dialogs in OpenSSLDie on Windows
Make it possible to compile CAPI engine under mingw64
Make CAPI engine UNICODE aware it didn't work on Win64
eng_aesnic: win32 fix
Engage cmllx86_64pl in Win64 build and make it compile correctly
cryptlibc: eliminate dependency on _strtoui64, older Windows CRT don't have it
ec_multc: fix C4334 win64 compiler warning
eng_aesnic: fix assembler declarations
aesnix86_64pl: resolve LNK1223 error
AESNI engine jumbo update
Updates from 100 stable branch
Make the NULL definition of OPENSSL_ia32cap_loc compatible with thedeclaration in cryptoh
Typo
Update from 100stable
Reimplement time check for VMS to mimic the way it's done on WindowsReason: gettimeofday is deprecated
Stupid typo
v3_altc: otherName parsing fixSubmitted by: Love Hrnquist strand
Update test/test_padlock script
aesnix86pl: fix another typo and add test script
aesnix86pl: fix typos
Intel AESNI engineSubmitted by: Huang Ying
Add padlock dataRedo the loop so it really compiles all objects for one engine, thenlinks the engine until now, it still thought every file was an engineof its own
Update from 100stable
e_padlock: add support for x86_64 gcc
Minor shaXs390xpl update
Improve readability of bio/b_sockc
Engage nasm optimizations in Win64 build
Addenum to commit18074: Expand OPENSSL_ia32cap to 64 bits
AESNI perlasm update
Handle push/pop rbx in epi/prologue this is Win64 SEH thing
Expand OPENSS_ia32cap to 64 bits
Add local symbol hacks for OpenVMS
Cast to avoid signedness confusion
Include sys/timeh to declare gettimeofday
A DTLS1 symbol needs to be chopped off a bit
Merge from 100stable branch
Updates from 100stable branch
Updates from 100stable
Update from 100stable
Changes from 100stable
Update from 098stable
Update from 100stable
Updates from 100stable
Camellia update: make it respect NO_[INLINE_]ASM and typo in assembler
Autogeneration seems to have changed slightly
Updates from 100stable
Update version info
Merge from 100stable branch
Update from 100stable
Update from 100stable
Fix from 100stable
Ooops reverse previous patch
Update from 098stable
Stop warnings
HEAD is now 110The 100 branch is now OpenSSL_1_0_0stable
Update STATUS and NEWS
Allow use of algorithm and cipher names for dgsts and enc utilities insteadof having to manually include each one
Nothing to see here move along
Update NEWS file
Fix typo in CHANGES
Update from stable branch
Update CHANGES
Update FAQ
Update from stable branch
Update from stable branch
Update from stable branch
Typo in usage message
Submitted by: Victor B Wagner <vitus@cryptocomru>Reviewed by: steve@opensslorgCheck return codes properly in md BIO and dgst command
aes390xpl: commentary update
Make SPARC assembler modules really Purifyfriendly
Submitted by: "Victor B Wagner" <vitus@cryptocomru>Reviewed by: steve@opensslorgUpdate ccgost engine to support parameter files
Excuse myself from integrating sha1sparcv9apl into build system, butmake it Purifyfriendly
Make SPARC assembler Pirifyfriendly Purify can't cope with certainPIC constructs
Use OPENSSL_assert instead of assert
Use correct ctx name
Fix from stable branch
Update from stable branch
PR: 1864Submitted by: Ger Hobbelt <ger@hobbeltcom>Reviewed by: steve@opensslorgCheck return value
Update from stable branch
Submitted by: Victor Duchovni <VictorDuchovni@morganstanleycom>Reviewed by: steve@opensslorgCheck return value of sk_SSL_COMP_find properly
PR: 1862Typo
Update from stable branch
PR: 1854Submitted by: Oliver Martin <oliver@volatilevoidnet>Reviewed by: steve@opensslorgSupport GeneralizedTime in ca utility
Update from stable branch
Update from stable branch
Update from stable branch
Typo
Print IPv6 all 0s correctly Rob Austein
Update from stable branch
Don't ask for iv for ciphers that need no IV
Use the right length reported by Quanhong Wang
Submitted by: "Victor B Wagner" <vitus@cryptocomru>Approved by: steveRecognise "enablezlib" in mkdefpl to handle "zlib" option when passedto Configure
Fix memory leak
Make STORE an experimental feature
Make it possible to disable STORE
Reference bug
PR: 1778Increase default verify depth to 100
Submitted by:  "Victor B Wagner" <vitus@cryptocomru>Reviewed by: steve@opensslorgChange default Gost parameter set to id_Gost28147_89_CryptoPro_A_ParamSet
PR: 1843Use correct array size for SHA1 hash
Data not initialisedNotified by Gerardo Ganis <gerardoganis@cernch>
Stop warning about use of printf without a format
Make noengine work again
Use new common flags and fix resulting warnings
PR: 1835Submitted by: Damien Miller <djm@mindrotorg>Approved by: steve@opensslorgFix various typos
Return correct exit code
Avoid leaks in pkcs8 app, tidy code up
rc4s390xpl: allow for older assembler and optimize character loop
RC4 for s390x
Add error checking to obj_xrefpl and add command line support for datafile locations
Submitted by: Peter Sylvester <PeterSylvester@edelwebfr>Reviewed by: steveIf tagging is universal and SET or SEQUENCE set constructed bit
s390xmontpl: optimize prologue
linuxs390x failed link after assembler pack update
sha1sparcv9apl: fix bug in commentary section
s390x assembler pack update
Reserve for "multilib" suffix, the one allowing to perform multiABIinstallations It's not enabled in Makefiles yet
Just to be awkward Ubuntu 810 doesn't like _XOPEN_SOURCE_EXTENDED
For hex, print just one \n
hex option for openssl randPR: 1831Submitted by: Damien Miller
Put back a variable deleted by the previous revision,but used in the code
Print out UTF8 and NumericString types in ASN1 parsing utility
Update from stable branch
Typo: just copy across an unknown type
Because DEC C  sorry, HP C  is picky about features, we need todefine _XOPEN_SOURCE_EXTENDED to reach fd_set and timeval types andfunctionality
Hopefully resolve signed vs unsigned issue
Do the Camellia part right
Synchronise with Unix build
Allow CC to be overridden
Update certificate hash line format to handle canonical formatand avoid MD5 dependency
Make PKCS8 the standard write format for private keys, replacing theancient SSLeay format
Add CRYPTO_MDEBUG_ABORT to abort is there are any memory leaks This willcause "make test" failures and make resource leaks more obvious
Fix warnings properly this time ;
Fix missing prototype warnings then fix different prototype warnings ;
Fix signcompare warnings
Add a set of standard gcc warning options which are designed to be theminimum requirement for committed code Added to debugsteve config targetsfor now
Add missing entry
Updatde from stable branch
Update FAQ
Add UltraSPARC VISpowered SHA1 block procedure
Fix compilation with nocomp by adding some more ifndef OPENSSL_NO_COMPSome include statements were not properly protected This will go unnotedon most systems as openssl/comph tends to be installed as a system headerfile by default but may become visible when cross compiling
VMS stuff I forgot
srvr_ecdh cannot be NULL at this point Coverity ID 232
Makefileshared: improve portability of commit17753
Calculate offset correctly Coverity ID 233
Styling update to makefiles: eliminate redundant pipes
Document dead code
Styling update to makefiles: $ to denote make substitutions and $${} shell ones
Apparently s>ctx could be NULL Coverity ID 147
Apparently s>ctx could be NULL at this point see earliertest Coverity ID 148
If we're going to return errors no matter how stupid, then we shouldtest for them!
Make sure a bad parameter to RSA_verify_PKCS1_PSS doesn't lead to a crashCoverity ID 135
bn_libc: [re]fix Win64 compiler warning
Fix "possible loss of data" Win64 compiler warnings
Die earlier if hash is NULL Coverity IDs 137 & 138
Reverse incorrect earlier fix
Die earlier if we have no hash function
Add standard cvsignore file
Update stevedebug options
x86_64xlatepl: support for binary constants, such as 0b1010101
Add modes/cts128c, Ciphertext Stealing implementation
cmllx86_64pl: fix bug in cbc tail processing and comply with Win64 ABI spec
Revisit RT1801 and complete fix
Remove dead code Coverity ID 2
Check scalar>d before we use it in BN_num_bits Coverity ID 129
Deal with the unlikely event that EVP_MD_CTX_size returns an errorCoverity ID 140
Handle the unlikely event that BIO_get_mem_data returns ve
More synchronisation with Unix
Remove misleading dead code Constify Coverity ID 142
!a && !a>b is clearly wrong! Changed to !a || !a>b Coverity ID 145
pval must always be set when pk7_cb does anything Coverity ID 146
In BIO_write, update the write statistics, not the read statisticsPR: 1803
Further synchronisation with Unix
Windowsspecific addenum to "engage crypto/modes" commit 17716
Patch the omission from prvious commit 17716
Engage crypto/modes
crypto/modes: make modesh selfsufficient and rename block_f to block128_t
Optimize CAST for size on 64bit platforms For reference, CAST_LONG beingunsigned long must be attributed to 16bit support As we don't support16bit platoforms anymore, there is no reason to waste twice requiredspace on CAST Sboxes 16KB vs 8KB or key schedule
cmllx86_64pl: Win64 SEH section to handle pushf/popf in CBC routine
Optimize undef DES_UNROLL for size
Incidentally http://cvsopensslorg/chngview?cn17710 also made it possibleto build the library without D_CRT_NONSTDC_NO_DEPRECATE This commitexpands it even to apps catalog and actually omits the macro in questionfrom Configure
This _WIN32specific patch makes it possible to "wrap" OpenSSL in anotherDLL, in particular static build The issue has been discussed in RT1230and later on openssldev, and mutually exclusive approaches were suggestedThis completes compromise solution suggested in RT1230PR: 1230
Make noengine work again
make depend to work with crossgcc, compensate for msys glitchPR: 1753Submitted by: Alon BarLev
cmllx86_64pl: bug fix and size optimization of Win64 SEH section
x86_64 assembler pack: add support for Win64 SEH
x86_64xlatepl: fix masm hexadecimal constants
perlasm/x86 update: support for 3 and 4 argument instructions
SEGV in AES_cbc_encrypt in aesx86_64 assembler modulePR: 1801Submitted by: Huang Ying
Constify where needed
Remove extraneous semicolons
Stack changes made dso_vmsc not compile properly
A few more symbols that are a little bit long for VMS
Synchronise VMS build system with the Unixly one
128bit block cipher modes consolidation As consolidated functionsrely on indirect call to block functions, they are not as fast asnonconsolidated routines However, performance loss is withinmeasurement error and consolidation advantages are considered tooutweigh it actually one can observe performance improvement on egCBC benchmarks thanks to optimization, which also becomesshared among ciphers
SEED to support OPENSSL_SMALL_FOOTPRINT: ~2x size decrease on x86
Bring C bn_mul_mont template closer to assembler
noasm didn't exclude Camellia assembler
Back out pointless change
 empty log message 
Return error if DH_new fails Coverity ID 150
Check for NULL before use Coverity ID 203
Missing return values Coverity ID 204
Fix from stable branch
apps/speedc: children should not inherit buffered I/OPR: 1787Submitted by: Artur Klauser <aklauser@googlecom>
Oops should check zero_pos > 0
Handle case where v6statzero_pos  0 correctlyReported by: Kurt Roeckx <kurt@roeckxbe>, Tobias Ginzler <ginzler@fgande> Debian bug 506111
Add Camellia assembler x86 and x86_64 modules
experimentalfoo support for mk1mfpl
Implement Configure option pattern "experimentalfoo"specifically, "experimentaljpake"
Don't stop cipher from working
Update from stable branch
Fix compilation with DOPENSSL_NO_DEPRECATED
Clarify a 'chil' engine param that is a little unintuitiveSubmitted by: Sander Temme <sander@temmenet>
Update libeaynum
Stop warning about different const qualifiers
Update from stablebranch
Set memory BIOs up properly when stripping text headers from S/MIME messages
Allow the CHIL engine to load even if dynamic locks aren't registeredSubmitted by: Sander Temme
Integrate JPAKE and TLSPSK Increase PSK buffer size Fix memory leaks
Ignore generated ASM
Don't disable JPAKE by default in head
PR: 1574Submitted by: Jouni Malinen <j@w1fi>Approved by: steve@opensslorgTicket override support for EAPFAST
x86_64xlatepl update, engage x86_64 assembler in mingw64
warnings mostly
Aftermath of a clashing size_t fix now only format changes
Ignore saved Makefile
JPAKE is not experimental in HEAD
Oops
mk1mfpl update from stable branch
Revert another size_t change
Update from stable branch
Reinstate camellia header fix patch
Configure update: cleanups and most notably engage x86_64 assembleron MacOS X
Update make rules for x86_64 assembler pack
x86_64 assembler pack to comply with updated styling x86_64xlatepl rules
x86_64xlatepl to support MacOS X and mingw64
Revert commit 17603, it should have been part of 17617
Revert the size_t modifications from HEAD that had led to moreknockon work than expected  they've been extracted into a patchseries that can be completed elsewhere, or in a different branch,before merging back to HEAD
Tolerate BEGIN PKCS 7 SIGNED DATA header lines as used by someimplementations
Update from stable branch
Update from stable branch
symbol deobnoxification
Make DKSSL_DEBUG work again
Clarify nonblocking behavior of EGD socket interface used by RAND_egd
PR: 1777Submitted by: "Alon BarLev" <alonbarlev@gmailcom>Approved by: steve@opensslorgFix some size_t issues
Update obsolete email address
Don't use clobbered 'i' for checking UTCTime and GeneralizedTime length
Only one of these needs to be signed
Formatting
Add initial support for mingw64PR: 1693Submitted by: Alon BarLev
Minor perlasm updates
Not sure about this one seems to be needed to make 64 bit releasebuilds work properly
Fix prototypes
Use stddefh to pick up size_t def
Fix prototypes
Update HMAC functions to return an error where relevant
Fix warnings: printf format mismatches on 64 bit platformsChange assert to OPENSSL_assertFix e_padlock prototype
Fix asserts Fix incorrect dependency
Fix warnings about mismatched prototypes, undefined size_t and value computednot used
Fix warnings
Fix warning
Fix bss_logc on Windows
More size_tification
size_tification
Fix SHA512 and optimize BN for mingw64
Fix warnings after commit17578
size_tfy EVP_CIPHER Note that being size_tfied it doesn't requireunderlying cipher to be size_tfied, it allows for size_t, signed andunsigned long It maintains source and even binary compatibility
size_tfy AES, Camellia and RC4
Add install target to crypto/jpake/Makefile
Fix warning
randfilec: rnd can become orphaned on VMSSubmitted by: David North
cvsignore update: ignore all flavors of shared objects
Fix typo in /configSubmitted by: Sander Temme
ec2_multc readability update
Minor cleanup in bn_libc: constification and optimization
Fix crash in BN_rshiftPR: 1663
Harmonize Camellia API with version 1x
Camellia update Quoting camelliac:/ This release balances code size and performance In particular key schedule setup is fully unrolled, because doing so significantly reduces amount of instructions per setup round and code increase is justifiable In block functions on the other hand only inner loops are unrolled, as full unroll gives only nominal performance boost, while code size grows 4 or 7 times Also, unlike previous versions this one "encourages" compiler to keep intermediate variables in registers, which should give better "all round" results, in other words reasonable performance even with not so modern compilers/
x86_64xlatepl update: refine SEH support
Win32 fixes add new directory to build system Fix warnings
Fix warnings and various issuesC++ style commentsSigned/unsigned warning in appscMissing targets in jpake/Makefile
Add JPAKE
Add support for crlnumber option in crl utility
Add permanentIdentifier OID
Create function of the form OBJ_bsearch_xxx in bsearch typesafe macroswith the appropriate parameters which calls OBJ_bsearch A compiler willtypically inline thisThis avoids the need for cmp_xxx variables and fixes unchecked const issueswith CHECKED_PTR_OF
Apparently '__top' is also risky, obfuscate further All this toavoid inlines
Allow detection of input EOF in quiet mode by adding no_ign_eof optionto s_client applicationPR: 1761Submitted by: David Woodhouse <dwmw2@infradeadorg>
Use of a 'top' var creates "shadow variable" warnings
Reinstate obj_xrefh as it is not auto generated on all platforms
Fix a shed load or warnings:Duplicate constUse of ; outside function
Add missing "d" to option list of openssl versionSubmitted by: Alex Chen <alex_chen@filemakercom>
Constification
Fix Warning
Fix multiple ; warning
Fix warning a different way
Fix argument order in BN_nnmod call and implement rigorous boundarycondition check
Optimize bn_correct_top
Remove redundant BN_ucmp, fix boundary condition in BN_nist_mod_224 andreimplement BN_nist_mod_521
Set comparison function in v3_add_canonize
Add XMPP STARTTLS support
Ooops remove code accidentally commited from FIPS version
Add missing lock definitions
Add missing lock definitions
Typesafe OBJ_bsearch_ex
Remove the DTLS1_BAD_VER thing from 099dev It is present in 098but has been omitted from HEAD 099, see commithttp://cvsopensslorg/chngview?cn16627by appro
Half of the commit for 098 as the bitmap handling has changedFirstly ommittedSecondly, it wasn't even _dropping_ the offending packets, in thenonblocking case It was just returning garbage insteadPR: 1752Submitted by: David Woodhouse <dwmw2@infradeadorg>
Typechecked and modern C compliant OBJ_bsearch
Add missing DTLS1_BAD_VER hope I got the value right
When the underlying BIO_write fails to send a datagram, we leave theoffending record queued as 'pending' The DTLS code doesn't expect this,and we end up hitting an OPENSSL_assert in do_dtls1_writeThe simple fix is just _not_ to leave it queued In DTLS, droppingpackets is perfectly acceptable  and even preferable If we wanted aservice with retries and guaranteed delivery, we'd be using TCPPR: 1703Submitted by: David Woodhouse <dwmw2@infradeadorg>
Experimental new date handling routines These fix issues with X509_time_adjand should avoid any OS date limitations such as the year 2038 bug
Fix incorrect command for assember file generation on IA64Submitted by: Amadeu A Barbosa Jr <amadeu@tecgrafpucriobr>
Fix EC_KEY_check_key
Make sure that SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG can'tenable disabled ciphersuites
From branch OpenSSL_0_9_8stable: Allow softloading enginesAlso, fix CHANGES consistency with stable branch
Add missing CHANGES entry
from 098 branch
Update FAQ
Fix yesterday typos in bss_dgramc
Fix build warnings
update comment
Winsock handles SO_RCVTIMEO in unique mannerPR: 1648
oops
dtls1_write_bytes consumers expect amount of bytes written per call, notoverallPR: 1604
Fix SSL state transitionsSubmitted by: Nagendra Modadugu
Note about CVS branch inconsistency
Really get rid of unsafe doublechecked lockingAlso, "CHANGES" cleanups
Some precautions to avoid potential securityrelevant problems
DTLS didn't handle alerts correctlyPR: 1632
AIX build updates
Add SSL_FIPS flag for FIPS 1402 approved ciphersuites and add a newstrength "FIPS" to represent all FIPS approved ciphersuites without NULLencryption
Ignoring errors in makedepend can hide problems
Fix warning
Fix from stable branch
Do not discard cached handshake records during resumed sessions:they are used for mac computation
Make notlsext compile
Perl script to run and verify OpenSSL against PKITS RFC3280 compliancetest suite
Initial support for delta CRLs If "use deltas" flag is set attempt to finda delta CRL in addition to a full CRL Check and search delta in addition tothe base
Add support for CRLs partitioned by reason codeTidy CRL scoring systemAdd new CRL path validation error
Add support for freshest CRL extension
Initial indirect CRL support
Support for certificateIssuer CRL entry extension
Don't use assertions to check applicationprovided arguments;and don't unnecessarily fail on input size 0
sanity checkPR: 1679
fix error function codes
Mention ERR_remove_state deprecation, and ERR_remove_thread_stateNULL
Initial support for CRL path validation This supports distinct certificateand CRL signing keys
Initial code to support distinct certificate and CRL signing keys where theCRL issuer is not part of the main pathNot complete yet and not compiled in because the CRL issuer certificate isnot validated
Support for policy mappings extensionDelete X509_POLICY_REF codeFix handling of invalid policy extensions to return the correct errorAdd command line option to inhibit policy mappings
Initial support for name constraints certificate extensionTODO: robustness checking on name forms
Correct the FAQ and the threads man page re: CRYPTO_THREADID changes
Remove the dualcallback scheme for numeric and pointer thread IDs,deprecate the original numericonly scheme, and replace with theCRYPTO_THREADID object This hides the platformspecifics and should reducethe possibility for programming errors where failing to explicitly checkboth thread ID forms could create subtle, platformspecific bugsThanks to Bodo, for invaluable review and feedback
sha1armv4large cosmetics
sha1armv4largepl performance improvement On PXA255 it gives +10 on8KB block, +60 on 1KB, +160 on 256B
Fix signed/unsigned warning
Correctly handle errors in CMS I/O code
Fix error codes for memorysaving patchAlso, get rid of compiletime switch OPENSSL_NO_RELEASE_BUFFERSbecause it was rather pointless the new behavior has to be explicitlyrequested by setting SSL_MODE_RELEASE_BUFFERS anyway
Add support for nameRelativeToCRLIssuer field in distribution point namefields
Make explicit_policy handling match expected RFC3280 behaviour
Refer to SSL_pending from the man page for SSL_read
Initial support for alternative CRL issuing certificatesAllow inibit any policy flag to be set in apps
Policy validation fixesInhibit any policy count should ignore self issued certificatesRequire explicit policy is the number certificate before an explict policyis required
remove a doubled entry for 'binary' in the usage message
Split ms/uplinkpl to corresponding platform versions
perlasm update: implement dataseg directive
x86_64xlatepl: implement indirect jump/calls, support for Win64 SEH
We should check the eight bytes starting at p[9] for rollback attackdetection, or the probability for an erroneous RSA_R_SSLV3_ROLLBACK_ATTACKwill be larger than necessaryPR: 1695
mem_dbgc: avoid compiler warningsPR: 1693Submitted by: Stefan Neis
Remove junk argument to function_begin in sha/asm/586plPR: 1681
x86masmpl: harmonize functions' alignment
Make sure not to read beyond end of buffer
x86_64cpuidpl cosmetics: harmonize $dir treatment with other modules
des596pl update: shortcircuit reference to DES_SPtrans
x86masmpl cosmetics
x86nasmpl update: use predefined macros and allow for /safeseh link
Reaffirm that NASM is the only supported assembler for Win32 build
Zero is a valid value for any_skip and map_skip
We support inhibit any policy extension, add to table
X509 verification fixesIgnore self issued certificates when checking path length constraintsDuplicate OIDs in policy tree in case they are allocatedUse anyPolicy from certificate cache and not current tree level
If prefix"C:\foo\bar" is supplied to Configure for a windows target,then the backslashes need escaping to avoid being treated as switches inthe autogenerated strings in opensslconfh Perl users are welcome tosuggest a less hokey way of doing this 
Avoid warnings with pedantic, specifically:Conversion between void  and function pointerValue computed not usedSigned/unsigned argument
Revert my earlier CRYPTO_THREADID commit, I will commit a reworkedversion some time soon
Update from stable branch
Update from stable branch
avoid potential infinite loop in final reduction round of BN_GF2m_mod_arrSubmitted by: Huang YingReviewed by: Douglas Stebila
Update ordinals
Fix from stable branch
Update from stable branch
Update from stable branch
Update from stable branch
Add acknowledgement
Sync ordinals
Fix memory leak The canonical X509_NAME_ENTRY STACK is reallocated ratherthan referencing existing X509_NAME_ENTRY structures so needs to becompletely freed
Remove uidlg library from VC32pl, it is now bound at runtime
Don't change _WIN32_WINNT and detect GetConsoleWindow andCryptUIDlgSelectCertificateFromStore at runtime Add callback functionfor selection mechanism
Update from stable branch
Update CHANGES
Update from stable branch
Update from stable branch
Sync ordinals with stable branch
Link in extra CryptoAPI related libraries if needed
Update from stable branch
Remove test fprintf
Compilation option to use a specific ssl client auth engine automatically
Use an appropriate Window for selection dialog
Add support for Windoes dialog box based certificate selection
Remove old nonsafestack code
Tidy up and add comments to selection code
Make DSO WIN32 compile again
Update ordinals
Remove store from Windows build
More typechecking
Avoid name clash
Only include windows headers when under windows
Add initial support for multiple SSL client certifcate selection inCryptoAPI ENGINE
Match empty CA list to anything for ssl client auth in CryptoAPI engine
Add support for client cert engine setting in s_client appAdd appropriate ifdefs round client cert functions in headers
Add preliminary SSL client auth callback to CryptoAPI ENGINE
Prevent signed/unsigned warning on VC++
Memory saving patch
Update year
Windows batch file to rebuild error codes for CryptoAPI ENGINE
undef OCSP_RESPONSE: CryptoAPI uses this too
Fix indentation
Avoid case in cac fix
Revert, doesn't fix warning :
Avoid cast with wrapper function
Free old store name if any
Add ctrl for alternative certificate store names
Use keyspec for DSA too
Get and note keyspec when signing
Release engine reference when calling SSL_CTX_free
Allow ENGINE client cert callback to specify a set of other certs, forthe rest of the certificate chain Currently unused
Update error codes
Add client cert engine to SSL routines
Update error codes, move typedef of SSL, SSL_CTX to ossl_typh
Add support for ENGINE supplied SSL client auth
Update from stable branch
Update from stable branch
Update VC32pl and load CryptoAPI engine in the right place
More CryptoAPI engine code from stable branch
Add CryptoAPI error file too
Add CryptoAPI ENGINE from stable branch
Recognize LHASH_OF
Stop const mismatch warning
Stop warning about extra ';' outside of function
Stop const mismatch warning in VC++
Everyone's had a few years to port their favorite additions to 097to HEAD and the 098 branch  Remove the reminder
Fix from stable branch
sync with 098 branch
From HEAD:Fix flaw if 'Server Key exchange message' is omitted from a TLShandshake which could lead to a cilent crash as found using theCodenomicon TLS test suite CVE20081672Reviewed by: opensslsecurity@opensslorgObtained from: mark@awecom
From HEAD:Fix doublefree in TLS server name extensions which could lead to a remotecrash found by Codenomicon TLS test suite CVE20080891Reviewed by: opensslsecurity@opensslorgObtained from: jorton@redhatcom
grammar
year 2008
Avoid "duplicate const" warnings
Avoid warning about empty structures and always define CHECKED_PTR_OF
C++ style comments fixed
LHASH revamp make depend
Add README about removed root CA certificates
Reword comment to be much shorter to stop other people from complainingabout "overcommenting"
Clear error queue when starting SSL_CTX_use_certificate_chain_filePR: 1417, 1513Submitted by: Erik de Castro Lopo <mle+openssl@meganerdcom>
Remove all root CA files beyond test CAs including private keyfrom the OpenSSL distribution
Typo
Typo
Update ordinals
Update from stable branch
Fix from stable branch
Correctly adjust location of commentSubmitted by: Ben Laurie <ben@linksorg>
Fix two invalid memory reads in RSA OAEP modeSubmitted by: Ivan Nestlerode <inestlerode@usibmcom>Reviewed by: steve
Change use of CRYPTO_THREADID so that we always use both the ulong andptr membersSo if the id_callback is bogus, we still have &errno
Disable code that clearly doesn't currently serve any useful purposeBuggy line reported by Matthias Koenig
Document "openssl s_server" crl_check optionsSubmitted by: Daniel Black <danielsubs@internodeonnet>
Provide information about "openssl dgst" hmac option
Typo From 098stable/S HensonPR: 1672
Another occurance of possible valgrind/purify "uninitialized memory"complaint related to the PRNG: with PURIFY policy don't feed uninitializedmemory into the PRNGSubmitted by: Bodo Moeller <bmoeller@opensslorg> :
Fix from stable branch
Add missing cast
Depict future Win64/x64 development
Clarifying comment
New function CMS_add1_crl
Indicate support for digest init ctrl
Typo
Use "cont" consistently in cmsexamplesplAdd a certsout option to output any certificates in a messageAdd test for example 411
Montgomeryrelated minor cleanups/documentation
Update from stable branch
Update from stable branch
Oops!
Update from stable branch
Update from stable branch
Fix autodiscovery of ENGINEs See the CHANGES entry for details and/orticket 1668PR: 1668Submitted by: Ian ListerReviewed by: Geoff Thorpe
Paul Sheer optimised the OpenSSL to/from libGMP conversions for the casewhere they both use the same limb size I've tweaked his patch slightly, soblame me if it breaksSubmitted by: Paul SheerReviewed by: Geoff Thorpe
Don't send zero length session ID if stateless session resupmtion issuccessful Check be seeing if there is a cache hit
Disable debugging fprintf
Add 64bit support to BN_nist_mod_244 and engage BN_nist_mod_ on 64bitplatforms
Compensate inline assembler in sha512c for gcc 272 compiler bugPR: 1667
Takanori Yanagisawa has shown how to correctly use precomputed valuesSo in a sense this commit reverts few latest ones fixing bugs in originalcode and improving it, most notably adding 64bit support [though not inBN_nist_mod_224 yet]PR: 1593
Resolve __DECC warning and keep disclaiming support for 16bit platforms
Fix remaining BN_nist_mod_PR: 1593
Make certs argument work in CMS_sign add test casePR:1664
Add missing 'extern "C" {' to some _errh files in crypto/engines/PR: 1609
Another minor update from the mingw developmentPR: 1552Submitted by: Roumen Petrov <openssl@roumenpetrovinfo>
Synchronise with Unix
Fix incorrect return value in apps/appsc:parse_yesnoPR: 1607Submitted by: "Christophe Mac" <macechristophe@gmailcom>
Correctly handle case of bad arguments supplied to rsautlPR: 1659
Apply mingw patches as supplied by Roumen Petrov an Alon BarLevPR: 1552Submitted by: Roumen Petrov <openssl@roumenpetrovinfo>, "Alon BarLev" <alonbarlev@gmailcom>
Further synchronisation with Unix build  I hadn't noticed pq_compathwas gone
Provide other forms for symbols that are too long or that clash with others
Detached encrypt/decrypt example, fix decrypt sample
Correct argument order for CMS_decrypt in docs
Fix prototype for CMS_decrypt, don't free up detached content
Revert argument swap change oops CMS_uncompress was consistent
Fix comments
Make CMS_uncompress argument order consistent with other functions
CMS compressed data examples
Fix for compression and updated CMS_final
PKCS7 examples converted to CMS
Synchronise with Unix build
Reformat, fix typos and clarify CMS API docs
Correct HISTORY reference
Typo
Add docs for CMS_final and BIO_new_CMS
Add additional parameter to CMS_final to handle detached content
Ignore nonsensical flags for signed receipts
Add CMS signed receipt genration and verification docs
Spellcheck CMS docs
Signed receipt request function documentation
Correct references to smime in cms app
Update docs
Add CMS_uncompress manual page
Add CMS_compress docs
More CMS API documentation
Clarifying comment
Do BN_nist_mod_384 by the book, as cheating doesn't work Other functionswill be revised tooPR: 1593
Fix various typos, update SMIMECapabilities description
Correct d2i/i2d typos
Initial CMS API documentation
Implement CMS_NOCRL
Fix URI of OpenSSL Request Tracker informationPR: 1661
Set contentType attribute just before signing to allow encapsulated contenttype to be set at any time in applications
Fix typo and add header files to err library
Give consistent return value and add error code for duplicate certificates
Delete nonexistant function from pkcs7h header file WIN32 build fix fromstable branch Sync and update ordinals
Make mk1mfpl recognize nocms
Rename runexpl to cmsexamplespl
Update CHANGES
Update CHANGES
Since OID NIDs with 098
Avoid warnings
Add signed receipt tests
Fix fast reduction on NIST curves as well BN_NIST_ADD_ONE macroPR: 1593
Fix it properly this time
Fix macro
Use correct headers for signed receipts Use consistent namingUpdate cmstestpl to support OpenSSL 098
Update dependencies
Remove unnecessary header
Update docs
Signed receipt generation code
Support for verification of signed receipts
There was a need to support thread ID types that couldn't be reliably castto 'unsigned long' ie odd platforms/compilers, so a pointertypedversion was added but it required portable code to check both modes todetermine equality This commit maintains the availability of both threadID types, but deprecates the typespecific accessor APIs that invoke thecallbacks  instead a single typeindependent API is used  This simplifiessoftware that calls into this interface, and should also make it lesserrorprone  as forgetting to call and compare both thread ID accessorscould have led to hardtodebug/infrequent bugs that might only affectcertain platforms or thread implementations As the CHANGES note says,there were corresponding deprecations and replacements in thethreadrelated functions for BN_BLINDING and ERR too
Update tunala so it builds ok with OPENSSL_NO_DEPRECATED, and improve theautoungunksh logic autobits have grown since I last tried this
Add support for signed receipt request printout and generation
Signed Receipt Request utility functions and option on CMS utility toprint out receipt requests
Add signed receipt ASN1 structures Initial GENERAL_NAME utility functions
Add support for CMS structure printing in cms utility
Fix duplicate asn1 ctrl values
Update dependencies
Preliminary documentation for CMS utility
Comment out a currently unused CMS function Sorry Steve, but I needWerror right now to help me codebydomino :
Fork my debug configuration into 32bit and 64bit versions
Allow alternate eContentType oids to be set in cms utilityAdd idctasciiTextWithCRLF OIDGive more meaninful error message is attempt to use key ID from a certificatewithout a key ID
Rebuild CMS error codes
Add support for KEK decrypt in cms utility
Produce meaningful error if sanity check failsDelete trailing whitespace from objectstxtDelete duplicate NIDs
Additional sanity check
Add support for KEKRecipientInfo in cms application
Make 3DES default cipher in cms utility
Delete standard out and err temp files too
Delete tmp files, silence openssl commands, compare extracted content
Add enveloped data keyid test
Uninitialized variable bug fix
Fixes for S/MIME consistency checker and flexibility enhancements
Add extensive PCKS7 and CMS consistency test script
Various tidies/fixes:Make streaming support in cms cleanerNote errors in various S/MIME functions if CMS_final failsAdd streaming support for enveloped data
More support for KEK RecipientInfoGeneralise RecipientInfo and enveloped data handling so applications canadd their own key lookup routines as well as using the standard ones
Partial support for KEKRecipientInfo type
Preliminary support for enveloped data content type creationFix signed data creation so versions are only corrected if structure isbeing created
Fix a variety of warnings generated by some elevated compilerfascism,OPENSSL_NO_DEPRECATED, etc Steve, please doublecheck the CMS stuff
Fix some warnings
Fix a nasty cast issue that my compiler was choking on
Fix my debuggeoff configuration
Adapt to diffrent OpenSSL utility locations
Remove deleted function from header file, update mkfilespl
Don't need to check for examples directory any more
Extend runexpl to extract examples directly from RFC text
Add support for random key generation: this will be needed by enveloped data
Initial support for enveloped data decrypt Extent runexpl to cover theseexamples All RFC4134 examples can now be processed
Initial support for enveloped data decrypt Extent runexpl to cover theseexamples All RFC4134 examples can not be processed
Check for cipher BIO errors and set key length after parameter decode
Return error if no cipher set for encrypted data typeUpdate CHANGES
Initial support for Encrypted Data type generation
Delete temp files
Typos
Reorganise encrypted content info code to avoid duplication and be moreconsistent with other content types
Encrypted Data type processing Add options to cms utility and run section 7tests in RFC4134
New utility functions for encryptedData content type which will also be usedby envelopedDataUse PRE and not POST when freeing up RecipientInfo
Only call free once in CHOICE type
RFC4134 S/MIME examples test script
cvignore file for cms
Free up additional data in RecipientInfo structure
And so it beginsInitial support for CMSAdd zlib compression BIOAdd AES key wrap implementationGeneralize S/MIME MIME code to support CMS and/or PKCS7
Update year
undef X509_EXTENSIONS to avoid conflict with CryptoAPI
We already have an object for "zlib compression" but it was a placeholder and its actual encoding never usedJust as well because it's value looks like it was made up in the mists oftimeNow there is a registered value for zlib compression used in S/MIMEcompressedData content type use that instead
Avoid warnings
Fix error code function name mismatches in GOST engine, rebuild errors
Fix typo and avoid warning
Make x86_64montpl work with debug Win64 build
fix BIGNUM flag handling
Clarification and fix typo
Use default value for $dir if it is empty
Make sure to set indenttabsmode so that we get tabs, not spaces
Support for NASM>2 in Win64/x64 build
Add OIDs for compressedData content type and zlib compression
Typo
Utility attribute function to retrieve attribute data from an expectedtype Useful for many attributes which are single valued and can onlyhave one type
Extend attribute setting routines to support nonstring types
Adhockery for Platform SDK ml64
Support custom primitive type printing routines and add one to LONG type
Microprofiling assisted "optimization" for Power6 Essentially it's soto say educational commit Reordering instructions doesn't improveperformance much, rather exhibits Power6 limitations
ppc64mont optimization
Add missing colon in manpageSubmitted by: Richard Hartmann <richihmailinglist@gmailcom>
Add Global Sign root CA
Clarify FAQ
Clarify BITLIST format and include an example
rc5/asm/rc5586pl was erroneously omitted from last perlasm unification
crypto/rc5/Makefile was erroneously omitted from last perlasm unificationAlso remove obsolete and now misleading comments
<stringsh> does not exist under WIN32
Unify ppc assembler make rules
Automate assembler support for Win64 targets more work is needed
Allow to specify filename on sha1ia64pl command line
Make all x86_64 modules independent on current working directory
rc4x86_64 portability fix
Missing headers
Unify x86 perlasm make rules
Automate assembler support in mk1mf even further
Experimental support for import of more options from Configurevia top level Makefile into mk1mf builds This avoids the needto duplicate the CFLAG handling and can auto build assembly languagesource files from perl scriptsExtend VCWIN32 Configure entry to include new options
Update perl asm scripts include paths for perlasm
Fix unsigned/signed warnings in ssl
Cygwin compatibility fix to apps/ocspc
Compensate for BSDi shell bug
engine/ccgost Win32 portability fixes
Make aesx86_64 work with debug Win64 build
Make AES_T[ed] private to aes586 module
Include Mont asm files in WIN32 build
Add extra SHA2 defines
Last dso_dlfcnc checkin said "Use Dl_info only on systems where it isknown to exist It does not exist on AIX 433, AIX 51, SCO 5, or Cygwin"and disabled it on banch of systems it's known to exists, such as FreeBSD,Solaris, 64bit HPUX, MacOS X Get it straight
x86gaspl update
Add sha2 defines
Update netware to use new SHA2 assembly language modules
Update WIN32 nasm build to use new asm files
Avoid WIN32 signed/unsigned warnings
Move CHANGES entry Revert include file install line
Netware supportSubmitted by: Guenter Knauf <eflash@gmxnet>
NASM has recently changed name of win32 precompiled binaryPR: 1627
Add quotes to Win32 install directoriesSubmitted by:  Mladen Turk <mturk@apacheorg>
perlasm/x86pl updates
Final for this commit series optimized version and with commentary section
This is also informational commit exposing loop modulo scheduling "factor"
New Montgomery multiplication module, ppc64montpl Reference, nonoptimizedimplementation This is essentially informational commit
ppcxlatepl update
Source readability fix, which incidentally works around XLC compiler bug
Engage x86 assembler in Mac OS X build
Mac OS X x86 assembler support
Disable support for Metrowerks assembler Assembler itself is broken,specifically it incorrectly encodes EA offsets between 128 and 255
x86 perlasm overhaul
Avoid aliasing warning
Update ordinals
Initialize sigsize
Handle nonSHA1 digests for certids in OCSP test responder
gmp engine was nonoperational
Submitted by: Victor B Wagner <vitus@cryptocomru>, steveUse default algorithms for OCSP request and response signing New commandline option to support other digest use for OCSP certificate IDs
Change submitted by Doug Kaufman  He writes:I just compiled the 99dev version from the 12022007 tarball underDJGPP There were only 2 changes needed, one for b_sockc, sinceDJGPP with WATT32 doesn't define socklen_t and one for testtsa tohandle DOS style path separators I also noted what seems to be atypographical error in tspod The test suite passes The patch isattachedSince I am in the US, I have sent notifications to the Bureau ofIndustry and Security and to the NSA
Some assembler are allergic to lea reg,BYTE PTR[]Submitted by: Guenter Knauf
Structure symbol decorations, optimize label handling
Rebuild OID database: duplicates got in there somehow??
Fix from stable branch
Add caRepository OID and sync object NIDs with OpenSSL 098
Synchronize x86nasmpl with x86unixpl
Combat [bogus] relocations in some assember modules
Lookup public key ASN1 methods by string by iterating through allimplementations instead of all added ENGINEs to cover case where anENGINE is not added
Submitted by: "Victor B Wagner" <vitus@cryptocomru>Update gost algorithm print routines
Avoid warning
Update debugsteve targets
Submitted by: "Victor B Wagner" <vitus@cryptocomru>Make {d2i,i2d}_PrivateKey fall back to PKCS8 format if no legacy formatsupported Add support in d2i_AutoPrivateKey
Rebuild object cross reference table
Typos in man pages: dependant>dependentSubmitted by: Tobias Stoeckmann <tobias@bugolde>
Should reject signatures that we can't properly verifyand couldn't generateas pointed out by Ernst G Giessmann
fix typosSubmitted by: Ernst G Giessmann
Fix buffer overflow
The hash length check wasn't strict enough,as pointed out by Ernst G Giessmann
Fix warnings
Commit 16325 fixed one thing but broke DH with certain moduli
Fix from stable branch
Add OIDs by CMP RFC 4210 and CRMF RFC 4211Submitted by: Martin Peylo <martinmeis@googlemailcom>
Fix duplicate error codes
GOST ENGINE information
1 Changes for s_clientc to make it return nonzero exit code in caseof handshake failure2 Changes to x509_certificate_type function crypto/x509/x509typec tomake it recognize GOST certificates as EVP_PKT_SIGN|EVP_PKT_EXCHrequired for s3_srvr to accept GOST client certificates3 Changes to EVP adding of function EVP_PKEY_CTX_get0_peerkey Make function EVP_PKEY_derive_set_peerkey work for context withENCRYPT operation, because we use peerkey field in the context topass nonephemeral secret key to GOST encrypt operation added EVP_PKEY_CTRL_SET_IV control command It is reallyGOSTspecific, but it is used in SSL code, so it has to goin some header file, available during libssl compilation4 Fix to HMAC to avoid call of OPENSSL_cleanse on undefined data5 Include desh if KSSL_DEBUG is defined into some libssl files, tomake debugging output which depends on constants defined there, workand other KSSL_DEBUG output fixes6 Declaration of real GOST ciphersuites, two authentication methodsSSL_aGOST94 and SSL_aGOST2001 and one key exchange method SSL_kGOST7 Implementation  of these methods8 Support for sending unsolicited serverhello extension if GOSTciphersuite is selected It is require for interoperability withCryptoPro CSP 30 and 36 and controlled bySSL_OP_CRYPTOPRO_TLSEXT_BUG constantThis constant is added to SSL_OP_ALL, because it does nothing, ifnonGOST ciphersuite is selected, and all implementation of GOSTinclude compatibility with CryptoPro9 Support for CertificateVerify message without length field It isanother CryptoPro bug, but support is made unconditional, because itdoes no harm for draftconforming implementation10 In tls1_mac extra copy of stream mac context is no more doneWhen I've written currently commited code I haven't readEVP_DigestSignFinal manual carefully enough and haven't noticed thatit does an internal digest ctx copyingThis implementation was tested against1 CryptoPro CSP 36 client and server2 Cryptopro CSP 30 server
Release OpenSSL 098g with various fixes to issues introduced with 098f
Fix from stable branch
Don't let DTLS ChangeCipherSpec increment handshake sequence numberPR: 1587
Don't lookup zero length session IDPR: 1591
Fix from stable branch
Make ssl compile [from 098stable, bug is masked by default]
Bunch of constifications
Fix warnings in d1_bothc [from 098stable]
DTLS fixes from 098stable
Synchronize CHANGES between 098 and HEAD
098f
Update CHANGES Keep ordinals consistent
New release
Respect cookie length set by app_gen_cookie_cbSubmitted by: Alex Lam
Make DTLS1 record layer MAC calculation RFC compliantSubmitted by: Alex Lam
Addendum to commit 16654
size_tfy crypto/buffer
ignore a few additionally generated files
Addendum to commit 16651
Make it possible to link VC static lib with either /MT or /MD applicationPR: 1230
Prohibit RC4 in DTLS
Fix from fips branch
Off by one fix from stable branch
Switch to bns390x it's faster on keys longer than 512 bits and mentions390x assembler pack in CHANAGES
Oops! This was erroneously left out commit 16632
Basic idea behind explicit IV is to make it unpredictable for attackerUntil now it was xor between CBC residue and 1st block from last datagram,or in other words still predictable
Make ChangeCipherSpec compliant with DTLS RFC4347
DTLS RFC4347 says HelloVerifyRequest resets Finished MAC
DTLS RFC4347 requires client to use rame random field in reply toHelloVerifyRequest
Switch to RFCcompliant version encoding in DTLS
Move no status notification to ssl_check_serverhello_tlsext to ensureno status is notified even if no server extensions are present
Typo
Yet another ARM update It appears to be more appropriate to makedevelopers responsible for march choice
Move marcharmv4t to /config
Minor ARMv4 update
ARMv4 assembler pack
10 performance tweak in 64bit mode
Support for certificate status TLS extension
Make sha512armv4pl byteorder neutral
Clarify commentary in sha512sparcv9pl
TyposPR: 1578Submitted by: Charles Longeau <chl@tuxfamilyorg>
Port from 098stable
Use accept flag for new session ticket write
properly handle lengthzero opaque PRF input valueswhich are pointless, but still might occur
fix length parameter in SSL_set_tlsext_opaque_prf_input calls
Implement the Opaque PRF Input TLS extensiondraftrescorlatlsopaqueprfinput00txt, and do some cleanups andbugfixes on the way  In particular, this fixes the buffer boundschecks in ssl_add_clienthello_tlsext and in ssl_add_serverhello_tlsextNote that the opaque PRF Input TLS extension is not compiled by default;see CHANGES
Fix indentation in d1_bothc
Fix dependencies Make depend
The other half of make errors
make errors
fix warning
Clean up error codes a bitengines/ccgost/ remains utter chaos, though; "make errors" is not happy
Addenum to "Constify obj_dat[ch]"
Minor formatting fixes in crypto/sha/asm
Wire RC4 key_table to readonly segment
Constify obj_dat[ch], as well as minimize linker relocations
Wire DES weak_keys to readonly segment
Eliminate redundant make rule
Minimize stack utilization in probable_prime
Remove excessive whitespaces from bioh
Make sure that BN_from_montgomery keeps the BIGNUMS in proper format
Update from stable branch
Update from stable branch
Mention aes in encpodPR: 1529
Mention SHA2 in opensslpodPR: 1575
Remove pq_compath
Minor sha[256|512]586 performance tweaks
It's inappropraite to override application signal, nor is it appropriateto shut down Winsock unless we know it won't be used [and we never do]PR: 1439
Minor fix in link_[oa]hpux
BSD runtime linkers apparently demand RPATH on so objectsPR: 1381
Make bn2dec work on "SIXTY_FOUR_BIT" platformsPR: 1456
Remove sha512sse2pl
Engage new x86 assembler modules
More Intel cc fixups
Handle empty case in X509_NAME canonical encoding
Commentary updates
SHA512 for ARMv4
SHA256/512 for x86
Typo? Why did this work, anyway?
Fix warning: print format option not compatible with size_t
Fix another warning
Change safestack reimplementation to match 098Fix additional gcc 42 value not used warnings
Fix warnings: computed value not use, incompatible pointer initializationand cast from pointer to int of different size linuxx86_64 and align
Add sha512_block implementation optimized for small register bankOn x86 it gives same performance, while code size shrinks >10 times
Update ssl code to support digests other than MD5+SHA1 in handshakeSubmitted by: Victor B Wagner <vitus@cryptocomru>
Constify seed and md2
Offer darwin64x86_64cc as option
Compress and more aggressively constify ec_curvec [the latter isachieved by minimizing link relocations]
Check return code when attempting to receive new session ticket message
Unify RC4 settings among darwin platforms
Add darwin64x86_64cc target
aes_ige suffered SIGBUS on RISC platforms
Improve cache locality in linux64sparcv9
Make naming more consistent
Make room for Camellia assembler
Add ctrls to set and get RFC4507bis keys to enable several contexts toreuse the same tickets
Add Google sponsorship note
shlib_wrap commentary update
shlib_wrap update, IRIX section
IRIX and Tru64 platform updates
Update from stable branch
Document ticket disabling option
Add usage message for sess_out, sess_in
Make x86_64 modules work under Win64/x64
Workaround MSVC6 compiler bug
Docs and usage messages for RFC4507bis support
VAX C can't handle 64 bit integers, making SHA512 impossible
Use SHA256 for ticket HMAC if possible
Fix for asm/noasm on WIN32
OPENSSL_NO_TLS1 WIN32 build support Fix so normal build works again
Fix warning and make notlsext work
Typo
Fix warnings
Remove debugging fprintfs, fix typo
RFC4507 including RFC4507bis TLS stateless session resumption supportfor OpenSSL
Typos in /configPR: 1563
MacOS X update
Proper support for shared build under MacOS X
Typo in ppccpuidpl
document S and nopad options in usage information
Buglet fixes and minor optimization in aesx86_86 assembler
Make preprocessor logic more failsafe
As for inline vs __inline The original code implies that most compilersunderstand inline, while WIN32 ones insist on __inline Well, there areother compilers that insist on __inline At the same time it turned outthat most compilers understand both __inline and inline I could findonly one that doesn't understand __inline, Sun C In other words it seemsthat __inline as preferred choice provides better coverage
Make ppccpuid AIX friendly
Respect ISO aliasing rulesPR: 1296
AES for IA64 update
ia64cpuid update
x86 perlasm updates
Configure update from 098
Update debugsteve
Allow for option to skip hardware support
md32_commonh update
x86cpuid update
Complete synchronization of aesx86_64 with aes586
Lppc_AES_[en|de]crypt_compact: size optimization
Minor optimization in AES_set_encryption_key for x86_64
_x86_64_AES_[en|de]crypt_compact: size optimization and aggressiveT[ed]4 prefetch
WIN32 VC++ build fixes
shlib_wrapsh update
gas g doesn't tolerate unpadded bytes in code segment
Various minor updates to AES assembler modules
Add _x86_64_AES_[en|de]crypt_compact
EVP__cfb1 was brokenPR: 1318
bn_mul_recursive doesn't handle all cases correctly, which results inBN_mul failures at certain keylength mixesPR: 1427
Typo in str_libcPR: 1177
Fix build problem on Tru64
Latest bn_montc modification broke ECDSA test I've got math wrong, whichis fixed now
Fix warning
Inline function declarations have to be prototypes
Flush output in x86_64cpuidpl
Typo in x86_64montplPR: 1549
CHANGES update from 098stable
Optimize OPENSSL_cleanse
bn_asm for s390x
Typo in Linux part of sparcv9capcPR: 1532
Make some shortcuts in sparcv9capc Trouble is that di_walk_node resultis inconsistent among CPU generations
SPARC Solaris and Linux assemblers treat align directive differentlyPR: 1547
Update from stable branch
Update cvsignore
Make ordinals consistent with OpenSSL 098
Eliminate conditional final subtraction in Montgomery assembler modules
Privatize BN__no_branch
Commentary updates and minor optimization for bn_montc
Eliminate conditional final subtraction in Montgomery multiplication
WIN32 fixes
Remove unnecessary casts and avoid some warnings with gcc 42
Finish gcc 42 changes
Back out safestackh change for now: seems to break some things
Avoid use of function pointer casts in pem library Modify safestack toalways use inline functions
Update ssl library to support EVP_PKEY MAC API Include generic MAC support
Handle NULL parameter in some EVP utility functions
Fix for GOST engine on platforms where sizeofsize_t ! sizeofint
AES_set_[en|de]crypt_key for ARMv4
s390x gas can't handle align 128
AES_set_[en|de]crypt_key for s390x
Update ordinals
Fix X509_REQ_print_ex to process extension options
Revert broken change to ccgostInitialize context properly for HMAC pkey method
SHA256 for ARMv4
Fix crypto/ec/ec_multc to work properly with scalars of value 0
Typo
Fixes for dgst tool Initialize md_name, sig_name properly Return error codeon failure Keep output format consistent with previous versionsAlso flush stdout after printing ACCEPT in s_server
Fix warning and back out bad modification
OPENSSL_IMPLEMENT_GLOBAL caused more grief than it's worth it's used twicein legacy code I'd rather just remove it along with legacy interface,but it's probably not as appropriate as I'd like Reimplement the macro
Padlock engine fails to compile with O0 fPIC
Typo in aesppcpl
enableautoimagebase in cygwin buildPR: 1517Submitted by: vinschen@redhatcom
Typo in x509_txtcSubmitted by: MartinKraemer@FujitsuSiemenscom
x86cpuid fixesPR: 1526
ppcxlatepl update
sparccpuids update
Initial draft of AES for PPC
Updated GOST MAC supportSubmitted by: vitus@cryptocomru
Initial GOST MAC support Not fully working yet
Add cvsignore to seed dir
Set len to buffer size
Prepend signature name in dgst output
Use default md if none specified in dgst utility
Use EVP_DigestVerify in dgstc if verifying
PR: 1516Revert change in 1516 because it breaks Windows build Use a modified versionof the headers from s_clientc which has used similar functionality withoutany problems
Fix error code name
New function EVP_PKEY_asn1_copy Use default MD if type param is NULL
Change C++ style comments
Throw in ppccpuid module
Fix linking error after adding alphacpuids
Add alphacpuids
Profiling revealed that OPENSSL_cleanse consumes more CPU time thansha1_block_data_order when hashing short messages Move OPENSSL_cleanseto "cpuid" assembler module and gain 2x
x86_64 assembler updates
As all assembler modules are alignment neutral, allow C to pass unalignedcontent
Make shaia64 modules alignment neutral
More IGE speedup
AES IGE mode speedup
Document streaming options
Improve error detection when streaming S/MIMEOnly use streaming when appropriate for detached data in smime utility
Tidy up docs, remove warning
More useful ASN1 macros for static allocation functions
Mention Core2 in sha1x86_64
Commentary updates to SHA for sparcv9
Detect UltraSPARC T1 in /config
Engage SHA for sparcv9
SHA for sparcv9
Fix bug introduced in cn16195
Fine reading of manual suggests that km can return nonnormal completion code
Fix s390x bugs and correct performance coefficients
Synchronise VMS with Unix
Revert irrelevant changes from commit 16191
rll does not seem to be available on legacy s390
Typo in commit 16187
Typo in s390x_asm
Bug in apps/dgstc
s390x optimizations
Engage s390x assembler modules
s390x assembler pack
Reimplement rc4586pl, relicense rc4x86_64pl
fix function codes for error
remove leftover from editing 
All ciphersuites should have a strength designator
Add SEED encryption algorithmPR: 1503Submitted by: KISAReviewed by: Bodo Moeller
fix error codes
don't violate the bn_check_top assertion in BN_mod_inverse_no_branch
New function ASN1_STRING_copy to copy to an alreadyalloacted ASN1_STRING structure
Sample text files for S/MIME test programs
Add a bunch of S/MIME sample programs and data
Flush b64 BIO
Don't finalize signerinfo if reuse and partial both set
PKCS7_sign_add_signer docs
More docs for streaming functions
Typo
d2i_PKCS7_bio_stream docs
Oops
Update docs
Update docs
Update smime utility to support streaming for encrypt and sign nodetachoptions Add new streaming i2d though strictly speaking it is BER formatwhen streaming and PEM functionsThese all process content on the fly without storing it all in memory
Copy update callback across when copying EVP_MD_CTXRemove unnecessary reference to EVP_MD_CTX in HMAC pkey method
New mac and macopt options to dgst utility Reimplement hmac option interms of new API
Update CHANGES
Experimental HMAC support via EVP_PKEY_METHOD
Constification
Don't ignore config_name parameter passed to OPENSSL_config Use"openssl_conf" in config file if config_name variable is missing
Fix from stable branch
Fix digest signing so digest type is set after init
Preliminary support for signctx/verifyctx callbacks
New sigopt option for dgst utility
Yet another resource leak Coverity ID 123
If you're going to check for negative, use an signed integer! Coverity ID 122
Don't copy from a nonexistent next Coverity ID 47
Fix duplicate error number
Errors should actually be errors
Don't dereference NULL argument Coverity ID 52
Missing config file
Don't use a negative number as a length Coverity ID 57
Avoid overrun Coverity ID 60
Free memory Coverity ID 62
check return value of ASN1_item_i2d, Coverity ID 55
Resource leak
Handle bad content type Coverity ID 99
Fix buffer overrun Coverity ID 106
Don't free a NULL Coverity ID 112
Missing return on error Coverity ID 115
Return an error if the serial number is badly formed Coverity ID 116
Die if serial number is invalid
Make sure we detect corruption
check correct pointer before freeing it Coverity CID 79,86
check if pointer is ! NULL before dereferencing it Coverity CID 40
RC4_set_key for x86_64 and Core2 optimizationPR: 1447
Don't die if the value is NULL Coverity CID 98
Fix warning
Update x86cpuidpl to correctly detect shared cache and to support newRC4_set_key
Reserve for assembler implementation of RC4_set_key and implement x86 one
Apply a more modern way to get the definition of select, except for VMSSubmitted by Corinna Vinschen <vinschen@redhatcom>
make BN_FLG_CONSTTIME semantics more foolproof
Change to mitigate branch prediction attacksSubmitted by: Matthew D WoodReviewed by: Bodo Moeller
Allow shared builds for aix[64]gcc targets
aix[64]cc config lines update
Stage 1 GOST ciphersuite supportSubmitted by: ran@cryptocomruReviewed by: steve@opensslorg
Synchronise the VMS build with recent movements in the Unix build
Fixes for aixshared rules
stricter session ID context matching
clarification regarding libdes files
link warnings caused by nasm modules
Two extra instructions in RC4 character loop give 80 performanceimprovement on Core2 I still need to detect Core2 and choose thispath
Remove obsolete comment
Various PowerPC config updates
nasm fixes
sparcv9amont was modified to handle 32bit aligned input, but checkfor 64bit alignment was not removed
Win32 fixes Add GOST algorithm to mkdef, update ordinals Signed/unsigned fixes
Fix from stable branch
size_t > int
remove unused file
Initialize "buf" to 0 to make valgrind happy :Note: the RAND_bytes manual page says:RAND_bytes puts num cryptographically strong pseudorandom bytes into bufIt does not talk about using the previous contents of buf so we are workingas documented
Do not use uninitialized memory to seed the PRNG as it may confusecode checking toolsPR: 1499
Update from stable branch
small cosmetics: align title with the other similar manual page
allow EVP_PKEY_CTX_freeNULL
remove dead code
include complete 097 historyinclude release date of 098e
use 2007 copyright for generated files
Update FAQ,NEWS in HEAD
Fix incorrect substitution that happened during the recent ciphersuiteselection remodelingSubmitted by: Victor Duchovni
Fix problem with multi line responses in starttls by using a bufferingBIO and BIO_gets
Extend SMTP and IMAP protocol handling to perform the requiredEHLO or CAPABILITY handshake before sending STARTTLSSubmitted by: Goetz BabinEbell <goetz@shomitefode>
Add automatic detection for Linux on SuperHPR: 1152Submitted by: Mike Frysinger <vapier@gentooorg>
Add support for m68k linuxPR: 1277Submitted by: Mike Frysinger <vapier@gentooorg>
Fix incorrect handling of special charactersPR: 1459Submitted by: tnitschke@innominatecomReviewed by: steve@opensslorg
Update from 097stable
prefer SHA1 over MD5 this affects the Kerberos ciphersuites
delete obsolete comment
SSL_kKRB5 ciphersuites shouldn't be preferred by default
Improve ciphersuite order stability when disabling ciphersuitesChange ssl_create_cipher_list to prefer ephemeral ECDH overephemeral DH
fix a typo in the new ciphersuite ordering code
Include "!eNULL" in SSL_DEFAULT_CIPHER_LIST to make sure that aciphersuite string such as "DEFAULT:RSA" cannot enableauthenticationonly ciphersuitesAlso, change ssl_create_cipher_list so that it no longerstarts with an arbitrary ciphersuite ordering, but insteaduses the logic that we previously had in SSL_DEFEAULT_CIPHER_LISTSSL_DEFAULT_CIPHER_LIST simplifies into just "ALL:!aNULL:!eNULL"
fix warnings for CIPHER_DEBUG builds
fix warnings/inconsistencies caused by the recent changes to theciphersuite selection code in HEADSubmitted by: Victor Duchovni
fix incorrect strength bit values for certain Kerberos ciphersuitesSubmitted by: Victor Duchovni
Updates from 098stable branch
Reorganize the data used for SSL ciphersuite pattern matchingThis change resolves a number of problems and obviates multiple kludgesA new feature is that you can now say "AES256" or "AES128" not just"AES", which enables bothIn some cases the ciphersuite list generated from a given string isaffected by this change  I hope this is just in those cases where theprevious behaviour did not make sense
ensure that the EVP_CIPHER_CTX object is initializedPR: 1490
Add STARTTLS support for IMAP and FTPSubmitted by Kees Cook <kees@outfluxnet>
 use OPENSSL_malloc etc in zlib move zlib_stateful_ex_idx initialization to COMP_zlibPR: 1468
avoid shifting input
use usersupplied malloc functions for persistent kssl objectsPR: 1467Submitted by: Andrei PelinescuOnciul <andrei@iptelorg>
remove unreachable code
PR: 1483Add support for GOST 2814789 in Gost ENGINE
Add hmac option to dgst from 097 stable branch
remove unused variable
ensure that a ec key is usedPR: 1476
After objects have been freed, NULLify the pointers so there will be no doublefree of those objects
fix typo
add note about 56 bit ciphersPR: 1461
Update from fips2 branch
add support for DSA with SHA2
fix documentationPR: 1466
fix potential memory leaksPR: 1462
Minimize aes_corec footprint when AES_[en|de]crypt is implemented inassembler
Minor touch to aesarmv4pl
AES for ARMv4
Minor optimization for sha1armv4 module
Update from 097stable
SHA1 for ARMv4 and Thumb
Constify version strings is ssl lib
Constify version strings and some structures
Add AOL an AOLTW root CAs to bundle
Make armv4tmont module backward binary compatible with armv4 and rename itaccordingly
Update to new home page
Montgomery multiplication for ARMv4
remove undefined constant
opensslwrapsh to respect $OPENSSL_ENGINES
include <stddefh> in digest headersSubmitted by: Kurt Roeckx <kurt@roeckxbe>
Montgomery multiplication for MIPS III/IV Not engaged
Minor cleanup in crypto/bn/asm
Minor cleanup in crypto/engine
Allow opensslwrapsh to access engines from build tree
Move eng_padlockc to /enginesSubmitted by: Michal Ludvig <michal@logixcz>
Minor performance improvements to x86montpl
Fix for "strange errors" exposed by ccgost engine The fix istwo extra insructions in sqradd loop at line 503
fix return value of get_cert_chainPR: 1441
Synchronise a bit more with Unixly build
Needed definition of _XOPEN_SOURCE_EXTENDED so DEC C on VMS will seethe declarations of fd_set, select and so on
Replace strdup with BUF_strdup
Synchronise with Unixly build, again ;
Add bit I missed from PKCS7 streaming encoder
Experimental streaming PKCS7 supportI thought it was about time I dusted this off This stuff had been sitting onmy hard drive for ages 2003 in fact Hasn't been tested well and may notwork properlyNothing uses it at present which is just as wellThink of this as a traditional Christmas present which looks far moreimpressive in the adverts and on the box, some of the bits are missing andfalls to bits if you play with it too much
Synchronise with Unixly build
Oops! New prototype code creeped through
Make shah more "portable"
x86montpl sse2 tuneup and integeronly squaring procedure
use OPENSSL_NO_DYNAMIC_ENGINE macro, disable debug messagesPR: 1440Submitted by: Victor B Wagner" <vitus@cryptocomru>
fix typosPR: 1354, 1355, 1398, 1408
update pkcs12 help message + manpagePR: 1443Submitted by: Artem Chuprina <ran@cryptocomru>
fix orderPR: 1442
update
add support for ecdsawithsha256 etc
remove trailing '\'PR: 1438
Fix the BIT STRING encoding of EC points or parameter seedsneed to prevent the removal of trailing zero bits
fix order
properly initialize SSL context, check return value
use const ASN1_TIME 
Eliminate 64bit alignment limitation in sparcv9amont
Engage alphamont module Actually verified on Tru64 only
alphamontpl: gcc portability fix and makerule
Minor, +10, tuneup for x86_64montpl
Montgomery multiplication routine for Alpha
Update from 097stable branch
Sync OID NIDs with OpenSSL 098
Fix change to OPENSSL_NO_RFC3779
fix documentationPR: 1343
avoid duplicate entries in add_cert_dirPR: 1407Submitted by: Tomas Mraz <tmraz@redhatcom>
return 0 if 'noout' is used and no error has occurredPR: 1435Submitted by: "Haridharan" <haridharan@gmailcom>
allocate a new attributes entry in X509_REQ_add_extensionsif it's NULL in case of a malformed pkcs10 requestPR: 1347Submitted by: Remo Inverardi <invi@yourtoiletch>
add "Certificate Issuer" and "Subject Directory Attributes" OIDsPR: 1433
Eliminate redundant variable in Camellia CBC routine
Improve Camellia code readability
Fix bugs in Camellia CBC routine
Camellia portability fixesSubmitted by: Masashi Fujita, NTT
add support for whirlpool in apps/speedPR: 1338Submitted by: justin@sozenet
Fix default dependency flags
Import ordinals from 098 and update
Update dependencies
Win32 fixes from stable branch
replace macros with functionsSubmitted by: Tracy Camp <tracyxecamp@intelcom>
fix support for receiving fragmented handshake messages
Clarify HAL SPARC64 support situation in sparcv9amontpl
Minor optimizations based on intruction level profiler feedback
Moduloschedule loops in sparcv9amontpl Overall improvement factorover 098 is up to 3x on USI&II cores and up to 80  on USIII&IV
This is "informational" commit Its mere purpose is to expose "modulofactor" in inner loops
NonSSE2 path to bn_mul_mont But it's disabled, because it currentlydoesn't give performance improvement
Add RFC 3779 support
sha512ppcpl mutlithread safety fix
register the engine as default engine in ENGINE_set_defaultPR: 1431
Add cvsignore
Update from 098 stable Eliminate duplicate error codes
wording can't really call shared libs experimental after several years in the major Linux distributions
Update ordinals
Remove illegal IMPLEMENT macros from header file
Remove redundant PREDECLARE statement
Initial, incomplete support for typesafe macros without using functioncasts
Don't assume requestorName is present for signed requests ASN1 OCSP modulefix: certs field is OPTIONAL
OCSP library tidy Use extension to encode OCSP extensions instead of doingit manually Make OCSP_CERTID_dup a real function instead of a macro
Fix various warnings
Make TSA tests use the noprompt mode of utilities rather than pipingthe result into interative utilities
Avoid shadow warning
Don't add the TS EKU by default in opensslcnf because it thenmakes certificates genereated by ca, CApl etc useless for anything else
Typo
Fix link for ASN1_generate_nconf
Typo
Add v3 ref to see also sections
Add documentetion for noCheck extension and add a few cross references tothe extension documentation
fix warning
remove SSLEAY_MACROS code
update md docs
fix OPENSSL_NO_foo defines
Initialize old_priv_encode, old_priv_decode
Minor portability update to c_rehash
Further mingw build procedure updates
Harmonize dll naming in mingw builds
Yet another mingw warning
OPENSSL_ia32cappod update
Fix mingw warnings
Switch Win32/64 targets to Winsock2 Updates to ISNTALLW32 cover evenrecent mingw modifications
Allow for mingw crosscompile configuration
Make c_rehash more platform neutral and make it work in mixed environment,such as MSYS with "native" Win32 perl
Rudimentary support for crosscompiling
Align data payload for better performance
Avoid application relink on every make invocation
Gcc overoptimizes PadLock AES CFB codepath, tell it not to
Temporary fix for sha256 IA64 assembler
Fix bug in bigendian path and optimize it for size
Typo in perlasm/x86asmpl
Further synchronizations with md32_commonh update, consistent namingfor lowlevel SHA block routines
bn/asm/ppcpl to use ppcxlatepl
Further synchronizations with md32_commonh update
VIAspecific Montgomery multiplication routine
Synchronize SHA1 assembler with md32_commonh update
Support for asciz directive in perlasm modules
Linking errors on IA64 and typo in aesia64S
Reimplement md32_commonh [make it simpler!] and eliminate code renderedredundant as result
Typo
return an error if the supplied precomputed values lead to an invalid signature
ASN1_item_verify needs to initialize ctx before any "goto err" canhappen; the new code for the OID cross reference table failed to do so
Place standard CRL behaviour in default X509_CRL_METHOD new functions tocreate, free and set default CRL method
Initialise ctx to NULL to avoid uninitialized free, noticed bySteve Kiernan
All 098d patches have been applied to HEAD now, so we no longer needthe redundant entries under the 099 heading
Introduce limits to prevent malicious keys being able tocause a denial of service  CVE20062940[Steve Henson, Bodo Moeller]
include 098d and 097l information
Fix ASN1 parsing of certain invalid structures that can resultin a denial of service  CVE20062937  [Steve Henson]
Fix buffer overflow in SSL_get_shared_ciphers functionCVE20063738 [Tavis Ormandy and Will Drewry, Google Security Team]Fix SSL client code which could crash if connecting to amalicious SSLv2 server  CVE20064343[Tavis Ormandy and Will Drewry, Google Security Team]
Fixes for the following claims:1 Certificate Message with no certsOpenSSL implementation sends the Certificate message during SSLhandshake, however as per the specification, these have been omitted RFC 2712 CertificateRequest, and the ServerKeyExchange shown in Figure 1will be omitted since authentication and the establishment of amaster secret will be done using the client's Kerberos credentialsfor the TLS server  The client's certificate will be omitted forthe same reason RFC 2712 3 Premaster secret Protocol versionThe premaster secret generated by OpenSSL does not have the correctclient versionRFC 2712 says, if the Kerberos option is selected, the premastersecret structure is the same as that used in the RSA caseTLS specification defines premaster secret as:struct {ProtocolVersion client_version;opaque random[46];} PreMasterSecret;where client_version is the latest protocol version supported by theclientThe premaster secret generated by OpenSSL does not have the correctclient version The implementation does not update the first 2 bytesof random secret for Kerberos Cipher suites At the serverend, theclient version from the premaster secret is not validatedPR: 1336
Initialize new callbacks and make sure hent is always initialized
Complete the change for VMS
Submitted by: Brad Spencer <spencer@jacknifeorg>Reviewed by: steve
Buffer size handling fix for encPR:1374
Using correct lock for X509_REQPR:1348
Update length if copying MSB set in asn1_string_canon
Updated file
Add missing prototype Fix various warnings C++ comments, ; outside function
Make int_rsa_sign function match prototypePR: 1383
Compile in gost engine
Updated version of gost engine
Do CRL method init after other operations
Tidy up CRL handling by checking for critical extensions when it isloaded Add new function X509_CRL_get0_by_serial to lookup a revokedentry to avoid the need to access the structure directlyAdd new X509_CRL_METHOD to allow common CRL operations verify, lookup to beredirected
Build error on nonunixPR: 1390
Race condition in ms/uplinkcPR: 1382
As x86mspl is out, remove do_masmbat and mention to it in INSTALLW32
Remove x86mspl and reimplement x86pl
Improve 386 portability of aes586pl
Ensure that the addition mods[i]+delta cannot overflow in probable_prime[Problem pointed out by Adam Young <adamy at acmorg>]
Overhaul of by_dir code to handle dynamic loading of CRLs
GOST public key algorithm ENGINE donated to the OpenSSL by CryptocomVery early version, doesn't do much yet, not even added to the build system
Support for AKID in CRLs and partial support for IDP Overhaul of CRLhandling to support this
Update docs
Update
Fixes for new CRL/cert callbacks Update CRL processing code to use newcallbacks
ensure that ciphersuite strings such as "RC4MD5" match the SSL 20ciphersuite as well
Add verify callback functions to lookup a STACK of matching certs or CRLsbased on subject nameNew thread safe functions to retrieve matching STACK from X509_STORECache some IDP components
Make sure the int_rsa_verify prototype matches the implementationm_len currently is 'unsigned int', not 'size_t'Submitted by: Gisle Vanem
Additional detail
update information on "current version" 
Add an FAQ
Remove nonfunctional part of recent patch, after discussion withColin Percival this would have caused more problems than solved,and isn't really necessary anyway
Make consistent with 098branch version of this file
Every change so far that is in the 098 branch is or should be in HEAD
Avoid PKCS 1 v15 signature attack discovered by Daniel BleichenbacherCVE20064339Submitted by: Ben Laurie, Google Security TeamReviewed by: bmoeller, mjc, shenson
Rewrite sha1586pl
Fix bug in aes586pl
Fix bug in x86unixpl introduced in latest updatePR: 1380
Kill more C++ comments
Fix C++ style comments, change assert to OPENSSL_assert, stop warning withpedantic mode
Fix leak
Forward port of IGE mode
Make things static that should be Declare stuff in headers that should beFix warnings
According to documentation, including timeh declares select onOpenVMS, and possibly moreRef: http://h71000www7hpcom/doc/82final/6529/6529pro_019htmlr_select
Correct warnings about signedness
Use gmtime on cygwinSubmitted by: Corinna Vinschen
+20 tuneup for Power5
Revised AES_cbc_encrypt in x86 assembler module
Correct punctuationPR: 1367
Agressively prefetch Sbox in SSE codepatch, relax alignment requirement,check for SSE bit instead of MMX, as pshufw was introduces in PIII, minoroptimization, typos
Switch to compact Sbox when generating AES key schedule
Switch to compact Sbox when generating AES key schedule
Real Bourne shell doesn't interpret , but 
Engage assembler in solaris64x86_64cc
perlasm/x86unixpl update
Next generation aes586pl featuring AES_[en|de]crypt, accessing exclusively256 byte Sbox AES_cbc_encrypt needs further work as it should also useslow routines when processing smaller amount of data
Camellia IPR information
Support for multiple CRLs with same issuer name in X509_STORE Modifyverify logic to try to use an unexpired CRL if possible
Cache some CRL related extensions
Avoid warning
Avoid WIN32 warning
Avoid warnings
Use correct pointer types for various functions
New Camellia implementation replacing previous versionSubmitted by: NTT
Camellia information
Store canonical encodings of Name structures Update X509_NAME_cmp to usethem
Reimplement outer rounds as "compact" in x86 assembler This has ratherstrong impact on decrypt performance, 2025 One probably should considerswitching between slower and faster routines depending on how much datawe were asked to process
WIN32 fixes signed/unsigned issues and slightly socket semantics
Update cvsignore again
Update cvsignore
Fix various error codes to match functions
Add timeout option to ocsp utility
New nonblocking OCSP functionality
Add option for "compact" rounds to aes_x86corec "Compact" rounds arethose referencing compact, 256byte, Sboxes
There is should be no need to rewind the input stream any moreFor S/MIME multipart/signed type the signature is calculated on the flyFor other detached data forms the stream isn't used after the single pass tocalculate signaturesFor nondetached the data is stored in a memory BIO
In genpkey, also look for algorithm string name in any supplied ENGINE
Bugfix: don't look in internal table for signature if found in applicationsupplied list
Typo
New docs for EVP_Digest{Sign,Verify} function Update existing docs
Add docs for pkeyparam Update some existing docs
Update some usage messages
make update
Allow digests to supply S/MIME micalg values from a ctrlSend ctrls to EVP_PKEY_METHOD during signing of PKCS7 structure socustomisation is possible
New functions to add and free up application defined signature OIDs
Set detached flag in PKCS7 structure earlier to avoid eating up memoryPR: 1071
Public key comparison and printing routine functions
EVP_PKEY_get_default_digest manual page
EVP_PKEY_CTX_ctrl docs
Update docs
New functions to enumerate digests and ciphers
Keygen docs
EVP_PKEY_derive docs
Add some examples
EVP_PKEY_verify docs
New docs
Update docs
Add some EVP_PKEY_METHOD docs
Update docs with algorithm options
Typo
Initial docs for pkeyutl
Docs for new utilities
Add documentation for new smime options
Fix compiler warnings
Unsigned vs signed comparison warning
Typos? in HEAD/crypto/evp/p_libc
dsa_pub_cmp doesn't need to check parameters because that is done inEVP_PKEY_cmp
Make return value from EVP_PKEY_cmp and EVP_PKEY_cmp_parameters consistent
Prepare playground for AES experimental code
documentation for "HIGH" vs "MEDIUM" was not uptodate
use <pollh> as by Single Unix Specification
always read in RAND_poll if we can't use select because of a toolarge FD: it's nonblocking mode anyway
Mitigate the hazard of cachecollision timing attack on last round Theonly chance for T[ed]4 to get evicted in this module is when its cache"overlaps" with last 128 bits of key schedule
Mitigate the hazard of cachecollision timing attack on last round Well,prefetch could have been moved closer to Td4 references Something forlater consideration
Mitigate cachecollision timing attack on last round
Fix EVP_PKEY_CTX_dup to return correct value and handle NULL keys inthe source
Use poll when possible to gather Unix randomness entropy
New functions CRYPTO_set_idptr_callback,CRYPTO_get_idptr_callback, CRYPTO_thread_idptr for a 'void ' typethread ID, since the 'unsigned long' type of the existing thread IDdoes not always work well
Change in 098 branch:Put ECCdraft ciphersuites back into default build but disabledunless specifically requested
Remove ECC ciphersuites from 098 branch should use 099 branch
Change array representation of binary polynomials to make GF2m part ofthe BN library more generally usefulSubmitted by: Douglas Stebila
another threadsafety fix
Error messages for client ECC cert verificationAlso, change the default ciphersuite to give some prefererence tociphersuites with forwared secrecy rather than using a random order
Call 'print_stuff' even if a handshake failed
Fix algorithm handling for ECC ciphersuites: Adapt to recent changes,and allow more general RSA OIDs for ECC certs with RSA CA sig
Fix another new bug in the cipherstring logic
Fix another bug introduced yesterday when deleting Fortezza stuff:make sure 'mask' is initialized in ssl_cipher_get_disabledAlso simplify code by removing some unused arguments in static functions
Oops  deleted too much in the previous commit when I deletedthe Fortezza stuff
Disable invalid ciphersuites
Ciphersuite string bugfixes, and ECCrelated redefinitions
Make sure that AES ciphersuites get priority over Camelliaciphersuites in the default cipher string
Threadsafety fixes
Fix a bug recently introduced when updating this file to use the newkeygen API: make sure that 'pkey_type' is actually visible to MAIN
Keep synchronised with Unix
Camellia cipher, contributed by NTTSubmitted by: Masashi FujitaReviewed by: Bodo Moeller
Keep synchronised with the Unix build
Camellia cipher, contributed by NTTSubmitted by: Masashi FujitaReviewed by: Bodo Moeller
Camellia cipher, contributed by NTTSubmitted by: Masashi FujitaReviewed by: Bodo Moeller
Output MIME parameter micalg according to RFC3851 and RFC4490 instead of hardcoding it to "sha1"
Add AES and GOST S/MIME capabilities if algorithms are supported
Fix obvious typo
Clarify comment and add ifdef
Complete EVP_PKEY_ASN1_METHOD ENGINE support
Sync aesh with http://cvsopensslorg/chngview?cn15336
Reimplement AES_ofb128_encrypt
Correct logical error in STRICT_ALIGNMENT check and remove copy ofeay licence, as module is practically rewritten from scratch [well,even original submission was obviously "almost, but not quite,entirely unlike" any other eay _cfbc module, not to mention newfunctions]
Minor ppcxlatepl update
Add sha512ppcpl module
Minor sha1ppcpl update
A few more ENGINE strings that need shortening
Synchronise with Unix
Make update
Initial public key ASN1 method engine support Not integrated yet
Automatically free up dynamically allocated public key methods whenand ENGINE is destroyed
Extend default method string to include public key methodsAdd missing prototypesFix engine method lookup
Typo
Add ENGINE support for EVP_PKEY_METHOD including lookups of ENGINEimplementations and functional reference counting when a contextis allocated, free or copied
Synchronise with the Unixly build
Fix error code make update
Add missing prototype Extend engine utility to print public key algorithms
Add engine table for EVP_PKEY_METHOD Doesn't do much yet
Because all object files are now in a file, we don't need to mentionany of them on the linker command line  Besides, OBJECT_FILE nowrepresents the last compiled file, and using it here only results ingetting warnings about multiple definitions of the symbols in thatfile
New pkey functions for keygen callbacks and retrieving operation type
Tune up AES CFB Performance improvement varies from 10 to 50 fromplatform to platform Its absolute value is within few percentsmarginal from that of ECB
Use a new signed int ii instead of j which is unsigned to handle thereturn value from sk_SSL_CIPHER_find
Deal with another name that's longer than 31 characters
rslen is unsigned, so it can never go below 0
Install opensslcnf to OPENSSLDIR in mk1mfpl
Flush p7bio when all data has been copied
Fix warnings
Update pkeyutl to use size_t for pkey functions
Signed vs unsigned conflict
There was a problem with too long command lines, so I rebuilt to makeit work better
Allow any supported cipher to be used with smime encrypt
Add prototypes, update Win32 ordinals
Keep in sync with Unix
Update EVP_MD_CTX_copy_ex to use EVP_PKEY_CTX_dup
New function to dup EVP_PKEY_CTX This will be needed to make new signingfunctions and EVP_MD_CTX_copy work properly
New functions for enchanced digest sign/verify
Fix warnings
Use size_t for new crypto size parameters
Fix smime pk7out
Add ctrl to EVP_MD and EVP_PKEY_CTX to EVP_MD_CTX These will be usedfor enhanced sign/verify operations
Tiny up hpux targets
Add resign and md options to smime command to support resigning anexisting structure and using alternative digest for signing
Code tidy
Typo
make update
More S/MIME tidy Place some common attribute operations in utilityfunctions
Remove old digest type hacks for non RSA keys
Multiple signer support in smime application
Reformat smimec utility
New option to pkcs12 utility to set alternative MAC digest algorithm
Don't try to print PBE information if it can't be decoded
PKCS12 mac key length should equal digest length
Tidy up of S/MIME code and add new functions which will make is easierto create S/MIME signed data with multiple signers
Extended PBES2 function supporting application supplied IV and PRF NID
Oops
HMAC OIDs from RFC4231
Gather keygen options in req and only use them after all other options havebeen processed This allows any ENGINE changing operations to be processedfirst for example a config file
Add PRF preference ctrl to ciphers
Change builting PBE to use static table Add entries for HMAC and MD5, GOST
Update old EVIL PEM_X509_INFO_read_bio function to correctly assignprivate keysFIXME: this function should really be rewritten because it is horrible
Bugfix: the NONE string for PBE algorithms wasn't working
Correctly handle missing DSA parameters
Add feature to PKCS12_create if the encryption NID corresponds to asupported encryption algorithm instead of a PBE NID then use thatalgorithm with PBES2
Extend PBE code to support non default PKCS5 v20 PRFs
Check for deprecated private key types before PKCS8 types
Typo
Add includes in synopsisSubmitted by: Mike Frysinger <vapier@gentooorg>
In interactive mode only config OpenSSL once
Stop warnings about deprecated mcpu option
make update
Someone made a mistake, and some function and reason codes gotduplicate numbers  Renumbering
Typo
Update 'req' command to use new keygen API
New functions to get key types without dereferncing EVP_PKEYMore error checking for RSA pmeth
Update PKCS7 decrypt routines to use new API
Update PKCS7 enveloped data to new API
Update S/MIME code to use default digest
Add support for default public key digest type ctrl
Fix from stable branch
bug fixPR: 1326Submitted by: John Skodon
Futher minor PPC assembler update
Update from stable branch
Update FAQ
Minor PPC assembler updates
PPC assembler distiller update
Typo in linuxppc line
Update from stable branch
Bug fixPR: 1307Submitted by: Oliver Tappe <zooey@hirschkaeferde>
SHA1 for PowerPC
Yet another "teaser" Montgomery multiplication module, for PowerPC
Update EVP_PKEY_cmp and X509_check_private to return sensible values andhandle unsupported key types
Fix from stable branch
Replace RSA specific PKCS7_RECIP_INFO set up with an public key algorithmctrl
Code tidy
New function to extract AlgorithmIdentifier for PKCS7_RECIP_INFO
Don't free up parameter The public key ASN1 method can do that if it needsto
Fix usage message for pkeyutl
Add prototypes and pkey accessor function for EVP_PKEY_CTX
Correct copyright notice this doesn't contain any SSLeay code
Add 'flags' parameter to EVP_PKEY_asn1_meth_new to set algorithm flags
undo accidental commit
as we encrypt every bit separately we need to loop through the numberof bits; thanks to Michael McDougall <mmcdouga@saulcisupennedu>PR: 1318
make local function static
Remove dss1 hack from S/MIME code
Remove link between digests and signature algorithmsUse cross reference table in ASN1_item_sign, ASN1_item_verify to eliminatethe need for algorithm specific code
Remove comment from SSLeay days about EVP_PKEY_METHOD
Make sure obj_xrefh is updated during a "make update"
Synchronise with Unixly buildGeez, a lot is happening right now, eh? :
Add OID cross reference tableFix some typos in GOST OIDsUpdate dependencies
Synchronise
Allow public key ASN1 methods to set PKCS7 SignerInfo structures
If we include winsock2h then FD_SET wants an unsigned type for an fd
Fix most WIN32 warnings and errors
Provisional support for EC pkey method, supporting ECDH and ECDSA
SHA1 for x86_64
Use more flexible method of determining output length, by setting &outlenvalue of the passed output buffer is NULLThe old method of using EVP_PKEY_sizepkey isn't flexible enough to cover allcases where the output length may depend on the operation or the parametersassociated with it
Fix from 097stable branch
Revert to original
Oops
If cipher list contains a match for an explicit ciphersuite only match thatone suite
Got sick and tired of duplicating  Too errorprone ie I forgetto update both!
Update copyright notices on a few files where all original SSLeay code hasbeen deleted
Print out zero length string properly
Add functions to allow setting and adding external EVP_PKEY_METHOD
Complete key derivation support
Update dependencies
Add key derivation support
Change the option setting command line switch to "pkeyopt" to avoid confusionwith algorithm parameters
Synchronise what what's happening with the Unix build
Typo
Extend DH ASN1 method, add DH EVP_PKEY_METHOD
Fix leak
PKCS3 DH PKCS8 ASN1 support
declare as in prototypeSubmitted by: Gisle Vanem
Extend DH ASN1 method to support public key encode/decode and parameterutilities
Compare parameters when comparing public keys
Add file dso_beosc missing from original commitPR: 1312
Support for DSA keygen, fix for genpkey
Initial DSA EVP_PKEY_METHOD Fixup some error codes
Add BeOS supportPR: 1312Submitted by: Oliver Tappe <zooey@hirschkaeferde>Reviewed by: Ulf Moeller
manual pages as HTMLSubmitted by: Oliver Tappe <zooey@hirschkaeferde>
Use Dl_info only on systems where it is known to exist It does notexist on AIX 433, AIX 51, SCO 5, or Cygwin
uncomment; that one slipped through
improve make dclean to remove files generated during buildPR: 1308Submitted by: Oliver Tappe <zooey@hirschkaeferde>Reviewed by: Ulf Moeller
Fix parameter error messages
Write parameters if genparam option include
Add parameter generation option to genpkey
Add support for setting keybits and public exponent value for pkey RSA keygen
Initial keygen support
ctrls to set PSS salt length
Preliminary PSS support
Beginnings of PSS support
Synchronise with the Unix build
Change operation values so they can be used as a maskFix rsa_pkey_method
Implementation of pkey_rsa_verify Some constification
New utility function to reverse a buffer, either by copying or inplace
Store digests as EVP_MD instead of a NIDAdd digest size sanity checks
Constification
Bugfix X931 padding
Support for digest signing and X931 in rsa_pkey_meth
Add checking to padding ctrl
Add RSA ctrl for padding mode, add ctrl support in pkeyutl
Fix typo Add EVP_PKEY_CTX control function for later use by command lineutilities
Reformat pkeyutlc, add support for verify operation but nothing actuallysupports it yet
Update dependencies
Implement encrypt/decrypt using RSA
Initial functions for RSA EVP_PKEY_METHODUpdate dependencies
If <operatio>_init function is zero interpret as noop
New utility 'pkeyutl' a general purpose version of 'rsautl'
Include EVP_PKEY argument in EVP_PKEY_CTX_new This avoids theneed for a separate EVP_PKEY parameter in the other operationinitialization routines
Initial functions for main EVP_PKEY_METHOD operationsNo method implementations yet
Updated to EVP_PKEY_METHOD code still doesn't do much
Initial definitions and a few functions for EVP_PKEY_METHOD: an extensionof the EVP routines to public key algorithms
Remove ECC extension information from external representationof the session  we don't really need it once the handshakehas completed
New function to add dynamic alias
Last arg to EVP_PKEY_assign should be void 
Rebuild mac table to avoid duplicates
Typos in a few OID names
Typo
Minor object name edit
Add an explicit load_config call so any added algorithms arevisible
Fix dynamic public key method lookup
New function to retrieve ASN1 info on public key algorithms New commandline option to print out info
Stop warning
Update and add last ? set of GOST OIDs
clarification
check length properlySubmitted by: Peter Sylvester
simplify: use s2n macro
Avoid hardcoded table length where we can use sizeofSubmitted by: Peter SylvesterReviewed by: Bodo Moeller
fix memory leakSubmitted by: Peter Sylvester
Change chop to chomp when reading lines, so CRLF is properly processed onthe operating systems where they are the normal line endings
More GOST OIDs
Add GOST parameter set OIDs
Don't free up key in priv_decode
Initialize pval
If we declare a function, like d2i_TS_MSG_IMPRINT_bio, we'd betterdefine it too, or things like shared libraries might be a bit sad
Fix gost OIDs
Synchronise with recent changes
The config option flag needs to be in the SSLEAY_CONFIG valuePR: 1300
fix for hostname extensionSubmitted by: Kaspar Brand, Peter Sylvester
Implement Supported Elliptic Curves ExtensionSubmitted by: Douglas Stebila
Change default curve for compatibility with asoontobewidelydeployed implementation that doesn't support theprevious defaultSubmitted by: Douglas Stebila
Implement ciphersuite selection logic given Supported Point Formats ExtensionSubmitted by: Douglas Stebila
Fix typo
Add some GOST OIDs
Add missing function declaration
Fix bug where freed OIDs could be accessed in EVP_cleanup bydefering freeing in OBJ_cleanup
Typo
New utility pkeyparam Enhance and bugfix algorithm specific parameterfunctions to support it
New general public key utility 'pkey'
Small bug  apps/CAsh and apps/CAcom look at SSLEAY_CONFIG, notOPENSSL_CONF
Since we're moving between directories, let's get an absolute path toopensslexe
Simplify ASN1 for point format listSubmitted by: Douglas Stebila
Only try to remove the tsadir subdirectory if it actually exists
Initial support for generalized public key parameters
Add support for legacy PEM format private keys in EVP_PKEY_ASN1_METHOD
Typo
Fix bug in DSA, EC methods
Add information and pem strings Update dependencies
Make EVP_PKEY_ASN1_METHOD opaque Add application level functions toinitialize it Initial support for application added public key ASN1
Keep up with the changes in the Unix build system
Move algorithm specific print code from crypto/asn1/t_pkeyc to separate_prnc files in each algorithm directory
Gather printing routines into EVP_PKEY_ASN1_METHOD
VMS doesn't support includes of paths very well
Synchronise with recent changes
DH EVP_PKEY_ASN1_METHOD, doesn't do much yet?
Transfer parameter handling and key comparison to algorithm methods
Initial support for pluggable public key ASN1 support Process most publickey ASN1 handling through a single EVP_PKEY_ASN1_METHOD structure and movethe spaghetti algorithm specific code to a single ASN1 module for eachalgorithm
Stop compiler warnings
fix last commit: return NULL is TS_RESP_CTX_set_status_info_cond failed
ensure the pointer is valid before using it
check if con ! NULL before using it
remove unnecessary code
Typo
 empty log message 
Clarification for CPU specific config options
fix for OPENSSL_NO_ECPR: 1293
fix problems found by coverity: remove useless code
tlsext_ecpointformatlist_length is unsigned, so check if it's lessthan zero will only result in pissing of some compilers
create BN_CTX object
fix error found by coverity: check if ctx is ! NULL before calling BN_CTX_end
fix error found by coverity: check if ctx is ! NULL before calling BN_CTX_end
signed vs unsigned
Oh, now I noticed Bodo's change that made tlsext_ecpointformatlistunsigned
Resolve signed vs unsigned issues
fix sign problems
remove unused variables
udpate Supported Point Formats Extension codeSubmitted by: Douglas Stebila
fix commentSubmitted by: Peter Sylvester
use BIO_snprintf instead of snprintf + use BIO_FP_TEXT for text outputSubmitted by: Gisle Vanem
note that SSL_library_init is not reentrant
Implement the Supported Point Formats Extension for ECC ciphersuitesSubmitted by: Douglas Stebila
clarification
fix signed vs unsigned warning
fix "missing initializer" warning
fix signed vs unsigned warning
make update
add initial support for RFC 4279 PSK SSL ciphersuitesPR: 1191Submitted by: Mika Kousa and Pasi Eronen of Nokia CorporationReviewed by: Nils Larsch
Remember to build WP_TEST on VMS, as well :
fix function name in error message
unused function
The actual whirlpool test was missing on VMS
constify some print and ts functions
Typo
no need to cast away the const
make some parameters const
Make shorter TS symbols for OpenVMSDon't convert a function pointer to a void, ISO C doesn't like that
Forgot the TSA application
Check EVP_DigestInit_ex return value in EVP_BytesToKey
force C locale when using [az] in sed expressionsPR: 1283Submitted by: Mike Frysinger
fix "ifndef HZ" statementPR: 1287
TS bugfixes: Do not hardcode message digest algorithms; fix ASN1 decodingSubmitted by: Zoltan Glozik <zglozik@opentsaorg>
Synchronise with opensscnf
Add a TSA test  testtsacom is a manual sh to dcl translation oftesttsa
Add TS to the VMS build
Break out deltree in its' own command procedure
fix nodh configure option; patch supplied by Peter Meerwald
Print out <INVALID> if an OID value is invalid
Tolerate a SEQUENCE in DN components
ignore
message style
oops
wrap shlib for testtsaSubmitted by: David Somers <dsomers@omz13com>
make some internal functions static; patch supplied by Kurt Roeckx
fix typosPR: 1280
Fix from stable branch
Fix warnings
shorter filenames
use asn1 callbacks for new, free and d2i
don't use the l length modifier for int
use stricter prototypes, fix warnings
fix warning: add missing prototype
fix warning
fix typo: pass precomputed parameters to the underlying signature function; thanks to Lucas Newman
 empty log message 
make update
time stamp Makefile, test filesSubmitted by: Zoltan Glozik <zglozik@opentsaorg>
RFC 3161 compliant time stamp request creation, response generationand response verificationSubmitted by: Zoltan Glozik <zglozik@opentsaorg>Reviewed by: Ulf Moeller
Minor clarification
Add FAQ about AKID
Document the building macros
As an effect of revisions 1261, BUILD_CMD was changed so $DIRSwasn't respected when using it to build different parts of OpenSSL1269 was an attempt to correct that, but unfortunately meant that webuilt every part that was given i $DIRS 7 times  This change putsback the original intent with BUILD_CMD via the new macroBUILD_ONE_CMD while keeping the intent with RECURSIVE_BUILD_CMD
Fix warnings about "sin" conflicting with sin3 definition
Avoid warnings about shadowed definitions
Update from 097stable
remove unnecessary check
p could be uninitialized
move new member of SSL_SESSION to the endminimize changes to binary formatSubmitted by: Peter Sylvester
Update filenames in makefiles
Recognize mingw in perlasm
fix if statement: call conn_state if the BIO is not in the BIO_CONN_S_OK state
Ignore zero length constructed segments
TypoSubmitted by: Girish Venkatachalam <girish1729@gmailcom>
add additional checks + cleanupSubmitted by: David Hartman <david_hartman@symanteccom>
Fixes for BOOL handling: produce errors for invalid string for minicompiler,correctly encode FALSE for BOOL in ASN1_TYPE
recent changes from 098: fix cipher list order in s3_libc,make "nossl2" work againPR: 1217
Fix from stable branch
Typo
Update from stable branch
signed vs unsigned clash
support numeric strings in ASN1_generate_nconf
fix commentPR: 1270
2 is a primePR: 1266
Further TLS extension improvementsSubmitted by: Peter Sylvester
Forgot to initialize CC6DISABLEWARNINGS properly
Typo
improvements for alert handling
More TLS extension related changesSubmitted by: Peter Sylvester
Further TLS extension updatesSubmitted by: Peter Sylvester
Disable the Mixed Linkage warning for some selected modules  This isbecause the Compaq C compiler will not accept that a variable bedeclared extern then defined static without a warning
Avoid contradictive error code assignments"make errors"
Detect more errorsChange assignment strategy: rathern than using max+r for new codes,find first hole in list of existing codes
Detect SSL error code mishandling
include max codes in debug output
Some error code cleanups SSL lib used SSL_R_ codes reserved for alerts
There's no such things as DTLS1_AD_MISSING_HANDSHAKE_MESSAGEFor now, anyway
prepare for additional RFC3546 alerts
make sure that the unrecognized_name alert actually gets sentSubmitted by: Peter Sylvester
complete and correct RFC3546 error codes
Fixes for TLS server_name extensionSubmitted by: Peter Sylvester
Add names for people who provided the TLS extension patch
The VMS I run on doesn't know socklen_t and uses size_t instead
Fix signed/unsigned char clashes
In ASN1_parse show tag value for ASN1 tags > 30
Various changes in the new TLS extension code, including the following: fix indentation rename some functions and macros fix up confusion between SSL_ERROR_ and SSL_AD_ values
Make sure that after the change from revision 1261,it's still possible to do a partial build
Missing files in the VMS installation
C style fixup
Support TLS extensions specifically, HostNameSubmitted by: Peter Sylvester
Refine login in b_sockc
Compile Windows with winsock2h But note that we still link with wsock32!This works because wsock32 commonly loads ws2_32 anyway and we [intend to]check upon presense of winsock2specific API at runtime
Fix typo and purify logic in b_sockc
/util update, which covers various issues, but most importantly mkerrpland mkdefpl spinning in endless loop
Typo in win32_globallookup
Make b_sockc IPv6 savvy
"Relax" prototype and rename DSO_global_lookup_func to DSO_global_lookup
util/mkerrpl update to address various mkerrpl problems [such as failureto handle multiline comments and endless loop while parsing overloadedgnuish __attribute__]
Fix mapping "leak" in newly introduced win32_globallookup
Oops! Remove junk
Rewrite timeout computation in a way that is less prone to overflowProblem reported by Peter Sylvester
Add DSO_global_lookup_func implementation See commentary in dso_libcfor further details
Fix CFB and OFB modes in eng_padlockc Engine was consistent with itself,but not interoperable with the rest of the world test_padlock script isadded mostly for reference
Minor sparcv9 cleanups
Lower PADLOCK_CHUNK till value, which doesn't affect the benchmark resultsWell, it's even contrary, 512 was observed to improve performance by 5Excuse ourselves from treating C7 specially
Whoops, we were copying instead of comparing at the end of trying tofind a queue elementNotified by nagendra modadugu <nagendra@csstanfordedu>
As SPARCV9 CPU flavor is [expected to be] detected at runtime, we canafford to relax SPARCV9/8+ compiler command line and produce "unversal"binaries as we used to
comments
Eliminate possible mapping leak
Typo in sparcv8capc
Keep disclaiming 16bit platform support For now remove WIN16 referencesfrom h files
Missing CFLAG in couple of depend: targetsPR: 1247Submitted by: Doug Kaufman
Put back OPENSSL_SYS_MSDOS definition to revive DJGPP builtPR: 1247
Make bioh resistant to gnuish __attribute__ redefenitionsPR: 1252
Fix typos in osf1 shared rulesPR: 1248Submitted by: Nikola Milutinovic
Unify sparcv9 assembler naming and build rules among 32 and 64bit buildsEngage runtime switch between bn_mul_mont_fpu and bn_mul_mont_int
Make framework for Whirlpool assembler flexible
Engage Whirlpool assembler and mention Whirlpool in CHANGES
Make room for Whirlpool assembler in Configure
Allow for warningfree passing of Wl options on config command line Onepossible usage is to pass Wl,z,noexecstack on Linux to ensure the stackis marked nonexecutable Well, Wa,noexecstack works fine too
Mention bn64,64 to bn64,32 switch on 64bit SPARCv9 targets in CHANGES
We all make typos: Fix just introduced ones in bnh
Eliminate warning induced by http://cvsopensslorg/chngview?cn14690 andkeep disclaiming narrower than 32bit support
To exclude contention for shared FPU on T1, trade 3 of DES performance
sparccpuid module update
Add IALUonly bn_mul_mont for SPARCv9 See commentary section for details
Switch 64bit sparcv9 platforms from bn64,64 to bn64,32 This doesn'thave impact on performance, because amount of multiplications does notincrease with this switch, not on sparcv9 that is On the contrary, itactually improves performance, because it spares a load of instructionsused to chase carries Not to mention that BN assembler modules can beshared more freely between 32 and 64bit builts
Allow for bn64,32 on LP64 platforms
update TLSECC codeSubmitted by: Douglas Stebila
comment
Minor aessparcv9pl optimization
Engage AES for UltraSPARC in sparcv9 targets
Revoke the option to share AES Sboxes between C and assembler It wastesspace, but gives total flexibility [back]
Initial draft for AES for UltraSPARC assembler
Support for indirect calls in x86 assembler modules
Add cpuid code to VC++ build
Don't include zlib header dir if it is not defined
Fix typos in wpmmxpl
Initial attempt at Whirlpool assembler support on VC++
Avoid warnings on VC++ 2005
Update from 098stable
Update from stable branch
Make mk1mfpl and friends recognize Whirlpool
Make ZLIB without ZLIB_SHARED compiled again
Couple other benchmark comparisons for wpx86_64pl
x86cpuidpl update
Oops
Update ordinals and include changes from 098
New functions to support opaque EVP_CIPHER_CTX handling
Add error checking to avoid crashing when zlib cannot be loaded
Include EVP_whirlpool prototype in evph
wq instead of wp?  That's gotta be among the more amazing typos I'vemade
Whirlpool was added to EVP, so let's build it on VMS as well
Whirlpool for x86_64
Mention Whirlpool in dgst help
Add Whirlpool to EVP
Adapt Whirlpool API for EVP
Fix typos in wpmmxpl
Typo
Make CApl script use CA extensions when creating a root CA
Build Whirlpool on VMS as well
Add Whirlpool OID
Remove development leftover from whrlpool/asm/wpmmxpl
Add missing Makefile and fix couple of typos in commentary
Whirlpool hash implementation The fact that subdirectory and h file arecalled whrlpool is not a typo, but a way to keep the names shorter than8 characters Remaining TODO list comprises adding OID, EVP, correspondingflag to apps/openssl dgst, benchmark, engage assembler
When using POSIXly functions, we need to define _POSIX_C_SOURCE, atleast when the source is compiled with ANSI settings
Extensive OID code enhancement and fixes
Synchronise with the Unix build
deFUDify: don't require OPENSSL_EC_BIN_PT_COMP
disable some invalid ciphersuites
deFUDify: don't require OPENSSL_EC_BIN_PT_COMP
Keep shutting up VC8PR: 1243
Apply "better safe than sorry" approach after addressing sporadic SEGV inbn_sub_words to the rest of the sparcv8plusS
Attempt to resolve sporadic SEGV crashes in bn_sub_words in OpenSSH I'mbaffled why it crashes and does it sporadically
Update from stable branch
Throw in comment so that one doesn't get tempted to optimize it away
Avoid endless loop when libcryptoa is manually deleted, but 'make clean'was not executed It doesn't excuse user from running 'make clean', itsimply avoids process table exhaustionPR: 1236Submitted by: Michael Richardson
Mention PROBLEMS in FAQ
AIX blibpath is not accumulative, one apparently has to specify evenselfobvious /usr/lib:/libPR: 1239
Minor perlasm cleanup
Tidying up WinCE support
Improve crosscompiler portability of applinkc module and mentionCRYPTO_malloc_init in FAQ
Update docs
Update from stable branch
One of Win64 rules lacked bufferoverflowulib
Move declaration for optional bn_mul_mont to bn_lclh in order to hideit from mkdefpl
Address MASMspecific problems introduced withhttp://cvsopensslorg/chngview?cn14547
Eliminate VC compiler warning
First draft for WCE PortSDK support Once again! It's draft which requiresmore work, ie more modifications are due
Make DLL engines the default in 099 and VC++
Add symbols for ASN1 print functions, update ordinal file
Update from stable branch
Revive app_tminterval for Netware
Revive app_tminterval for vxworks
Revive app_tminterval for VMS
Keep removing references to tmdiff
The typos never stop Fix one in apps/appsc
x86_64xlatepl commentary section update
Fix newly introduced typos and warnings in /apps
Collect timing procedures in apps/appsc It's a bit cruel patch, as ittemporarily[!] removes support for couple of esoteric platforms [well,Netware, vxWorks and VMS]
Eliminate crypto/tmdiff[ch]
Eliminate remaining calls to stat in apps/appsc and unify WIN32_rename forall Windows targets
Eliminate dependency on read/write/stat in apps under _WIN32
Engage OPENSSL_NO_POSIX_IO on Windows CE
Make cygwin work in directories mounted with 'text' attribute
Get rid of arcane reference to _fmode in apps/appsh Binary open ishandles properly by bss_filec, which renders _fmode redundant
Mask libcrypto references to stat with OPENSSL_NO_POSIX_IO
Reserve for OPENSSL_NO_POSIX_IO macro which is to eliminate referencesto open/read/write/close First OPENSSL_NO_POSIX_IO target would beWindows CE
Disable BIO_s_fd on CE and disable fd:N as password passing option onall _WIN32 [see commentary for clarification]
Make pshufw optional and update performance table in sha512sse2pl[as per http://cvsopensslorg/chngview?cn14551]
fix typo, pointed out by Patrick Guio
compile sstrsep only if HAVE_FORK is defined; patch supplied by Johan Gill <johane@lysatorliuse>
Document it
Fix numerous bugs in the Win32 path splitter
A slight change in documentation that makes it so much more comprehensible
Include kerberos libraries if used when linking test apps: some need it
Add install_name in link_adarwin rulePR: 1218
Add fixes for CAN20052969This were in 097stable and 098stable, but not in HEAD so far
fix stupid typo
harmonize with 097stable and 098stable variants of CHANGES
Fix install problems on MacOS X and HPUXPR: 1218,1185
+20 SHA512 performance improvement on x86
Eliminate false preprocessor dependencies introduced with VOS support
Fix typos in macos x targets
Eliminate ~35KB of duplicate code in des586pl and reserve for foldedloop option, which can give further 3KB code reduction
Move DES_SPtrans to where it really belongs, dec_enc to be specific
Clarify binary compatibility with HAL/Fujitsu SPARC64 family
Integrate sparcv9amontpl into UltraSPARC builds
bn_asmc update
Eliminate gcc warning in bn_montc
Add support for 32bit ABI to sparcv9amontpl module
Change bn_mul_mont declaration and BN_MONT_CTX Update CHANGES
Add rudimentary aix64gcc targetSubmitted by: Stefan Neis
util/pl/OS2EMXpl syncSubmitted by: Stefan Neis, Brian Havard
one time CAN>CVE update
Yet another "teaser" Montgomery multiply module, for UltraSPARC It's notintegrated yet, but it's tested and benchmarked [see commentary sectionfor further details]
Add in CHANGES for 097i
Flip saved argument block and tp [required for nonSSE2 path]
Make sure x86montpl returns zero even if compiled with nosse2
Fix bug in SMALL_FOOTPRINT path and clarify comment
Broaden compatibility amount Win32 headers even further [some don't haveSIZE_T]
Make sure head CHANGES is up to date, we refer to this in announcetxt
Renumber to follow what happens with 098
Add timestamp to x86montpl
Throw in bn/asm/x86montpl Montgomery multiplication "teaser"
Add PVK support to dsa utility
Avoid warning on Win32
New option SSL_OP_NO_COMP to disable compression New ctrls to setmaximum send fragment size Allocate I/O buffers accordingly
x86_64montpl readability improvement
Throw in Montgomery multiplication assembler for x86_64
Refine logic in bn_montc and eliminate redundant BN_CTX pulls
Leave the decision to call/implement bn_sqr_mont to assembler developer
Initialize bignum constants using BN_bin2bn instead of BN_hex2bn Thissaves a bit of space and avoids a compiler warning about string length
Mention "nodso doesn't remove ldl" in PROBLEMSPR: 1160
Fix typo in INSTALLWCE
Zap DES_UNROLL when SMALL_FOOTPRINT is in effect
Fix typo in exptestc
Reserve for SMALL_FOOTPRINT bn_asmc Currently OPENSSL_SMALL_FOOTPRINTis defined on Windows CE targets
Add reference implementation for bn_[mul|sqr]_mont, new candidates forassembler implementation
Oops :
Make OPENSSL_NO_COMP work under Win32
new option "openssl ciphers V"
Fix compilation without OPENSSL_NO_COMP :
Make OPENSSL_NO_COMP compile again
successfully updating the db shouldn't result in an error message
Fix typo
Fix missing applink call
Change a comment so it corresponds to reality  Put back a character thatwas previously replaced with a NUL for parsing purposes  This seems tofix a very weird parsing bug involving two variable references in the samevalue
Update from stable branch
protect BN_BLINDING_invert with a write lock and BN_BLINDING_convertwith a read lockSubmitted by: Leandro Santi <lesanti@fiuba7504comar>
Fix SunOS 4 building issuePR: 1196
Broaden compatibility among Windows SDK versions Elder versions don't haveULONG_PTR, so we replace it with equally wide SIZE_T
128 bit AES ciphersuites should be classified as HIGH
Latest MSVCR80 doesn't tolerate unsupported signal numbers, throwingfatal exceptions
"Overload" SunOS 4x memcmp, which ruins ASN1_OBJECT table lookupsPR: 1196Submitted by: Russel Ruby
IA32 BN tuneup Performance imrpovement varies with platform andkeylength, this time larger improvement for shorter keys, and reaches15 Both SSE2 and IALU code pathes are improved
Fix typo: "powepc" vs "powerpc" GrrrrPR: 1198
MD5 x86_64 assembler updateSubmitted by: Marc Bevand and Charles Liu
Refine AIX supportPR: 1198
BC32pl updatesSubmitted by: Old Wolf, Jon Bright
Proper solution to nasm compilation problems in Borland context
Mention BN_sqr failure on x86 platforms in /RPOBLEMSPR: 1176 [and others]
Another missing space in VC32pl [from 098]
Missing space in VC32pl
Oopstype typoPR: 1195
bswapl usage should be masked by I386_ONLYPR: 1195
cleanup doxygen comments
add some doxygen comments
Change opensslcnf to use UTF8Strings by default and not always include issuerand serial versions of AKID
Fix for Win32
fix typosPR: 1201
correct+extend publication info
bugfix: register engine as default engine in ENGINE_set_default_DSASubmitted by: Jonathon Green
Remove warnings about signed vs unsigned
Synchronise VMS build with Unixly build
fix function name in error
Update print macro properly this time
Update ASN1 print implement macro
Update asn1th too for ASN1 print
Update to ASN1 printing code
Two new verify flags functions
fix typo in sbgp namesPR: 1194
don't try to load cert/key when the "nocert" option is set
Extend callback function to support print customization
Return 2 from X509_NAME printing routine to add newline
Update ASN1 printing code and add a print option to 'pkcs7' utility forinitial testing
Synchronise with Unixly build
Initial support for ASN1 print codeWARNING WARNING WARNING, experimental code, handle with care, use atyour own risk, may contain nuts
Integrated support for PVK files
Last synchronisationn with Unixly build  I hope
fix warnings when building openssl with the following compiler options:Wmissingprototypes Wcomment Wformat Wimplicit Wmain WmulticharWswitch Wshadow Wtrigraphs Werror WcharsubscriptsWstrictprototypes Wreturntype Wpointerarith  W WunusedWnounusedparameter Wuninitialized
More synchronisation with the Unixly build
Fix warnings
Synchronise with Unix changes
Keep cipher lists sorted in the source instead of sorting them atruntime, thus removing the need for a lock Add a test to ssltestto verify that the cipher lists are sorted
Generate primes, too
recent DH change does not avoid all possible smallsubgroup attacks;let's be clear about that
avoid potential spurious BN_freeSubmitted by: David Heine <dlheine@suifStanfordEDU>
initialize cipher/digest methods table in SSL_library_init and hence remove the need for a lock
add missing file
Make DH safer, include wellknown primes
Fix warning
Use correct date and filename
Command line support for RSAPublicKey format
Delete old ASN1_METHOD files
Add file which includes new ASN1 NETSCAPE format for certificates
Update from stable branch
Remove ASN1_METHOD code replace with new ASN1 alternative
New version of ASN1 print code, still not compiled in though
Let the TLSv1_method etc functions return a const SSL_METHODpointer and make the SSL_METHOD parameter in SSL_CTX_new,SSL_CTX_set_ssl_version and SSL_set_ssl_method const
Eliminate reference to removed platform line
Pedantic polish to WCEspecific if clause in ectestc
Fix typo in WCE section in VC32pl
Mention wcecompat update INSTALLWCE
Fix Intel assembler warnings
Suppress "deprecated" warnings introduced in VC8
Add support for more recent WCE SDK
a ssl object needs it's own instance of a ecdh key; remove obsolete comment
remove unused internal foo_base_method functions
Final? WinCE update
avoid infinite recursion if dynamic engine isn't loadedSubmitted by: Jonathon Green <jonathon_au@yahoocom>
Initialize SSL_METHOD structures at compile time This removes the needfor locking code The CRYPTO_LOCK_SSL_METHOD lock is now no longer used
fix potential memory leak + improved error checkingPR: 1182
Allow PKCS7_decrypt to work if no cert supplied
34 times better RSA/DSA performance on WIN64A target Well, on AMD64 CPU,EMT64T will hardly exhibit better performance
WCE update, mostly typos
PICify SPARC assembler in alternative manner to eliminate dependency onOPENSSL_PIC macro
Abstain from GUI calls in rand_winc in NT service context
WCEspecific update for VC32pl
WCEspecific fix for cryptlibc
Keep disclaiming 16bit support
Optimize for space on embedded WCE
Stick to DWCE_PLATFORM_$wceplatf, as that's what is apparently set byVisual Studio IDE
Eliminate bogus if WCEPLATFORM!MS_HPC_PRO [which by the way unconditionallyinvalidated the whole clause] and replace it with if _WIN32_WCE>210
Type in OSF1 platform name
Implement complementary LoadLibraryA shim under WCE
Eliminate dependency on 3rd party wcedefsmak
Fix if _MSC_VER clause in aes_loclh
add comment
remove unused variable
improved error checking and some fixesPR: 1170Submitted by: Yair ElharrarReviewed and edited by: Nils Larsch
Handle case where itNULL
Update ASN1 printing code Highly experimental, not working properly neitherdid the old code and not compiled in yet
Add declaration for IDP ASN1 functions
bytes_to_long_long isn't used anywhere any more, so let's remove itentirely
I'm reversing this change, as it seems the error is somewhere else
Silence two more generated files
add a cvsignore
"make update"
Change my debug build for amd64
Fix compilation when HAVE_LONG_LONG isn't defined
Fix signed/unsigned warnings
Fix PEDANTIC compilation, using the same trick as elsewhere
Fix 64bit compilation when PQ_64BIT_IS_INTEGER isn't defined
fix BN_mod_word and give a more reasonable return value if an error occurred
Add support for setting IDP too
Don't use @syntax for extended CRLDP format
Allow setting of all fields in CRLDP Few cosmetic changes to output
Typo which prevents mult valued RDNs being created
Commentary section update in sha512x86_64pl
Unify VC32pl and VCCEpl scripts and update INSTALLW32
Pull up mkdefpl from 098
Eliminate gcc warning in dso_win32c
Engage SHA256/512 x86_64 assembler module
SHA256/512 x86_64 assembler module
Print out previously unsupported fields in CRLDP by i2r instead of i2vCosmetic changes to IDP printout
Initial print only support for IDP CRL extension
Fix some signed/unsigned warnings
set correct bn>top value
the final byte of a pkcs7 padded plaintext can never be 0Submitted by: K S Sreeram <sreeram@tachyontechnet>
Pedantic polish to aesia64 and sha512ia64
Pedantic polish to md5ia64S
Syncronize BSDia64 with other IA64based platforms
Pedantic polish to rc4ia64pl
Typo in version number
Perl stylistic/cosmetic update for aesx86_64pl
Fix bug [SHA1 IA64 being disabled] introduced with Stratus VOS updatePR: 1130
Engage MD5 assembler module
This update gets endiannessneutrality right and adds second requiredentry point, md5_block_asm_data_order
MD5 IA64 assembler implementation Original copy for reference purposesSubmitted by: David MosbergerObtained from: http://wwwhplhpcom/research/linux/crypto/
Retire original rc4ia64S
Switch to new RC4 IA64 module
This update implements following improvements1 Original submission required minor modification to RC4_set_key, whichwe don't want to tolerate and therefore we fix assembler instead2 Eliminate remaining byteorder dependence [look for RC4_BIG_ENDIAN]3 Eliminate logical error [when key>x is referred prior key is verified]4 HPUX assembler puked on MODSCHED_RC4 macro with "syntax error,"macro has to be splitted in two5 Deploy parallel compare in function prologue6 Eliminate redundant instuctions and nops7 Eliminate assembler warnings
Unrolled RC4 IA64 loop gives 40 improvement over current assemblerimplementation [as predicted]Submitted by: David MosbergerObtained from: http://wwwhplhpcom/research/linux/crypto/
Fix unwind directives in IA64 assembler modules This helps symbolicdebugging and doesn't affect functionalitySubmitted by: David MosbergerObtained from: http://wwwhplhpcom/research/linux/crypto/
~15 better AES x86_64 assembler
fix typo
bugfix: 0  w w ! 0 is actually negative
make/configure nodeprecated [nodsa] [nodh] [noec] [norsa]make depend all testwork againPR: 1159
add missing entries for "multivaluerdn" and "utf8" in capod and reqpodPR: 1158Submitted by: Michael Bell <michaelbell@cmshuberlinde>
Commentary section update
the second argument of d2i_X509, d2i_X509_CRL and d2i_X509_REQ is constPR: 1156Submitted by: Michael Bell <michaelbell@cmshuberlinde>
complementary x86_64xlatepl update
AES x86_64 assembler implementation
Latest Intel compiler means every word in "if copying [with memcpy] takesplace between objects that overlap, the behavior is undefined" It's hardto comprehend, but it reportedly manages to be case
On case insensitive systems, 'install' gets mixed up with the existing file'INSTALL', so we need to put some force into installing
Changes from the 098 branch
Changes from the 098 branch
CHANGES and TABLE sync with 098
Pull up Win64 support from 098
Add libcryptopc and libsslpc, and install them along with opensslpcPR: 1143
Update from stable branch
The private key should never have ended up in newreqpemNow, it ends up in newkeypem instead
Fix bugs in bugfix to x509/by_dircPR: 1131
Trap condition should be 64bit when it's due
More elegant solution to "sparse decimal printout on PPC" problem
Decimal printout of a BN is wrong on PPC, it's sparse with very fewsignificant digits As soon it verifies elsewhere it goes to 098 and097
initialize newly allocated dataPR: 1145
Pedantic polish to aes586pl:
Typos in commentary section
AES_cbc_encrypt to allow enduser to retain small blocks performance byaligning the key schedule in a specific manner
Check PKCS7 structures in PKCS12 files are of type data
Actually, the 64bit format specifier differs between SIXTY_FOUR_BIT andSIXTY_FOUR_BIT_LONG
Brought forward from 098  64 bit warning fixes and fussy compiler fixes
Fix warnings
asn1parse doesn't support any TXT format, so let's stop pretendingit does
remove OPENSSL_NO_ASM dependency
Replace _int64 with __int64, which is more widely accepted among Win32compiler vendors
A report suggests that there're nasm version, which defaults to 16bitsegmenting
Mention hpux64ia64cc blowfish failure in PROBLEMS
There are a few showstoppers  Unfortunately, I only remember one  Please fill this in
Eliminate dependency on UNICODE macro
Fix typos in apps/appsc
Sync libeaynum
Unify some SCO targets
Minor final? Makefiles polish
Minimum requirement for Solaris x86 was always Pentium Reflect this inConfigure line TABLE update accomodates other recent /Configure changes
Omit padding in RC4_KEY on IA64 The idea behind padding was to reserveroom for aligning of the key schedule itself [specific alignment isrequired for future performance improvements], but OpenSSH "abuses"our API by making copies and restoring RC4_KEY, thus ruining thealignment and making it impossible to recover the key schedulePR: 1114
Updated status from 098stable
Replace emms with finit in x86cpuid
Add Argen root CAs
Someone did some cutting and pasting and didn't quite finish the job :Notified by Steffen Pankratz <kratz00@gmxde>
Wrap the inclusion of openssl/engineh with a protective check forthe absence of OPENSSL_NO_ENGINE
Wrap the inclusion of openssl/engineh with a protective check forthe absence of OPENSSL_NO_ENGINEPR: 1123
Do not defined des_crypt, since it clashes with Solaris crypthPR: 1125
Initialise dir to avoid a compiler warning
The NAME section of a man page is required to have a dash followed by ashort description, at least according to pod2manPR: 1127
DCC doesn't like argument names in returned function pointersPR: 1122
Update for Stratus VOSPR: 1130
Configure update for Stratus VOSPR: 1129
Change dir_ctrl to check for the environment variable before using the defaultdirectory instead of the other way aroundPR: 1131
Strip the engine shared libraries as wellSubmitted by Corinna Vinschen <vinschen@redhatcom>
Darwin specific update for Configure and Makefileshared
Missed c in IRIX rules
Typo in bnmips3 rule
Rename mips3o to bnmips3o [it's better in long run] and adjust therule to accomodate gcc4, which no longer support SGI as
HPUX specific updates to Makefileorg and Makefileshared
Jumbo Makfiles update eliminate ambiguities between GNUish and SysVish make flavors; switch [back] to e; fold/unify rules;This is followup to the patch introducing common BUILDENV Idea isto collect as much parameters in $TOP as possible and "strip" lowerMakefiles for most variables [and thus makes them more readable]
noasm didn't prevent make from compiling assembler modules
TABLE was outofsync
Solarisspecific Makefileshared update from 098
Typo
Fix extension ordering
Do no try to pretend we're at the end of anything unless we're at the endof a 4character block
Check for 'usage' and 'Usage'Submitted by Tim Rice <tim@multitalentsnet>  His comment is:I noticed "make report" didn't show the cc version on most ofmy System V platforms This patch corrects this
Fix typo in ssl/d1_pktc
Refine ELF detection on BSD platforms
Solaris x86_64 /usr/ccs/bin/as support
Handle wraparounds and revive missing assignment
Add crypto/bn/bn_primeh to the collection of generated files  In theupdate target, place the dependency on depend last, so all necessary filesare generated before the dependencies are figured outPR: 1121
With DJGPP, it seems like the return code from grep, even when in themiddle of a pipe, is noted  Counter that by forcing a true return codewhen the return code has no importancePR: 1085
Undefine DECRANDOM before redefining itPR: 1110
Add better documentation on how id_function should be defined and whatissues there arePR: 1096
Move the definition of DEVRANDOM for DJGPP from Configure to e_oshThat should solve the issues with propagating it through the MakefilesPR: 1110
Only define ZLIB_SHARED if it hasn't already been defined on the commandline, for examplePR: 1112
Have pod2manpl accept 'for comment ' before the 'head1 NAME' linePR: 1113
clear dso pointer in case of an errorPR: 816
update for the cswift engine: fix the problem described in bug report 825 fix a segfault when the engine fails to initialize let the engine switch to software when keysize > 2048PR: 825, 826Submitted by: Frdric Giudicelli
Do not undefine _XOPEN_SOURCE  This is currently experimental, andwill be firmed up as soon as it's been verified not to break anything
098beta5 works on Gentoo/arml but not /armb, and works on Linux AMD64
Data about which Cygwin versions 098beta5 work on
098beta5 works on SuSE 93
098beta5 works on Cygwin
update FAQ
098beta5 works on VMS/Alpha
Status update
Netware patch submitted by Verdon Walker" <VWalker@novellcom> in PR1107  He says:This is a followup to the NetWare patch that was applied to beta3  Itdoes the following: Fixes a problem in the CLib build with undefined symbols Adds the ability to use BSD sockets as the default for the OpenSSLsocket BIO  NetWare supports 2 flavors of sockets and our Apachedevelopers need BSD sockets as a configurable option when buildingOpenSSL  This adds that for them Updates to the INSTALLNW file to explain new optionsI have tried very hard to make sure all the changes are in NetWarespecific files or guarded carefully to make sure they only impactNetWare builds  I have tested the Windows build to make sure it doesnot break that since we have made changes to mk1mfplWe are still working the gcc cross compile for NetWare issue and hopeto have a patch for that before beta 6 is released
Show what the offending target wasPR: 1108
replace the deprecated "m486" gcc option with "marchi486"PR: 1049
 let SSL_CTX_set_cipher_list and SSL_set_cipher_list return anerror if the cipher list is empty fix last commit in ssl_create_cipher_list clean up ssl_create_cipher_list
Eliminate gcc pedantic warnings
Allow for dso load by explicit path on HPUX
When the return type of the function is int, it's better to return anin than NULL, especially when an error is signalled with a negativevalue
use "" instead of "|", fix typo
Avoid endless loops  Really, we were using the same variable for twodifferent conditions
ssl_create_cipher_list should return an error if no cipher could becollected see SSL_CTX_set_cipher_list manpage Fix handling of"cipher1+cipher2" expressions in ssl_cipher_process_rulestrPR: 836 + 1005
"Liberate" dtls from BN dependency Fix bug in replay/update
Fix for padding X931 padding check and zero padding bytes
Allow BIO_s_file to open and sequentially access files larger than 2GB onaffected platformsPR: 973
FAQ to mention nosha512 as option for compilers without support for 64bitinteger type
Pass INSTALL_PREFIX in BUILDENVPR: 1100
Skipping all tests just because one algorithm is disabled seems a bit harschPR: 1089
Change mention of Makefilessl to Makefile
_GNU_SOURCE needs to be defined before any standard header
Update from 098stable
Further change pq_compath to generate the flag macros PQ_64BIT_IS_INTEGERand PQ_64BIT_IS_BIGNUM with the values 0 for false and 1 for true,depending on which is true  Use those flags everywhere else to providethe correct implementation for handling certain operations in q PQ_64BIT
Document the change and update the version number d'oh!
Remove the incorrect installation of '{openssldir}/lib'PR: 1074
Change pq_compath to trust the macros defined by bnh a bit more, and therebyprovide better generic support for environments that do not have 64bitintegers  Among others, this should solve PR 1086
gcc 2953 on Ultrix supports long longPR: 1091
Correct typo ia64o > bnia64oPR: 1094
Add support for the new Intel compiler, iccSubmitted by Keith Thompson <kst@sdscedu>PR: 1095
Old typoPR: 1097
Updated support for NetWare, submitted by Verdon Walker <VWalker@novellcom>PR: 1098
New function, DSO_pathbyaddr, to find pathname for loaded shared objectby an address within it Tested on Linux, Solaris, IRIX, Tru64, Darwin,HPUX, Win32, few BSD flavors
Unify BSDi target
/PROBLEMS to mention workarounds for ULTRIX build problemsPR: 1092
The macro THREADS was changed to OPENSSL_THREADS a long time agoPR: 1096
From 098stable:handshake_write_seq is an unsigned short, so treat it like one
Use correct name for config file env variable
Typo
Update CHANGES
Fix inconsistensy between 8 and HEAD
PSS update [from 097]
check return value
Update from 097stable
Synchronise yet a little more with the Unixly build
clear error queue on success and return NULL if no cert could be readPR: 1088
fix assertion
Synchronise more with the Unix build
changes from 098
include opensslconfh if OPENSSL_NO_ is used
"Show" more respect to nosha config optionsPR: 1086
Mention more GCC bugs in /PROBLEMS
Missing sparcv8o rulePR: 1082
Fix typo in /config
Platform update from 8stable
Platform update from 8stable
Merge from 098stable
Merge in the new news from 098stable
DJGPP changes  Contributed by Doug Kaufman <dkaufman@rahulnet>
pqueue and dtls uses 64bit values  Unfortunately, OpenSSL doesn'thave a uniform representation for those over all architectures, so alittle bit of hackery is neededContributed by nagendra modadugu <nagendra@csstanfordedu>
Synchronise with Unixly build
Change all relevant occurences of 'ncipher' to 'chil'  That's what nCipher always wanted
Update from stable branch
Change the source and output paths for 'chil' and '4758cca' engines so thatdynamic loading is consistent with respect to engine ids
We have some source with \r\n as line ends  DEC C informs about that,and I really can't be bothered
Typo
Add pss/x931 files
Update from 097stable Also repatch and rebuild error codes
Use BN_with_flags in a cleaner way
Assing check_{cert,crl}_time to 'ok' variable so it returns errors onexpiry
make sure DSA signing exponentiations really are constanttime
check BN_copy return value
Handle differences between engine IDs and their dynamic library names andsource files, for that matter by tolerating the alternatives It would bepreferable to also change the generated shared library names, but that willbe taken up separately
It seems like mkdefpl couldn't quite understand that ifdef OPENSSL_NO_SHA512was still active when it came down to the functions  mkdefpl should reallybe corrected, but that'll be another day
Typo correction
DEC C complains about bad subscript, but we know better, so let's shut it up
Be more consistent with OPENSSL_NO_SHA256
OPENSSL_NO_SHA512 to mask even SHA512_CTX declaration This is done tomake nosha512 more effective on platforms, which don't support 64bitinteger type of any kind
Still SEGV trouble in init segment under Solaris x86
When _XOPEN_SOURCE is defined, make sure it's defined to 500  Required inhttp://wwwopengrouporg/onlinepubs/007908799/xsh/compilationhtmlNotified by David Wolfe <dwolfe5272@yahoocom>
Default to nosse2 on selected platforms
Patches for Cygwin, provided by Corinna Vinschen <vinschen@redhatcom>
Propagate BUILDENV into subdirectories
Move _WIN32_WINNT definition from command line to e_osh The change isinspired by VC6 failure report In addition abstain from taking screensnapshots when running in NT service context
fix typo, add prototype
fix potential memory leakSubmitted by: Goetz BabinEbell
update ecdsa doc
FAQ to mention nosse2
Update status information
fix "dereferencing typepunned pointer will break strictaliasing rules"warning when using gcc 40
make the type parameter const when ID2_OF_const is used
FAQ update to mention Applink
Don't emit SSE2 instructions unless were asked toPR: 1073
Engage Applink in mingw Note that applicationside module is notcompiled into our aplpications That's because mingw is alwaysconsistent with itself Having libraryside code linked into dllmakes it possible to deploy the dll with usercode compiled withanother compiler [which is pretty much the whole point behind Applink]
Version changes where needed
I just branched 098, so HEAD needs to be bumped to 099devThe 098 branch is called OpenSSL_0_9_8stable
Engage Applink for VC builds
Keep disclaming 16bit support
simplify EC_KEY_dup
mdc2test is not built by default anymore
fix memory leak BIO_free_all needs pointer to first BIOPR: 1070
OPENSSL_Applink update
Disclaim 16bit support
Move cryptlibh prior bioh Actually it makes sense to include cryptlibhfirst everywhere in crypto and skip stdioh and stringh [because itincludes them]
Improve shell portability of new rules in Makefileshared
Change wording for BN_mod_exp_mont_consttime entry
Further BUILDENV refinement, further foolproofing of Makefiles and[most importantly] put back dependencies accidentaly eliminated incheckin 13342
Further BUILDENV cleanup, 'make depend' is operational again
ecc api cleanup; summary: hide the EC_KEY structure definition in ec_lclc + addsome functions to use/access the EC_KEY fields change the way how method specific data ecdsa/ecdh isattached to a EC_KEY add ECDSA_sign_ex and ECDSA_do_sign_ex functions withadditional parameters for precomputed values rebuild libeaynum from 097
Implement fixedwindow exponentiation to mitigate hyperthreadingtiming attacksBN_FLG_EXP_CONSTTIME requests this algorithm, and this done by default forRSA/DSA/DH private key computations unlessRSA_FLAG_NO_EXP_CONSTTIME/DSA_FLAG_NO_EXP_CONSTTIME/DH_FLAG_NO_EXP_CONSTTIME is setSubmitted by: Matthew D WoodReviewed by: Bodo Moeller
rebuild to synchronize with additions to 097 branch
make update
Make Makefileshared quiet again
Simplify shared rules, link runpath into applications only
Consolidate BUILDENV [idea is to keep all variables in one place]
+20 performance improvement of P4specific RC4_CHAR loop
Foolproofing Makefiles
Make update
Make CSP option work again in pkcs12 utility by checking forattribute in EVP_PKEY structure
openssl_fcast should always be defined, not just with DEBUG_SAFESTACK
Some C compilers produce warnings or compilation errors if an attemptis made to directly cast a function of one type to what it considers andincompatible type In particular gcc 342Add new openssl_fcast macro to place functions into a form where the compilerwill allow them to be castThe current version achives this by casting to: void functionvoid
Avoid warnings
Fix from stable branch
Typo
fix msg_callback arguments for SSL 20 compatible client helloprevious revision got this wrong
Move another item into ChangeLog0_9_7stable_notinhead_FIPS
Don't use the SSL 20 Client Hello format if SSL 20 is disabledwith the SSL_OP_NO_SSLv2 option
There must be an explicit way to build the o!
Move some entries from ChangeLog0_9_7stable_notinheadto ChangeLog0_9_7stable_notinhead_FIPS
Fix more error codesAlso improve util/ck_errfpl script, and occasionallyfix source code formatting
use 'p' as conversion specifier for printf to avoid truncation ofpointers on 64 bit platforms Patch supplied by Daniel Gryniewiczvia Mike Frysinger <vapier@gentooorg>PR: 1064
give EC_GROUP_new_by_nid a more meanigful name:EC_GROUP_new_by_nid > EC_GROUP_new_by_curve_name
improve command line argument checkingPR: 1061
Comply with optimization manual no data should share cacheline with code
Allow for 64bit cacheline alignments in code segment
Update util/ck_errfpl script, and have it run automaticallyduring "make errors" and thus during "make update"Fix lots of bugs that util/ck_errfpl can detect automaticallyVarious others of these are still left to fix; that's why"make update" will complain loudly when run now
rebuild starting with state from 097stable branch to avoid clutter
improve comment readability
give EC_GROUP__nid functions a more meaningful nameEC_GROUP_get_nid > EC_GROUP_get_curve_nameEC_GROUP_set_nid > EC_GROUP_set_curve_name
give EC_GROUP__nid functions a more meaningful nameEC_GROUP_get_nid > EC_GROUP_get_curve_nameEC_GROUP_set_nid > EC_GROUP_set_curve_name
Eliminate "statement with no effect" warning when OPENSSL_assert macrois used with constant assertion
I was incorrect about VMS/Alpha  Defining BN_LLONG withSIXTY_FOUR_BIT could cause havoc, so don't it's lucky bnh undefinesBN_LLONG when SIXTY_FOUR_BIT is defined
x86_64 assembler translator update
Fix constantsPR: 1059
Since BN_LLONG will only be defined for Alpha/VMS and not VAX/VMS,there's no need to undefine it here  Then, let's get a bit paranoidand not define BN_ULLONG on THIRTY_TWO_BIT machines when BN_LLONGisn't defined
Actually, C on VMS/Alpha knows very well what a long long is, andknows how to make use of it  So let's stop pretending the Alphadoesn't know long long
fix compiler warning; pow10 is also in mathh
A few more fingerprints
Commentary update motivating code update in 097
x86_64 assembler translator update
Cvs missed adapted module itself, here it goes
Engage md5x86_64 assembler module
Throw in md5x86_64 assembler
Cygwin doesn't expose Win32 [not "officially"]
Commentary update
Cpuid modules updates
remove false positive
remove BN_ncopy, it was only used in bn_nistc and wasn't particularuseful anyway
rewrite of bn_nistc, disable support for some curves on 64 bit platformsfor now it was broken anyway
fix typoPR: 1054
Rename amd64 modules to x86_64 and update RC4 implementation
x86_64 assembler translator update
backport fix from the stable branch
Redundant changes
Add prototype
Support for smimetype MIME parameter
Remove false positives and resolve some of remaining ones
Cygwin/mingw sync with stable
Allow for /config nosha0 [from stable]
Fold rules in test/Makefiles [from stable]
Typo
Don't attempt to parse nested ASN1 strings by default
Some true positives fixed, toss some false positives
From branch OpenSSL_0_9_7stable, 20040911 11:45:Makefilessl changed name to Makefile
From branch OpenSSL_0_9_7stable, 20040811 22:34:Another missing module in the VMS build filesI believe this isthe last, though
All kinds of changes from branch OpenSSL_0_9_7stable
This one deserves a note  In the change to CHANGES, there's thefollowing:+     NOTE: This is for the 097 series ONLY  This hack will never+     appear in 098 or later  We EXPECT application authors to have+     dealt properly with this when 098 is released unless we actually+     make such changes in the libcrypto locking code that changes will+     have to be made anywayThat makes this one a false positive
Remove a bunch of false positives, and fix some true positives
From branch OpenSSL_0_9_7stable, 20021113 15:30:The loading functions should be static if we build a dynamicengine
Remove a bunch of false positives, fix one true positive
From branch OpenSSL_0_9_7stable, revision 1141, 20020523 17:25:Forgot this file
Use more efficient way to locate end of an ASN1 structure
don't let BN_CTX_freeNULL segfault
remove false positive
check return value of RAND_pseudo_bytes; backport from the stable branch
remove some false positive
hide the definition of ECDSA_METHOD and ECDSA_DATA and mutatis mutandisfor ecdh
add 192 bit prime curve to the command line options
add reference to BN_BLINDING_newpod
avoid warnings when building on systems where sizeofvoid  > sizeofint
Pointer to BN_MONT_CTX could be used uninitialized
Synchronise with Unix build system
Increase offset for BIO_f_enc to avoid problems with overlapping bufferswhen decrypting data
Update default dependency flags
Lots of Win32 fixes for DTLS1 "unsigned long long" isn't portable changed: to BN_ULLONG2 The LL prefix isn't allowed in VC++ but it isn't needed where it is used2 Avoid lots of compiler warnings about signed/unsigned mismatches3 Include new library directory pqueue in mk1mf build system4 Update symbols
get rid of Makefilessl in util/
no Makefilessl anymore
add missing parentheses
Change method_mont_p from char  to BN_MONT_CTX  and remove severalcasts
Port BN_MONT_CTX_set_locked from stable branchThe function rsa_eay_mont_helper has been removed because it is no longerneeded after this change
Stop unused variable warning
Remove more false positives
there's no such thing as Makefilessl anymore
util/mk1mfpl issues have been resolved
Port from stable branch
More false positives and cases covered by port of primec
"PS" to Steve's commit Port prime utility across from stable branch
Port prime utility across from stable branch
add docu for BN_BLINDING functions
some updates for the blinding code; summary: possibility of recreation of the blinding parameters after afixed number of uses suggested by Bodo calculatition of the rsa::e in case it's absent and p and qare present see bug report 785 improve the performance when if one rsa structure is shared bymore than a thread see bug report 555 fix the problem described in bug report 827 hide the definition ot the BN_BLINDING structure in bn_blindc
Remove more false positives
Port from stable branch
Remove more false positives
Fix various incorrect error function codes"perl util/ck_errfpl /c //c" still reports many more
take OPENSSL_NO_DGRAM into accountvia make update
let mkdefpl know about OPENSSL_NO_DGRAMwhich appears in the new file crypto/bio/bss_dgramc
remove some functions from exported headers
make update
fix SSLerr stuff for DTLS1 code;move some functions from exported header <openssl/dtl1h> into "ssl_loclh";fix silly indentation a TAB is not always 4 spaces
Fixes for signed/unsigned warnings and shadows
False positive removed
Add DTLS support
make depend
remove false positive
some more false positives to remove
make update
move some more entries into FIPS file
Use OPENSSL_NO_CAST, not OPENSSL_NO_CAST5 in e_oldcPR: 959
Remove some more entries that are false positives, or have beenresolved by recent commits
Sort out changes in FIPS and other changes, collected in separate filesAlso remove another "make update"
remove some more false positives
remove some more false positives
remove some more changes that came from HEAD
fix editing error, and remove a false positive
update
remove extra whitespace; fix link
remove some false positives
add recent changes; now this file is uptodate
bring uptodate
first step to melt down ChangeLog0_9_7stable_notinhead :
This is a collection of those CVS change log entries for the 097branch OpenSSL_0_9_7stable that do not appear similarly in098dev CVS headSome obvious false positives have been eliminated: eg, we do notcare about a simple "make update"; and we don't care about changesidentified to the 097 branch that were explicitly identified asbackports from headEliminating all other entries and finally this file, either as falsepositives or as things that should go into 098, remains to be done
Avoid L1 cache aliasing even between key and Sboxes
Flag changes in Configure and config, tooUpdate dependencies
update
Oops
Recognize zlib and krb5 options in mk1mfpl
make asn1 field names const
change prototype of the ecdh KDF: make input parameter const and the outlen argument  more flexible
Add debug target, remove cast, note possible bug
Add prototypes
more const
make update
 use BN_set_negative and BN_is_negative instead of BN_set_signand BN_get_sign implement BN_set_negative as a function always use "define BN_is_zeroa a>top  0"
Avoid aliasing between stack frames and Sboxes Compress prefetch code
the pointer to the message digest is const
Provide a default OPENSSL_ia32cap_loc for nonIntel platforms whereutil/libeaynum is important when building shared libraries, likeVMS
Don't use standard kerberos library locations in MK1MF buildsFix typo in mk1mfpl
Make kerberos ciphersuite code compile againAvoid more shadow warnings
Rename typed version of M_ASN1_get M_ASN1_get_x to avoid conflictsRemove more bogus shadow warnings
Stop compiler warnings about deprecated lvalue casts
Stop bogus shadowing warning
Process MINFO file earlier in mk1mfpl so it can modify variables like CFLAGSProcess kerberos include and library options
Handle similar mk1mfpl options with a hash table
signed vs unsigned
Make sure id2_func is properly cast as well
signed vs unsigned
Avoid compiler complaint about mismatched function signaturesvoid  ! char 
Resolve signed vs unsigned
Type mismatch detected by DEC C compiler  void ! void
Avoid compiler complaint about mismatched function signaturesvoid  ! RSA 
Fix logic in mkdefpl function is_validUpdate symbols
Stop perl warning
New "algorithm define" OPENSSL_NO_GMP Update mkdefpl and Configure scriptto use it
Ignore TYPEDEF_OF in mkdefpl
Update year
Various Win32 and other fixes for warnings and compilation errorsFix Win32 build system to use 'Makefile' instead of 'Makefilessl'
Throw in x86_64 AT&T to MASM assembler converter to facilitate developmentof dualABI Unix/Win64 modules
Fix from stable branch
Synchronise with ec/Makefile
Mitigate cachetiming attack in CBC mode This is done by implementingcompressed tables 2x compression factor and by prefetching them intoprocessor cache prior every CBC en/decryption pass One can argue whyjust CBC? Well, it's commonly used mode in reallife applications andAPI allows us to amortize the prefetch costs for larger data chunks
const fixes
EVP_CIPHER_CTX_init is a void function + fix typoPR: 1044 + 1045
Check return values of <Digest>_Init functions in low level digest calls
Prototype mnemonics in padlock_verify_context for better portability[read support for Solaris assembler]
Fix for bug emerged in openvpn conext
Final touch to mingw shared
More coverups, removing OPENSSL_GLOBAL/EXTERNS We can remove more
Addenum to http://cvsopensslorg/chngview?cn13054
Final? touches to mingw shared support
Zap OPENSSL_EXTERN on symbols, which are not meant to be local to DLL
Makefilessl > Makefile
Fix typos
Introduce OPENSSL_NONPIC_relocated to denote relocated DLLs
Parameterize do_solaris rules in Makefileshared
Minor cryptlibc update: compiler warnings in OPENSSL_showfatal andOPENSSL_stderr stub
Update FAQ
More overwritten stuff
Replace overwritten lines before error codes
Rebuild error codes
Include error library value in C error source files instead of fixing upat runtime
include limitsh for UINT_MAX etc
Add a NEWS item for 097g
Add emacs cache files to cvsignore
Move allow_proxy_certs declaration to start of function
Make kerberos ciphersuite code work with newer header files
Added restrictions on the use of proxy certificates, as they may posea security threat on unexpecting applications  Document and test
add support for DER encoded private keys to SSL_CTX_use_PrivateKey_fileand SSL_use_PrivateKey_filePR: 1035Submitted by: Walter GouletReviewed by:  Nils Larsch
improve docu of SSL_CTX_use_PrivateKey
get rid of very buggy and very imcomplete DH cert supportReviewed by: Bodo Moeller
make sure error queue is totally emptiedPR: 359
const fixes
Recognize MSYS/MINGW environment
Implement OPENSSL_showfatal and make it Win32 GUI and service aware[meaning that it will detect in which context application is runningand either write message to stderr, post a dialog or log an event]
Harmonize cygwin/mingw and VC targets
+45 RC4 performance boost on Intel EM64T core Unrolled loop providingfurther +35 will followSubmitted by: Zou Nanhai
some const fixes
update progspl to reflect changes in progsh
fix example in docuPR: 800
some const fixes and cleanup
remove unused recp method
Extend Solaris x86 support to amd64
Solaris x86 linker erroneously pads init segment with zeros instead ofnops, which causes SEGV at startup So I don't align anymore
Some nonGNU compilers such as Sun C define __i386
HISTORY section: point out change of default digest
Make bn/asm/x86_64gccc gcc4 savvy +r is likely to be initiallyintroduced for a reason [like bug in initial gcc port], but proposed&r is treated correctly by senior 32, so we can assume it's safe nowPR: 1031
If input is bad, we still need to clear the buffer
use SHA1 as the default digest for the apps/openssl commands
Typo
really clear the error queue herePR: 860
use SSL3_VERSION_MAJOR instead of SSL3_VERSION etcPR: 658
Consistency
Add a file with fingerprints that have recently been used to signOpenSSL distributions, or are about to  This has been requested alittle now and then by users, for years :/
Simplicate and add lightness
Get rid of irritating noise
Give everything prototypes well, everything that's actually used
fix header
Makefilessl doesn't exist anymore
Take account of Makefilessl removal
Make tags target useful
Don't debug
Blow away Makefilessl
update docs recent constification
Constification
the second argument of EVP_SealInit is const
when building with OPENSSL_NO_DEPRECATED defined BN_zero is a macrowhich cannot be evaluated in an if statement
Harmonize with CHANGES as distributed in OpenSSL 097f
undo Cygwin change
Change the memory leak FAQ entry to describe the levels of thread safety in each function
Update FAQ
Doc fixes
test, remove unnecessary const cast
Ensure SSL_RANDOM_BYTES  4 of pseudo random data is used for server andclient random values
There are cases when there are no files left to verify  Make sure tohandle that properly
add new curves to the loop with some cleanup from meSubmitted by: JeanLuc DuvalReviewed by:  Nils Larsch
some const fixes
Use Windows randomness code on Cygwin
fix breakage for Perl versions that do boolean operations on long words
typo
Added HOWTO about proxy certificates
"make depend"  This takes into account the algorithms that are nowdisabled by default MDC2 and RC5, which until now were skippedby "make links" and yet supposedly required by some of the Makefiles,meaning that the recent snapshots failed to compileProblem reported by Nils Larsch
It seems that Configure revision 1404 broke "make depend" by hidingfrom it which algorithms were disabled  With these new changes,"make depend" will properly take into account algorithms that are skipped
Cygwin to use DSO_FLFCN and mingw to use DSO_WIN32
Avoid rebuild avalanches with HPUX make
fix potential memory leak when allocation failsPR: 801Submitted by: Nils Larsch
Fix typoPR: 1017Submitted by: ciresh@yahoocomReviewed by: Nils Larsch
Take MDC2 patent into account
In addition to RC5, also exclude MDC2 from compilation unlessthe algorithm is explicitly requested
Change /Configure so that certain algorithms can be disabled by defaultThis is now the case for RC5As a side effect, the OPTIONS in the Makefile will usually look alittle different now, but they are essentially only for informationanyway
Fix typo on blowfish manual pagePR: 1010Submitted by: Marc Balmer <mbalmer@openbsdorg>
Fix hang in EGD/PRNGD query when communication socket is closedprematurely by EGD/PRNGDPR: 1014Submitted by: Darren Tucker <dtucker@zipcomau>
Fix possible memory leak
Remove unused assembler modules
This patch was "ignited" by OpenBSD 3>4 support They've switched to ELFand GNU binutils, but kept BSD make And I took the opportunity tounify other targets to this common least denominator
Reliable BSDx86elf detection in /config
Make Makefileshared BSD makefriendly, remove more redundant lc, set upOBJECT_MODE for AIX
Make util/shlib_wrapsh [Open]BSDfriendly
Mention nosse2 option in INSTALL note
In mkdefpl ignore trailing whitespace in ifdef lines
Drop redundant lc from a number of rules in Makefileshared It'sperfectly safe [compiler driver adds it] and in some situation evenperfectly appropriate [mixing pthread and lc on FreeBSD can havelethal effect on apps/openssl] I'd say we should get rid of more,but I remove those I can test myself
Shut whiny make's up
Address runtime linker problems: LD_PRELOAD issue on multiABI platformsand SafeDllSearchMode in WindowsSubmitted by: Richard Levitte
The first argument to load_iv should really be a char  instead of anunsigned char , since it points at textThanks to Nils Larsch <nilslarsch@cybertrustcom> for pointing outthe inelegance of our code :
Oops,  should really be  when used with test [ and ]I guess I use bash too muchThanks to Peter Sylvester <PeterSylvester@edelwebfr> for pointing itout to me
Check for errors from EVP_VerifyInit_ex, or EVP_VerifyUpdate mightcause a segfault  This was uncovered because EVP_VerifyInit may failin FIPS mode if the wrong algorithm is chosen
Get rid if the annoying warning
The mix of CFLAGS and LDFLAGS is a bit confusing in my opinion, andMakefileshared was a bit overcomplicatedMake the shell variables LDFLAGS and SHAREDFLAGS in Makefilesharedget the values of $CFLAGS or $LDFLAGS as appropriate depending onthe value the shell variables LDCMD and SHAREDCMD get  That leavesmuch less chance of confusion, since those pairs of shell variablesalways are defined together
Respect the fact that most interactive shells don't restore stty settingsand make it work in noninteractive mode
Please BSD make
FreeBSD 5 refuses to include <malloch> Fix compiler warning afterhttp://cvsopensslorg/chngview?cn12843
/Configure to respect $thread_cflag variable
Fold a bunch of linux and BSD targets into [linux|BSD]generic[32|64]Idea is to provide unified "falldown" case for all rare platforms outthere /config is free to enable some optimizations, such as endiannessspecification, specific mcpu flags
Default to AES u32 being unsinged int and not long This improves cachelocality on 64bit platforms and fixes IA64 assemblerempowered build:The choice is guarded by newly introduced AES_LONG macro, which needsto be defined only on 16bit platforms which we don't support not thatI know of Meaning that one could as well skip long option altogether
Improve ECB performance 48+14rounds > 18+13rounds and reserve forhandcoded zerocopy AES_cbc_encrypt
linuxarm target updatePR: 991
linuxparisc updatePR: 990Submitted by: Mike Frysinger <vapier@gentooorg>
Bugfix in CBC encrypt tail processing and commentary section update
Apparently, at least with my VMS C environment, defining _XOPEN_SOURCEgets _POSIX_C_SOURC and _ANSI_C_SOURCE defined, which stops u_int frombeing defined, and that breaks havock into the rest of the standardheaders  sigh
Small thing  It seems like we have to defined _XOPEN_SOURCE to getisascii on DEC/Compaq/HP C for VMS
Throw in AES CBC assembler, up to +40 on aes128cbc benchmark
Fix a typo in aout assembler modules
Reserve for AES CBC assembler implementation
Don't zap AES CBC IV, when decrypting truncated content in place
Changes concering RFC 3820 proxy certificates integration: Enforce that there should be no policy settings when the languageis one of idpplindependent or idpplinheritAll Add functionality to ssltestc so that it can process proxy rightsand check that they are set correctly  Rights consist of ASCIIletters, and the condition is a boolean expression that includesletters, parenthesis, &, | and ^ Change the proxy certificate configurations so they get proxyrights that are understood by ssltestc Add a script that tests proxy certificates with SSL operationsOther changes: Change the copyright end year in mkerrpl make update
PKCS7_verify performance optimization When the content is large and amemory BIO for example from SMIME_read_PKCS7 and detached data avoid lotsof slow memory copies from the memory BIO by saving the content in atemporary read only memory BIO
INSTALLDJGPP syncPR: 989
Rely on e_osh to appropriately define str[n]casecmp in nonPOSIXenvironments
"Monolithic" x86 assembler replacement for aes_corec Up to +15 betterperformance on recent microarchitectures
Fix an "oops" typo! Well, it was a debugging leftover
O_NOFOLLOW is not appropriate when opening /dev/ entries on SolarisPR: 998
Small typo, `mask' got the same value ORed to it twice instead of`mask' and `emask' getting that operation done once eachPatch supplied by Nils Larsch <nilslarsch@cybertrustcom>
Correct a faulty address assignment, and add a length check notreally needed now, but may be needed in the future, who knows?
FAQ update to mention nosha0 as possible workaround for Tru64 compiler bugWell, nooptions seem to be busted in HEAD currently, which should/will befixed one way or another see PR989 for a possible alternative
DJGPP documentation note update
Permit "monolithic" AES assembler implementations, ie such which wouldreplace whole aes_corec, not only AES_[de|en]crypt routines
DJGPP updatePR: 989Submitted by: Doug Kaufman
Borrow include <string[s]h> from e_osh
Make whiny compilers stop complaining about missing prototype
Fix Win32 testsuit
Remove naming conflict between variable and label
Commentary update for AES IA64 assembler module
Minor AES x86 assembler tuneup
AESCFB[18] 2x optimization Well, I bet nobody cares about AESCFB1performance, but anyway
Prompt for passphrases for PKCS12 input format
Oopskind typos in aesia64S
iv needs to be const because it sometimes takes it's value from aconst
Forgot to synchronise the VMS build scripts
Add functionality needed to process proxy certificates
Minor cygwin updatePR: 949
As new major IRIX release is highly unlikely to appear [and break following],I change from notall to none synonym in irix rules to improve backwardcompatibility with IRIX 5xPR: 987
Remove CPU detect for IRIX targets Performance gain is less than 1,it makes more sense to strive for broader binary compatibility
Remove yet another redundant memcpy Not at least performance critical,essentially cosmetic modification
Eliminate redundant memcpy of IV material Performance improvement variesfrom platform to platform and can be as large as 20
Engage AES x86 assembler module for COFF and aout targets
Engage AES x86 assembler module on ELF platforms
x86 perlasm update to accomodate aes586pl
Eliminate copies of TeN and TdN, use those found in assembler module
AES x86 assembler implementation
Refine PowerPC platform support
Remove unused buffer 'buf'
Don't use multiple storage types
Fix typos in the ecparam docSubmitted by: Nils Larsch
make update oops, missed this file
Change libeaynum so it's synchronised with additions in 097stablemake update
Fix s_client so it works without a certificate again
Propagate a few more variables to Makefileshared when linkingprograms
Remove duplicate lines
Solaris x86 perlasm update
Engage SHA1 IA64 assembler on IA64 platforms
Automatically mark the CRL cached encoding as invalid when some operationsare performed
SHA1 assembler for IA64
Extend RC4 test
Update 'certs' directory Move expired certificates to expired directoryand zero assurance demontrations CAs to 'demo'
Use X509_cmp_time in checkend option, to support GeneralizedTime
Remaing bits of PR:620 relevant to 098
Add lots of checks for memory allocation failure, error codes to indicatefailure and freeing up memory if a failure occursPR:620
Update year
In by_filec check last error for no start line, not first error
Add passin argument to dgst command
V1 certificates that aren't self signed can't be accepted as CAs
Fix rc4ia64S to pass more exhaustive regression tests
Add couple of OIDs Resync NIDs for consistency with 097
I've introduced a bug to i386 RC4 assembler, which would emerge withcertain mix of calls to RC4 routine not covered by rc4testcIt's fixed now In addition this patch inadvertently fixes minorperformance problem: in 097 context P4 was performing 12 slowerthan the original implementation
Perform partial comparison of different character types in X509_NAME_cmp
Add 097 specific comments to RC4 assembler modules
Mention that the keys likely to have signed the distribution are nowlisted on the web site for easy finding and downloading
Split X509_check_ca into a small self and an internal functioncheck_ca, to resolve constness issue  check_ca is called from thepurpose checkers instead of X509_check_ca, since the stuff done bythe latter except for calling check_ca is also done byX509_check_purpose
sha1_block_asm_data_order can't hash if message crosses 2GB boundary
Final touches to rc4/asm/rc4596pl, +52 better performance on AMD core
Document the change
Make an explicit check during certificate validation to see that theCA setting in each certificate on the chain is correct  As a sideeffect always do the following basic checks on extensions, not justwhen there's an associated purpose to the check: if there is an unhandled critical extension unless the user haschosen to ignore this fault if the path length has been exceeded if one is set at all that certain extensions fit the associated purpose if one has beengiven
perlasm/x86[ms|nasm] update to accomodate updated RC4 assembler module
Summarize recent RC4 tuneups
Engage RC4 IA64 assembler module
RC4 IA64 assembler implementation
Typo
Add errstr manual page
Allow alternative manual sections to be embedded in pod file comments
Update docs
Update docs
Check return code of EVP_CipherInit in PKCS12 code
Typo
Fix memory leak
linuxx86_64 didn't link after EM64T RC4 tuneup
RC4 tuneup for Intel P4 core, both 32 and 64bit ones As it'sapparently impossible to compose blended code with would performsatisfactory on all x86 and x86_64 cores, an extra RC4_CHARcodepath is introduced and P4 core is detected at runtime Thisway we keep original performance on nonP4 implementations andturbocharge P4 performance by factor of 28x on 32bit core
In "req" exit immediately if configuration file is needed and it can'tbe loaded instead of giving the misleading:"unable to find 'distinguised_name' in config"error message
Update X509v3 doc
Update X509v3 docs
PR: 910Add command line options certform, keyform and pass to s_client ands_server This supports the use of alternative passphrase sources, key formatsand keys handled by an ENGINEUpdate docs
Initial pod documentation of X509V3 config file format
PR: 940Typo: use prompt_info, not cb_data>prompt_info
PR: 923Typo
PR: 938Typo
Zap obsolete der_chop script
PR: 969Submitted by: David Holmes <davidh@3blackdogscom>
Fix x509c so it creates serial number file again if noserial number is supplied on command line
Cut'n'paste mistake  All tested OK now
Whoops, syntactic mistake
Some find it confusing that environment variables are set when sharedlibraries aren't built or used  I can see the point, so I'mreorganising a little for clarity
Use the default_md config file value when signing CRLsPR:662
Don't return an error with crl nooutPR:917Sumbmitted by: Michael Konietzka <konietzka@schlundde>
As was shown by Marc Bevand reordering of couple of load operationsresults in even higher performance gain of 33x: At least onOpteron
Make sure LD_PRELOAD is only set when we build shared libraries andtherefore link with them  Add LD_PRELOAD setting code where it wasstill missingPR: 966
Don't use $EXHEADER directly in for loops, as most shells will breakif $EXHEADER is emptyNotified by many, solution suggested by Carson Gaspar <carson@taltosorg>
Because rpath/R may have been used, our settings of LD_LIBRARY_PATHand friends may be entirely useless  In such a case, LD_PRELOAD isthe answer, at least on platforms using LD_LIBRARY_PATH  There mightbe other variables to set on other platforms, please fill us inFor now, we only do this with the tests, so they won't fail for sillyreasons like getting dynamically linked to older installed librariesrather than the newly built onesPR: 960
Make sure memmove is defined, even on SunOS 414PR: 963
Update NEWS
Update FAQ
Fix race condition when SSL ciphers are initialized
Update ECDSA and ECDH for OPENSSL_NO_ENGINEReported by: Maxim MasiutinSubmitted by: Nils Larsch
Because libraries on Windows lack useful version information, the zlibguys had to change the name to differentiate with older versions whena backward incompatibility came up  Of course, we need to adaptThis change simply tries to load the library through the newer nameZLIB1 first, and if that fails, it tries the good old ZLIB
Oops!
Fix race condition when CRL checking is enabled
Update debugsteve
Don't use C++ reserved work "explicit"
Fix Solaris 10_x86 shared build Bsymbolic is required to avoid"remaining relocations" in assembler modules The latter seems tobe new behaviour, elder as/ld managed to resolve this relocationsas internal It's possible to address this problem differently,but I settle for BsymbolicPR: 546
usr/doc has recently changed to usr/share/doc on CygwinNotified by Corinna Vinschen <vinschen@redhatcom>
Move the declaration of alloca so it's ony declared when reallynecessary
SHA1 asm Pentium tuneup Performance loss is not as bad anymore
sha256_block advances the input pointer double as fast sometimes Fix thebug and test that it's actually gonePR: 950
Nils Larsch reported that this include is required Strange that this hadgone unnoticed 
Import changed files from LPlib  The changes are logged as followsfor LPdir_unixc in LPlib  For the other files, only the last logentry appliesrevision 111date: 2004/09/23 22:07:22;  author: _cvs_levitte;  state: Exp;  lines: +20 6Define my own macro LP_ENTRY_SIZE to express the size of my ownbuffering of directory entries, and make it depend on whichever comesfirst of PATH_MAX and NAME_MAX  As a fallback, make sure it's set to255 if neither PATH_MAX or NAME_MAX were defined  Also, if the sizegiven from PATH_MAX or NAME_MAX is less than 255, force LP_ENTRY_SIZEto be 255It makes no harm whatsoever if LP_ENTRY_SIZE is larger than themaximum local path name limit  It does make a lot of harm ifLP_ENTRY_SIZE is smaller  255 seemed like a fairly acceptable defaultwhen nothing else is availablerevision 110date: 2004/08/26 13:36:05;  author: _cvs_levitte;  state: Exp;  lines: +13 13License correction  I am not REGENTS, just a COPYRIGHT HOLDER
Remove distracting comments and code Thanks to Nils for picking up on theoutstanding ticketPR: 926
Two TODO comments taken care of Nils pointed out that one of them had alreadybeen done, and took care of the other one which hadn'tSubmitted by: Nils LarschReviewed by: Geoff Thorpe
Make Werror happy again
Check ASN1_TYPE structure type is a SEQUENCE in PKCS7_get_smimecap
Change values of MBSTRING_ to the form MBSTRING_FLAG|nbyte as assumedin ASN1_STRING_to_UTF8
 There's no more need for the snprintf macro Move the inclusion of malloch until after all other includes, so wecan do proper tests of system macros Make sure the correct header file is included to get the builtin"alloca" under VMS, and define a macro to map the symbol 'alloca' toit
Synchronise with Unix build
When looking for request extensions in a certificate look firstfor the PKCS9 OID then the non standard MS OID
make update
Make VIA Padlock engine more platform friendly and eliminate compilerwarningSubmitted by: Doug Kaufman <dkaufman@rahulnet>
x86 assembler updates: more instructions, new OPENSSL_instrument_halt[for DJGPP]
Synchronise VMS build files with Unixly Makefiles
Another symbol longer than 31 characters
Reformat smime utilityAdd support for policy checking in verify utility
Don't use 'explicit' for variable name
Reformat smimec
New X509_VERIFY_PARAM structure and associated functionalityThis tidies up verify parameters and adds support for integrated policycheckingAdd support for policy related command line options Currently only in smimeapplicationWARNING: experimental code subject to change
Stop compiler warnings
TABLE OpenBSDi386 update
Proper support for OpenBSDi386 shared build, including assember modules!"Proper" means "compiles and passes test" Versioning is broken I think
OPENSSL_ia32cap final touches Note that OPENSSL_ia32cap is no longer asymbol, but a macro expanded as OPENSSL_ia32cap_loc The latteris the only one to be exported to application
Fix compiler warnings in crypto/evp/bio_okc as pointed out by Geoff
crypto/perlasm update primarily to unify Netware modules Once it's verifiedx86_nwpl will be deleted In addition this update implements initsegon several additional [in addition to ELF] platforms Functions registeredwith initseg are supposed to be called prior main
Minor VIA Padlock engine update: eliminate Wunused warning when notcompiling the engine and inline memcpy in performance critical pathes
Make aes_ctrc 64bit savvy
'compatibility', not 'computability' :
On systems that use caseinsensitive symbol names ie they're allconverted to upper case or something like that, the applicationlevel bio_dump_cb has a name clash with the new library functionBIO_dump_cb  The easiest fix is to rename the function at theapplication level
Basically, I wanted to be able to make a dump to a FILE, and not haveto bother creating a BIO around it  So here's a few more functions tomake it possible to make the dump using a printing callback, and toprint to a FILE based on the callback variant, done in the samestyle as the functions in crypto/err/err_prnc
Stupid casts
Update FAQ
Make ASN1_INTEGER_cmp work as expected with negative integers
Call setup_engine after autoconfig
Don't ignore return value of EVP_DigestInit_ex in md BIOs and dgst utility
Make a note of the new engine
Padlock engine update to fix a typo in MSC assembler and to addresspotential corruption problem if user manages to interleave aliginedand misaligned requests [as well as some MSCspecific tweaks]
DJGPP has opendir and friends, according to Gisle Vanem <giva@bgnettno>
If they ask for 386, keep it as 386 as possible
Avoid aout name table pollition
Minor cleanup to make Microsoft compiler shut up
VIA C3 processor extends IA32 instruction set with instuctionsperforming AES encryption in hardware, as well as one accessinghardware RNG As you surely imagine this engine access thisextended instruction set Well, only AES for the moment, supportfor RNG is to be added later onPR: 889Submitted by: Michal Ludvig <michal@logixcz>Obtained from: http://wwwlogixcz/michal/devel/padlock/
Cygwin fixup for shared build
OpenBSD fixup for new aout targets OpenBSD so rule is busted
Cleanup GAS targets: get rid of "cpp" stuff and replace it with "purified"COFF and aout targets [similar to ELF targets] You might notice somerudementary support for shared mingw builds under cygwin It works itproduces cryptoeay32dll and ssleay32dll with everything exported byname, but it's primarily for testing/debugging purposes, at least fornow
Deprecate cpp and gaswin targets New coff fills in for gaswin, but cpp isgoing out
DLLEntryPoint is a collective name, not what linker looks for However,if we explicitly intruct the linker to set entry point, then we becomeobliged to initialize runtime library Instead we can pick name runtimewill call and such name is DllMain Note that this applies to both"native" Win32 environment and Cygwin:
We build the crypto stuff, not the ssl stuff, in this command procedure
The compiler may complain about what looks like a double definition of astatic variable
Oops, wrong version
Add FIPS library name to error routines
This is so to say "damage control" for jumbo "cpuid" patch, seehttp://cvsopensslorg/chngview?cn12493 Now all platform shouldbe operational, while SSE2 code pathes get engaged on ELF platformsonly
Add framework for yet another assembler module dubbed "cpuid" Ideais to have a placeholder to small routines, which can be written onlyin assembler In IA32 case this includes processor capabilityidentification and access to TimeStamp Counter As discussed earlierOPENSSL_ia32cap is introduced to control recently added SSE2 codepathes see docs/crypto/OPENSSL_ia32cappod For the moment thecode is operational on ELF platforms only I haven't checked it yet,but I have all reasons to believe that Windows build should fail tolink too I'll be looking into it shortly
Zero keylength for HMAC is apparently OK
Make bio_okc Microsoft compiler savvy
Typos, typos
Make bio_okc 64bit savvy
Stricter boundary condition check in HMAC_Init_ex
Minor 64bit md32_commonh update and minor unsignification of digests
'apps/openssl dgst help' update and minor apps/speedc update
Make SHA256/512 optional Note that nosha switches off all SHA
Some compilers are just too whiny Nothing makes Microsoft compilerstop complaining about loss of precision, but explicit cast
Some compilers are just too whiny DEC C doesn't like long long
Typos and due casts As for the latter It's "safe" to cast as below,because "wrong" casts will either be optimized away or never performed
Minor HPUX make update IA64based HPUX favor so extension for sharedlibraries Old sl extension works just fine, but it so which is default
TABLE update
Buildnlink new IA64 modules on Linux and HPUX
Various IA64 assembler fixups
VCNT was taken away by mistake, putting it back
Win64 placeholder targets This is merely naming suggestion As we knowWin64 comes in two flavors, IA64/Itanium and AMD64/Opteron Thesuggestion is to refer to former as WIN64I and latter  WIN64A
Adapt rc4amd64pl for Win64/AMD64 assembler
From LPlib:Apparently, the length including the NUL byte should be usedContributed by Andy Polyakov <appro@fychalmersse>
From LPlib:Make a nicer comment, as we don't really know for sure that it'sreally needed, and just want to play on the safe sideSuggest by Andy Polyakov <appro@fychalmersse>
WinCE should always be compiled as UNICODE, even debugging version
include <limitsh> is required at least on HPUX and IRIX And what'swith HPUX offering 14 for NAME_MAX?
EVP_Digest is size_tfied, clean up test programs accordingly
Run SHA256/512 tests through EVP
All SIXTY_FOUR_BIT platforms mind the difference between SIXTY_FOUR_BIT andSIXTY_FOUR_BIT_LONG were failing to pass 'cd test; make test_bn'
From LPlib:Some code beautificationChange the macro CP_THREAD_ACP to CP_ACP, because the latter is morewidely definedAdd a conditional macro definition in case FindFirstFile andFindNextFile aren't properly defined might happen on WinCESuggested by Andy Polyakov <appro@fychalmersse>
Make rand_winc UNICODE savvy
From LPlib:Windows changes that detects if multibyte characters are available anddeals with them properlyContributed by Andy Polyakov <appro@fychalmersse>
Imported from LPlib, making sure the entry name at least on Unix isNULteminated at all times, and that we don't make unneeded calls tofree
Since version 70, The C RTL in VMS handles time in terms of UTCinstead of local time
Anchor AES and SHA256/512 assembler from C
Type in Configure and TABLE update
Add anchors for AES, SHA256/512 assembler modules and SSE2 code pathesI also used this opportunity to clean up some outofdate targets andregroup targets by OS
Add licensing terms
IA64 is intolerant to misaligned access It was a problem on Win64 aswe were mislead by _MSC_VER macro, which is defined by all WindowsMicrosoft compilers
Quick fixSubmitted by: Nils Larsch
Using Horner's algorithm to evaluate the ec polynomialsuggested by Adam Young <ayoung@cigitalcom>Submitted by: Nils Larsch
I think it could be a good thing to know what went wrong with the tests
make updateincidently, this also tells VMS that there exists a new symbol in theSSL library
Because it's one of our libraries calling new functions in the other,we need to have them among the symbols that should appear in thetransfer table, at least on VMS and it wouldn't surprise me ifWindows would whine as well
improve wording
Some test programs in crypto/sha were named differently than usual
'SSL_add_dir_cert_subjects_to_stack' is longer than 31 charactersLucky me, I had prepared for this :
o_dir needs to be compiler with the warnings about dollar signs inidentities disabled
In some cases, EVMSERR isn't visible that's fairly newDon't have a constant that you're going to assign to, that's justplain stupid I was the stupidhead here
Integration of RC4 AMD64 module
RC4 tuneup for AMD64 Performance improvement of 222x is measured forlinuxx86_64 target
BIS correction/addition
make update
Use the new directory reading functions
Copy a few files from LPlib a new project of mine, add a wrapperNow we have directory reading capabilities for VMS as well, and allof it in a fairly general manner
o_strc: Windows doesn't have <stringsh>, and since we use _strnicmp and_stricmp on that platform, use the appropriate header file for it,<stringh>o_strh: we only want to get size_t, which is defined in <stddefh>Philippe Bougeret <philippebougeret@freesbeefr> notified us about Windowsnot having a <stringsh>
Delta CRL support in extension code
Improve error handling if decompression of an ec point fails, and cleanupec_curvec unify comments, etcSubmitted by: Nils LarschReviewed by: Bodo Moeller, Geoff Thorpe
Delete nonPOSIX header file
PKCS8 fixes from stable branch
Don't try to parse non string types
Stop compiler warnings with debugsteve
Explain a little better what BN_num_bits and BN_num_bits_word doAdd a note as to how these functions do not always return the key size, andhow one can deal with thatPR: 907
Minor +12 on P4 performance tweak for sha512_block_sse2
AES assembler implementation for IA64 Note that there is no anchor fromC code yet
New SHA algorithms  assembler implementation for IA64 Note that despitemodule name both SHA256 and SHA512 are supported
New scalable bn_mul_add_words loop, which provides up to >20 overallperformance improvement Make module more gcc friendly and clarifycopyright issues for division routine
Changes for VOS, submitted by Paul Green <PaulGreen@stratuscom>PR: 499
Make the tests of EVP operations without padding  As a consequence,there's no need for a larger BUFSIZE any morePR: 904
Make sure that the buffers are large enough to contain paddingPR: 904
NetWare fixes provided by Verdon Walker for OpenSSL 098devThe changes have been mailed to <crypt@bisdocgov> as wellPR: 903
Linux on ARM needs ldlPR: 905
Reformat pkcs8 source
Tidy up, including; Remove unused and unuseful debug cruft Remove unnecessary 'top' fudging from BN_copy Fix a potential memory leak and simplify the expansion logic inBN_bin2bnSubmitted by: Nils LarschReviewed by: Geoff Thorpe
Incomplete initial sweep over the engine code Mainly reducing somecommentnoise to managable levels and inverting the sense of the "uptodate"boolean which was counterintuitive the way I'd left it
Deprecate unused cruft, and "make update"
Attempt to bring the 'engine' documentation up to date wrt missingprototypes, etc Also, some fairly significant edits were made to the textwho wrote this crap anyway? oh wait , removing stuff which isoverkill, rewriting stuff that was opaque, correcting things that were justdownright false, etc
Minor change to group like functions together
Actually, that last change to BN_get_word was a little too simple
Get rid of signed/unsigned warnings, and teach CVS about new things toignore
Tweak my debug target flags
As Nils put it;Yet another question: some time ago you changed BN_set_wordWhy didn't you change BN_get_word as well?Quite I'm also removing the older commentedout implementations to improvereadability This complex stuff seems to date from a time when the typesdidn't match up wellSubmitted by: Nils Larsch, Geoff Thorpe
BN_div_word was breaking when called from BN_bn2dec actually, this isthe only function that uses it because it would trip up an assertion inbn_div_words when first invoked This also adds BN_div_word testing tobntestSubmitted by: Nils LarschReviewed by: Geoff Thorpe
Making some values explicitely unsigned was derived from ongoing workthat isn't yet committed  It wasn't meant to be committed already, soI'm removing it for now
Typo, setting the first element of nids[] to NULL instead of settingcnids
Correct the return codes for ecdsatestSubmitted by: Nils LarschReviewed by: Geoff Thorpe
More precise explanation of session id context requirements
SHA fails to compile on x86_64 if compiled with custom flags, withoutrecommended DMD32_REG_Tint in particularPR: 893Submitted by: Michal Ludvig <michallist@logixcz>
"noengine" was being ignored, so remove it from the advertised syntaxAlso remove some commentedout lines of code that deny CVS its purpose
This fixes the installation target for dynamic engines, which was trying toinstall to a different location than it had created BTW, VMS will need amatching fix in eng_listc Note, these aren't sslspecific, so I'mputting "engines/" into the libs directory rather than at the "prefix"level or inside "ssl/"
Minimal workaround for /engine shared builds "Minimal" means that Ithink that proper Makefile cleanup is required
32bit PARISC requires Bsymbolic when linking libcryptosl Withoutthis flag RAND_poll ends up in endless loop calling RAND_add Butdon't ask me why
Working on HPUX shared support
Mention new SHA algorithms in CHANGES This completes the integration
Extend HMAC_MAX_MD_CBLOCK to accomodate SHA512
make update
EVP bindings to new SHA algorithms
objectstxt update for SHA224/256/384/512 SHA224 ids still appear"draft," but we have to start somewhereSubmitted by: Nils Larsch <nlarsch@compuservede>
Make sha256/512 naming in speedc consistent with their names as theywill appear at EVP leyer
Typo in commentary section
Final SHA256/512 touches Extra md_len field in SHA[256|512]_CTXreserves for truncated hash function output mode and makes SHA224threadsafe Next stop is integration with EVP and we're done
Kill unused macro and reimplement it for that single context it canactually be used, namely x86 platforms [because they don't bomb onunaligned access] This resulted in 3040 [depending on messagelength] improvement for SHA256 compiled with gcc and running on P4In the lack of assembler implementation I give the compiler all thehelp it can possibly get:
SHA224_Update and SHA224_Final aren't implemented, and sinceSHA224 uses SHA256_Update and SHA256_Final instead, let's justcreate aliases in form of macrosmake update
Typo in linuxppc64 target
gcc Wcastqual cleanup
hpuxshared rules to cover even for GNU ld
Unified hpuxshared rule Verified with both 32 and 64bit builds andboth vendor and GNU compilers /engine shared build are still bustedI mean always were
Make sure we return 0 if test passed
Eliminate compiler warnings and throw in performance table
Attempt to unify hpuxshared rules More adjustments might be requiredafter more tests
SHA224 test vectors added
Since num is now a size_t, it's not necssary to check for less than 0,AND it avoids warnings on certain systems
Synchronise VMS with the Unixly Malefiles
Documentation note for Win32 glue between BIO layer and compiler runtime
Framework for glueing BIO layer and Win32 compiler runtime Goal is tomake it possible to produce for a unified binary build, which can beused with a variety of Win32 compilers
make update
Move some COMP functions to be inside the ifndef OPENSSL_NO_COMPwrapping preprocessor directive  This also removes a duplicatedeclaration
SHA256/512 test and benchmark
While size_tfying let's not forget to update documentation:
SHA256/512 update A bug fix, SHA512 tuneup for AMD64, hook for SSE2code, Makefile update
Stress collector/padding function
Final API adaptation Final, "all openssl" performance numbers [not mixtureof different implementations] Reallife performance improvement is ratedat 23x, not 6x as preliminary announced
Delete unused function from libeaynum, replace with onethat does exist
Delete obsolete and unimplemented function
Add SHA256 and SHA512 algorithms to mkdefplFix mkdefpl script to avoid infinite loop whenparsing shah
X509_policy_lib_init is declared but not defined, so it raises havocwhen trying to build a shared library on VMS or Windows
After the latest round of headerhacking, regenerate the dependencies inthe Makefiles NB: this commit is probably going to generate a huge postingand it is highly uninteresting to read
Deprecate the recursive includes of bnh from various API headers asn1h,dhh, dsah, ech, ecdhh, ecdsah, rsah, as the opaque bignum types arealready declared in ossl_typh Add explicit includes for bnh in those Cfiles that need access to structure internals or API functions+macros
Remove some unnecessary recursive includes from the internal appsh header,and include bnh in those C files that need bignum functionality
Because of recent reductions in header interdependencies, these files needto include cryptoh directly
I can't verify this directly, but recent changes will probably require thatthe cryptodev implementation include bnh directly when building withOPENSSL_NO_DEPRECATED that is
The inclusion of bnh from the engineh API header has been deprecated, sothe engine implementations need to include bnh to manipulate bignums
Deprecate quite a few recursive includes from the sslh API header andremove some unnecessary includes from the internal header ssl_loclh Thisthen requires adding includes for bnh in four C files
Deprecate some recursive includes from the storeh API header, and put backrequired includes back via the internal header and str_libc
Reduce dependencies on cryptoh by moving the opaque definition ofCRYPTO_EX_DATA and the new/free/dup callback prototypes to ossl_typh
Moving opaque definitions to ossl_typh lets us reduce header dependenciesDeprecate inclusion of cryptoh from uih
Make reservations for FIPS code in HEAD branch, so that the moment FIPScomes in we have required macros in place
Make some more API types opaquely available from ossl_typh, meaning thecorresponding headers are only required for API functions or structuredetails This now includes the bignum types and BUF_MEM Subsequent commitswill remove various dependencies on bnh and bufferh and update themakefile dependencies
This file implements various functions that have since been redefined asmacros I'm removing this from the NO_DEPRECATED build
Fixes so alerts are sent properly in s3_pktcPR: 851
size_tfication of message digest APIs We should size_tfy more APIs
Reimplement old functions, so older software that link to libcryptodon't crash and burn
Synchronise o_strc between 098dev and 097stable
make update
Let's make life easier and have the VMS version of the configuration begenerated from the Unixly configuration file
CHANGES to mention improved PowerPC platform support
SHA224/256/384/512 implementation This is just sheer code commitMakefile modifications, make test, etc will appear later
Make self signing option of 'x509' use random serial numbers too
SSE2 SHA512_Transform implementation No, it's not used anywhere yet andis subject to change as C implementation is added
SSE2 accelerated bn_mul_add_words Code is currently disabled till properconfig and runtime support is addedPR: 788Submitted by: <dean@arcticorg>Reviewed by: <appro>Obtained from: http://arcticorg/~dean/crypto/rsahtml
Support for IA32 SSE2 instruction set
Remove the creation of $INSTALL_PREFIX$OPENSSLDIR/lib, since we don'tuse itNotified by Frdric L W Meunier <0@pervalidustk> in PR 713
When the pointer 'from' changes, it's stored length needs to change aswellNotified by Frank Kardel <kardel@acmorg> in PR 879
Fix realloc usage in ec_curvecSubmitted by: Nils LarschReviewed by: Geoff Thorpe
 update from current 096stable CHANGES file update from current 097stable CHANGES file:Now here we have "CHANGES between 097e and 098", and I hopethat all patches mentioned for 097d and 097e actually arein the CVS HEAD, ie what is to become 098I have rewritten the 'openssl ca create_serial' entry 098so that it explains the earlier change that is now listed 097eThe ENGINE_set_default typo bug entry has been moved from 098to 097b, which is where it belongs
The new BN_CTX code makes this sort of abuse unnecessary
Oops! Typo in /config
Improved PowerPC support Proper /config support for ppc targets,especially for AIX But most important BIGNUM assembler implementationsubmitted by IBMSubmitted by: Peter Waltenberg <pwalten@au1ibmcom>Reviewed by: appro
Make ASN1 code work again
With the new dynamic BN_CTX implementation, there should be no need foradditional contexts
The problem of rsa keygeneration getting stuck in a loop for pointlesslysmall key sizes seems to result from the code continually regenerating thesame prime value once the range is small enough From my tests, this changefixes the problem by setting an escape velocity of 3 repeats for the secondof the two primesPR: 874
Allow RSA keygeneration to specify an arbitrary public exponent Jelteproposed the change and submitted the patch, I jiggled it slightly andadjusted the other parts of openssl that were affectedPR: 867Submitted by: Jelte JansenReviewed by: Geoff Thorpe
More ASN1 reformat/tidy
Reformat/tidy some of the ASN1 code
Fix leakPR:870
As far as I can tell, the bugfix this comment refers to was committed to097stable as well as HEAD and doesn't apply to the 096enginevariant
Extend the index parameter checking from sk_value to sk_set Also tidy upsome similar code elsewhereThanks to Francesco Petruzzi for bringing this to my attention
New option to 'x509' next_serial This outputs the certificateserial number plus 1 to the output file Its purpose is to allowserial number files to be initialized when random serial numbersare used
Use X509_get_serialNumber instead of accessing internals in x509c
Reduce chances of issuer and serial number duplication by use of randominitial serial numbersPR: 842
Whooaaaaa, the BN_CTX_DEBUG macro really produces output thesedays  A little too much for my tests, currently
Print the debug thingies on stderr instead of stdout  If for nothingelse then at least so bc doesn't have problems parsing the output frombntest :
make update
"make update" noticed a new function
More updates for the header cleanups and apologies, again, for not havingconsolidated these prior to committing
When generating dependencies in the makefiles, generate the reduceddependencies of the OPENSSL_NO_DEPRECATED mode This prevents dependenciesbeing reproduced for "deprecated" header behaviour when a developer doesn'tdefine the symbol with the subsequent CVS wars that can ensue
header cleanup in apps/
oops Apologies all, that last headercleanup commit was from the wrongtree This further reduces header interdependencies, and makes someassociated cleanups
Reduce header interdependencies, initially in engineh the rest of thechanges are the fallout As this could break source code that doesn'tdirectly include headers for interfaces it uses, changes to recursiveincludes are covered by the OPENSSL_NO_DEPRECATED symbol It's better todefine this when building and using openssl, and then adapt code wherenecessary  this is how to stay current However the mechanism exists forthe lethargic
Clear error if unique_subject lookup fails
Add some root CAs
Avoid undefined results when the parameter is out of range
Don't use C++ reserved word
Oops forgot CHANGES entry
New function X509_POLICY_NODE_print
Add symbol hacks for some long namesmake update
This is essentially Intel 32bit compiler tuneup To start with allavailable compiler versions generated bogus machine code trying tocompile new crypto/des/cfb_encc Secondly, 8th version defines__GNUC__ macro, but fails to compile some inline assembler correctlyNote that all versions of icc implement MSClike _lrot[rl] intrinsic,which is used now instead of offensive asm Finally, unnecessary linkerdependencies are eliminated Most notably dependency from libircacaused trouble at application startup, if libcryptoso is linked withBsymbolic which it is
Enhance EVP code to generate random symmetric keys of theappropriate form, for example correct DES parityUpdate S/MIME code and EVP_SealInit to use new functionsPR: 700
Make {i2v,v2i}_ASN1_BIT_STRING globalmake update
Remove obsolete files
Allow CRLs to be passed into X509_STORE_CTX This is useful when theverified structure can contain its own CRLs such as PKCS7 signedDataTidy up some of the verify code
Extend OID config module format
Free up BIO properly when using streaming S/MIME sign
Remove BN_CTX debug from debugsteve
SSL_COMP_get_compression_method is a typo a missing 's' at the end ofthe symbol name
Move the definition of Win32_rename, since the macro rename gets undefinedin the middle of the code on Windows, and that disrupts operations in functionslater that use renamePR: 853
Wrap code starting with a definitionPR: 854
Change spaces to symbols in namesPR: 856
Make prototypes for some callback pointers
A couple more cases where RAND_add gets an integer instead of adoule as last argument
RAND_add wants a double as it's last argument
Fix loads of warnings in policy codeI'll remember to try to compile this with warnings enabled next time :
Fix ASN1 warnings
Adjust various bignum functions to use BN_CTX for variables instead oflocally initialising their ownNB: I've removed the "BN_clear_free" loops for the exitpaths in some ofthese functions, and that may be a major part of the performanceimprovements we're seeing The "free" part can be removed because we'reusing BN_CTX The "clear" part OTOH can be removed because BN_CTXdestruction automatically performs this task, so performing it insidefunctions that may be called repeatedly is wasteful This is currently safewithin openssl due to the fact that BN_CTX objects are never created forlonger than a single highlevel operation However, that is only becausethere's currently no mechanism in openssl for threadlocal storage Beyondthat, this might be an issue for applications using the bignum API directlyand caching their own BN_CTX objects The solution is to introduce a flagto BN_CTX_start that allows its variables to be automatically sanitisedon release during BN_CTX_end This way any higherlevel function andperhaps the application can specify this flag in its ownBN_CTX_start/BN_CTX_end pair, and this will cause innerloop functionsspecifying the flag to be ignored so that sanitisation is handled only onceback out at the higher level I will be implementing this in the nearfuture
Replace the BN_CTX implementation with my current work I'm leaving thelittle TODO list in there as well as the debugging code only enabled ifBN_CTX_DEBUG is definedI'd appreciate as much review and testing as can be spared for this I'llcommit some changes to other parts of the bignum code shortly to makebetter use of this implementation no more fixed size limitations Notealso that under identical optimisations, I'm seeing a noticable speedincrease over openssl097  so any feedback to confirm/deny this on othersystems would also be most welcome
Adds warnings about two curves and fixes the "seed" value for two othercurvesSubmitted by: Nils Larsch
 and this should likewise fix up those RSA implementations that weren'talready built and tested
By adding a BN_CTX parameter to the 'rsa_mod_exp' callback, private keyoperations no longer require two distinct BN_CTX structures This may putmore "strain" on the current BN_CTX implementation which has a fixed limitto the number of variables it will hold, but so far this limit is nottriggered by any of the tests pass and I will be changing BN_CTX in thenear future to avoid this problem anywayThis also changes the default RSA implementation code to use the BN_CTX infavour of initialising some of its variables locally in each function
Damn, I was a bit hasty with my fix and hadn't spotted the linkerdependency from asn1
Remove some warnings
Protect against gcc's "warning: cast does not match function type"
Don't define fd for platforms that do not use it, as some may not declare fileno properly
Correct constness problems
Make it easier to buld test applications
Only build the PKCS7 test applications if "pkcs7" is present inSDIRS
Add storeh among the exported headers on VMS
o_strh isn't a public header file, so make sure it will still beincluded
o_strh isn't a public header file
Typo
Make sure toupper is properly declared
Make it clear that for RSA_NO_PADDING, flen must be RSA_sizersa
make update
Sync the VMS build with Unix
Initial support for certificate policy checking and evaluationThis is currently very experimental and needs to be more fully integratedwith the main verification code
Correct minor spelling errorPR: 845
Change \t to real tab in echo argumentPR: 847
Remove a warning for conversion double>long  This has impacts on WindowsPR: 849
Make sure fd is defined where it shouldPR: 849
Note my bignum hijinx in case app maintainers are using CHANGES for theirporting efforts Also, add Richard's name to the prior change
Variety of belttightenings in the bignum code Please help test this! Remove some unnecessary "+1"like fudges Sizes should be handledexactly, as enlarging size parameters causes needless bloat and may justmake bugs less likely rather than fixing them: bn_expand macro,bn_expand_internal, and BN_sqr Deprecate bn_dup_expand  it's new since 097, unused, and not thatuseful Remove unnecessary zeroing of unused bytes in bn_expand2 Rewrite BN_set_word  it should be much simpler, the previouscomplexities probably date from old mismatched type issues Add missing bn_check_top macros in bn_wordc Improve some degenerate case handling in BN_[add|sub]_word, addcomments, and avoid a bignum expansion if an overflow isn't possible
Avoid warnings
Constify d2i, s2i, c2i and r2i functions and other associatedfunctions and macrosThis change has associated tags: LEVITTE_before_const andLEVITTE_after_const  Those will be removed when this change has beenproperly reviewed
It was just pointed out to me that it's better to cast to double
Make sure that the last argument to RAND_add is a float, or somecompilers may complain
Make sure we use unsigned constants, or come compilers may complain
Convert openssl code not to assume the deprecated form of BN_zeroRemove certain redundant BN_zero initialisations, because BN_CTX_get,BN_init, [etc] already initialise to zeroCorrect error checking in bn_sqrc, and be less wishywash about how/whythe result's 'top' value is set note also, 'max' is always > 0 at thispoint
The efforts to eliminate the dualrepresentation of zero and to ensurebignums are passed in and out of functions and APIs in a consistent formhas highlighted that zerovalued bignums don't need any allocated worddata The use of BN_set_word to initialise a bignum to zero causesneedless allocation and gives it a return value that must be checked Thischange converts BN_zero to a selfcontained macro that has noreturn/expression value and does not cause any expansion of bignum dataNote, it would be tempting to rewrite the deprecated version as asuccessvalued comma expression, such as;define BN_zeroa a>top  a>neg  0, 1However, this evaluates 'a' twice and would confuse initialisation loopseg while { BN_zerobn++ }  As such, the deprecated versioncontinues to use BN_set_word
Document a change I'd already made, and at the same time, correct thechange to work properly; BN_zero should set 'neg' to zero as well as'top' to match the behaviour of BN_new
IRIX 6x shared build fixupFor reference Note that both cc and gcc support Wl flag, but we can'tuse Wl,[not]all with both drivers, because cc rearranges optionspassed through Wl We can't use Wl,all,libcryptoa,notall with cceither, because it refuses to start with "no input" error
static
Minimise the amount of code dependent on BN_DEBUG_RAND In particular,redefine bn_clear_top2max to be a NOP in the nondebugging case, andremove some unnecessary usages in bn_nistcSubmitted by: Nils LarschReviewed by: Geoff Thorpe, Ulf Mller
More changes coming out of the bignum auditing BN_CTX_get should ideallyreturn a "zero" bignum as BN_new does  so reset 'top' DuringBN_CTX_end, released bignums should be consistent so enforce this indebug builds Also, reduce the number of wasted BN_clear_free calls fromBN_CTX_end typically by 75 or soSubmitted by: Nils LarschReviewed by: Geoff Thorpe, Ulf Mller
Fix policy constraints syntax
Support for inhibitAnyPolicy extension
typo
Cleanup ASN1 OID module when it exits
Call autoconfig code in pkcs7 utility
Memory leak fix
Various X509 fixes Disable broken certificate workaroundswhen X509_V_FLAG_X509_STRICT is set Check for CRLSign inCRL issuer certificates Reject CRLs with unhandled anycritical extensions
TyposReported by: Jose CastejonAmenedo <JoseCastejonAmenedo@hpcom>
Make our page with pointers to binary distributions visible in the FAQ
Indent some of the code examples
Config docs
Documentation of the KISS autoconfig functions
More autoconfig docs
Avoid a memory leak in OCSP_parse_urlNotified by Paul Siegel <psiegel@corestreetcom>
Initial docs for the OpenSSL library configuration via opensslcnf
Add ECDSA documentationSubmitted by: Nils Larsch
AES is spelled AES, not ASE  Oops
Make sure the given EVP_PKEY is updated in the PEM_STRING_PKCS8INF case alsoPR: 833
Document the AES options for 'openssl smime'PR: 834
A cleanup of the ecs_osslc code and some doxygen comments for ecdsahSubmitted by: Nils LarschReviewed by: Geoff Thorpe
When adding positive elements, we can use BN_uadd instead of BN_addSubmitted by: Nils LarschReviewed by: Geoff Thorpe
Use an OCTET STRING for the encoding of an OCSP nonce valueThe old raw format can't be handled by some implementationsand updates to RFC2560 will make this mandatory
minor signed/unsigned warning fixes
Fix handling of offset and length in asn1parse toolIf offset exceeds length of data available exit with an errorDon't read past end of total data available when offset suppliedIf length exceeds total available truncate it
Typo in crypto/bn/asm/x86_64c, bn_div_wordsPR: 821
Add flag to avoid continuousmemory allocate when calling EVP_MD_CTX_copy_exWithout this HMAC is several times slower than< 097
Typo in PARISC 2 rules in crypto/bn/Makefilessl
HP/UX PARISC 2 targets update
Remove typos
Wtraditional was a little too much
Typo
In the development branch, it feels quite all right to warn on a lotmore stuff
make update
Add the missing parts for DES CFB1 and CFB8Add the corresponding AES parts while I'm at itmake update
make update
Unsigned vs signed problem removed
undef _POSIX_C_SOURCE in ui_opensslc ruined IRIX builds Comment on why_POSIX_C_SOURCE needed in first place
CFB DES syncup with FIPS branch
Avoid signed vs unsigned warnings which are treated like errors onWindows
S_IFBLK and S_IFCHR may not exist in some places like Windows, solet's check for those macros, and if they aren't defined, let's assumethere aren't Unixly devices on this platform
Even though C specification explicitly says that constant type "stretches"automatically to accomodate the value, some compilers fail to do so Mostnotably 0x0123456789ABCDEF should come out as long long in 32bit context,but HP compiler truncates it to 32bit value Which in turn breaks GF2^marithmetics in hpuxparisc2cc build Therefore this fix
Fix declaration inconsistency in ecparamc
Get rid of bogus warning when compiling with Sun vendor compiler
We're passed p, so let's use p instead of making assumptions
Typo
Replace expired certificate
SHA1 assembler tuneup for Intel P4
Adding a slash between the directoryt and the file is a problem withVMS  The C RTL can handle it well if the "directory" is a logicalname with no colon, therefore ending being 'logname/file'  However,if the given logical names actually has a colon, or if you use a fullVMSsyntax directory, you end up with 'logname:/file' or'dev:[dir1dir2]/file', and that isn't handled in any good waySo, on VMS, we need to check if the directory string ends with aseparator one of ':', ']' or '>' < and > can be used instead [ and], and handle that by not inserting anything between the directoryspec and the file name  In all other cases, it's assumed thedirectory spec is a logical name, so we need to place a colon betweenit and the fileNotified by Kevin Greaney <kevingreaney@hpcom>
Cover all DSA setups when running testsPR: 748Submitted by: Kirill Kochetkov <kochet@ixbtcom>
Updates to s_time manual pagePR: 570Submitted by: Martin Witzel <MWITZEL@deibmcom>
Add s_time manual pageSubmitted by: "Martin Witzel" <MWITZEL@deibmcom>PR: 570
Update URISubmitted by: Gertjan van Oosten <gertjan@WestNL>PR: 804
unintptr_t and <inttypesh> are not strictly portable with respect toANSI C 89Undo change to maintain compatibility
Fix Perl problems on sparc64This is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Avoid including cryptlibh, it's not really neededCheck if IDEA is being built or notThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Only use environment variables if uid and gid are the same as euid and egidThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Check if a random "file" is really a device file, and treat itspecially if it isAdd a few OpenBSDspecific casesThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Correct documentation typosThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
OpenBSDinternal changesThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Use sh explicitely to run pointshThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Include stringsh so strcasecmp and strncasecmp get properly declared
Use BUF_strlcpy instead of strcpyUse BUF_strlcat instead of strcatUse BIO_snprintf instead of sprintfIn some cases, keep better track of buffer lengthsThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Add a newline at the end of the last lineThis is part of a large change submitted by Markus Friedl <markus@openbsdorg>
Typos
To figure out if we're going outside the buffer, use the size of the buffer,not the size of the integer used to index in said bufferPR: 794Notified by: Rhett Garber <rhett_garber@hpcom>
Document that you need to include x509h to get [i2d|d2i]_RSA_PUBKEYCorrect the typo PUKEY
Document that you need to include x509h to get [i2d|d2i]_DSA_PUBKEYCorrect the typo PUKEY
Add "dif" variable to clean up the loop implementationsSubmitted by: Nils Larsch
Skip a curve with generator of nonprime orderSubmitted by: Nils Larsch
Avoid segfault if ret0Submitted by: Nils Larsch
Restructure make targets to allow parallel makeSubmitted by: Witold Filipczyk <witekfl@pocztagazetapl>PR: 513
Incremental cleanups to bn_libc Add missing bn_check_top calls and relocate some others Use BN_is_zero where appropriate Remove asserts that bn_check_top is already covering Simplify the code in places esp bn_expand2 Only keep ambiguous zero handling if BN_STRICT isn't defined Remove some whitespace and make some other aesthetic tweaks
Use the BN_is_odd macro in place of code that inconsistently does muchthe same thingAlso, I have some stuff on the backburner related to some BN_CTX notesfrom Peter Gutmann about his cryptlib hacks to the bignum code The BN_CTXcomments are there to remind me of some relevant points in the code
BN_FLG_FREE is of extremely dubious usefulness, and is only referred toonce in the source where it is set for the benefit of no other codewhatsoever I've deprecated the declaration in the header and likewisemade the use of the flag conditional in bn_libc Note, this change alsoNULLs the 'd' pointer in a BIGNUM when it is reset but not deallocated
Declare the static BIGNUM "BN_value_one" more carefully
Add missing bn_check_tops to bn_kronc, remove some miscellaneouswhitespace, and include extra headers to satisfy debugging builds
Add missing bn_check_tops to bn_gf2mc and remove some miscellaneouswhitespace
The bn_set_max macro is only "used" by the bn_set_[low|high] macroswhich, in turn, are used nowhere at all This is a good thing becausebn_set_max would currently generate code that wouldn't compile BIGNUMhas no 'max' elementThe only apparent use for bn_set_[low|high] would be for implementingwindowing algorithms, and all of openssl's seem to use bn__wordshelpers instead including the BN_div that Nils fixed recently, which hadbeen using independentlycoded versions of what these unused macros areintended for I'm therefore consigning these macros to cvs oblivion in thename of readability
bn_fix_top exists for compatibility's sake and is mapped tobn_correct_top or bn_check_top depending on debug settings Forinternal source, all bn_fix_tops should be converted one way or the otherdepending on whether the use of bn_correct_top is justifiedFor BN_div_recp, these cases should not require correction if the otherbignum functions are doing their jobs properly, so convert tobn_check_top
It was pointed out to me that if the requested size is 0, we shouldn'tty to allocate anything at all  This will allow eNULL to still workPR: 751Notified by: Lutz Jaenicke
Check that OPENSSL_malloc really returned some memoryPR: 751Notified by: meder@mcsanlgovReviewed by: Lutz Jaenicke, Richard Levitte
CRYPTO_malloc, CRYPTO_realloc and variants of them should return NULLif the give size is 0This is a thought that came up in PR 751
Some more ASFLAGS settings requiredPR: 735Submitted by: Tim Rice <tim@multitalentsnet>
Add more debugging to my Configure target, and "make update" to incorporatethis and a few other changes
If BN_STRICT is defined, don't accept an ambiguous representation of zeroie where top may be zero, or it may be one if the corresponding word isset to zero Note, this only affects the macros in bnh, there are probablysimilar corrections required in some c filesAlso, clarify the auditrelated macros at the top of the header Mentalnote: I must not forget to clean all this out before 098 is released 
Improve a couple of the bignum macros Note, this doesn't eliminatetolerance of ambiguous zerorepresentation, it just improvesBN_abs_is_word and simplifies other macros that depend on it
Make BN_DEBUG_RAND less painfully slow by only consuming one byte ofpseudorandom data for each bn_pollute
This improves the placement of check_top macros in a couple of bn_libfunctions
Make sure the documentation matches realityPR: 755Notified by: Jakub Bogusz <qboosh@pldlinuxorg>
We're getting a clash with C++ because it has a type called 'list'Therefore, change all instances of the symbol 'list' to something elsePR: 758Submitted by: Frdric Giudicelli <groups@newpkiorg>
Add IPSec/IKE/Oakley curvesPR: 768Submitted by: Vadim Fedukovich <vf@unitynet>
Damnit, I'm sick of having to do something special every time a modulethat gets built before objects barfs all over the place because ituses a new NID that hasn't had a chance of getting defined yet inthis case, it was about a couple of new EC curves, and therefore acouple of new corresponding NIDsI'm placing objects first in SDIRS!  There
RSA_size and DH_size return the amount of bytes in a key, and wecompared it to the amount of bits requiredPR: 770Submitted by: c zhang <czhang2005@hotmailcom>
1024 is the export key bits limit according to current regulations, not 512PR: 771Submitted by: c zhang <czhang2005@hotmailcom>
Get rid of some signed/unsigned comparison warnings
Make a number of changes to the OS/2 build  Submitter's comment belowPR: 732Submitted by: Ilya Zakharevich <nospamabuse@ilyazorg>Submitter's comment:This patch:a Introduces a new file os2/backwardifyplb Introduces a new mk1mfpl variable $preamble  As you can see, it maybe used also to move some OSspecific code to VCCE too the thefirst chunk of the patch;c The DESCRIPTION specifier of the def file is made more informative:now it contains the version number too  On OS/2 it is made conformantto OS/2 conventions; in particular, when one runs the standard commandBLDLEVEL thisDLLone can see:Vendor:      wwwopensslorg/Revision:    097cDescription: OpenSSL: implementation of Secure Socket Layer; DLL for library crypto  Build for EMX Zmtd[I did not make Win32 descriptions as informative as this  I'm afraid tobreak something  Be welcome to fix this]d On OS/2 the generated DLL was hardly usable it had a shared initializeddata segmente On OS/2 the generated DLLs had names like ssldll  However, DLL names onOS/2 are "global data"  It is hard to have several DLLs with the samename on the system  Thus this precluded coexistence of OpenSSL with DLLsfor other SLL implementations  or other name clashes  I transparentlychanged the names of the DLLs to open_ssldll and cryptssldllf The file added in a is used to create "forwarder" DLLs, so theapplications expecting the "old" DLL names may use the new DLLstransparently  A presence of these DLLs on the system nullifies e,but makes old applications work  This is a stopgap measure until theold applications are relinked  Systems with no old applications do notneed these DLLs, so may enjoy all the benefits of eThe new DLLs are placed in os2/ and os2/noname subdirectoriesg The makefiles created with os2/OS2EMXcmd did not work some mysteriousmeaningless failures  The change to util/pl/OS2EMXpl uses thevariable introduced in b to switch the Makefiles to SHELLsh syntaxAll these backslashes are removed, and the generated Makefiles started toworkh Running os2/OS2EMXcmd now prints out what to do next
Move another common functionality reproduced so far with cut'n'pasteto appsc, and give it the hopefully descriptive name parse_yesno
Let's use text/plain in the example instead of crapy HTMLPR: 777Submitted by: Michael Shields <mshields@sunblocksystemscom>
Forgot to change the declaration of do_subject to one of parse_name
Move do_subject to appsc and rename it to parse_name  Therationale behind the move is that it's use by several applicationsThe rationale behind the name change is that it describes what thefunction does a bit better
Allow multivalued rdns in subjects  This adds the multivaluerdn optionto 'openssl req' and 'openssl ca'PR: 779Submitted by: Michael Bell <michaelbell@cmshuberlinde>Reviewed by: Richard Levittethere will be some followup changes
Netwarespecific changes,PR: 780Submitted by: Verdon Walker <VWalker@novellcom>Reviewed by: Richard Levitte
Change my debugging entries to do fierce BIGNUM debugging
Due to recent debugging bursts, openssl should be more or less solidagainst inconsistent BIGNUMs coming out of any of its API functions Sothis change no longer "fixes" the bn_printc functions, but it makes forcleaner code This patch was a part of ticket 697PR: 697Submitted by: Otto MoerbeekReviewed by: Geoff Thorpe
Fix some handling in bn_word This also resolves the issues observed inticket 697 though uses a different solution than the proposed one Thisproblem was initially raised by Otto MoerbeekPR: 697Submitted by: Nils LarschReviewed by: Geoff Thorpe
Some changes for bn_gf2mc: better error checking plus some minoroptimizationsSubmitted by: Nils Larsch
Free "engine" resource in case of failure to prevent memory leakPR: 778Submitted by: George Mitchell <george@m5pcom>
BN_div cleanup: replace the use of BN_sub and BN_add with bn_sub_wordsand bn_add_words to avoid using fake bignums to window other bignums thatcan lead to corruption This change allows all bignum tests to pass withBN_DEBUG and BN_DEBUG_RAND debugging and valgrind NB: This should betested on a few different architectures and configuration targets, as thebignum code this deals with is quite preprocessor and assembly sensitiveSubmitted by: Nils NarschReviewed by: Geoff Thorpe, Ulf Moeller
Fix a small bug in str_copy: if more than one variable is replaced, makesure the current length is used to calculate the new buffer length insteadof using the old length prior to any variable substitutionSubmitted by: Nils Larsch
Give CRLDP its standard nameMax req x509 use V1 if extensions section absent
hpux64parisc2gcc target added Once it is verified, /config shouldbe modified to choose it instead of hpux64pariscgcc, which shouldthen be removed hpux64parisccc is removed already now as redundant[in case you wonder, 64bit HPUX ABI implies PARISC20]
/config failed to correctly detect if gcc uses 64bit ABI on HPUXPR: 772
Make sure to initialize AES counters to obtain proper resultsSubmitted by: Kirill Kochetkov <kochet@ixbtcom>PR: 748
reenable the test, keeping the original method for RAND_pseudo_byteswhich is used by BN_DEBUG_RANDSubmitted by: Nils Larsch
Catch error condition to prevent NULL pointer dereferenceSubmitted by: Goetz BabinEbell <babinebell@trustcenterde>PR: 766
Provide ASFLAGS in the subdirectories handling assembler codeSubmitted by: Tim Rice <tim@multitalentsnet>PR: 735, 765
The x962 tests replace the PRNG with specific numbers,so don't run them if BN_DEBUG_RAND is definedAlso, fix another small bugSubmitted by: Nils Larsch
BN_set_bit etc should use "unsigned int"Keep it as is to avoid an API change, but check for negativ valuesSubmitted by: Nils Larsch
Less restrictive debugging build
This rewrites two "for" loops in BN_rshift  equality with zero isgenerally a more efficient comparison than comparing two integers, and thefirst of these two loops was offbyone copying one too many values Thischange also removes a superfluous assignment that would set an unused wordto zero and potentially allow an overrun in some casesSubmitted by: Nils LarschReviewed by: Geoff Thorpe
General improvements to the ec_asn1c code This squashes at least one bugwhere it was impossible to create an EC certificate with a compressedpublic key, and has some style improvements based on some comments fromSteve Henson about use of the ASN1 macrosSubmitted by: Nils LarschReviewed by: Geoff Thorpe
Avoid possible memory leaks in errorhandlingSubmitted by: Nils LarschReviewed by: Geoff Thorpe
Print out GeneralizedTime and UTCTime in ASN1_STRING_print_ex
Geoff suggested a more succinct description for "top"
oops the description of >top was inaccurate the example is correct though
This extends the debugging macros to use "pollution" duringbn_correct_top, previously only bn_check_top did this
Add debugscreening of input parameters to some functions I'd missedbefore
Put more debug screening in BN_div and correct a comment
This is a revert of my previous commit to "improve" the declaration ofconstant BIGNUMs It turns out that this trips up different but equallyuseful compiler warnings to Wcastqual, and so wasn't worth the uglinessit created Thanks to Ulf for the foreheadslap
typo in comment
cleanup as discussed with Geoff
Cygwin debugging
Put the first stage of my bignum debugging adventures into CVS This codeis itself experimental, and in addition may cause execution to break onexisting openssl "bugs" that previously were harmless or at leastinvisible
Avoid some shadowed variable namesSubmitted by: Nils Larsch
This is the least unacceptable way I've found for declaring the bignum dataand structures as constant without having to cast away const at any pointThere is still plenty of other code that makes gcc's "Wcastqual" unhappy,but crypto/bn/ is now ok Purists are welcome to suggest alternatives
Engines are usually binary, and should therefore be in INSTALLTOPrather than OPENSSLDIR
Let exit codes propagate from within for loops
bn_div does some pretty nasty things with temporary variables,constructing BIGNUM structures with pointers offset into other bignumsamong other things This corrects some of it that is too plainly insane,and tries to ensure that bignums are normalised when passed to otherfunctions
When a BN_CTX is used for temporary workspace, the variables are sometimesleft in an inconsistent state when they are released for later reuse Thischange resets the BIGNUMs when they are released back to the context
This fixes a couple of cases where an inconsistent BIGNUM could be passed asinput to a function
make update
Tighten up my compiler settings
Remove a line that was causing redundant declarationsObtained from: Stephen Henson <steve@opensslorg>
Copynpaste bug don't mix variable declarations and code This sets thecallback structure just before it is needed
Oops, this file already had the "empty source file" workaround but itrequires DPEDANTIC and was hidden at the bottom of the file This moves itto the top and removes the redundant declaration
Make md32_commonh friendlier to compiler warningsObtained from: Andy Polyakov <appro@opensslorg>
Some provisional bignum debugging has begun to detect inconsistent BIGNUMstructures being passed in to or out of API functions, and this corrects acouple of cases found so farAlso, lop off a couple of bytes of whitespace
A general springcleaning in autumn to fix up signed/unsigned warningsI have tried to convert 'len' type variable declarations to unsigned as ameans to address these warnings when appropriate, but when in doubt I haveused casts in the comparisons instead The better solution that would getus all lynched by API users would be to go through and convert all thefunction prototypes and structure definitions to use unsigned variablesexcept when signed is necessary The proliferation of signed "int" forstrictly nonnegative uses is unfortunate
BN_CTX is opaque and the static initialiser BN_CTX_init is not usedexcept internally to the allocator BN_CTX_new, as such this deprecatesthe use of BN_CTX_init in the API Moreover, the structure definition ofBN_CTX is taken out of bn_lclh and moved into bn_ctxc itselfNDEBUG should probably only be "forced" in the toplevel configuration, butuntil it is I will avoid removing it from bn_ctxc which might surprisepeople with massive slowdowns in their keygens So I've left it inbn_ctxc but tidied up the preprocessor logic a touch and made it moretolerant of debugging efforts
Removing those memcpys also took away the possibility for in and out tobe the same  Therefore, the removed memcpys need to be restored
remove accidentally committed debugging cruft
Remove an unnecessary cast that causes certain compilers eg mine someconfusion Also silence a couple of signed/unsigned warnings
Remove redundant declaration
Relax some overzealous constification that gave some lhashbased code nochoice but to have to cast away "const" qualifiers from their prototypesThis does not remove constification restrictions from hash/comparecallbacks, but allows destructor commands to be run over a tables' elementswithout bad casts
Comments out some unimplemented functions instead of redeclaring them
Avoid "empty source file" warnings
For whatever reason compiler or header bugs, at least one commonlyusedlinux system namely mine chokes on our definitions and uses of the "HZ"symbol in crypto/tmdiff[ch] and apps/speedc as a "bad function cast"when in fact there is no function casting involved at all In both cases,it is easily worked around by not defining a cast into the macro andjiggling the expressions slightlyIn addition  this highlights some cruft in openssl that needs sorting outThe tmdiffh header is exported as part of the openssl API despite the factthat it is ugly as the driven sludge and not used anywhere in the library,applications, or utilities More weird still, almost identical code existsin apps/speedc though it looks to be slightly tweaked  so either tmdiffshould be updated and used by speedc, or it should be dumped because it'sobviously not useful enoughRather than removing it for now, I've changed the API for tmdiff to atleast make sense This involves taking the object type MS_TM from theimplementation and using it in the header rather than using "char " in theAPI and casting mercilessly in the code ugh If someone doesn't like"MS_TM" and the "ms_time_" naming, by all means change it This shouldbe a harmless improvement, because the existing API is clearly not veryuseful eg we reimplement it rather than using it in our own utilsHowever, someone still needs to take a hack at consolidating speedc andtmdiff[ch] somehow
Update any code that was using deprecated functions so that everything buildsand links with OPENSSL_NO_DEPRECATED defined
When OPENSSL_NO_DEPRECATED is defined, deprecated functions are or shouldbe precompiled out in the API headers This change is to ensure that ifit is defined when compiling openssl, the deprecated functions aren'timplemented either
The "cryptodev" engine preprocessor logic used undefined symbols incomparisons It's better not to allow this, because it gives falsepositives when using compiler warnings that detect mistyped symbols
Add my own debug config target
make update
Ignore derived file
crypto/evp/evpteststxt is copied to tests/ rather than symlinked becauseof windows see checkin 175 of crypto/evp/Makefilessl, so quiet cvsnoise for the copied version
Remove duplicate prototypes have already been correctly added to rsah,as this is already included by x509h anyway
Correct serious bug in AESCBC decryption when the message length isn'ta multiple of AES_BLOCK_SIZEOptimize decryption of all complete blocks in AESCBC by removing anunnecessary memcpyThe error was notified by James Fernandes <jf210032@exchangeDAYTONOHNCRcom>The unnecessary memcpy was found as an effect of investigating that error
The object file is o_stro, not o_strcThanks to Peter Sylvester <PeterSylvester@EdelWebfr> for the notification
Add support for digested data PKCS7 type
Simplify cipher and digest lookup in PKCS7 code
New function to initialize a PKCS7 structure of type other
Initialize digested data type in PKCS7_set_type
Retrieve correct content to sign when thetype is "other"
Avoid warnings: add missing prototype, don't shadow
In realloc, don't destroy the old memory area if a new one couldn't beallocatedNotified by Daniel Lucq <daniel@lucqorg>
make update
s_client should inform the user of any compression/expansion methods used
Add functionality to get information on compression methods not quite complete
Make sure int SSL_COMP_add_compression_method checks if a certaincompression identity is already present among the registeredcompression methods, and if so, reject the addition requestDeclare SSL_COMP_get_compression_method so it can be used properlyChange ssltestc so it checks what compression methods are availableand enumerates them  As a sideeffect, builtin compression methodswill be automagically loaded that way  Additionally, change theidentities for ZLIB and RLE to be conformant todraftietftlscompression05txtFinally, make updateNext on my list: have the builtin compression methods added"automatically" instead of requiring that the author callSSL_COMP_add_compression_method orSSL_COMP_get_compression_methods
Setting the ex_data index is unsafe in a threaded environment, solet's wrap it with a lock
Remove unused code, don't use zlib functions that are really macrosand provide missing prototypes
Check for errors from SSL_COMP_add_compression_methodNotified by Andrew Marlow <AMARLOW1@bloombergnet>
Correct a mixup of return values
Include e_osh to get a proper definition of memmove on the platformsthat do not have it
Corrected misplacement of one of the greps
Remove leading and trailing spaces and tabs
Avoid 'file names' with spaces
Use correct case for manual page references
Correct incorrect mode bits change
Correct buggy PODs missing commas and a prepended space
ASN1 parse fix and release file changes
Further VxWorks changes from Bob Bradley <bob@chaoticsoftwarecom>, thistime involving VxWorks on MIPS
Synchronise util/libeaynum with the 097stable onemake update
Uhmm, It seem to have forgotten one file when I committed the MSDOSchange yesterdayPR: 669
Change the indentation from 12 to indent+4PR: 657
Make MD5 assembler code able to handle messages larger than 2GB on 32bitsystems and abovePR: 664
Selected changes for MSDOS, contributed by Gisle Vanem <giva@bgnettno>PR: 669
Add reference counting around the thread state hash tableUnfortunately, this means that the dynamic ENGINE version just went up, andisn't backward compatiblePR: 678
Have ssl3_ssl3_send_client_verify change the state to SSL3_ST_SW_CERT_VRFY_BPR: 679
Have ssl3_send_certificate_request change the state to SSL3_ST_SW_CERT_REQ_BPR: 680
Include the instance in the Kerberos ticket informationIn s_server, print the received Kerberos informationPR: 693
Correct small documentation errorPR: 698
Free the Kerberos context upon freeing the SSLContributed by Andrew Mann <amann@tccgicom>
Add necessary changes to be able to build on VxWorks for PPC860Contributed by Bob Bradley <bob@chaoticsoftwarecom>
Fix prime generation loop in crypto/bn/bn_primepl by makingsure the loop does correctly stop and breaking "division by zero"modulus operations are not performed The pregenerated primetable crypto/bn/bn_primeh was already correct, but it could not beregenerated on some platforms because of the "division by zero"situation in the script
Add passin support to rsautl
In order to get the expected self signed error whencalling X509_verify_cert in x509c the cert shouldnot be added to the trusted store
Typos
Generalise the definition of strcasecmp and strncasecmp forplatforms that don't necessarely have it  In the case of VMS, thismeans moving a couple of functions from apps/ to crypto/ and make themgeneral although only used privately
These should be writelocks, not readlocks
certain changes have to be listed twice in this file because OpenSSL096h forked into 096i and 097 
New ignore_err option in ocsp application to stop the serverexiting on the first error in a request
Only accept a client certificate if the server requestsone, as required by SSL/TLS specs
outlen should be int  in out_utf8
fix outofbounds check in lock_dbg_cb was too lose to detect allinvalid casesPR: 674
make sure no error is left in the queue that is intentionally ignored
Correct two problems, found by Martin Kochanski <cardbox@easynetcouk>:1 CreateToolhelp32Snapshot returns INVALID_HANDLE_VALUE, not NULL, on error2 On Windows CE, a snapshot handle is closed with CloseToolhelp32Snapshot,not CloseHandle
add OpenSSL licensefix typo
Inclusion of openssl/engineh should always be wrapped with a check thatOPENSSL_NO_ENGINE is not defined
Avoid clashes with Win32 names in WinCrypth
updates for draftietftlsecc03txtSubmitted by: Douglas StebilaReviewed by: Bodo Moeller
add test for secp160r1add code for kP+lQ timingsSubmitted by: Douglas Stebila <douglasstebila@suncom>Reviewed by: Bodo Moeller
tolerate extra data at end of client hello for SSL 30PR: 659
fix: 097 is based on 096h, not on 096ktypo in 096k section
new function EC_GROUP_cmp used by EVP_PKEY_cmpSubmitted by: Nils Larsch
manpages for 'openssl ec' and 'openssl ecparam'Submitted by: Nils Larsch
A document that has a very rough description of the X509functionality  This is mostly so there's a way to get from thecryptohtml page to the function descriptions
Replace CCITT with ITUT  Keep CCITT around as an aliasmake updatePR: 80
Make sure opensslpc is readable by everyonePR: 654
The counter is bigendian  Since it comes as an array of char,there's absolutely no need to specialcase it on littleendianmachinesNotified by Thierry Boivin <ThierryBoivin@celsecatcom>
Oops, I forgot to replace 'counter' with 'ivec' when used
Add issuer_hash and make subject_hash the default way to get thesubject hash, with hash a synonym kept around for backwardcompatibility reasonsPR: 650
The convenience argumetn for nameopt and certopt is ca_default, notdefault_caPR: 653
The 'counter' is really the IV
Change AESCTR to increment the IV by 1 instead of 2^64
Clarify wording of verify_callback behaviour
Only remove old files if they exist  [Maing32]Notified by Michael Gerdau <mgd@technosisde>
Nils Larsch told me I could remove that variable entirely
make update
Implement missing functionsHave the f parameter to _ctrl functions have the prototype voidrather than , for the sake of C++ compilersDisable unimplemented functionality
"Remove" unused variable
Conform with the standard prototype for engine control functions
Scan through the engines directory as well
The definition of dynamic_ctrl should change along with thedeclaration :
implement PKCS 8 / SEC1 private key format for ECCSubmitted by: Nils Larsch
Return EOF when an S/MIME part have been read
Make sure the compiler knows we run with pedantic settings
make update
Document the last changePR: 587
Prepare for changes in the 096 branch
Prepare for changes in the 096 branch
We set the export flag for 512 bit keys, not 512 byte onesPR: 587
Add documentation for the new crlnumber configuration option
Typo
Implement CRL numbersContributed in whole by Laurent Genier <LaurentGenier@intrinseccom>PR: 644
dynamic_ctrl didn't have exactly the same prototype as defined byENGINE_CTRL_FUNC_PTR
Unsigned vs signed fixed
EXIT should mainly be exitn, not returnn  OPENSSL_EXIT willtake care of returning if necessary
Add the application data type to the README
Missing string and potential memory leaksNotified by Goetz BabinEbell <goetz@shomitefode>
Slightly better check of attributes  Now, mem_list_next can actually stop when the searched for key doesn't have it's attributes within the range of the checked key
Beautify
TypoPR: 584
Do not try to use nonexistent gmtime_r on SunOS4PR: 585
Make sure ssize_t is defined on SunOS4PR: 585
Make sure DSOdlfcn works properly on SunOS4PR: 585
TypoPR: 593
Add the possibility to have symbols loaded globally with DSO
make update
Avoid warnings saying that the format takes a void
Remove unused variable
Add an entry for X509_TRUST_OBJECT_SIGN in trstandard[]PR: 617
Add documentation for ERR_set_mark and ERR_pop_to_mark
Add functionality to set marks on the error stack and to pop all errors to the next mark
Handle des_modespod properlyPR: 634
Make sure to NULterminate the string on endoffile and errorPR: 643
Add crypto/store to the directories to look through
Document the AES_cbc_encrypt change
The output from AES_cbc_encrypt should be exact multiple blocks when encrypting
Typo
This memset in the ubsec ENGINE is a bug Zeroing out the result arrayshould not be necessary in any case, but more importantly the result andinput BIGNUMs could be the same, in which case this is clearly a problemSubmitted by: Jonathan HerschReviewed by: Joe OrtonApproved by: Geoff Thorpe
Make sure the sigaction structure and fileno function are properly declared with an ANSI compiler on Solaris and possibly others
Remove extra ;
Make sure the function definitions match their declaration
Make sure that size_t matches size_t
Make sure debugsolarissparcv9gcc is consistent with solarissparcv9gcc
Really get X509_CRL_CHECK_ALL right this time
Clarify return value of SSL_connect and SSL_accept in case of theWANT_READ and WANT_WRITE conditions
Update CHANGES to reflect base64 fix added to 097
Only count 'LF' as EOL in pk7_mimec, this avoids incorrectresults if CR+LF straddles the line buffer
Stop checking for CRLF when start of buffer is reachedAdd rest of long line fix which got missed before
Various S/MIME bug and compatibility fixes
Clarify ordering of certificates when using certificate chains
Include openssl/e_osh so OPENSSL_SYSNAME_ULTRASPARC and other configurationmacros get properly defined
Have ASFLAGS be defined the same way as CFLAGS
PR: 630Avoid looking outside the key_data array
Add minimum POP3 STLS hack to s_clientc as was provided for STARTTLS beforeSubmitted by: dg@sunetru Daniel GinsburgPR: 613
Move header file inclusion to prevent irritation of users forgetting tocall "make depend" after enabling or disabling ciphersSubmitted by: Tal Mozes <talm@cyberarkcom>PR: 628
PR: 627Allocate certificatePolicies correctly if CPS field is absentFix various memory leaks in certificatePolicies
PR: 631Submitted by: Doug Sauder <dws+001@hunnysoftcom>Fix bug in X509V3_get_d2i when idx in not NULL
Make sure to compare unsigned against unsigned
Brackets are now allowed, after a small hack in the processing of thedocsonweb
Fix sign bugsPR: 621
Correct signedness
Make sure EC_window_bits_for_scalar_size returns a size_t
I have no idea how I cut away that piece of text
I don't remember what my thinking was with str_compath  Maybe it'llcome back to me
make update
Misspelled functions
Some misspelled function names
Make the function STORE_new_engine public
Remove certain functions
The square brackets in BIO_s_biopod for somereason cause wml to bomb out with the errormessage: Slice:Error: Some slices were not closed: WML:Break: Error in Pass 9 rc1 WMK:Error: Error in WML rc256As a workaround delete them for now
Fix docs
Add correct DN entry for serialNumber
Define the two authentication parameter types for passphrase andKerberos 5 authentications
Add the possibility to hand execution parameters for exampleauthentication material to the STORE functionsSuggested by Gtz BabinEbell <babinebell@trustcenterde>
/usr/lib/pkgconfig/opensslpc was never installed in the RPMNotified by Bennett Todd <bet@rahulnet>
DO NOT constify RSA in RSA_sign and RSA_verify, since there are functioncalled downstream that need it to be nonconst  The fact that the RSA_METHODfunctions take the RSA as a const doesn't matter, it just expresses thatthey won't touch itPR: 602
Add the possibility to store arbitrary data in a STORESuggested by Gtz BabinEbell <babinebell@trustcenterde>
Constify RSA_sign and RSA_verifyPR: 602
Yeah, right, an object file ending with c, that'll work!
Make DER option work againFix typo
It's usually best if the function name matches everywhere
STORE was created 2003, darnit!
Get the year right
Provide some extra comments about the STORE_Memory STORE method
make update
Add STORE support in ENGINE
Define a STORE type  For documentation, read the entry in CHANGES,crypto/store/README, crypto/store/storeh and crypto/store/str_loclh
Define a STORE lock the STORE type will be committed later
Define the OPENSSL_ITEM structure
make update
Add BUF_strndup and BUF_memdup  Not currently used, but I've codethat uses them that I'll commit in a few days
make update
Include objectsh to get a correct declaration of OBJ_bsearch_ex,not to mention the OBJ_BSEARCH_ macros
Some variables were uninitialised
Correct documentation  sk_find_ex doesn't return a pointer, itreturns an index
Add an extended variant of sk_find which returns a nonNULL pointereven if an exact match wasn't found
Add an extended variant of OBJ_bsearch that can be given a fewflags
fix typoSubmitted by: Nils Larsch
Make it possible to affect the extension of man pagesPR: 578
Memory leak fix: RSA_blinding_on didn't free Ai under certain circumstancesMemory leak fix: RSA_blinding_on would leave a dangling pointer inrsa>blinding under certain circumstancesDouble definition fix: RSA_FLAG_NO_BLINDING was defined twice
Memory leak fix: local blinding structure not freed in rsa_eay_private_decrypt
include 'Changes between 096i and 096j'
Add the 096j news
make update
New NEWS
Remove all those infernal stupid CR characters
There's a problem building shared libraries on the sco5gcc target  However,it's time for a release, so I'm just adding an enty in PROBLEMS, and willhopefully solve this for a later release
Explicitely tell the compiler we're mips3 for the target irixmips3cc
Typo
Include randh, so RAND_status and friends get properly declared
Correct a few typosIt seems that svr3 and svr5 differ, after all
A single quote too many
I forgot to continuation mark
It seems like OpenUnix's ld uses LD_LIBRARY_PATH to search forlibraries  What's worse, the directories given in LD_LIBRARY_PATH arechecked first!  Therefore, we need a hack to prepend all thedirectories we give with L to the current value of LD_LIBRARY_PATH,thereby temporarly forming a hacked valueOnly copy LIBEXTRAS if they are givenSvr5 doesn't use z allextract
Fix ordering of compare functions: strncmp must be used first, athe cipher name in the list is not guaranteed to be at least "buflen"longPR: 567Submitted by: "Matt Harren" <matth@csberkeleyedu>
We seem to carry some rests of the 096 [engine] ENGINE framework, here inform of unneeded direct calls through the engine pointer
We seem to carry some rests of the 096 [engine] ENGINE framework in formof unneeded includes of openssl/engineh
RSA_FLAG_SIGN_VER indicates the special rsa_sign and rsa_verify functionpointers should be used  It doesn't necessarely mean it should go throughthe ENGINE framework
What was I smoking?  EVP_PKEY_cmp should return with 0 ifEVP_PKEY_cmp_parameters returned 0, otherwise it shouldgo on processing the public key component  Thia has nothingto do with the proper handling of EC parameters or not
Correct a typoHave EVP_PKEY_cmp call EVP_PKEY_cmp_parameters, and make a noteabout the lack of parameter comparison for EC
Constify
Do not call ENGINE_setup_bsd_cryptodev when OPENSSL_NO_ENGINE is definedPR: 564
Convert save_serial to work like save_index, and add arotate_serial that works like rotate_index
Add documentation on the added functionality in 'openssl ca'
make update
There's no need to check for __attribute__ with ANSI functions, sincewe only check to the opening parenthesis anyway
Correct a lot of printing calls  Remove extra arguments
Make p and  work properly, at least with pointers and floats
Add GCC attributes when compiled with gcc  This helps find out ifwe're using the printing functions correctly or notI used the corresponding attributes found in the header files of myLinux installation
Counter for GCC attributes
One more debug line to conditionalise
Add a CA section, to make sure the test will work with the changes inCAsh
Implement selfsigning in 'openssl ca'  This makes it easier to havethe CA certificate part of the CA database, and combined with'unique_subjectno', it should make operations like CA certificaterollover easier
Add functionality to help making selfsigned certificate
It's recommended to use req rather than x509 to create selfsigned certificates
Typo correction
Don't try to free NULL values
Reindent for readability
Remove unused variable
Reset the version number of the issuer certificate?  I believe thishasn't been tested in a long while
Conditionalise all debug strings
Make it possible to have multiple active certificates with the samesubject
make RSA blinding threadsafe
It seems like gccdrivven shared library building on OpenUnix 8 requiresshared rather than G
Update from stable branch
No need to test setalias twicePR: 556
Don't feil when indent is 0PR: 559
Add usage string for fingerprintPR: 560
Multi valued AVA support
OpenUNIX 8 has some problems using G with gcc  Maybe using gnushared works better will be tested tonight
Add warning about unwanted side effect when calling SSL_CTX_free:sessions in the external session cache might be removedSubmitted by: "Nadav Har'El" <nyh@mathtechnionacil>PR: 547
Update VMS building system
Update ocsp usage message and docs
Let's limit the extent of the definition of _XOPEN_SOURCE
Missed a few dollarsPR: 528
make update
Support for name constraints
Name Constraints OID
Add SCO5 shared library scriptsUpate SVR5 scripts for the upcoming 097bSubmitted by: Boyd Lynn Gerber <gerberb@zenezcom>
To define OPENSSL_NO_FP_API for all MSDOS type targets was unfairagainst DJGPP, and much more restricted than previous definitions
make update
Support for policy constraints
remove patch ID which is supposed to appear in patched variants ofold OpenSSL releases, but not in new releases
Define COMP method function prototypes properly
Make sure to declare mem properly
make update
Don't put configuration macro definitions on the command line, we'rejust fooling ourselves and then screwing up for other applications
Sometimes, we have partial comments on the same line as other stuff weparse  Make sure to read in the whole comment, so it can be entirelyremoved
Make sure we get the definition of OPENSSL_NO_RSA
Make sure we get the definition of OPENSSL_NO_HMAC and OPENSSL_NO_SHA
Make sure we get the definition of OPENSSL_NO_SHA
Make sure we get the definition of OPENSSL_NO_RIPEMD
Make sure we get the definition of OPENSSL_NO_MDC2
Make sure we get the definition of OPENSSL_NO_MD5
Make sure we get the definition of OPENSSL_NO_MD4
Make sure we get the definition of OPENSSL_NO_MD2
Make sure we get the definition of OPENSSL_NO_DES
Make sure we get the definition of OPENSSL_NO_RC5
Make sure we get the definition of OPENSSL_NO_RC4
Make sure we get the definition of OPENSSL_NO_RC2
Make sure we get the definition of OPENSSL_NO_IDEA
Make sure we get the definition of OPENSSL_NO_CAST
Make sure we get the definition of OPENSSL_NO_BF
Make sure we get the definition of OPENSSL_NO_AES
Make sure we get the definition of a number of OPENSSL_NO_ macros
Make sure we get the definition of OPENSSL_NO_BIO
Include e_osh correctly
Make sure we get the definition of OPENSSL_NO_MD2
Make sure we get the definition of OPENSSL_NO_FP_API
Make sure we get the definition of OPENSSL_NO_IDEA and IDEA_INT
Make sure we get the definition of OPENSSL_NO_HMAC
Make sure we get the definition of OPENSSL_NO_ECDSA
Make sure we get the definition of OPENSSL_NO_ECDH
Make sure we get the definition of OPENSSL_NO_EC
Make sure we get the definition of OPENSSL_NO_DSA and OPENSSL_NO_SHA
Make sure we get the definition of OPENSSL_NO_DH
Make sure we get the definition of OPENSSL_EXTERN, OPENSSL_NO_DES,DES_LONG and OPENSSL_NO_DESCBCM
Make sure we get the definition of OPENSSL_NO_CAST
Make sure we get the definition of OPENSSL_NO_ERR
Make sure we get the definition of OPENSSL_NO_SOCK
Make sure we get the definition of OPENSSL_NO_FP_API
Make sure we get the definition of OPENSSL_NO_BF
Make sure we get the definition of OPENSSL_NO_BIO and OPENSSL_NO_RSA
Make sure we get the definition of OPENSSL_NO_AES
Because it may be needed in public header files, move the definitionof OPENSSL_NO_FP_API on existence of OPENSSL_SYS_MSDOS to e_os2h
make update
New ASN1 macros to just implement and declare the new and free functionsand changes to mkdefpl so it recognises themUse these in policyMappings extension
make sure RSA blinding works when the PRNG is not properly seeded;enable it automatically for the builtin engine
Support for policyMappings
Typo: OID should be policyMappings
Avoid warning
Add documentation for starttls s_client and id_prefix s_serverPR: 542
make update
Some shells ksh in this case don't say 'command not found'PR: 540
Spelling errorsPR: 538
Make sure that all the library paths are modified in prepend mode, notreplace modePR: 528
hinv may generate more than one line 1 line per CPUPR: 520
Shut up an ANSI compiler about uninitialised variablesPR: 517
Add the target linuxia64ecc, suggested by Keith Thompson <kst@sdscedu>PR: 516
countermeasure against new KlimaPokornyRosa atack
Fix Certificate and CRL adding in X509_load_cert_crl_file:an X509_INFO structure can contain more than one object,for example a certififcate and a CRL
fix formatting
Fix for noec on Windows
Don't give an error if response reason absent in OCSP HTTP
Add entry for domainComponent so it is treated correctlyAdd table order test to end of a_strnidc
Add some OIDs
Fix PEDANTIC stuff
Fix a bonehead bug This warrants a CHANGES entry because it could affectapplications if they were passing a bogus 'flags' parameter yet havingthings work as they wanted anyway
Return an error if gmtime returns NULL
Avoid warnings for noengine and PEDANTIC
Fixes for EVP_DigestInit_ex and OPENSSL_NO_ENGINE
The default implementation of DSA_METHOD has an interdependence on thedsa_mod_exp and bn_mod_exp handlers from dsa_do_verify anddsa_sign_setup When another DSA_METHOD implementation does not definethese lowerlevel handlers, it becomes impossible to do a fallback tosoftware on errors using a simple DSA_OpenSSL>fnkeyThis change allows the default DSA_METHOD to function in such circumstancesby only using dsa_mod_exp and bn_mod_exp handlers if they exist,otherwise using BIGNUM implementations directly which is what thosehandlers did before this change There should be no noticable differencefor the software case, or indeed any custom case that didn't alreadysegfault, except perhaps that there is now one less level of indirection inall casesPR: 507
 new ECDH_compute_key interface KDF is no longer a fixed builtin bugfix: in ECDH_compute_key, pad x coordinate with leading zeros if necessary
memset problem has been handledPR: 343
use tabs for indentation, not spaces
Encryption BIOs misbehave when used with non blocking I/OTwo fixes:1 If BIO_write fails inside enc_write it should return thetotal number of bytes successfully written2 If BIO_write fails during BIO_flush it should return immediatelywith the error code: previously it would fall through to the finalencrypt, corrupting the buffer
Typo
add Certicom licensing email address
Support for dirName from config files in GeneralName extensions
Fix indefinite length encoding so EOC correctly updatesthe buffer pointerRename PKCS7_PARTSIGN to PKCS7_STREAMGuess what that's for :
year 2003
include OpenSSL license in addition to EAY license
Add instructions for building the MinGW target in Cygwin, andrearrange some of the other text for better readability
Copy rather than symlink the test dataThis is needed because Windows doesn't support symlinksThe Cygwin/MinGW build now passes "make test"
remove some more useless code The mingw target can now be builtunder cygwin
more mingw related cleanups
Remove duplication and have clean depend on libclean
Allow building applications against static libraries with Makefileshared
Base64 bio fixes The base64 bio was seriously brokenwhen reading from a non blocking BIOIt would incorrectly interpret retries as EOF, incorrectlybuffer initial data and have no buffering at all after initialdata data would be sent one byte at a time to EVP_DecodeUpdate
add test
avoid duplicate definiton of bn_sub_part_words
clean up MinGW build MinGW make now supports the Windows path nameconventions
update mingw info
treat 'out' like i2d functions do; cf asn1_item_flags_i2d crypto/asn/tasn_encc
ECPublicKey_set_octet_string and ECPublicKey_get_octet_stringbehaviour was not quite consistent with the conventionsfor d2i and i2d functions as far as handling of the 'out'or 'in' pointer is concernedThis patch changes this behaviour, and renames the functions too2i_ECPublicKey and i2o_ECPublicKey not 'd2i' and 'i2d' because theexternal encoding is just a raw object string without any DER icingSubmitted by: Nils Larsch
Ooops forgot to recognise V_ASN1_GENERALSTRING
Re enable the read side non blocking test BIO codeFor some reason it was disabled
Fix bug in base64 bios during write an non blocking I/O:if the write fails when flushing the buffer return thevalue to the application so it can retry
typoPR: 511Submitted by: Eric Cronin
Update release information
Security fix: Vaudenay timing attack on CBCAn advisory will be posted to the web  Expect a release within the hour
Make sure the memory allocation routines check for negative sizes
Borland C++ Builder 5 complains about unreachable statements
Update debubsteve entries
Typo
Make the noerr option work properly
Remove "+Olibcalls" option from HPUX targetsReportedly this option is deprecated, and on some systems"make test" fails if it is includedPR: 495
Session cache implementations shouldn't have to access SSL_SESSIONelements directly, so this missing functionality is requiredPR: 276
Declare prototypes for function pointer types, even if they are likely tobe cast later on
Update docs
Single pass processing to cleartext S/MIME signing
We cache a montgomery form for 'n' if the PUBLIC flag is set, not PRIVATEAlso, I've added handling for other mod_exp calls that were not using anycached montgomery forms These cases matter only for special RSA keys egones that are missing information so are unlikely to be used in normalcircumstances
David Brumley <dbrumley@stanfordedu> noted and corrected a case in theverification step of CRT private key operations in the RSA code previously no montgomery form was checked or used for 'n', and so it wouldbe generated on the fly each time As a result, private key operations arenow a percent or two fasterRather than adding this as another repetition of the nearlyidenticalmontgomery "check for firstuse" initialisation code blocks, I've takenthis chance to create a helper function and macrowrapper to replace themPR: 475
make update
Add support for IA64PR: 454
Handle krb5 libraries separately and make sure only libsslso dependson it
Update linuxmips and linuxmipsel to support threads and shared librariesI also updated the bn_ops field with values taken from OpenBSDmipsPR: 498
Pay attention to disabled SSL versionsPR: 500
Change no_rmd160 to no_ripemd for consistencyPR: 500
Make it possible to disable OCSP, the speed application, and the use of socketsPR: 358
Add full support for rpath/R, both in shared libraries andapplications, at least on the platforms where it's known howto do itNote: this has only been tested on GNUbased platforms Linux, andneeds to be tested on all others  Additionally, it's not yetsupported on the following platforms, for lack of information:Darwin MacOS XCygwinOSF1/AlphaSVR3ReliantUNIXPlease help out with testing and the platforms we don't yet know wellenough
Another long name to deal with
Oh, the destest program did look at the return value
new lock for EC_PRE_COMP structuresSubmitted by: Nils Larsch
Allow EC_GROUP objects to share precomputation for improved memoryefficiency EC_PRE_COMP objects are now constant once completedExtend 'extra_data' API to support arbitrarily many slots although weneed only one at the momentModify EC internal 'extra_data' API: EC_GROUP_[clear_]free_extra_datanow frees only a single slot the previous functions are available asEC_GROUP_[clear_]free_all_extra_dataSubmitted by: Nils LarschReviewed by: Bodo Moeller
Adjust DES_cbc_cksum so the returned value is the same as MIT'smit_des_cbc_cksum  The difference was first observed, then verified bylooking at the MIT source
Option to disable SSL auto chain build
comments
first section is now "Changes between 097a and 098", not " 097 and 098"
GeneralString support in miniASN1 compiler
Typo
Make sure memcpy is properly declared by including stringh
fix EC_GROUP_copy for EC_GFp_nist_methodSubmitted by: Nils Larsch
avoid coredumpSubmitted by: Nils Larsch
remove debugging leftovers
comment
typo
PKCS1 has a new RFC, which we do implement
implement fast point multiplication with precomputationSubmitted by: Nils LarschReviewed by: Bodo Moeller
typo in WIN16 sectionSubmitted by: Toni Andjelkovic <toni@sothat>
SSL_add_dir_cert_subjects_to_stack now exists for WIN32
IPv6 display and input support for extensions usingh GeneralName
typo
Update PRNG entry: OpenSSL version differences Sun /dev/urandom patch information
Oldstyle callbacks can be NULL!
Fix warning
We can't say in advance what the argument to BIO_socket_ioctl should be, solet's make that a void   Also, BIO_socket_nbio should send it an intargument, not a longPR: 457
Document engine where missingPR: 424
A few small bugs with BIO poppingPR: 364
The util scripts need to handled nohwPR: 327
The MASM situation is more difficult than described so far  It is part of VC++ 7PR: 327
For VC++7 and up, the file is VSVARS32BATPR: 327
The OPENSSL_NO_ENGINE has small problem: it changes certain structures  That'sbad, so let's not check OPENSSL_NO_ENGINE in those places  Fortunately, allthe header files where the problem existed include ossl_typh, which makesa 'forward declaration' of the ENGINE type
make update
Add the possibility to build without the ENGINE frameworkPR: 287
Summarise the last couple of commits
This glues the GMP wrapper ENGINE into OpenSSL if it is being built ie ifthe OPENSSL_USE_GMP symbol is defined Also, I've reordered the listingof other builtin ENGINEs to be alphabetical though "dynamic" will stillcome first
Commit a slightly modified version of an old experiment to do RSA privatekey operations using the GMP library The default is not to build or usethis code unless OPENSSL_USE_GMP is defined because it will impose headerand linker dependencies that might need specifying too
"openssl engine" will not display ENGINE/DSO load failure errors whentesting availability of engines with "t"  the old behaviour of isproduced by increasing the feature's verbosity with "tt"
Small typo, OENSSL should really be spelled OPENSSLPR: 476
Fix a memory leak in SSLPR: 477
cert_sk isn't always allocated, so freeing it may cause a crashPR: 481
DVCS see RFC 3029 was missing among the possible purposesNotified privately to me by Peter Sylvester <PeterSylvester@EdelWebfr>,one of the authors of said RFC
simplifySubmitted by: Nils Larsch
Correct EVP_SealInit documentation, iv is an outputparameter
cofactor is optional in parameter encodingsSubmitted by: Nils Larsch
consistency
For ecdsawithSHA1, as for iddsawithsha1, omit 'parameters'in AlgorithmIdentifierSubmitted by: Nils Larsch
Provide "dummy" &main::picmeup even in Windows perlasm modules
Check return value of gmtime and add error codeswhere it fails in ASN1_TIME_setEdit asn1h so the new error code is the same in 097and 098, rebuild new error codesClear error queue in reqc if _min or _max is absent
Workaround for lame compiler bug introduced in "CPU pack" for MSVC6SP5
The patch speaks for itself
Missing 0 broke FreeBSD buildPR: 470
fix warningsSubmitted by: Nils Larsch
Suggestion was to change ${MACHINE} to i586 in lines in question Well,"whatever" doesn't the same avoids 386 being passed to /Configure,consistent with other elder SCO targets and denotes that we probablyshouldn't care much about every outofdate platform
This is an initial tuneup This update puts Itanium2 back on par withItanium I mean if overall performance improvement over C version was Xfor Itanium, it's X even for Itanium2
Oops! Missed closing quote Didn't have time to verify before a snapshotwas cut
SCO target missed so suffix
lresolv is not present on SCO Unix, RT460
Caldera/SCO targets erroneously limit themselves to 386 See RT464
Fix for AIX shared build, see RT463
EVP_DecryptInit should call EVP_CipherInit not EVP_CipherInit_ex
Ingore the correct flag file
A few more files to ignore
make update
FreeBSD has /dev/crypto as wellPR: 462
Add some debugging output
Armor against systems without ranlibSubmitted by: Thierry Lelegard <thierrylelegard@canalplusfr>PR: 461
avoid potential confusion about curves prime192v1 and prime256v1 arealso known as secp192r1 and secp256r1, respectivelySubmitted by: Nils Larsch, Bodo Moeller
make update
ncrscde target needs lc89 for strcasecmp and ftime Tim Rice, MartinMegelePR: 450
Fix possible NULL dereferencialNotified by Verdon Walker <VWalker@novellcom>
Add verbosity
Fix initialization sequence to prevent freeing of unitialized objectsSubmitted by: Nils Larsch <nla@trustcenterde>PR: 459
update error library for EC changesSubmitted by: Nils Larsch
Really fix SSLv2 session ID handlingPR: 377
As with RSA, which was modified recently, this change makes it possible tooverride keygeneration implementations by placing handlers in the methodsfor DSA and DH Also, parameter generation for DSA and DH is possible byanother new handler for each method
Set EXPORT_VAR_AS_FN for BC32 to work around a compiler bug,
Extend the HOWTO on creating certificates, and add a HOWTO in creating keysPR: 422
Document hpuxparisc2cc problems, probably due to optimizer bugPR: 426
Correct an example that has a few typosPR: 458
Merge from 097stable
Minor FAQ update
"!Cname surname" has now become redundant 
undo part of a recent change: it's "surname", not "surName"see X520 aka ISO/IEC 95946
Make sure not to declare a clashing read for DJGPPPR: 440
DJGPP doesn't have DLLs, so skip adding to PATH in that environmentPR: 453
add something to the '$no_shared_warn' text
Correct a misleading commentPR: 456
Revert: the names of the cygwin distribution will not be named openssl2Requested by Corinna Vinschen <vinschen@redhatcom>
UI_UTIL_read_pw misinterpreted the values returned from UI functionsPR: 456
document BN_GENCB API by adding an example
TypoNB: This and other manual pages should be updated for the newBN_GENCB interface
tty_in will never be stderr, so it will always be closed, which means stdinmight get closedReported by Mark Daniel <MarkDaniel@wasdvsmcomau>
typo
OpenBSD FAQ update Apparently gas from binutils2x makes it impossible touse gcc fPIC  on OpenBSDi386 Alternative solution is provided
Just an extra comment
Add better support for FreeBSD on nonx86 machinesAdd specific support for FreeBSD on sparc64PR: 427
If the user said 'shared' and we haven't included support for shared libraries,warn him or herReminder by Andrew Marlow <apm35@studentopenacuk>
Double the dollars that are intended for the command linePR: 423
Add documentation on how to handle the shared libariesPR: 423
Name the flag file correctly
CFLAG, not CFLAGS
It's recommended to do 'make clean' after having prepared a new build treePR: 437
When preparing a separate build tree, don't make softlinks to softlinksAdd instructions in INSTALL, for easy accessPR: 437
Force the removalPR: 437
Certain files must be removed before generating them, in case they pointinto a readonly source treePR: 437
Avoid unnecessary pollution of object module name table Cygwin sharedbuild workaround DJGPP swallows it too One probably should do sameas with ELF calling it COFF, but I'm very short in COFF platforms, soI just go for easy adhoc solution I'll take care of merge to 097later
Make sure everything that may be freed is allocated or initiatedPR: 446
Typos correctedPR: 445
Typo
The naming scheme wasn't quite correct for Cygwin
At least OpenBSD implements PIC in the same way ELF does
gcc wants character constants to be correct  Before this change, thefollowing would happen on Solaris:m4 B 8192 asm/des_encm4 > asm/des_encsparcSgcc DOPENSSL_SYSNAME_ULTRASPARC DOPENSSL_NO_STATIC_ENGINE fPIC DOPENSSL_PIC DOPENSSL_THREADS D_REENTRANT DDSO_DLFCN DHAVE_DLFCN_H DOPENSSL_NO_KRB5 m32 mcpuultrasparc O3 fomitframepointer Wall DB_ENDIAN DBN_DIV2W DMD5_ASM   c o asm/des_encsparco asm/des_encsparcSasm/des_encsparcS:2007: unterminated character constantasm/des_encsparcS:2008: unterminated character constant
NULL tofree when it is freed to avoid double freeMake sure key is not NULL before freeing it
Finalizing asm support for UnixWare, SCO, OpenUnix Note that I'vereplaced if logic around bn_sub_part_words in bn_mulc I rely uponOPENSSL_BN_ASM_PART_WORDS being added by /Configure script Would itstill work on nonUnix platforms?
Third argument to shl_load is "long address", not a pointerDidn't influence functionality, as on HPUX 32bit the NULL pointeris a 32bit 0value and thus is identical to the required 0LPR: 443
RSA_METHOD now supports keygeneration, but for now none of theseENGINEs implement it
This is the first step in allowing RSA_METHODs to implement their own keygeneration This prototype matches the new API functionRSA_generate_key_ex, though both may be subject to change duringdevelopment before 098
Fix leak
Fix a typo
Another GAS fixup and some commentary
GAS can't stand stub, which is stb's synonym
Oops! I've toasted Cygwin! Fixed now
Redundant now as it's moved to /Makefileorg
Unified targets for ELF assembler modules Tested on Linux, Solaris andFreeBSD Goal is to extend support even to SCO5, UnixWare/OpenUnix
Support for ILP32 on HPUXIA64
parisc2s was not PIC, see RT426 I strip call to fprintf as it'snever called anyway it's a debugging assertion If parisc2Ws isPIC remains to be seen
HP/UX 11i make gets upset by this line containing nothing but a Tab
Rijndael should be called AES everywhere
Support for Intel compiler More details will be provided in closing notefor RT17 as snapshot becomes available for download
Complete integration of SPARC assembler DES implementation Tested on Solarisonly I'll keep my eyes open for Linux and OpenBSD targets
UltraSPARC assembler DES implementation tuneup The code can becompiled for any SPARC CPU UltraSPARC performance is not affected,can be compiled for 64bit ABI and is positionindependent
Very old submission from 2000 of UltraSPARC assembler DES implementationIt was not accepted because code is not PIC, too UltraSPARCspecific whenit doesn't have to and 32bit only I'm committing the original versionmostly for reference purposes 64, PIC, blended CPU tuneup follows shortlyObtained from: http://inetuni2dk/~svolaf/deshtm
I implemented this when troubleshooting performance problem on SPARC SolarisAs there is an apparent interest for optimization for footprint, I figuredthat this can eventually become useful
Link engines against libcrypto, even when a TCP/IP implementation isspecified
Adjust the parameter lists in some not commonly used filesPR: 428
Make sure the last character of the ASN1 time string the 'Z' is copiedPR: 429
It's rather silly to believe we'd release 097a in 2002 :It's even more silly to pretend we know which year 098 will bereleased
Merge in changes from 097stable
Merge in changes from 097stable
My English is definitely not good as my assembly skills: And it looks liketitles can't be multiline
It probably belongs in PROBLEMS, but it's more likely to be a FAQ
Since we're including Kerberos 5 headers in our exported header files whenOpenSSL is configured to use Kerberos, we'd better tell pkgconfig userswhere they can be foundPR: 421
Add information about AES cipher suites to ciphers manual pageIf no authentication method is mentioned in the cipher suite name egAES128SHA, RSA authentication is used PR 396
Fix wrong handling of session ID in SSLv2 client codePR: 377
Correct asm exclusions
OS/2 does binary by default, apparentlyReported by Brian Havard <brianh@kheldarapanaorgau>
make update
Finally get rid of all the algorithm inclusions that were done fromevphApplication authors BEWARE!  If you have had the habit to count onevph to provide all those lowerlevel algorithm functions, you needto think again!  Please change your programs NOW, or you will be sorrywhen 098 gets release it's quite some time away
make update
Merge from 097stable
I can't confirm the claim being removed and nobody seems to speak up for it
UltraSPARC performance "tuneup"
FAQ addenum as discussed in RT417
Kenneth R Robinette just told me the latest snapshot works well withMIT Kerberos
Can't find the referense to errors on XP with Kerberos
Add SPKM among the related stanrds
Updates
Update our list of implemented and related standards
Update our list of implemented and related standards
Spelling errorThis patch was taken from the OpenBSD copy of OpenSSL 097 beta3 with patches
Avoid double definition of configPR: 420
Updates
Some more adjustmentsSubmitted by: Jeffrey Altman <jaltman@columbiaedu>, "Kenneth R Robinette" <support@securenettermcom>
Cygwin needs the library locatin for DLLs to be set in PATH  Unfortunately,the conditional was set to add the library directory to PATH when theplatform is NOT Cygwin  CorrectedPR: 404
All VMSspecific problems have been solvedConfirmed by Mark Daniel <MarkDaniel@wasdvsmcomau>
Finally, a bn_div_words in VAX assembler that goes through all testsPR: 413
Stop a possible memory leakI wonder why s2_connect handles the initial buffer allocation slightlydifferentlyPR: 416
Make AES_ENCRYPT and AES_DECRYPT macros instead of static constantsPR: 411
Fix for "shift count too large" when compiling for hpuxparisc2 andirixmips The bug was introduced with accelerated support for x86_64My fault! Fixed now
More accurate comments
A little debugging
Propagate MAKEDEPPROG to the subdirs under crypto/
Fix Kerberos5/SSL interactionSubmitted by: "Kenneth R Robinette" <support@securenettermcom>Reviewed by:PR:
Keep the internal lowercase 'surname', for programmer's sake
Be consistent with capitalisation of object names
Be consistent with capitalisation of object names
There was a mixup between INSTALLTOP and OPENSSLDIR
We stupidly had a separate LIBKRB5 variable for KRB5 library dependencies,and then didn't support it very well  And that when there already is auseful variable for exactly this kind of thing; EX_LIBS
Because the contents of opensslpc may have to change when a configurationhas been performed and possibly changed, have it depend on Makefilessl
Small tweaks for code consistency
To avoid any future programming glitches, let's make each and everyassignment modulo those I missed individual statements
I have no idea what possesed me to compile s_socketc as POSIXly codeIncidently, it now compiles so much better without _POSIX_C_SOURCE
If _XOPEN_SOURCE_EXTENDED or _XOPEN_SOURCE are defined, _POSIX_C_SOURCE getsdefined in DECC$TYPESH  If _POSIX_C_SOURCE is defined, certain types donot get defined u_char, u_int,   DECCH gets included by asserthand others  Now, in6h uses the types u_char, u_int and so on, and getsincluded as part of other header inclusions, and will of course fail becauseof the missing typesOn the other hand, _XOPEN_SOURCE_EXTENDED is needed to get gethostnameproperly declaredSolution: define _XOPEN_SOURCE_EXTENDED much later, so DECC$TYPESH hasa chance to be included first, so the otherwise missing types get definedproperlyPersonal: mumble mumble
It was pointed out to me that pc files are normally stored in${prefix}/lib/pkgconfig, not ${prefix}/lib/pkginfo
It was pointed out to me that pc files are normally stored in${prefix}/lib/pkgconfig, not ${prefix}/lib/pkginfo
Update the current status
Better wording?
Fix for RT405, Solaris refuses to invoke preprocessor if egrep returns 1Linux for example doesn't exhibit this behaviour, but I add "exit 0" to allpotentially affected rules, just to be on the safe side
Make "perl des586pl aout" work, see RT402
'ab c$a; echo $c' doesn't necessarily prints "b", '' vs "", $s inMakefiles I suppose it wasn't tested very much
Transfer the Solaris shared library building changes from097stable
Protect loading routines with a lockPR: 373
Synchronise with Makefiles
Always forget this one
DES PICification "Cygwin" companion Problem was that preprocessor macrois not expanded if prepended with a $sign
Make sure manual pages are properly linked to on systems that have caseinsensitive file names, as well as those that do not have symlinksIncidently, both these cases apply on DOS/Windows
Update the make system for installations: define a HERE variable to indicate where the source tree is usedvery little right now make more use of copying and making attribute changes to {file}new,and then move it to {file} use 'mv f' to avoid all those questions to the user when the filein question doesn't have write attributes for that user
Don't define macros in terms of asm when __STRICT_ANSI is defined
Bring des_loclh at the same level as in the 097 branchDon't define macros in terms of asm when __STRICT_ANSI is defined
Ooops! No ROTATE on some platforms after x86_64 performance patch
As you might have noticed I tried to change for  prefix, because it'sthe one to be used to denote local labels in single function scopeProblem is that SHA uses same label set across functions, therefore Ihave to switch back to $ prefix
Solaris shared build fixups See RT238,239 for details
New DETECT_GNU_LD procedure
x86_64 performance patch
DES PICification Windows companion
The ampersand is not required in these constructs, and was giving AIXwarningsReported by: Bernhard Simon
IA32 assembler modules primarily DES PICification Idea is to keepshared libraries shared
OK, there's at least one application author who has provided dynamic lockingcallbacks
BIO_new_bio_pair was unnecessarily described in it's own page as well as inBIO_s_biopod  The most logical is to move everything needed fromBIO_new_bio_pairpod to BIO_s_biopod including the nice exampleand toss BIO_new_bio_pairpod  I hope I got all the info over properlyPR: 370
BIO_set_nbio is enumerated, but not explained  Remove it from enumerationsince it's both enumerated and explained in BIO_s_connectpodPR: 370
I forgot one item I intend to work on
Skip DHspecific tests when nodh has been configuredPR: 353
Document the modifications in 097 that will make the hw_nciphercengine work properly even in bad situations
Make 'tunala' link with zlib if possible so it works if openssl wasconfigured with zlib support
In CRYPTO_lock, check that the application cares about locking providedcallbacks before attempting to lock
sk__push returns the number of items on the stack, not the index of thepushed item  The index is the number of items  1  And if a NULL item wasfound, actually use itFinally, provide a little bit of safety in CRYPTO_lock by asserting the arequested dynamic lock really must exist, instead of just being silent about it
Let's not forget the other places where HEADER_DES_H and HEADER_DES_OLD_Hwere defined
Let's not forget the other places where HEADER_DES_H and HEADER_DES_OLD_Hwere defined
Since HEADER_DES_H has been the protector of desh since libdesbefore SSLeay, maybe?, it's better to have that macro protectthe compatibility header des_oldh  In the new desh, let's usea slightly different protecting macroThe rationale is that there are application that might include viaother header files, perhaps both an old libdes desh and OpenSSL'sdesh  Whichever comes first would overshadow the other because ofthe clash in protecting macro  This fix solves that problem
This stops a compiler warning from WmissingprototypesNoticed by Nils Larsch
Update Olimit settingSubmitted by: Bernhard Simon <simon@zidtuwienacat>Reviewed by:PR:
test commit just removing tailing blanks 2 after migration
test commit removing trailing blanks after migration
test blankline commit after migration  just ignore
A memset too many got converted into a OPENSSL_cleansePR: 393
BN_sqr test failure entry
Fix wrong URISubmitted by: assar@kthseReviewed by:PR: 390
make update
Hmm, Geoff's change made things quite interesting  We can now giveusers the option of disabling deprecated functions, which should ofcourse be reflected in libeaynum and def files  Quite nice,actually
Nils Larsch submitted; a patch to fix a memory leak in rsa_genc a note about compiler warnings with unions a note about improving structure element namesThis applies his patch and implements a solution to the notes
Since it's defined in draftietftlscompression04txt, let's makeZLIB a known compression method, with the identity 1
Undefine OPENSSL_NO_DEPRECATED inside openssl application code if we arebeing built with it defined  it is not a symbol to affect how opensslitself builds, but to alter the way openssl headers can be used from an APIpoint of view The "deprecated" function wrappers will always remain insideOpenSSL at least as long as they're still being used internally :The exception is dsaparam which has been updated to the BN_GENCBbasedfunctions to test the new functionality If GENCB_TEST is defined, dsaparamwill support a "timebomb <n>" switch to cancel parametergeneration if itgets as far as 'n' seconds without completion
This is a firstcut at improving the callback mechanisms used inkeygeneration and primechecking functions Rather than explicitly passingcallback functions and callerdefined context data for the callbacks, a newstructure BN_GENCB is defined that encapsulates this; a pointer to thestructure is passed to all such functions insteadThis wrapper structure allows the encapsulation of "old" and "new" stylecallbacks  "new" callbacks return a boolean result on the understandingthat returning FALSE should terminate keygen/primality processing  TheBN_GENCB abstraction will allow future callback modifications withoutneeding to break binary compatibility nor change the API functionprototypes The new API functions have been given names ending in "_ex" andthe old functions are implemented as wrappers to the new ones  TheOPENSSL_NO_DEPRECATED symbol has been introduced so that, if defined,declaration of the older functions will be skipped NB: Someopensslinternal code will stick with the older callbacks for now, soappropriate "undef" logic will be put in place  this is in case the useris building openssl rather than including its headers with thissymbol definedThere is another change in the new _ex functions; the keygenerationfunctions do not return key structures but operate on structures passed bythe caller, the return value is a boolean This will allow for a smoothertransition to having keygeneration as "virtual function" in the various_METHOD tables
Fix a warning, and do some constification as a lucky sideeffect :
Since it's defined in draftietftlscompression04txt, let's makeZLIB a known compression method, with the identity 1
Implement a stateful variant if the ZLIB compression method  The oldstateless variant is kept, but isn't used anywhere
Forgot one
Add a few items I intend to work on for 098 and on
Workaround for GCCia64 compiler bugSubmitted by: <appro>Reviewed by:PR:
Some compilers are quite picky about nonvoid functions that don't returnanything
Apparently, bash is more forgiving than sh  To be backwardcompatible, don't use , use  instead
Keep NEWS in HEAD up to date
Keep STATUS in HEAD up to date
Merge in relevant changes from the OpenSSL 096h release
SSL_CERT_FILE should be used in place of the system default file, not asa first alternative to try
Corrected DJGPP patch
linux64sparcv9 support finally debugged and testedSubmitted by:Reviewed by:PR:
Make sure to implement the cryptodev engine only when /dev/crypto exists
make update
Declare another general file
Allow users to modify /MD to /MTPR: 380
Make sure using SSL_CERT_FILE actually works, and has priority over system defaultsPR: 376
If an application supports static locks, it MUST support dynamic locks aswell to be able to use the CHIL enginePR: 281
PR: 381
Only check for a result buffer if the allocated string is a prompt stringPR: 381
Do not implement RC4 stuff if RC4 is disabled  Concequently, apply the samerule for SHA stuffPR: 381
gethostname is more a BSD feature than an XOPEN onePR: 379
Correct a few typos that I introduced after applying DJGPP patches
In ECPKParameters_print, output the private key length correctlylength of the order of the group, not length of the actual key, whichwill be shorter in some casesSubmitted by: Nils Larsch
Don't compute timings here, we can do this elsewhereInclude X962 signature examplesSubmitted by: Nils Larsch
Missing ""Submitted by: Christian Hohnstaedt <chohnstaedt@innominatecom>Reviewed by:PR:
DJGPP patchesPR: 347
Add support for x86_64PR: 348
A gcc 30 bug is triggered by our code  Add a section about it in PROBLEMSPR: 375
Make ASN1_TYPE_get work for V_ASN1_NULL type
Typo in X509v3_get_ext_by_critical
In asn1_d2i_read_bio, don't assume BIO_read willreturn the requested number of bytes when readingcontent
EXIT may mean return  That's confusing, so let's have it really meanexit in whatever way works for the intended platform, and defineOPENSSL_EXIT to have the old meaning the name is of course becauseit's only used in the openssl program
Make CRYPTO_cleanse independent of endianness
Windows CE updates, contributed by Steven Reddie <smr@essemercomau>
define USE_SOCKETS so sys/paramh gets included and thusly, MAXHOSTNAMELENgets definedPR: 371
I think I got it now  Apparently, the case of having to shift downthe divisor was a bit more complex than I first saw  The lost bitcan't just be discarded, as there are cases where it is importantFor example, look at dividing 320000 with 80000 vs 80001 alldecimals, the difference is crucial  The trick here is to check ifthat lost bit was 1, and in that case, do the following:1 subtract the quotient from the remainder2 as long as the remainder is negative, add the divisor the wholedivisor, not the shofted down copy to it, and decrease thequotient by oneThere's probably a nice mathematical proof for this already, but Iwon't bother with that, unless someone requests it from me
Make some names consistent
Through some experimentation and thinking, I think I finally got theproper implementation of bn_div_words for VAXIf the tests go through well, the next step will be to test on Alpha
Small bugfix: even when r  d, we need to adjust r and qPR: 366
EXIT needs to be in a function that returns int
Redo the VAX assembler version of bn_div_wordsPR: 366
Remove incorrect assertPR: 360
Make it so all names mentioned in the NAME section of each manpage becomes asymlink to said manpagePR: 242
Correct some names
A few more memsets converted to OPENSSL_cleanseI think I got them all covered by now, bu please, if you find any more,tell me and I'll correct itPR: 343
Have all tests use EXIT to exit rather than exit, since the latter doesn'talways give the expected result on some platforms
Make sure EXIT can always be used as one statement
Cleanse memory using the new OPENSSL_cleanse functionI've covered all the memsets I felt safe modifying, but may have missed some
Unused variable removed
Extra ; removed
Add OPENSSL_cleanse to help cleanse memory and avoid certain compilerand linker optimizationsPR: 343
I forgot that @ in strings must be escaped in Perl
The logic in the main signing and verifying functions to check lengths wasincorrect  Fortunately, there is a second check that's correct, when addingthe padsPR: 355
Heimdal isn't really supported right now  Say so, and offer a possibilityto force the use of Heimdal, and warn if that's usedPR: 346
Small bugfixes to the KSSL implementationPR: 349
Heimdal isn't really supported right now  Say so, and offer a possibilityto force the use of Heimdal, and warn if that's usedPR: 346
rename some functions to improve consistencySubmitted by: Sheueling Chang
add a comment
Disable this module if OPENSSL_NO_SOCK is defined
Typo  OPENSSL_NO_ECDH, not NO_OPENSSL_ECDH
Mention a current showstopper
avoid uninitialized memory readSubmitted by: Nils Larsch
Make ec_GFp_simple_point_get_affine_coordinates fasterfor Montgomery representationsSubmitted by: Sheueling Chang, Bodo Moeller
Fix bug introduced by the attempt to fix client side external sessioncaching 288: now internal caching failed 351:Make sure, that cipher_id is set before comparingSubmitted by:Reviewed by:PR: 288 and 351
allocate bio_err before memory debugging is enabled to avoid memory leakswe can't release it before the CRYPTO_mem_leaks call!Submitted by: Nils Larsch
It works on my laptop :
make update
Fix an unsigned/signed mismatch
Update STATUS
Add news items for 096h and expand on the 097 news as well
Document the addition of certificate pairs
Add the ASN1 structures and functions for CertificatePair, which isdefined as follows according to X509_4thEditionDraftV6pdf:CertificatePair :: SEQUENCE {forward		[0]	Certificate OPTIONAL,reverse		[1]	Certificate OPTIONAL, at least one of the pair shall be present  }The only thing I'm not sure about is if it's implicit or explicit tagsthat I should count on  For now, I'm thinking explicit, but willgladly stand correctedAlso implement the PEM functions to read and write certificate pairs,and defined the PEM tag as "CERTIFICATE PAIR"This needed to be defined, mostly for the sake of the LDAP attributecrossCertificatePair, but may prove useful elsewhere as well
Determine HZ exactly as in apps/speedc
Make sure sysconf exists it doesn't in the VMS C RTL lesser than version 7
remove redundant functions
use consistent order of function definitions
fix memory leak in memory debuggin code Submitted by: Nils Larsch
allocate bio_err before memory debugging is enabled to avoid memory leakswe can't release it before the CRYPTO_mem_leaks call!Submitted by: Nils Larsch
A variable of type time_t is supposed to be a time measurement starting atEpoch  offset isn't such a measurement, so let's stop pretend it is
Better workaround to the "head1 NAME OPTIONS" pod2latex problem:NAME OPTIONS are a subset of OPTIONS, so just make it head2!Submitted by:Reviewed by:PR: 333
Make it possible to build for more than one CPUClarify what the CE tests do
Ignore opensslpc  This way, there's no risk that I'll add it again :
Adding opensslpc to the repository was a mistake,since it's generated
Add the file opensslpc that I forgot a while ago
I forgot this is compiled in test/, not crypto/ec/
We don't want TARGETCPU expanded here
Mention ActiveState Perl much earlier in INSTALLWCE
WinCE patches
Fix buggy ! magic and update ssleay>opensslSubmitted by:Reviewed by:PR: 305
Add the INHIBIT_SYMLINKS flag variable to help CygwinAdd missing semicolonsAdd a comment explaining a bunch of targets without any action lines
Changes to make shared library building and use work better with Cygwin
Document the change to remove the 'done' flag variable in theOpenSSL_add_all_ routines
this method does not need field_data1
make update
A few more Microsoft OIDs added
The pointer to the cipher object is not yet set, when session was reloadedfrom external cache using d2i_SSL_SESSION Perform comparison based onthe cipher's id insteadSubmitted by: Steve Haslam <araqnid@innocentcom>Reviewed by:PR: 288
The architecture name is i486, not just 486
Widclashn isn't support in gcc 3, and I get better result from continuouslyrebuilding on a VMS box
I know ANSI C doesn't like 'long long', and I don't want to see it
Spell prototypes correctly :
Add Wstrictprototype and Wmissingprototype to my debugging targets
We need to read one more byte of the REQUESTCERTIFICATE messagePR: 300
Add SETWRAP modifier to ASN1 generate
make update
Close the implicitely opened registry keyPR: 264
Use back to finish over found using pod2latexSubmitted by:Reviewed by:PR:
No such reference to link to found running pod2latexSubmitted by:Reviewed by:PR:
Fix documentation of i2d_X509_fp and i2d_X509_bio
Add Tandem OSS targetPR: 192
Remove warnings
DCL logic bugs fixedI really need to review my knowledge of the language
It seems like gcc 29aix51 doesn't do will with optimization level 3PR: 115
Add a FAQ on how to check the authenticity of the openSSL distributionPR: 292
Cygwin fixes
harmonize with 097 tree
Fix to build better with DJGPPPR: 338Here's the description, submitted by Gisle Vanem <giva@bgnettno>:1 sock_init renamed to ssl_sock_init in /apps/s_socketc dueto nameclash with Watt322 rand renamed to Rand in /crypto/bn/divtestc due to nameclashwith <stdlibh>3 Added calls to dbug_init/sock_init in some demo programs4 Changed cflags/lflags in configure Watt32 install root now takenfrom $WATT_ROOT
Don't declare 2 WARNINGS sectionsSubmitted by:Reviewed by:PR:
Opportunistic change to work around pod2latex bug: rename NAME OPTIONSsection to SUBJECT AND ISSUER NAME OPTIONSSubmitted by:Reviewed by:PR: 333
Correct reference to section nameSubmitted by:Reviewed by:PR:
fix outputSubmitted by: Nils Larsch
use new BIO_indent function here as wellSubmitted by: Nils Larsch
Missing backSubmitted by:Reviewed by:PR:
The directory 'rijndael' doesn't exist any more, let's check the aesdirectory instead this should have been done long ago
When AES is skipped because the option 'norijndael' was given,make sure it's skipped from SDIRS as well
Make the Windows test scripts consistent in their echoing
Handle last lines that aren't properly terminatedPR: 308
Fix get_email: 0 is a valid return value
Constification neededPR: 241
free > OPENSSL_free
Merge from 097stable
This didn't get to the 098dev thread
Correct support for SunOS 413_U1PR: 227
Security fixes brought forward from 097
When build as dynamic engines, the loading functions should be definedstatic
Make internal functions static
Name the flag files correctly
Typo
disable weird asserts
remove unused old directory crypto/rijndael superseded by crypto/aes
Update docs
Fix warnings, makefile cockup
Put NAME in right place, fix typo
Only accept exact match for modifier or tag name
Add header ctypeh
Fix memory leak in s2i_ASN_INTEGER and return an errorif any invalid characters are present
Update docs
Initial ASN1 generation documentation
Synchronise
Initial ASN1 generation code This can constructarbitrary encodings from strings and config filesDocumentation to follow
Make it possible to run individual tests even when linked with libcryptoso and libsslso
Make the CBC mode od AES accept lengths that aren't multiples of 16PR: 330
Variables on the stack must be initialized or we can't depend on anyinitial value  For errline/errorline, we did depend on that, erroneously
Make the programs link against the static library on MacOS XPR: 335
TypoSubmitted by: assar <assar@kthse>Reviewed by:PR:
do tests with all builtin curvesSubmitted by: Nils Larsch
corrections to builtin curvesSubmitted by: Nils Larsch
Make sure permissions are friendly when building release tar fileSubmitted by:Reviewed by:PR: 171
More information to the important issue of seeding the PRNGSubmitted by:Reviewed by:PR: 285
X509_NAME_cmp now compares PrintableString and emailAddress with a value of typeia5String correctlyPR: 244
Typo
CAserial does take a filename argumentPR: 332
CAcreateserial doesn't take a filename argumentPR: 332
Windows doesn't know sys/fileh
Typo in OCSP ASN1 module
Keep on using ${CC}, since gcc may act in disguise
Generate opensslpc so pkgconfig can return proper dataPR: 163
Stupid bug fixes  I've forgotten my DCL
print less output no details unless a test failedSubmitted by: Nils Larsch
some people just can't read the instructions
CRL reason code docs
avoid Purify warningsSubmitted by: Nils Larsch
Check for NULL ASN1_ITEM when initializeingboolean option in ASN1_TYPE
fix typo
implement and use new macros BN_get_sign, BN_set_signSubmitted by: Nils Larsch
Offbyoneerror correctedPR: 235
Cosmetic change
Since we're currently assuming VMS can deal with dynamic engines,don't include the static engine entry points in libcryptoexe
Depend on OPENSSL_NO_STATIC_ENGINE rather than OPENSSL_NO_DYNAMIC_ENGINEMake sure to include openssl/opensslconfh to make sure we get thedefinition of those macros
Remove all referenses to RSAref, since that's been gone for more thana year
Add all that is needed to build external engines on VMSCurrently, we simply assume that they shall always be built asshareable images
Add the command procedure to build external engines on VMSCurrently, we simply assume that they shall always be built asshareable images
New files have appeared, tell VMS
Plug potential memory leakIdentified by Goetz BabinEbell <babinebell@trustcenterde>
Add a HISTORY section to the man page to mention the new flags
The recent CHANGES note between 096g and 096h needs copying into theother branches
The last character of inconsistency in my recent commits is herebysquashed
synchronise util/libeaynum with the 097stable variant guys, thisis something we really need to keep track of!make update
avoid warnings 'index' shadows global declarationSubmitted by: Nils Larsch
Sun has agreed to removing the covenant language from most filesSubmitted by: Sheueling Chang <SheuelingChang@SunCOM>
'covenant HOWTO' what to do about the Sun covenant if you modify the codeSubmitted by: Bodo Moeller
The else part of the conditionals have two statements, so they needto be surrounded with braces, or the surrounding ifelse will failmiserably in case the else part is compiled
Revert, that was an incorrect changePR: 156
A small detail: since 097, DH_new_method and DSA_new_methoddon't take an ENGINE as parameter any morePR: 156
Correct and enhance the behaviour of "internal" session caching as itrelates to SSL_CTX flags and the use of "external" session caching Theexisting flag, "SSL_SESS_CACHE_NO_INTERNAL_LOOKUP" remains but issupplemented with a complimentary flag, "SSL_SESS_CACHE_NO_INTERNAL_STORE"The bitwise OR of the two flags is also defined as"SSL_SESS_CACHE_NO_INTERNAL" and is the flag that should be used by mostapplications wanting to implement session caching entirely by its ownprovided callbacks As the documented behaviour contradicted actualbehaviour up until recently, and since that point behaviour has itself beeninconsistent anyway, this change should not introduce any compatibilityproblems I've adjusted the relevant documentation to elaborate about howthis worksKudos to "Nadav Har'El" <nyh@mathtechnionacil> for diagnosing theseanomalies and testing this patch for correctnessPR: 311
increase permissible message length so that we can handleCertificateVerify for 4096 bit RSA signatures
'broken' PKCS 8 format does not apply to ECDSASubmitted by: Nils Larsch
clean up new code for NIST primescreate new lock CRYPTO_LOCK_BN to avoid race condition
fast reduction for NIST curvesSubmitted by: Nils Larsch
remove superfluous codeSubmitted by: Nils Larsch
Make sure toupper is declared
External engines aren't in crypto/engine/ any more, so don't try tobuild them thereA command procedure to build the external engines is on it's way
make update
For the mkdefpl to recognise if the "external" engines are insertedinto libcrypto, we need the "algorithm" STATIC_ENGINE
There's a name clash between OpenSSL and RSAref  Since this engine handlesRSAref data, pretend we don't care for OpenSSL's MD2 and MD5 structures orimplementationRemove all kinds of silly warning
On certain platforms, we redefine certain symbols using macros inappsh  For those, it's better to include appsh after the systemheaders where those symbols may be defined, since there's otherwise achance that the C compiler will barf when it sees something that lookslike this after expansion:int VMS_strcasecmpstr1,str2const char , const char ;
Signal an error if the entered output password didn't match itselfPR: 314
fix warnings, and harmonize indentation
I don't like ctabalwaysindent 
Typo: v3 is represented by 2
In my extreme debug mode, gcc complains that 'static' doesn't comefirst
New docs
Make pod2man happier
If dynamicallyloadable ENGINEs are linked against a sharedlibrary versionof libcrypto, then it is possible that when they are loaded they will sharethe same static data as the loading application/library This means it willbe too late to set memory/ERR/ex_data/[etc] callbacks, but entirelyunnecessary to try This change puts a static variable in the core ENGINEcode contained in libcrypto and a function returning a pointer to it Ifthe loaded ENGINE's return value from this function matches the loadingapplication/library's return value  they share static data If they don'tmatch, the loaded ENGINE has its own copy of libcrypto's static data and sothe callbacks need to be setAlso, although 097 hasn't been released yet, it's clear this willintroduce a binary incompatibility between dynamic ENGINEs built for 097and 098 though others probably exist already from EC_ hooks andwhatnot  so the version control values are correspondingly bumped
Another ENGINE implementation dependant on stringh
We need to propogate SHARED_LIBS to subdirectories for "install" targetsnow
The loop variable is 'l', not 'i'
Corrected exchanged parameters in example for EVP_EncryptInit_exSubmitted by: "Marcus Carey" <marcuscarey@verizonnet>Reviewed by:PR: 265
change Emacs indentation style to make it easier to inserttabs manuallySubmitted by: Pierre Bacquet <pbacquet@deltafr>
Eh, Wl,wholearchive disappeared from the GNU targets  I've noidea why, but that was definitely wrong
The ENGINE implementations in /engines/ should be role models on how towrite external engines and thus should require only installed opensslheaders and libs to compile without warnings So this gets rid of recentlyintroduced compilation warnings no longer including internal headers byincluding stringh directly
 Remo Inverardi noticed that ENGINEs don't have an "up_ref" function in thenormal 'structural' case ENGINE_init satisfies this in the less normal'functional' case This change provides such a function Correct some "read" locks that should actually be "write" locks make update
TyposPR: 189
TyposPR: 189
A much better idea, of course, is not to do a submake at all
Makefileshared needs to know how it can reach itself
When BN_add_word reaches top, it shouldn't try to add the the correspondingword, since that word may not be zero
makedepend complains when a header file is included more than once inthe same source file
Complete the VxWorks fix by implementing a NULL RAND_poll for itPR: 253
libs is a timestamp that we don't really need to know about
Add needed libraries as per configuration to the list of libraries wedepend upon
Add missing quotesMake sure test doesn't barf because of missing spaces before theclosing ]Add lc to the list of libraries we depend upon  Not alwaysnecessary, but never hurts
Targeting the solaris platform for specific tests  Something is goingwrong, and my test engine doesn't show it  The verbosity will betemporary for about a day
Clarify where the engines are by default
Chase down the missing backslashes
Add more commentary  Check that num is smaller than the block size
The AES CTR API was buggy, we need to save the encrypted counter as wellbetween calls, or that will be lost if it returned with num nonzero
Step 14 of move of engines:  Final step, document the change
make update
And if the path has a space, we definitely need to protect $openssl
Oh, there were two places where we needed to protect the filename
For the platforms where version info is inserted separately into theshared library, set those flags conditionally
Step 13 of move of engines:  Remove old files
Step 12 of move of engines: Time to make the changes to supportautomatic load of dynamic engines  Make the changes in the mainMakefile so the engines are built, but now in the engines/ directoryNote: The changes in step 12 have all been made by Geoff ThorpeCredit where credit is due
Step 11c of move of engines: Time to make the changes to supportautomatic load of dynamic engines  Change the iterator to try to loadthe requested engine dynamically  The environment variableOPENSSL_ENGINES can be used to override the internal default directorywhere one can expect to find dynamically loadable enginesNote: The changes in step 11 have all been made by Geoff ThorpeCredit where credit is due
Step 11b of move of engines: Time to make the changes to supportautomatic load of dynamic engines  Add functionality to the dynamicengine to handle engine directories and loading from those  Thisis currently NOT compatible with the use of LD_LIBRARY_PATH andsimilar environment variablesNote: The changes in step 11 have all been made by Geoff ThorpeCredit where credit is due
Step 11a of move of engines: Time to make the changes to supportautomatic load of dynamic engines  Unless we don't have sharedlibrary support, do not try to load any "builtin" engines except forcryptodev
Step 10 of move of engines: Change crypto/engine/Makefilessl so wedon't build any "builtin" engines in that directory any more, exceptfo the cryptodev one
Step 9 of move of engines: rename crypto/engine/hw_cryptodevc toeng_cryptodevc  This is an engine that at least currently hasto be built in
Typo
Step 8 of move of engines: Remove the last little quirksDECIMAL_SIZE is copied from crypto/cryptlibh
We didn't copy the cryptodev engine here, darn it!
Step 7 of move of engines: Engines should not depend on privateOpenSSL header files
Typo
Step 6 of move of engines: rename the macro ENGINE_DYNAMIC_SUPPORT toOPENSSL_NO_DYNAMIC_ENGINE and make sure that gets defined unlessshared library support has been specifically requested
synchronize with 097stable version of this file
That wasn't supposed to be there
Step 5 of move of engines: Add a makefile and a cvsignore
Step 4 of move of engines: Split eec into individual files for eachengine
Step 3 of move of engines: copy the corresponding vendor header files
Step 2 of move of engines: copy engines to new directory and rename themto be prefixed with e_ instead of hw_  They aren't necessarely hardwareengines  The files commited here are exact copies of the correspondinghw_ files found in crypto/engine/
Add a configuration target for A/UXPR: 271
make update
There may be more than one single quote to fixPR: 256
Make sure it's properly detected when there's no version informationat all, and in all other cases, make sure fooso is linked tofooso{soversion}
Make sure $fname will not give us any surprises with any funny charactersPR: 256
BN_bn2hex returns "0" instead of "00" for zero  This disrputs therequirement that the serial number always be an even amount of charactersPR: 248
Fix inconsistencies in the Darwin targetsAdd a variant of SHLIB_SOVER without the preceding period
Add a suffix for Darwin's sake, since it seems like dylib comes afterthe version in the file name
Move the shared library construction stuff to Makefileshared, ahelper makefile that generalises our way of building shared librariesand is designed to take care of almost anything I hope
Rhapsody had ftime, Darwin doesn't any longer?
Add a few more target platforms, to see how well the shared librarylinking works on them
VMS below version 7 doesn't have strcasecmp, so let's roll our own on VMSPR: 184
Typo
RFC 2712 redefines the codes for use of Kerberos 5 in SSL/TLSPR: 189
More docs
Typo
Update docs
Make sure that the 'config' variable is correctly defined and declaredfor monolithic as well as nonmonolithic biuldMore work is probably needed in this areaPR: 144
Remove redundancy and use the main makefile better
Keep the sub_all symbol so all the algorithm Makefiles won't break
Change the main Makefile to have "minibuild" targetsPR: 253, last part
Don't fuss with the demo binaries
Add a few more VxWorks targetsCorrect misspelled VXWORKS macrosAdd VXWORKS identifying macros to e_os2hAdd required inclusions and mappings for VxWorks in e_oshA few small modifications to make OpenSSL build and work on VxWorksPR: 253, except for the  change that was handled in an earliercommit, and a request for easy build of just parts of OpenSSL
Use double dashes so makedepend doesn't misunderstand the flags wegive itFor 097 and up, that means util/domd needs to remove those doubledashes from the argument list when gcc is used to find thedependencies
PKCS12_parse manual page
PKCS12_create manual page
More man pages
Add missing LF
PKCS7_verify docs
More docs
More d2i/i2d manual pages
Document "0" and "1" naming convention
Update docs
Update docs
Update DH parameter docs
Various Win32 fixesResolve signed/unsigned conflictsMake dso_win32c compile
Oops, remove old comment out debugging printf
Since crypt isn't defined anywhere, define it locally in destestc
Please do not use C++ comments in C code
Do not define crypt  The supported function is DES_crypt an des_cryptwhen backward compatibility is desired
Update RSAPublicKey manual page
Some docs relating to X509 ASN1 functionsMany other ASN1 functions are identical otherthan the actual structure being handled
For some reason, the random number support removed the destructor
Typo
Add version info to Win32 DLLsWe might want to edit the strings a bitMaybe add to 097 too?
make update
Add declaration got PKCS7 NDEF
Update mkdefpl to handle new ASN1 macro
Installed libraries should not be overwritten, especially shared onesUse mv to make sure the old copy is unlinked instead of overwrittenPR: 273, and probably others
Add random number generation capability to the cswift engineShould this be added to 096stable as well?PR: 275
If we're loading libz dynamically, and COMP_zlib is called more than once,only the first call would provide the correct resultPR: 277
Document should match reality :PR: 255
Add a small note saying the 'debug' option should come before the platform inthe arguments to mk1mfplPR: 298
Various enhancements to PKCS12 code, newmedium level API, improved PKCS12_createand additional functionality in pkcs12utility
Preliminary streaming ASN1 encode support
Removal missing
The OpenBSD project has replaced the first implementation of the /dev/cryptoengine with something they claim is better  I have nothing to compare to,and I assume they know what they're talking about  The interesting part withthis one is that it's loaded by default on OpenBSD systemsThis change was originally introduced in OpenBSD's tracking of OpenSSL
fix more race conditionsSubmitted by: "Patrick McCormick" <patrick@tellmecom>PR: 262
Add missing bracketsSubmitted by: "Chris Brook" <cbrook@vonecom>
really fix race conditionsSubmitted by: "Patrick McCormick" <patrick@tellmecom>PR: 262PR: 291
Make sure that the signal storage is regarded as volatileThis correction was originally introduced in OpenBSD's tracking of OpenSSL
It makes more sense to refer to specific function manuals than the conceptmanual when the specific function is refered to in the current manual textThis correction was originally introduced in OpenBSD's tracking of OpenSSL
Remove all references to RSA_PKCS1_RSAref, since it doesn't exist any moreThis correction was originally introduced in OpenBSD's tracking of OpenSSL
Remove reference to RSA_PKCS1_RSAref, since it doesn't exist any moreThis correction was originally introduced in OpenBSD's tracking of OpenSSL
It makes more sense to refer to specific function manuals than the conceptmanual when the specific function is refered to in the current manual textThis correction was originally introduced in OpenBSD's tracking of OpenSSL
Incorrect argument order to memset
Missing ;
elapsed is also useful when using gettimeofday
really fix race conditionPR: 262
use OPENSSL_SYS_MSDOS rather than __DJGPP__ to disable egd, this is notcompiler specific
make files didn't work on case insensitive filesystems
there is no minimum length for session IDsPR: 274
fix race conditionPR: 262
make sure 'neg' flag which does not really matter for GF2^m, butcould cause confusion for ECDSA is set to zeroSubmitted by: Sheueling Chang
add URL for Internet Draft
1 switch from "newkey ecdsa:" to "newkey ec:"2 automatically create required subdirectoriesSubmitted by: Vipul Gupta <VipulGupta@suncom>
Let 'openssl req' fail if an argument to 'newkey' is notrecognized instead of using RSA as a default
Really fix PKCS7_set_detached this time
Fix typos in PKCS12 ASN1 codeMake PKCS7_set_detached work again
Consequently use term URI instead of URLSubmitted by: TJ Saunders <tj@castagliaorg>Reviewed by:PR: 268
nameopt fix has been moved to 097
mention EC_get_builtin_curves
change API for looking at the internal curve listSubmitted by: Nils Larsch
Fix ASN1_STRING_to_UTF8: remove non sensical !out test
don't memsetdata,0, if data is NULLSubmitted by: anonymousPR: 254
Fix a bug to allow the 4758 ENGINE to build as a DSO
don't write beyond bufferSubmitted by: Nils Larsch
change 'usage' formatting
less specific interface for EC_GROUP_get_basis_typeSubmitted by: Nils Larsch, Bodo Moeller
fix spacing
move EC_GROUP_get_basis_type from ec_libc to ec_asn1c
ASN1 for binary curvesSubmitted by: Nils Larsch
fix offsetsSubmitted by: Nils Larsch
ecdsa > ecSubmitted by: Nils Larsch
Reinstate the check for invalid length BIT STRINGS,which was effectively bypassed in the ASN1 changed
Make nameopt work in req and add support for reqopt
Change C++ style comments
if out unused function to shut the compiler up
Fix crahses and leaks in pkcs12 utility chain option
Typo, I assigned the variable ld instead of my_ld
So, I discovered that if you have your $PATH set so a ld different fromGNU ld comes first, checking the usage of collect2 gives that instead ofGNU ld, even if GNU ld would be the one that would get used if we link usinggcc  It's much better, apparently, to ask gcc directly what the path toGNU ld is provided it's there at all and gcc knows about it, and askthe result if it's a GNU or not  The bonus is that our GNU ld detectionmechanism got shorter and easier to understand
Reorder cleanup sequence in SSL_CTX_free to leave ex_data for remove_cbSubmitted by:Reviewed by:PR: 212
typoSubmitted by: Nils Larsch
'EC' vs 'ECDSA'Submitted by: Nils Larsch
isalist was less trustable than I thought or rather, one can trust it tocome up with all kinds of names we don't have in our targetsBesides, our sparcv9 targets currently generate sparcv8 code, I'm told
Add lz to the ld flags when the user has chosen to link in zlib staticallyNotified by Doug Kaufman <dkaufman@rahulnet>
Fix block_size field for CFB and OFB modes: it should be 1
q may be used uninitialised
use correct function code in error message
It seems like sun4u doesn't always have a sparcv9 inside  Trust isalistPR: 220
fix warnings CHARSET_EBCDICSubmitted by: Lorinczy Zsigmond <lzsiga@mailahivhu>
fix manpage
add crypto/ecdh
Missing backPart of PR 196
Add a FAQ entry for yet another bc failurePR: 199
Yet a couple of modules forgotten  These weren't important forOpenSSL itself, since they aren't used there yet  It became quitevisible qhen building a shared library, however
Simplify handling of named curves: get rid of EC_GROUP_new_by_name,EC_GROUP_new_by_nid should be enough  This avoids a lot ofredundancySubmitted by: Nils Larsch
Sometimes, the value of the variable containing the compiler call canbecome rather large  This becomes a problem when the default 1024character large buffer that WRITE uses isn't enough  WRITE/SYMBOLuses a 2048 byte large buffer instead
change how pod2man is handled: explicitly invoke '$PERL' only whenneeded, call 'pod2man' directly if this worksPR: 217
Instead of returning errors when certain flags are unusable, just ignore themThat will make the test go through even if DH or in some cases ECDH aren'tbuilt into OpenSSLPR: 216, part 2
The applications 'ecdsa' and 'ecparam' were missing from the VMSbuild
Make sure that the test input file comes in the same record format as thetypical output from a program in CPR: 222
move a TODO from CHANGES to STATUS
add 'TODO' items
Fix typo in OBJ_txt2obj which incorrectly passed the contentlength, instead of the encoding length to d2i_ASN1_OBJECTThis wasn't visible before becuse ASN1_get_object usedto read past the length of the supplied buffer
Some files deserve to be ignored
Merge in demo engines from 097stable
Comma forgotten
Oh, ec2_smptc is included by ec2_smplc!
Do not include openssl/ripemdh when the RIPEMD algorithm has been deselectedPR: 216, point 1
Do not use the word 'modulus', which is a class template name in VC++ 60/SP5PR: 216, point 3
Scripts for testing ECC ciphersuitesSubmitted by: Sun Microsystems Labs
A few files in the ENGINE and EVP sections forgotten
fix previous commit there's no SSLEAY_VERSION_TEXT
remove commentSubmitted by: Douglas Stebila
remove debug messagesSubmitted by: Douglas Stebila
fix commentSubmitted by: Douglas Stebila
get rid of EVP_PKEY_ECDSA now we have EVP_PKEY_EC insteadSubmitted by: Nils Larsch
add 096g information
Update with the status for 096g
In case of shared libraries, we might run one version of theapplication with a different version of the library  Detect if thereis a difference of versions, and print both versions in that caseThis might prove to be a good enough debugging tool in case of doubt
One more file to compile on VMS as well
Remove clashes between symbols that have the same name except forcasing
More long symbols to shorten
mem functions are declared in stringh
Synchronise tests with Unix
A new header
Synchronise with UnixI expect the next run will generate lots of errors on VMS :
More long names to shorten
cvsignore for crypto/ecdh
make update
fix warnings
add field type to text outputdon't print seed value as a number leading zeros must not be removedSubmitted by: Nils Larsch
use 0, not NULLSubmitted by: Nils Larsch
ECDH engine supportSubmitted by: Douglas Stebila
ECC ciphersuite supportSubmitted by: Douglas Stebila <douglasstebila@suncom>Authors: Vipul Gupta and Sumit Gupta, Sun Microsystems Laboratories
When we want to give a f argument to $MAKE, we'd better make sure thevariable doesn't already contain a f argumentPR: 203, part 4
Add ECDH supportAdditional changes: use EC_GROUP_get_degree in apps/reqc add ECDSA and ECDH to apps/speedc adds support for EC curves over binary fields to ECDSA new function EC_KEY_up_ref in crypto/ec/ec_keyc reorganize crypto/ecdsa/ecdsatestc add engine support for ECDH fix a few bugs in ECDSA engine supportSubmitted by: Douglas Stebila <douglasstebila@suncom>
Parse version numbers prefixed with text egcs does that, even withdumpversionPR: 203, part 1
096f is released
use a generic EC_KEY structure EC keys are not ECDSA specificSubmitted by: Nils Larsch
avoid SIGSEGVSubmitted by: Nils Larsch, Douglas Stebila
These are updates/fixes to DH/DSA/RAND docs based on the fixes to the RSAdocs There were a couple of other places including RSA where the docswere not quite synchronised with the API that are now fixed One or twostill remain to be fixed though 
typo fix
Various parts of the RSA documentation were inaccurate and out of date andthis fixes those that I'm currently aware of In particular, the ENGINEinterference in the RSA API has hopefully been clarified This still needsto be done for other areas of the API 
A single monolithic man page for the ENGINE stuff This is a roughfirstcut but provides better documentation than having nothing on theENGINE API
Fix "make install_docs" and thus "make install"
oops  must use EVP_MD_size, not EVP_MD_block_size
oops, undo previous change was just for testing
fix bn_expand2
use bn_wexpand instead of bn_expand2 the latter is not needed here,and it does not yet work correctlySubmitted by: Douglas Stebila
Fix typo
Fix the ASN1 sanity check: correct header lengthcalculation and check overflow against LONG_MAX
disable Sun divison algorithm by default
fix bn_expand2
optical changes
typo
remove obsolete part of comment
remove obsoleted disabled code
Let BN_rand_range abort with an error after 100 iterationswithout success
update
Change BN_mod_sqrt so that it verifies that the input value isreally the square of the return value
move GF2m tests to the end
Rename implementations of method functions so that they matchthe new method names where _GF suffixes have been removedRevert changes to _{get/set}_Jprojective_coordinates_:The current implementation for ECC over binary fields does not useprojective coordinates, and if it did, it would not use Jacobianprojective coordinates; so it's OK to use the _GFp prefix for allthisAdd author attributions to some files so that it doesn't lookas if Sun wrote all of this :
typos
ec2_smptc must be listed in LIBSRC
there is no alternative EC_METHOD for curves over GF2^m yet
add support for elliptic curves over binary fieldsSubmitted by: Duglas Stebila <douglasstebila@suncom>,Sheueling Chang <sheuelingchang@suncom>CHANGES entries by Bodo Moeller
extend curve list additional curves over binary fieldsSubmitted by: Sheueling Chang Shantz and Douglas Stebila Sun Microsystems Laboratories
Binary field arithmetic contributed by Sun MicrosystemsThe 'OPENSSL_NO_SUN_DIV' default is still subject to change,so I didn't bother to finish the CHANGES entry yetSubmitted by: Douglas Stebila <douglasstebila@suncom>, Sheueling Chang <sheuelingchang@suncom>CHANGES entry by Bodo Moeller
Add more WAP/WTLS elliptic curve OIDsSubmitted by: Douglas Stebila <douglasstebila@suncom>
New error code ERR_R_DISABLEDSubmitted by: Douglas Stebila <douglasstebila@suncom>
get rid of OpenSSLDie
make update
Certain flag macros were tested with if instead if ifdef
We don't need to find out which pod2man to use more than once
Don't try testing with parallell make, that will just failPR: 175
Add aix64cc, and make sure that ar gets proper flags for 64bit libraries
make update
Add the CBC flag for cbc ciphers
Avoid yet another name clash with libdes, and make the declaration consistentwith the definition
Make it possible to load keys from stdin, and restore thatfunctionality in the programs that had that beforePart fo PR 164
OCSP and KRB5 Makefilssl should be consistent with all the others
Linux on s390 really knows about loading dynamicallyPR: 183
Cut'n'paste error with other reposnder certificates clearedPR: 190
If CRYPTO_realloc is called with a NULL pointer, have it callOPENSSL_mallocPR: 187
If the email address is moved from the subject to the subject alternate name,the subject in the certificate would differ from the subject in the index file,which has quite bad concequencesPR: 180
Make sure to use $MAKE everywhere instead of makePart of PR 181
ln f s doesn't always work, so do a rm f followed by a ln sPart of PR 181
The version of the shared library should, for now, reflect the versionof OpenSSLPart of PR 181
TypoSubmitted by: Jeffrey Altman <jaltman@columbiaedu>Reviewed by:PR: 169
OpenSSL Security Advisory [30 July 2002]Changes marked "CHATS" were sponsored by the Defense AdvancedResearch Projects Agency DARPA and Air Force Research Laboratory,Air Force Materiel Command, USAF, under agreement numberF306020120537
"make update"
096e and 097beta3 are out
Only use DSAfunctions if availableSubmitted by: "Hellan,Kim KHE" <KHE@kmddk>Reviewed by:PR: 167
mention SSL_do_handshake
Use SEC1 format for EC private keysThis is not ECDSA specific, so it's now PEM_STRING_ECPRIVATEKEY etcSubmitted by: Nils Larsch <nlarsch@compuservede>
Move zeroing from bn_expand_internal to bn_expand2 so that ithappens reliably, even if the BIGNUM is already sufficiently large[Note that the bn_expand/bn_wexpand macros call bn_expand2 onlyif the BIGNUM actually has to grow, so this change does not add anynew overhead as currently bn_expand2 is never called directly]
more detailed instructions for export from US
Don't clobber loop variablePR: 159
Document the recent DJGPPrelated changes
Make dummy tests to make it easier to physically remove unwanted algorithmsThis should complete PR 75
harmonize options with those for 'ecparam',remove redudant option 'pub'Submitted by: Nils Larsch
If DH is disabled, don't define the DH functionsNotified by Kim Hellan <KHE@kmddk>
fix a typo and clarify
add an explanation and fix a typo
New cipher selection options COMPLEMENTOFALL and COMPLEMENTOFDEFAULTSubmitted by:Reviewed by:PR: 127
HPUX shared libraries must be +x and should be w It doesn't hurt onother platformsSubmitted by:Reviewed by:PR: 134
update
The first compile of the new merger method for VMS almost gotthrough  That's not enough, is it?  :
Two more names that are a little too long for the standard VMS linker
The behaviour is undefined when calling SSL_write with num0Submitted by:Reviewed by:PR: 141
Manual page for SSL_do_handshakeSubmitted by: Martin Sjgren <martin@straktcom>PR: 137
This documentation change was being written at the same time as Richard'schanges So I'm committing this version to overwrite his changes for now,and he can always take his turn to overwrite my words if he wants :PR: 86
Explain why RSA_check_key doesn't work with hard keysPR: 86
Add history for documented new functionsPR: 59
Allow subjects with more than 255 characters to be properly printedPR: 147
Further enhance assembler support on Cygwin and DJGPPMake pod2mantest useable on DOSbased systemsPart of PR 75, the rest is still under investigation
Fix bug introduced with revision 195 when this filed was modified touse the new X509_CRL_set_issuer_name function:The CRL issuer should be X509_get_subject_namex509, notX509_get_issuer_namex509Submitted by: Juergen Lesny <lesnyj@informatiktumuenchende>typo
Reverse the change with the following log, it needs further investigation:Make S/MIME output conform with the mail and MIME standardsPR: 151
Make S/MIME output conform with the mail and MIME standardsPR: 151
Unixware doesn't have stringsh, so we need to declare strcasecmpdifferentlyUnixware 2 needs to link with libresolvPR: 148
OPENSSL_SYS_WIN32 is important so util/mkdefpl can detect it
Make mkdir failsafe in case the directories are already present
Add support for shared libraries with OS/2PR: 124
Add a few FAQ entries for the various ways building OpenSSL on MacOS Xcan fail, and point at the text in the PROBLEMS file
If OpenSSL is built with shared library support on MacOS X,everything works fine  Note: this is only true for 097 and on
On MacOS X, the shared library editor uses DYLD_LIBRARY_PATH
On MacOS X, you're not allowed to have common objects in shared libraries
Add the usually recommended solution to the linking problem entry for MacOS X
We had some experimental options in the Darwin entries  They are no longer needed
The default C compiler on MacOS X doesn't like empty object files
Actually, the "bug" is really documented in the manpage for ld, soit's really a misfeature according to the jargon file 400definition:":misfeature: /misfee'chr/ or /mis'fee`chr/ /n/  A featurethat eventually causes lossage, possibly because it is not adequatefor a new situation that has evolved  Since it results from adeliberate and properly implemented feature, a misfeature is not abug"
There are problems on certain platforms, and possible answers on how to temporarly solve them
For those wanting to build for several platforms with the same sourcedirectory, making a separate directory tree with lots of symbolic linksseems to be the solution  Unfortunately, Configure doesn't take appropriatesteps to support this solution as in removing a file that's going to berewritten  This change corrects that situation  Now I just have tofind all other places where there's lack of support for this
For those wanting to build for several platforms with the same sourcedirectory, making a separate directory tree with lots of symbolic linksseems to be the solution  Unfortunatelt, Configure doesn't take appropriatesteps to support this solution as in removing a file that's going to berewritten  This change corrects that situation  Now I just have tofind all other places where there's lack of support for this
Some older code never committed wasn't converted to the new formatCorrected
Let's not forget the second Wtraditional
Using Wtraditional took it a little far  After all, we expect ANSI C, sowe don't need to care about traditional compilers
Set up the engine before doing anything randomrelated, since engine randomnessis only used for seeding and doing it in the wrong order will mean seedingis done before the engine randomness is hooked inNotified by Frederic DONNAT <fredericdonnat@zencodcom>
There's an ongoing project to bring some kind of path selectionmechanism to the ENGINE framework  This means there there are goingto be new functionality for the DSO part, and ultimately some way ofmerging two file specifications togetherThis commit places the merging code into the repository  It'scurrently not used anywhere, and hasn't been tested at all  It may befull of errors, including syntactical ones  Those will be fixed aspromptly as possible
Replace 'ecdsaparam' commandline utility by 'ecparam'the same keys can be used for ECC schemes other than ECDSAand add some new optionsSimilarly, use string "EC PARAMETERS" instead of "ECDSA PARAMETERS"in 'PEM' formatFix ec_asn1c take into account the desired conversion form'make update'Submitted by: Nils Larsch
Rewording: some algorithms are also patented in Europe, so choose moredefensive phrases
In UI_UTIL_read_pw, we should look at the size parameter, not at BUFSIZSubmitted by Gtz BabinEbell <babinebell@trustcenterde>
Discussion about Redhat's specialties for the FAQSubmitted by: JohnAirey@rniborgukReviewed by:PR: 128
Typos in links between manual pagesSubmitted by: RichardKoenning@fujitsusiemenscomReviewed by:PR: 129
Sun's official statement with respect to /dev/random supportSubmitted by: Garrett Anderson garrett@dirseccomReviewed by:PR: 120
Minor typosSubmitted by: jufi@nerdnetdeReviewed by:PR: 138
remove obsolete comment
Reorder inclusion of header files:des_oldh redefines crypt:define cryptb,s\DES_cryptb,sThis scheme leads to failure, if header files with the OS's true definitionof crypt are processed _after_ des_oldh was processed This is eg thecase on HPUX with unistdhAs evph now again includes desh which includes des_oldh, this problemonly came up after this modificationSolution: move header files indirectly including e_osh before the headerfiles indirectly including evphSubmitted by:Reviewed by:PR:
Ciphers with NULL encryption were not properly handled because they werenot covered by the strength bit maskSubmitted by:Reviewed by:PR: 130
fix synopsisSubmitted by: Nils Larsch
emtpy fragments are not necessary for SSL_eNULLbut noone uses it anywayfix t1_encc: use OPENSSL_NO_RC4, not NO_RC4
oops, there were other cases of "ENGINE_ID" to change too
Correct an error in the READMEENGINE fileSubmitted by: Jan Tschirschwitz <JanTschirschwitz@clusterlabsde>
AES cipher suites are now official RFC3268
README and INSTALL should contain information about the request trackernoted by Jonathan Louie <jlouie@recoursecom>
Do not define crypt on OpenBSD  Notified by Bob Beck of OpenBSD
opensslconfh doesn't define what we want, e_os2h doesPR 123
Try to avoid double declaration of ERR_load_PEM_stringsPR 71
A few changes to BC32pl didn't get properly appliedThis completes PR 123
Pass CFLAG to dependency makers, so nonstandard system include paths arehandled properlyPart of PR 75
DJGPP has some needed header files that other MSDOS/Windows compilers don't havePart of PR 75
Update the information on CygwinPart of PR 75
Forgot to change the second $ENV{DJDIR} to /dev/env/DJDIRPart of PR 75
The new stuff is for Borland Bulider 5, so document it appropriately
Document the new way of building with Borland BuilderThis concludes the changes from PR 123
Use underscores instead of dashes in temporary file namesThis is due to weird Borland compilersPart of PR 123
When compiling for Windows, make sure we have the windows definitions declaredPart of PR 123
Use 32bit sections instead of the default, 16bit onesPart of PR 123
have 'openssl pkcs7' exit with code 1 on error instead of 0PR: 119
gcc requires m64 to link 64bit shared libraries on SolarisPR: 117
Use bg instead of bag as argument to macros, to avoid clashes withstructure field namesPR: 112
There is no RSAREF any more, so do not ty to install itPR: 106
The general debug target must specify that it doesn't use assembler routinesPR: 105
A number of includes were removed from evph some time ago  The reasonwas that they weren't really needed any more for EVP itself  However,it seems like soma applications I know about OpenSSH, but there maybe more used evph as the 'load all' header file, which makes sensesince we try our best to promote the use of EVP instead of the lowerlevel crypto algorithms  Therefore, I put the inclusions back sothe application authors don't get too shocked by all the errors theywould otherwise getThanks to Theo de Raadt for making us aware of this
Make sure buffers are large enough even for weird parametersSubmitted by: Nils Larsch
update an entry on EVP changes
For some reason, we need to return the full path to perl
Make sure any ENGINE control commands make local copies of stringpointers passed to them whenever necessary Otherwise it is possible thecaller may have overwritten or deallocated the original string datawhen a later ENGINE operation tries to use the stored valuesSubmitted by: Gtz BabinEbell <babinebell@trustcenterde>Reviewed by: Geoff ThorpePR: 98
<sys/selecth> is included for AIX, when USE_SOCKETS is definedSubmitted by: Bernhard Simon <bs@bswszidtuwienacat>Reviewed by:PR:
HPUX: shared libraries MUST be +x and SHOULD be w
Fix path to find util/pod2manpl from the execution directoryMake sure to use the predefined PERLSubmitted by: Bernhard Simon <bs@bswszidtuwienacat>Reviewed by:PR:
This apparently fixes compilation on OSX that was failing in 097 betasSubmitted by: Pieter Bowman <bowman@mathutahedu>
AIX V3 requires <sys/selecth> included via e_osh for fd_setSubmitted by: Bernhard Simon <bs@bswszidtuwienacat>Reviewed by:PR:
load_netscape_key is static
always include <stringh> we do this in various other header files,so it can't be bad
always include <stringh> we do this in various other header files,so it can't be badPR: 102
Implement handling of EC parameter seeds new functionsEC_GROUP_set_seed, EC_GROUP_get0_seed, EC_GROUP_get_seed_lenNew functions ECPKParameters_print, ECPKParameters_print_fpSubmitted by: Nils Larsch
typo
beta2, not beta1
Roll out OpenSSL097beta2
Use dumpversion to obtain gcc's versionSubmitted by: rossalexander@ukneceurcom, allenh@eecsberkeleyeduReviewed by:PR: 96
OpenSSL_add_all_algorithms has been replaced by configuration dependentfunctions and is redirected by macros Switch it off now, possible removallater
Initial support for hpux64pariscgccSubmitted by: rossalexander@ukneceurcomReviewed by:PR: 96
Some more prototype fixesUse DECLARE macros in asn1 instead of direct declarationSubmitted by: Goetz BabinEbell <babinebell@trustcenterde>Reviewed by:PR: 89
New option SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS for disabling CBCvulnerability workaround included in SSL_OP_ALLPR: 90
make update adapt libeaynum to the 097stable branch
Tentatively add support for UWIN, a Unixlike environment on top of WindowsPR: 62
Make sure that any dash in the prefix before the version number is removedPR: 96
Add support for DJGPP
Add support for DJGPPPR: 75
Check for the executable $openssl, not just the filePart of PR: 75
Parse directory using both slashes and backslashes as separatorsDo file copying in term of perl statements instead of using cpPart of PR: 75
Making a softlink from crypto/des/asm/perlasm to crypto/perlasm isn'tstrictly necessary, so let's not do that
Add missing prototypesSubmitted by: Goetz BabinEbell <babinebell@trustcenterde>PR: 89
Fix ext_dath extension orderingReinstate reqout codeAvoid coredump in ocsp if setup_verifyfailsFix typo in ocsp usage message
Add OIDs for Secure Electronic Transactions SETSubmitted by: Vadim Fedukovich <vf@unitynet>Reviewed by: Lutz JaenickePR: 80
Clarify formulation proposed by Bodo Moeller
The new ASN1 code automatically allocatesstructures for fields that are not OPTIONALHowever in the AUTHORITY_INFO_ACCESS casethe 'location' field was set to NULL inthe old codeSo in 097+ we should free up the field beforeoverwriting it in v2i_AUTHORITY_INFO_ACCESS
Make change uniqueIdentifier > x500UniqueIdentifier clearly visibleSubmitted by:Reviewed by:PR: 82
Correct wrong usage informationPR: 95
typo
simplify asn1_flagSubmitted by: Nils LarschReviewed by: Bodo Moeller
Support building the distribution tar file on platforms with limitedargument list length This requires Gnutar As we use the nonstandard"tardy" software anyway, it doesn't hurt too much to require Gnutar"make dist" will probably only be used by teammembers anyway
Handle read errors
Fix warnings
move ECC ASN1 that is not specific to ECDSA into crypto/ec/,and make some appropriate changes to the EC librarySubmitted by: Nils Larsch
move ECC ASN1 that is not specific to ECDSA into crypto/ec/,and make some appropriate changes to the EC librarySubmitted by: Nils Larsch
fix for 'make update'
remove unnecessary calls to EC_POINT_copy
Make sure that flags are passed to "make" subprocesses
fix memory leakSubmitted by: Nils Larsch
For the main directory, Makefileorg is significant :
Make sure that settings are passed back and forth when walking aroundin the tree during buildReinstall default PERL settings in Makefiles, as the real reason for thefailure was that the settings were not passed
New OID for X509 usage: pseudonymSubmitted by: Michael Bell <michaelbell@rzhuberlinde>Reviewed by: Lutz JaenickePR: 83
Merge from 097stable
Make perl replacement for dirname, for system that lack the latterPR: 81
It's not good to have a pointer point at something in an inner blockPR: 66
Check errors when parsing a PKCS8INF PEM FILE, or there will be a core dump on errorPR: 77
Documentation bug correctedPR: 70
Since there's no continuation, the ; can go as well :
There is no continuation at this point
On some systems the default "perl" may still be perl4, use the correctversion determined by "config" instead
The correct PERL interpreter is passed via commandline
Update the recognision of GCC version numbers to handle the prefix textthat GCC 31 adds to the version output
make update including adjusting libeaynum in HEAD to the changes in the097stable libeaynum
TypoPR: 72
use sstrsep to get the proper type to aotiRemove unneeded cast in ustrsepPR: 69
097beta1 is just being released
Document the AES changes
Add the AES test vectors from NIST document SP80038A
Make it possible to give vectors only for decryption or encryption
For CFB and OFB modes, always create the encryption key
Declare the CFB and OFB modes for AES, and prepare for a declarationof CTR mode
In CFB mode, the iv is always encrypted
Reformat the CFLAG string so it can be made part of a C stringIncidently, this works pretty well on the command line as wellPR: 52
Support the newly release gcc 31 on 64bit Solaris  Not automaticPR: 57
Support shared libraries properly on linuxsparcv[89]PR: 60
a B< that wasn't properly ended
Check the return values where memory allocation failures may happenPR: 49
CAformat should not be used for CA key format
Make sure that MS_STATIC isn't defined to 'static' under Win32PR: 51
pod2manpl would only remove the first LF from the name
Apparently, there are still chances we have to deal with buggy pod2man versionsDeal with that by testing any available pod2man and using it if appropriate,and falling back to util/pod2manpl if none was found
Correct AES counter mode, which incorrectly incremented the counter beforeusing itPR: 56
New functions EC_POINT_point2bn, EC_POINT_bn2point, EC_POINT_point2hex, EC_POINT_hex2pointSubmitted by: Nils Larsch
Correct darwin shared library supportPR: 39
Some shlib extensions were in the wrong field
Our copy of pod2manpl is old and comparatively broken, so lets remove itPR: 30
Add more warnings for my debug targets
Remove the duplicate description of outPR: 28
Make i2c_ASN1_BIT_STRING return the correct length
Set DLOPEN_FLAG the same way on NetBSD as on OpenBSDPR: 58, submitted by andrew@cisuoguelphca
There is a chance that the input string is larger than size, and on VMS,this wasn't checked and could possibly be exploitable slim chance, but still
Remove item listed twice <kromJx@crosswindsnet>
Cygnus correction I thought I had tested that
fix Cygwin remove extra colons
Use assembler implementations with CygwinThis also fixes the bn_sub_part_word problem
Recover from errors
make update
Make sure short aliases are used where required
Define a short alias for another long EC symbol
Make sure ECDSA is built and tested on VMSAvoid loops if linking an application fails
Make sure ECDSA is built and tested on VMS
Allow the use of the TCP/IP stack keyword TCPIP and NONE
Use OPENSSL_SYS_VMS instead of just VMS
accept NULL in 'free' functions
Reorganise subj option code, fix buffer overrun
Fix Mingw32 asm build: use the Unixbignum assembly method of bn586pland co586pl which for some reasonVC++ doesn't use
Add missing EVP_CIPHER_CTX_init call
Fix incorrect over 4 locationSubmitted by: David Waitzman <djw@bbncom>Reviewed by: Lutz JaenickePR: [opensslorg 38]
fix EVP_dsa_sha macroSubmitted by: Nils Larsch
Use the indirect way to the actual request tracker, so that peoplealso are informed about the credentials required for guest accessand the operation instructions
update
Zero cipher_data in EVP_CIPHER_CTX_cleanupAdd cleanup calls to evp_testcAllow reuse of cipher contexts by removingautomatic cleanup in EVP_Final
make b_printc consistent with the rest of OpenSSL:disable assert except for debug builds
Add missing '"'Submitted by: Boyd Gerber <gerberb@zenezcom>
Recognize PPC64 targetSubmitted by:Reviewed by:PR: 26
EVP_SealFinal should return a value
values were reset for no reason
updated Mingw32 instructions
Add config entry debugstevelinuxpseudo64  This sets theSIXTY_FOUR bignum library option to use 64 bit operationson the 32 bit linux platformThis is very inefficient but it can be used to test someof the 64 bit logic on a 32 bit platform
Fallback to normal multiply if n2  8 and dna or dnb is not zeroin bn_mul_recursiveThis is hopefully what was triggering bignum errors on 64 bitplatforms and causing the BN_mod_mul test to fail
Avoid gcc warning: BN_DEC_CONV when SIXTY_FOUR_BIT is defined is unsigned
Updating status for 096d
Synchronise the FAQ
Make the huge buffer smaller, so the size becomes reasonable for smallstack environmentsNotified by Verdon Walker <VWalker@novellcom>
One place where VMS wasn't changed to OPENSSL_SYS_VMS
Move an assert to avoid core dumps when a static buffer hasn't been givenNotified by Verdon Walker <VWalker@novellcom>
Small documentation fix for EVP_CipherFinal or EVP_CipherFinal_exNotified by Stella Power <snpower@mathstcdie>PR: 24
Generate an error if rewinding wasn't possibleNotified by Ken Hirsch <kenhirsch@myselfcom>PR: 23
Change internals of the EC library so that the functionsEC_GROUP_{set_generator,get_generator,get_order,get_cofactor} areimplemented directly in crypto/ec/ec_libc and not dispatched tomethodsAlso fix EC_GROUP_copy to copy the NID
Add missing ";" after fiSubmitted by: bryanh@giraffedatacomReviewed by:PR: [opensslorg 18]
in SignerInfo, use ecdsawithSHA1 OID for ECDSA not ecPublicKeySubmitted by: Nils Larsch
Fix ciphersuite list to enforce low priority for RC4
ensure that, for each strength, RC4 ciphers have least preferencein the default ciphersuite list
refer to latest draft for AES ciphersuites
fix warning
update
improve wNAF generation
disable AES ciphersuites unless explicitly requested
fix casts
Make sure that date is run under the C locale, so dates are given in thedefault formatPR: 16
Add apps_startup and bio_err init code to smimec
Fix escaping when using the subj option of "openssl req", document'hidden' nameopt support Robert Joop <joop@fokusgmdde>
Add information about nameopt option for x509
undo nonsense patch r is signed or we have signedness mismatches elsewhere
Fix unsigned vs signed clash
Synchronise with 097stable
Synchronise with 097stable
Fix crypto/asn1/a_signc so that 'parameters' is omitted notencoded as NULL with iddsawithsha1Submitted by: Nils Larsch
Add generationQualifier OID proposed by Fiel Cabral
Potential memory leak removed  Notified by <threaded@totalisecouk>
new items for 097
oops
AlgorithmIdentifier bugs
fix usage no 'key'
Uhmmm, if we use && after having tested for the presence of the certificate,we just might stand a certain chance of actually getting it writtento file
ERR_file_name is no longer being used
Add cygwin build script Corinna Vinschen <vinschen@redhatcom>
Make sure ec and ecdsa is properly handled in WindowsNotified by Bernd Matthes <berndmatthes@gempluscom>
Signedness mismatchNotified by Bernd Matthes <berndmatthes@gempluscom>
The callback must have void as argument listNotified by Bernd Matthes <berndmatthes@gempluscom>
No point constifying an intNotified by Bernd Matthes <berndmatthes@gempluscom>
Do not free p if it hasn't been used yetNotified by Bernd Matthes <berndmatthes@gempluscom>
Make sure the opened directory is closed on exitNotified by Lorinczy Zsigmond <lzsiga@mailahivhu>
Missing "Configure" entry JeanMarc Desperrier <jeanmarcdesperrier@certpluscom>
Optimize: better shortcut evaluation "Howard Chu" <hyc@highlandsuncom>
Handle headings uniformly to allow automatic processing
'version' is not optional in the encodingSubmitted by: Nils Larsch
'version' is not optional in the encodingSubmitted by: Nils Larsch
check return valuesSubmitted by: Nils Larsch
get rid of some assignments that have become obsolete
Document OID changes
Use the "mail" short name according to RFC2798 Michael Bell<michaelbell@rzhuberlinde>
Some more OID enhancements
Fix CRLF problem in BASE64 decode
remove disabled code
fix length field we create when converting SSL 20 format into SSL 30/TLS 10 formatthe bug was introduced with message callback support
Implement knownIV countermeasureFix length checks in ssl3_get_client_helloUse s>s3>in_read_app_data differently to fix ssl3_read_internal
Avoid emacs backup files when making a snapshot
another error discovered by Karsten Braaten The number was not evenprime!
looks like a typo
clean up and synchronize with 096stable
ECDSA representation bugfixesSubmitted by: Nils Larsch
Check error code from a2d_ASN1_OBJECT
Change the date to XX xxx XXXX in development versions
Synchronize with 097stable
Synchronize with 097stable branch
Keep my own specially optimized HPUX shared library building up to date
harmonize capitalization
fix ECDSA handlingSubmitted by: Nils Larsch
add usage examples
Apply OID fixes for elliptic curves as supplied byNils Larsch <nlarsch@compuservede>
error reported by Karsten Braaten
Allow longer program names VMS allows up to 39 charactersSubmitted by Compaq
make update libeaynum has been edited to match 097stable
Allow longer program names VMS allows up to 39 charactersSubmitted by Compaq
Oops, the system macro for VMS is OPENSSL_SYS_VMS, not VMS
Recognise DEC C++ as equivalent to DEC C for the definitions of OPENSSL_EXTERN and OPENSSL_GLOBALSubmitted by Compaq
Use recv and send for socket communication on VMS instead of readand write  The reason is that read and write make additional recordlevel locking which causes hangs of Compaq Secure Web Server Apache withSSLSubmitted by Compaq
Make shared libraries resolve global symbols within themselves firstCurrently only on GNUish linkersSubmitted by Steven Bade <sbade@austinibmcom>
Fix buggy object definitions Svenning Sorensen <sss@sssdnsaliasnet>
Forgot one of the casts
Cast the pointers to the BIGNUM data to unsigned long   This would beharmful if we didn't also pass the exact number of bytes of that data
Fix of mixup bwtween SOMAXCONN and SO_MAXCONNFurthermore, make SO_MAXCONN the first choice, since that's the standardas far as I know
Make short names of objects RFC2256compliant
A forgotten file
Add the possibility to enable olde des support, not just disable it, for future support  Redocument
Add the mapping of des_random_seed for 096 compatibilityMake sure DES_cblock is defined at all times meaning one shouldn't includeopenssl/des_oldh directly any more
Correct the mapping for des_read_pw
Make the change to strong keys in the string to keys functions experimental in the main trunk as well
fix warningsSubmitted by: Nils Larsch
fix memory leakSubmitted by: Nils Larsch
add missing declarationSubmitted by: Nils Larsch
Fix typo Craig Davison <cd@securityfocuscom>
fix conditational compilation for OPENSSL_NO_
Merge changes from 097stable
Merge changes from 097stable
Merge in DES changed from 097stable
Merge in DES changed from 097stable
Fix buggy ifcondition thomas poindessous <poinde_t@epitafr>
Remove superflous and buggy statement <justinfletcher@ntlworldcom>
fix DH_generate_parameters for general 'generator'
New function EC_GROUP_check_discriminantRestructure implementation of EC_GROUP_checkSubmitted by: Nils Larsch
Map new X509 verification errors to alert codes Tom Wu <tom@arcotcom>
Fix typoSubmitted by: Nils Larsch
Initialize ciph_ctx in ksslc
Fix bugs and typosAdd some WTLS curvesNew function EC_GROUP_check this will probablybe implemented differently soonSubmitted by: Nils LarschReviewed by: Bodo Moeller
fix include positionSubmitted by: Nils Larsch
Ensure EVP_CipherInit uses the correct encode/decode parameter ifenc  1[Reported by Markus Friedl <markus@openbsdorg>]Fix typo in dh_libc use of DSAerr instead of DHerr
Rename 'crayt90cc' into 'crayj90'Add to 'config'
fix ssl3_pending
Add missing strength entries
Initialize cipher context in KRB5"D Russell" <russelld@aolnet>Allow HMAC functions to use an alternative ENGINE
add OIDs for WAP/TLS curves
Fixes for 'nohw' combined with 'noSOME_CIPHER'Fix dsaparam usage outputSubmitted by: Nils Larsch
use BIO_nwrite more properly to demonstrate the general idea ofBIO_nwrite0/BIO_nwrite the previous code was OK for BIO pairs but notin general
Undo previous patch: avoid warnings by undef'ingduplicate definitionsSuggested by "Kenneth R Robinette" <support@securenettermcom>
Fix Kerberos warnings with VC++
Fix ASN1 additions for KRB5
Fix various warnings when compiling with KRB5 code
asm/mips3o problems
Make ciphers and digests obtain an ENGINE functional referenceif impl is explicitly supplied
Make {RSA,DSA,DH}_new_method obtain and release an ENGINEfunctional reference in all cases
Fix the Win32_rename function so it correctlyreturns an error code Use the same code in Win9Xand NTFix some cac options so they work under Win32:unlink/rename wont work under Win32 unless the fileis closed
EC curve stuffSubmitted by: Nils Larsch
Synchronise the AEP engine in all branches  For 096stable [engine], implement software fallback
When closing, do not use close  Also, if the closing call fails, donot return immediately since that leaves a locked lock
Change des_oldc to use types prefixed with _ossl_old_des_
fix spacing
Add more curvesSubmitted by: Nils LarschRemove unnecessary 'const'
ENGINE module additionsAdd "init" command to control ENGINEinitializationCall ENGINE_finish on initialized ENGINEs on exitReorder shutdown in appsc: modules should be shutdown firstAdd test private key loader to openssl ENGINE: thisjust loads a private key in PEM formatFix print format for dh length parameter
add SECG OIDsSubmitted by: Nils Larsch
reference counting for EC_GROUP structures is not needed at themoment at least, so remove it
OpenSSL currently fails on certain pure 64bit architectures  This is a showstopper
Rephrase statement on the security of twokey 3DES[Chosen plaintext attack: R Merkle, M Hellman: "On the Security ofMultiple Encryption", CACM 24 1981 pp 465467, p 776Known plaintext angriff: PC van Oorschot, M Wiener: "Aknownplaintext attack on twokey triple encryption", EUROCRYPT '90]
fix 'ecdsaparam C'
fix printf call
typo
fix 'ecdsaparam C' outputSubmitted by: Nils Larsch
Make sure the type accessed by the LONG and ZLONG ASN1 typeis really a long, to avoid problems on platforms wheresizeofint ! sizeoflong
more X962 OIDsSubmitted by: Nils Larsch <nla@trustcenterde>
disable 'ifdef DEBUG' code
Provide a pre 097 compatibility mapping ifOPENSSL_DES_PRE_0_9_7_COMPATIBILITY is defined  NOT AT ALL TESTED YET!Add a comment as to the libdes compatibility
New configuration targets for OpenBSD, handed to me by Bob Beck <beck@openbsdorg>
'if OPENSSL_VERSION_NUMBER > ' to document the recent change
Typo  In DCL, the continuation character is a dash at the end of theline, which I forgot when spliting one
Rename des_SPtrans to DES_SPtrans to differentiate from libdes and avoid certain linkage clashes
Make it so one can select tests from within the test directory
Fix warnings about signed/unsigned mismatch and globalshadowing random, index in hw_4758_ccac
This change was only made in 097stable  Synchronise
Remove the perl/ subdirectory  It hasn't been worked on for ages, isvery broken, and there are working modules in CPAN, which makes ourmodule even more moot
make update
use ERR_peek_last_error instead of ERR_peek_error
use ERR_peek_last_error instead of ERR_peek_error to ignoreany other errors that may be left in the error queueSubmitted by: Jeffrey Altman
VMS addaptation, including a few more long names that needed hacking
Make sure aep_close_connection is declared and has a prototype that'sconsistent with the rest of the AEP functions
Increase internal security when using strncpy, by making sure the resulting string is NULterminated
Updated AEP engine, submitted by Diarmuid O'Neill <DiarmuidONeill@aepie>
Document the added modes for AES
Add 'void ' argument to app_verify_callbackSubmitted by: D K Smetters <smetters@parcxeroxcom>Reviewed by: Bodo Moeller
disable 'ifdef DEBUG' sections
This adds a new ENGINE to support IBM 4758 cards, contributed by MauriceGittens
Fix the fix Yoram Zahavi
SSL_clear ! SSL_free/SSL_new
Make sure to remove bad sessions in SSL_clear found by Yoram Zahavi
Always init ctx_tmp in PKCS7_dataFinal since it is always cleaned up
make update, after moving around symbols in libeaynum to match097stable
Fix new aes command argument handling
Make the engine config module always add dynamic ENGINEsto the list using dynamic_path This stops ENGINEs whichdon't supply any default algorithms being automaticallyfreed because they have no references and allows themto be accessed by idAlternative dynamic loading behaviour can be achieved byissuing the dynamic ENGINE ctrls separately in the config file
Updates from stable branch
New OPENSSL_LOAD_CONF define to load opensslcnfwhen OpenSSL_add_all_algorithms is called
Fix for AIXSubmitted by Dawn Whiteside <dwhitesi@tierceluwaterlooca>
nonMonolith fixesSubmitted by Andrew W Gray <agray@iconsinccom>
make errors
Update from stable branch
Config code updatesCONF_modules_unload now calls CONF_modules_finishautomaticallyDefault use of section openssl_conf moved toCONF_modules_loadLoad config file in several openssl utilitiesMost utilities now load modules from the config file,though in a few such as version this isn't donebecause it couldn't be used for anythingIn the case of ca and req the config file used isthe same as the utility itself: that is the configcommand line option can be used to specify analternative file
We have AES support in openssl speed
disable 'ifdef DEBUG' sections
Config file updates from stable branch
Add AES support in the applications that support des and des3
Add comfy aliases for AES in CBC mode
Stop assuming the IV is 8 bytes long, use the real size insteadThis is especially important for AES that has a 16 bytes IV
Including openssl/e_osh in the OpenSSL 096 branch is legal, sinceit's exported  Changing that is a BIG step, which has been done in097dev
gcc figures that the format specifier 2x means unsigned int, so let'smake n unsigned
Instead of casting a lvalue, let's constify meth
Update the status on 64bit thingy
simplificationsSubmitted by: Nils Larsch
typo
Add reports on checked 64bit platforms and make space to add platforms that need to be checked
With Compaq make, it seems like  inside an action becomes part of the command, not a comment at all
Instead of just checking for OpenVMS, check if DEC C is used, since it's aspicky on all platforms
bugfix: allocate sufficiently large bufferSubmitted by: Nils Larsch
Comparing a pointer data with 0 using > is incorrect  The changedcomparison doesn't look right, but at least it compiles  It would be niceif the one who knows what this is supposed to do changed it to do it correctly
With Compaq make, it seems like  inside an action becomes part of the command, not a comment at all
Don't shadow already defined variables
make update
A rough little selftest for tunala This runs through all ciphersuite /SSL/TLS version combinations looking for mishaps
Make the "ungunk" logic a little more robust
 Add support for cipher suites that require a temporary RSA key forkeyagreement Tolerate signal interruptions of select
Oh, and since config figures out that we run Cygwin and what versions,let's recommend running config instead of a manual Configure
Since Cygwin is the proper spelling, let's change to that everywhereAlso, with the change in Configure, it now knows on it's own ifthreads are supported or not
Cygwin target name has been changed!
The AES modes OFB and CFB are defined with 128 feedback bits  Thisdeviates from the "standard" 64 bits of feedback that all otheralgorithms are using  Therefore, let's redo certain EVP macros toaccept different amounts of feedback bits for these modesAlso, change e_aesc to provide all usually available modes for AESCTR isn't included yet
Add the modes OFB128, CFB128 and CTR128 to AESSubmitted by Stephen Sprunk <stephen@sprunkorg>
Adjust the NID names for the AES modes OFB and CFB to contain the numberof feedback bits
The macro IMPLEMENT_ASN1_FUNCTIONS_const already contains an ending ;,so do not add one after the expansion, since ANSI C doesn't allow ;;at this level or at least, so tells me gcc
Local `time' shadows the global function `time'  Rename the localvariable to `tim' and, as a matter of consequence, `time_d' to `tim_d'
Missing endif
gcc chokes on C++ comments in C code
Give the linuxsparv9 target shared capabilitySubmitted by Ian Marsh <mushypea@dominionnetuk>
Even though it is not really practical people should know about it
fix indentation
Add the configuration target VxWorks
make it possible to disable memory checking for timings
'C' is still quite broken
fix 'C'
fix memory leak
move ECDSA test right after EC test
don't call OPENSSL_config, this does not make any sense during "make test"
Make sure memset is defined by including stringhNotified by Oscar Jacobsson <oscar@jacobssonorg>
For some reason, getting the topmost error was done the same way asgetting the bottommost one  I hope I understood correctly how thisshould be done  It seems to work when running evp_test in anenvironment where it can't find opensslcnf
make update, with libeaynum remade to match the 097stable one
The Cygwin shared extension was shifted
At Corinna Vinschen's request, change CygWin32 to Cygwin
EC_GROUP_get_group_by_name is now called EC_GROUP_new_by_name
Fix warnings
Correct sh, please
ECDSA supportSubmitted by: Nils Larsch <nla@trustcenterde>
some modifications to named curve support
Modify the main trunk version to 098dev097 now lives in the branch OpenSSL_0_9_7stable
new locks
add support for named curvesSubmitted by: Nils Larsch <nla@trustcenterde>
Update the configuration of CygWin32 to use the new capabilities ofCygWin 13x, which includes thread and shared library supportSubmitted by Corinna Vinschen <vinschen@redhatcom> and modified alittle bit
We should implement a countermeasure against the predictableIV CBCweakness in SSL/TLS
Move teh silencer to the right place
Make linkshard a little bit more efficient  If there are noextensions to link together, there's no point looping at all
Make removal from session cache more robust
add a wish
Do not store unneeded data
Add notes on the added support for aep and sureware crypto cards in097
Remove an unused variable
Oops, do not unlock CRYPTO_LOCK_DYNLOCK when we lockedCRYPTO_LOCK_RAND
I forgot to include the aep and sureware vendor header files
Because AEP and we used the same AEP_R_ prefix for error reasons,lets change our prefix to AEPHK_R_  Otherwise, we get very mysteriouserrors because we happen to redefine AEP_R_OK and AEP_R_GENERAL_ERROR
Add aep and sureware implementations and clean up some error reasonsthat were never part of the engine frameworkThe aep and sureware implementations are taken directly from 096c[engine] and have been modified to fit the newer engine framework andto be possible to build shared libraries ofThe aep implementation has gone through quite a bunch of tests and iscleaned up there were some misunderstandings in it about how to uselocksThe sureware hasn't been tested at all in this incarnation and isbasically a quick hack to get it to compile properly
Certain reasons aren't really part of the engine framework, so let'smake them ubsecspecific in the ubsec implementation
Generate the individual engines' error strings and macrosautomatically
If the intended header file doesn't exist, create it
'make update'
With the changed des_old API, let's complete the work by renaming thefunctions in ui_compat  This gave reason to rework that part morethoroughly, so here are the changes made:1 Add DES_read_password and DES_read_2passwords with the samefunctionality as the corresponding old des_ functions, as aconvenience to the users2 Add UI_UTIL_read_pw_string and UI_UTIL_read_pw with thefunctionality from des_read_pw_string and des_read_pw, again asa concenience to the users3 Rename des_read_password, des_read_2passwords,des_read_pw_string and des_read_pw by changing des_ to_ossl_old_des_, and add the usual mapping macros4 Move the implementation of des_read_password anddes_read_2passwords to the des directory, since they are tightlytied to DES anywayThis change was inspired by a patch from Assar Westerlund <assar@sicsse>:There are some functions that didn't get the kickawayolddesandreplacedeswithDES action  Here's a patch that adds DES_ and des_in des_oldh versions of des_read_pw_string et al  This patchincludes some of the first des_oldh semicolon macro fixes that I'vealready sent
Apply one patch from Assar Westerlund <assar@sicsse>:The following patch makes sure that string2key does not use weak DESkeys then making them nonweak by xor:ing with 0xF0
Apply three patches from Assar Westerlund <assar@kthse>:This patch makes the macros in des_oldh actually pretend to befunctionsThere's no reason not to define _ossl_old_crypt when usingPERL5/FreeBSD/darwin/Next, since it makes using crypt and includingdesh break  Here's a trivial patchThis patch fixes some of the typos used in macro names in des_oldhand the number of arguments for some of them
ASN1_BIT_STRING_set_bit didn't clear previously set bits
undef some things that cause a conflict under Win32 whenwincrypth is included
Shut up compiler warnings for inconsistent declarations
HPUX 32bit: When linking against shared libraries, the absolute path is remembered When linking against L, '' is remembered inside the executable,so it will fail after "make install" or when not called from inside the"apps/" subdirectory of the build tree When using the "+cdp" option of "ld", the "" information can beexchanged against $INSTALL_TOP/lib In this case the executablewill however refuse to work before "make install" has been calledThis makes testing the 'openssl' executable a problem Solution 1:Relink the "openssl" executable, when "make install" is calledThis would however require significant changes to the toplevel Makefileand the apps/ Makefile Solution 2:Statically link against libssl and libcrypto, so that the "openssl"executable is no longer dependant on the openssl shared librariesSelect option 2 for HPUX 32bit, as this requires the smallest change
Make SHLIB_TARGET available in subdirs here: apps/
Apply patch from Toomas Kiisk <vix@cyberee> and complete it
Superflous '\' messes up with HPUX make
Undo previous change,  X509_check_issued was correct[SeeMessageID: <3BB0799930432AD2@celocomcom>Date: Tue, 25 Sep 2001 13:33:29 +0100From: Dr S N Henson <drh@celocomcom>To: openssldev@opensslorgSubject: Re: Error in v3_purpc]
Spelling correction
Correct the number of colons for the targets aix43cc, aix43gcc,alphacc, alphaccrpath, alphagcc, alpha164cc and alphaoldcc
Detect onestep shifts of the dso_scheme
I got some reports that some targets have weird dso_schemesTherefore, I've added a sanity checkerNote that it can be combined with almost any other argument the otherarguments will be completely ignored, with "reconf" as the blatantexception, since it also has the behavior of ignoring all followingcommand line arguments  If testsanity and reconf are both used onthe command line, the first one wins
Remove blanks at begin of empty lines irritating epv_testc
Update SCO5 targets
Apply a small patch from Dan Lanz <lanz@zoleracom> to get sharedlibraries with debuglinuxelf
Apply a small patch from Oscar Jacobsson <oscar@jacobssonorg> thatmakes things more compilable with VC++
It looks like I didn't remove everything that has to do with thenonexistant aestestc
Apply a small patch from Diego R Lopez <diegolopez@redirises>,making X509_check_issued properly match an issuer that's found in aAuthority Key Identifier
GCC uses __i386__
Add old patch from Robert Dahlem <RobertDahlem@ffm2siemensde> tomake it possible to produce shared libraries on ReliantUNIX
I got a request to make the "old des" symbols more closely tied toOpenSSL  Adding '_ossl' in the name seems to be a good way to dothis
Apply Neale Ferguson's patch to add a configuration target for linuxs390x
Apply the following changes by Toomas Kiisk <vix@cyberee>: make openssl rsa work with engine chil misc changes, including debuglinuxppro Configure targetand FORMAT_NETSCAPEaware load_{,pub}keyThis completes the application of his changes
Apply a change by Toomas Kiisk <vix@cyberee>: Fix a crashbug and a logic bug in hwcrhk_load_pubkey
I must learn to compile before I commit
Document the change in rsautl
Add keyform  Document engine
There is no aestest currently  The EVP tester is used to check theAES algorithm
The 'type' parameter, an EVP_MD pointer, represents the type of digestrequired as well as a default implementation when no ENGINE provides areplacement implementation This change makes sure the correctimplementation's "init" handler is used rather than assuming 'type'
Keep the NIST AES vectors that were there previously
sort functions 
fix formatting of automatically generated error section
New functionsERR_peek_last_errorERR_peek_last_error_lineERR_peek_last_error_line_datasupersedes ERR_peek_top_errorRename OPENSSL_NO_OLD_DES_SUPPORT into OPENSSL_DISABLE_OLD_DES_SUPPORTbecause OPENSSL_NO_ indicates disabled algorithms according tomkdefpl
Reword CHANGES entry for _old_des_, as it was a little complicatedsyntactically
make updatelibeaynum got tweaked so the old des symbols would retain theirpositions
Because of recent changes, there's no need to hack the des symbols anymore
To avoid all kinds of linklevel clashes, rename all old des_functions to _old_des_
To avoid all kinds of linklevel clashes, rename all old des_functions to _old_des_
Document the current behaviour of the DES interface
Support old DES APIs by default
Make no config file not an error Move /dev/crypto config to ctrl
Constification
default_algorithms option in ENGINE config
Typos jsyn <jsyn@openbsdorg>
Fix incorrect BIO__ctrl macros Shay Harding <sharding@ccbillcom>
Use FIPS197 vectors for AES  The NIST vectors were constructed byreencrypting or redecrypting the ciphertext 10000 times, which ofcourse gives higly different results
Add more of the NIST test vectors for AESFor some reason, they give incorrect results with the OpenSSLimplementation  I wonder why
Bring VMS up to date with development
Initial ENGINE config module, docs to followFix buffer overrun errors in OPENSSL_conf
Constification, add config to /dev/crypto
disable broken code
Other errors are possible
Stupid apps should die, not fail silently
Fix memory leak
Constification, missing declaration, update dependencies
Correct for the recent prototype changes
 empty log message 
Produce less confusing statistics when "out_totals" is used
The sample certs had expired, so these are newer ones that should lastquite a bit longer
run test_evp before test_ssl
Bugfix: In ssl3_accept, don't use a local variable 'got_new_session'to indicate that a real handshake is taking place the value will belost during multiple invocations Set s>new_session to 2 instead
Return 1 from ssl3_get_server_done ssl3/s3_clntc ifthe SSL_R_LENGTH_MISMATCH error is detected
Prototype info function
Add client_cert_cb prototype
Return value could be undefined
 Network errors could pollute the buffers because 1 isn't noticed in an"unsigned int" Remove redundant processing with machine>ssl is NULL Remove compiler warnings about uninitialised 'ctx' it's not useduninitialised, but gcc can't see that
Patches to make OpenSSL compilable on MacOS/XSubmitted by Pier Fumagalli <pier@betaversionorg>
 libtool finally annoyed me too much, so I'm nuking it, tidy up some output, print a warning when running an SSL server with no cert, only log each connect/disconnect if the new "out_conns" switch is used
 Add the same header stuff to aes_loclh as is in des_loclh to avoidundefined functions memset, etc Put a cvsignore in the aes directory too
Experimental configuration codeIncomplete, largely untested and subject to change/deletion
add a sentence previously deleted by accident
add documentation for SSLeay_versionSSLEAY_DIR and'openssl version d'use some descriptions from Lutz' redundant manual pageinstead of the previous ones
Tsss, SSLeay_version was already documented, it just was not linked in
synchronize with engine096 tree
Add information as provided by Richard Levitte on opensslusers :
Update PEM docs
fix 'Configure TABLE' output
Changes that break something should be included in CHANGESto make it easier to fix things
add automatically generated ERR_load_ prototype
fix EVP_CIPHER_mode macroSubmitted by: "Dan S Camper" <dan@btinet>
Constify
Better clarification on perl
make update
Implement speed measurement for AESSubmitted by Stephen Sprunk <stephen@sprunkorg> as part of his AESintegration patch
Because Rijndael is more known as AES, use crypto/aes instead ofcrypto/rijndael  Additionally, I applied the AES integration patchfrom Stephen Sprunk <stephen@sprunkorg> and fiddled it to workproperly with the normal EVP constructs and incidently work the sameway as all other symmetric cipher implementationsThis results in an API that looks a lot like the rest of the OpenSSLcipher suite
The block size may be something other than 8!
When RSA or DSA are disabled, do not include the stuff that's specificto them
make update
RSA counter should only be defined of RSA is available
Allow verification of other types than DATASubmitted by Leonard Janke <leonard@voteherenet>
Say that recent CygWin perl versions work as wellSubmitted by Eric Hanchrow <erich@voteherenet>
Allow 8bit characters  This is not really complete, it only markscharacters with the highest bit set as HIGHBIT  We need to expandthis to support the UTF8 character set properly  However, thissolves the problem that the character 0x80 which is common in UTF8gets masked to 0x00Patch submitted by "Huang Yuzhen" <huangyuzhen@bjtomcom>
On Solaris64, cc needs the flag xarchv9 when linking sharedlibraries  Make a general change to support shared librarylinking flags in generalNoted by Nick Briggs <briggs@parcxeroxcom>
Add support for Linux on HP/PASubmitted by "Bryan W Headley" <bheadley@interaccesscom>
ssl3_read_bytes bug fixSubmitted by: D P Chang <dpc@qualyscom>Reviewed by: Bodo
update FAQ and CHANGES file 096c has been released
Status update
And just for the sake of completeness, let's add some standard macros
Better use the same number in all branches, to avoid confusion
Do not forget to compile comp_errc
Synchronise with the 096 branch
Security fix
Cygwin patch Submitted by Michael Kobar <mkobar@lymewarecom>
formatting consistency
oops
remove redundant ERR_load_ declarations
consistency with 096 stable "CHANGES"
fix BN_rand_range
Change pkcs12 so the certificates coming from in do not get tossed ifcertfile is given as well
Implement failover for ubsec  Submitted by Subramanian Ramamoorthy<sram@broadcomcom> with the following comment:[] We have implemented failover ie, if for some reason that thehardware fails, the implementation detects this failure and performsthis operation as if no hardware is present, ie, in software forsometime now and have tested it here with our hardware []This change was cc:ed to exports@cryptocom
make update
name confusion with HP library function prototype ?
Improve back compatibility
fix warnings one of them was clearly justified
Don't overwrite signing time
HPUX 9X on m68k with gcc"Anton J Gamel" <gamel@annaanatomieunifreiburgde>
UID was never a lable for uniqueIdentifier  However, LDAP and certainRFCs concerning X500 directories use UID as a shorter name for theattribute type userId, which is defined by CCITT and available throughRFCs 1274 and 2247Unfortunately, if some applications have used the name "UID" for theuniqueIdentifier attribute type, they will produce incorrect resultsHowever, I found it better to follow the standards that are out thererather than having our own incompatible one
I was recently informed that some people wrongly use ssleaytxt asmain documentation, so let's warn them a little more, so the word"OBSOLETE" really gets understood
crypto/objects stuff
Fix: 2529 is "idce", not "ldce" sort of a typo in objectshFix ?: Delete 'ippda 6' idpdapseudonym because it does not existin RFC 3039Also change Perl scripts to put autogeneration warning in thefirst lines of the file
EVP_BytesToKey documentation
Make EVP_SealInit return the correct value
Add pubkey option to req command
NO_DSA, NO_RSA patches
Support for QNX wrat@jumpnet the wharf rat
Certain missing algorithms make some SSL versions or TLS impossible tobuild
discuss name and default_ca more correctly I hope
This looks to have been a typo
For future portability reasons MIT is moving all macros to functioncalls  This patch allows compilation either waySubmitted by: Jeffrey Altman <jaltman@columbiaedu>
info on 096 engine branch
fix submitted by Andy Schneider <andyschneider@bjsscouk>in main branch, hn_ncipherc is already correct
check OPENSSL_NO_ before including header files that might bedisabled
OS/390 supportSubmitted by: Richard Shapiro <rshapiro@abinitiocom>
comment
Cut "ENGINE_ID" to the more concise "ID"
In this particular error condition, the structural reference wasn't beingreleased
When the "dynamic" ENGINE loads another ENGINE from a sharedlibrary, itessentially overwrites itself with the new ENGINE, with the exception ofreference counts, ex_data structures, and other 'admin' elements Howeverif the new ENGINE doesn't populate certain elements, there's the risk ofthe "dynamic" ENGINE's elements showing through  the "cmd_defns" were justone of the possibilities This implements a more comprehensive cleanup
The "openssl" ENGINE is no longer used except as a testing/debuggingdevice This change enables it for building as a selfcontained "dynamic"ENGINE, to help testing such mechanisms
'flags' should only be set inside DSO_load if constructing a new DSOobject  otherwise we overwrite any flags that had been previously set inthe DSO before calling DSO_load
Extentions of the explanations to the linking problem on Win32  Provided by Andrew Gray <agray@iconsinccom>
Clarify reference count handling/removal of sessionshinagawa@starzkodeccom
On VMS, the norm is still that symbols are uppercased, so for now it's betterto trust that norm  I might implement a control for this later on
wNAFs use does not bring that much performance on Sparcs whereelliptic curves are are relatively faster than on PCs anyway
avoid stupid compiler warning
Build dynamic rsaref engine on VMS  Tested on VAX so far
End assembler macro correctlyOn VAX, all global variables are accessed through functions, so skipdoing transfer entries for variablesForgot the looping gotos
On systems that don't do too well including headers from a differentdirectory, trust the building scripts to handle it properly
Make sure evp_loclh can be included hw_openbsd_dev_cryptoc needs that
comment
use a more interesting test case
comments etc
Improve EC efficiency
A missing comma added
make update
Add MD digestsAnd this finishes this engine, it now offers all ciphers and digeststhat RSAref 20 has
Make it possible to give digest names as evp arguments
Add DES functionsRestructure the code and comment it a bitPrepare for the presence of digests
If an engine isn't built in, try loading it as a shareable libraryinstead  This also makes it possible for users to simply give saidshareable library as argument for the engine option
At least for the two common Unixly DSO loading methods, include thesystem error in the error text
Use the generated error code files
'make update' + some touches
Add targets to update the error code files
Add a local error code configuration file for the rsaref dynamicengine
Make it possible to build completely static, independent error Cfiles
make updateperl util/mkerrpl recurse write rebuild
Make use of RSAref's header files instead of EAY's crafted rsarefh
In a Debian Linux environment, it's not a good idea, apparently, tomanually declare the include directory /usr/include at the same timeas the macro PROTOTYPES is defined with the value 1  Besides,/usr/include is the standard include directory anyway, so there's noneed to specify it explicitely
Add a demo that reimplements the RSAref glue in form of a dynamicallyloadable engine
After loading a dynamic engine, reset the command definitions to theempty set  This prevents engines that do not set the commanddefinitions themselves to inherit the ones from "dynamic", which wouldotherwise be very confusing
Change the order of events so the capabilities of loaded engines canget listed as well
remove obsolete entry
cast to unsigned int, not to int to avoid the warning  all thesevalues really are unsigned
consistency between main branch and stable branch
Implement STARTTLS for certain protocols, currently only supporting SMTP
Remove temporary files
unsigned int vs int
Exclude out files
synchronise with 096 stable branch
information on 096cengine
Phew, finishedSubmitted by:Reviewed by:PR:
I've still got one left; the backport of the Broadcom UBSEC driver to096 that we've got  just waiting for clearance on that oneSubmitted by:Reviewed by:PR:
Add unixware7gcc as in 096 branch except that we need a 'sys_id'field here, which is left emptyVarious configurations are only in the 096 branch at the moment:OpenUNIXOpenUNIX8gccsharedOpenUNIX8sharedEither Configure or CHANGES must be changed to rectify the situation
the PRNG race conditions were mostly a theoretical issue, remove from NEWS
add changes between OpenSSL 096b and OpenSSL 096c
Add an FAQ
Order chronologically: move entry for recent s2_clntc/s2_srvrc fixesnearly to the topMove msg_callback entry to the top as the implementation for SSL 20is based on the s2_clntc/s2_srvrc changes
make code a little more similar to what it looked like before the fixes,call ssl2_part_read again to parse error message
remove incorrect 'callback' prototype
msg_callback documentation
more output for SSL 20 in our msg_callback
Implement msg_callback for SSL 20Important SSL 20 bugfixes bugs found while implementing msg_callback
2001, not 2000
adjust to OpenSSL_0_9_6stable version
cast to 'unsigned long' before using ~ if we need an unsigned long resultSubmitted by: "Stefan Marxen" <stefanmarxen@gmxnet>
clarify
Don't define _REENTRANT here in e_osh  On systems where we need_REENTRANT if threads support is enabled, the /Configure entry mustdefine it so that it ends up in CFLAG
PKCS12 code fixes: initialize and cleanup digests and ciphersproperly
Win32 fixes
des_oldh doesn't really need to include desh, so don't  That willavoid clashes with other code that have their own DES_ functions butreally only use OpenSSL's old des_ functions
Fix email address delete code
Place the OpenSSLspecific headers back so they always get included,or we get a dependency war in Makefilessl
No need to include anything on systems that do not have /dev/crypt
DOS and Windows do not like unistdh
If verify fails, say why
Change the shared library support so the shared libraries get builtsooner and the programs get built against the shared librariesThis requires a bit more work  Things like rpath and the possibilityto still link the programs statically should be included  Somecleanup is also needed  This will be worked on
Addapt VMS scripts to the newer disk layout system ODS5, which allows more than one period and mixed size characters in file names
Another noemailDN fix
Allow ca to certify requests containing BMPStrings and UTF8Strings
Bugfixes for noemailDN option Make it use thecorrect name instead of NULL if nomailDN isnot set, fix memory leaks and retain DN structurewhen deleting emailAddress
Stop compiler warnings
Add support for Subject Info Acess extension
Note BUF_MEM_grow consistency fix
Consistency fix in BUF_MEM_grow: Initialise to zero when new memoryhad to be allocated, not just when reusing the existing buffer
disable caching in BIO_gethostbyname
New options to allow req to accept UTF8 strings as input
remove compatibility notes that no longer apply
Correct some links
Change the DES documentation to reflect the current status  Note thatsome password reading functions are really part of the UIcompatibility library
Make sure openssl speed is compilable on systems where fork doesn'texist  For now, that's all the ones we "support" except Unix
Add paralellism to speed  note that this currently causes a weird memory leak
Fix warning
Like MD_Init, MD now must include a NULL engine pointer in its definition
remove redundant definitions that are also in desh
mention des_oldh
Add 'noemailDN' option to 'openssl ca'  This prevents inclusion ofthe email address in the DN ie, it will go into a certificateextension only  The new configuration file option 'email_in_dn  no'has the same effectSubmitted by: Massimiliano Pala madwolf@opencaorg
filenames are des_old[ch], not descomp
Consistency with s2_ and s23_ variants no real functionalchange
Remove DES_random_seed but retain des_random_seed for now  Changethe docs to reflect this change and correct libeaynum
Assume TLS 10 when ClientHello fragment is too short
Have the removal warnings very high up in the source
A C file is a C file is a C file!
Due to an increasing number of clashes between modern OpenSSL andlibdes which is still used out there or other des implementations,the OpenSSL DES functions are renamed to begin with DES_ instead ofdes_  Compatibility routines are provided and declared by includingopenssl/des_oldh  Those declarations are the same as were in deshwhen the OpenSSL project started, which is exactly how libdes lookedat that time, and hopefully still looks todayThe compatibility functions will be removed in some future release, atthe latest in version 10
Fix SSL handshake functions and SSL_clear such that SSL_clearnever resets s>method to s>ctx>method when called from withinone of the SSL handshake functions
Deprecate the macro MAC_OS_pre_X
make update
make update
Correction of the idpda OID'sSubmitted by FredericGiudicelli@INTRINseccom
Sanitize CHANGES entry
Fix memory leak
Reject certificates with unhandled critical extensions
Stop spurious "unable to load config info" errors in req
Call msg_callback with correct length parameter if ssl3_write_bytes had tobe called multiple times
New functions SSL[_CTX]_set_msg_callbackNew macros SSL[_CTX]_set_msg_callback_argMessage callback imlementation for SSL 30/TLS 10 no SSL 20 yetNew 'msg' option for 'openssl s_client' and 'openssl s_server'that enable a message callback that displays all protocol messagesIn ssl3_get_client_hello ssl/s3_srvrc, generate a fatal alert ifclient_version is smaller than the protocol version in useAlso change ssl23_get_client_hello ssl/s23_srvrc to select TLS 10if the client demanded SSL 30 but only TLS 10 is enabled; then theclient will at least see that alertFix SSL[_CTX]_ctrl prototype void  instead of char  for genericpointerAdd/update some OpenSSL copyright notices
Typo
Add missing EVP_CIPHER_CTX_{init,cleanup}
gcc complained about "write" being shadowed even though the "write"variable name occured just in a function prototype  so rename it
Wrong place
The EVP_Init_ex functions take one extra argument  Let's defaultit to NULL
document SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
Update docs
Modify EVP cipher behaviour in a similar wayto digests to retain compatibility
Flush buffers to prevent mixed output Adam Back <adam@cypherspaceorg>
Add perSSL 'msg_callback' with 'msg_callback_arg'Both have perSSL_CTX defaultsThese new values can be set by calling SSL[_CTX]_[callback_]ctrlwith codes SSL_CTRL_SET_MSG_CALLBACK and SSL_CTRL_SET_MSG_CALLBACK_ARGSo far, the callback is never actually calledAlso rearrange some SSL_CTX struct members some exist just inSSL_CTXs, others are defaults for SSLs and are either copiedduring SSL_new, or used if the value in the SSL is not set;these three classes of members were not in a logical order,and add some missing assignments to SSL_dup
Update docs
Retain compatibility of EVP_DigestInit and EVP_DigestFinalwith existing codeModify library to use digest _ex functions
The message header for fake SSL 30/TLS 10 client hellos created fromSSL 20 client hellos added with the previous commit was totally wrong it must start with the message type, not the protocol versionNot that this particular header is actually used anywhere 
For consistency, set s>init_num in the 'reuse_message' caseif s23_srvrc faked the message, s>init_num is 0
Change ssl3_get_message and the functions using it so that complete'Handshake' protocol structures are kept in memory, including'msg_type' and 'length'This is in preparation of future support for callbacks that get topeek at handshake messages and the like
make sure rnd exists
Fix ssl3_get_message handle message fragmentation correctly
the previous commit accidentily removed 'ret  1' from the SSL_ST_OKcase of ssl3_accept
openbsdx86 macrosSubmitted by: Toomas Kiisk <vix@cyberee>
Update information as a partial response to the postFrom: "Chris D Peterson" <cpeterson@aventailcom>Subject: Implementation Issues with OpenSSLTo: opensslusers@opensslorgDate: Wed, 22 Aug 2001 16:13:17 0700The patch included in the original post may improve the internal sessionlist handling and is therefore worth a seperate investigationNo change to the list handling will however solve the problems of incorrectSSL_SESSION_free calls The session list is only one possible point offailure, dangling pointers would also occur for SSL object currentlyusing the session The correct solution is to only use SSL_SESSION_freewhen applicable!
In certain cases, no encoding has been set up for the b64 filter  Insuch cases, a flush should not attempt to finalise the encoding, asthe EVP_ENCODE_CTX structure will only be filled with garbage  Forthe same reason, do the same check when a wpending is performed
'make update'
Add support for md4WithRSAEncryption
For systems where gcc is used and where we don't know if GNU ld isused or not, let's ask collect2 which ld it uses and choose to use thetarget dognu_shared if GNU ld is usedThis solves the reported problems on Solaris systems where GNU cc isused but GNU ld isn't, and probably on other systems with similarsetups
'make update'
It seems like gcc does canonicalisation of file names  Morespecifically, a starting '/' is removed  makedepend doesn't do this,resulting in another possible commit war, so let's fix that by doing apoor mans canonicalisation of file names that gives the same effect asdoing dependencies through gcc
'make update'
To avoid commit wars over dependencies, let's make it so things thatdepend on the environment, like the presence of the OpenBSD cryptodevice or of Kerberos, do not change the dependencies within OpenSSL
makedepend sometimes produces duplicates  Remove them
A few more OIDs, contributed by Peter Sylvester <PeterSylvester@EdelWebfr>
evp_testc and evpteststxt both need to be linked in the test/ directoryhowever for different reasons This separation should prevent the win32build from interpreting evpteststxt as source code
Change some EVP prototypes to use "cipher" rather than "type" as a variablename The implementations already use this anyway
EVP_EncryptInit_ex and EVP_DecryptInit_ex had been defined in evph butnot implemented Bug reported by Martin SzotkowskiThis also changes the non"_ex" versions to defer directly toEVP_CipherInit_ex rather than EVP_CipherInit to avoid an unecessarylevel of indirection
As ENGINE_load_openbsd_dev_crypto is an API function, it makes sense forit to be defined on all platforms whether or not it is of any practicaluse on them This also resolves linker problems on "special" platforms,such as win32
Make sure the "ENGINE_TABLE" cleanup callbacks have correct prototypes
Missing pointer in the eng_table_register function Reported byMartin Szotkowski
Small documentation fixes Howard Lum <howard@pumpkincanadasuncom>
Copy evpteststxt to the right place
Typo
SSL_add_dir_cert_subjects_to_stack for Win32 finally implementedSubmitted by Massimo Santin <msantin@santineassociaticom>
'make update'
Since ossl_typh is an exported header, we sure need to export it onVMS as well :
Because there's chances we clash with the system's typesh, rename ourtypesh to ossl_typhAlso, it seems like krb5 was forgotten in some places
Because there's chances we clash with the system's typesh, rename ourtypesh to ossl_typh
Use the maximum block length for the extra size in the encryptBIO buffer instead of hard coding it as 8
Make EVP_DecryptUpdate work again
sch isn't an array, how did this pass through gcc?
A lot of things are undeclared unless x509h is included
Hmm, everything "open" isn't necessarely "openssl" :sigh habit
Woopsie
'make update'
sk_ENGINE_CLEANUP_ITEM_pop_free is duplicated in ENGINE_cleanupLet's use sk_ENGINE_CLEANUP_ITEM_pop_free instead
Addapt seldom compiled code to new semantics of the key schedule nota pointer any more
Some new symbols have very long names
o_timec contains symbols with dollar signs in them, so we must tellthe compiler not to warn about that
The cleanup stack in ENGINE changed slightly, so this "make update" isneeded
The STACK macros take care of casting to and from the designated item typeof the stack, and the void  type used in the underlying sk_functions  However, declaring a STACK_OFtype where type is a functiontype implicitly involves casts between function pointers and data pointersThat's a nono This changes the ENGINE_CLEANUP handling to use a regulardata type in the stack
Make an overdue note about the recent ENGINE restructuring Apart froma few items however, most of the details are deferred to thecrypto/engine/README file
Make "openssl engine c" list any supported digests as well as supportedciphers
Typos Chris Pepper <pepper@mailreppepcom>
Change HZ in speed to rely on sysconf if the clock tick is availablethat way  Synchronise s_time with these changes
ENGINE_register_all_complete will register all implementations of allalgorithms present in all loaded ENGINEs The result is that if any ofthose ENGINEs successfully initialises, and the ENGINE_TABLE_FLAG_NOINITflag isn't set, then they will always be used and cached as defaults inpreference to software implementations Ie accidental autodetection ofacceleration hardware :This change stops all implementations being automatically registered in"openssl" subcommands, so that the "setup_engine" handler in appsccontrols which ENGINEs are registered for use A special case has beenadded that will revert to this "autodetect" logic, ie if the "engine"switch is used as;engine auto
Modernise and fix ancient "maurice" demos
Constify EVP_SealInit, EVP_OpenInit
Make ancient signc demo compile again
Support fractional seconds in GeneralizedTime
Synchronise with Unixly build
Stop thinking arguments starting with  are algorithm identifiersShow timing parameters and timing functions usedIt looks like some Linuxen have very weird settings for CLK_TCK  I'mvery unsure about this change and will investigate further
Apparently, Linux is identified with __linux__ as well
'make update'
The error message must match a very specific regexp see mkdefpl,currently line 470
Don't clean up stuff twice
Fixes
Two changes:1 if there are several symbols with the same entry number, sort thosesymbols in ASCII order2 Do not stop reading the header files when "BEGIN ERROR CODES" isfound, since mkerrpl will add a function declaration after thatcomment  Instead, trigger on "Error codes for the \w+ function",which is the actual start of the error code macrosAdditionally, a few more debugging printouts that helped
Fix warning
"FALLBACK" handling was a hack that was thrown out long ago in theENGINE redevelopment The idea had been that "1" could be used as aspecial "ask me later" 'nid' rather than specifying supported cipher anddigest 'nid's up front However the idea turned out to be pretty broken
Make update to bring in all the cipher/digestrelated ENGINE changesNB: It looks like mkdefpl is causing certain cvs wars by continuallyflipping the order of some definitions 
Put the cipher info back into the "openssl engine" command
Fiddling
This change puts the original OpenBSD /dev/crypto support that was incrypto/evp/ into the corresponding ENGINE This code is currently untested
This change adds dummy RC4 and SHA1 support to the "openssl" ENGINE fortesting Because of the recent changes see crypto/engine/README, the"openssl" ENGINE is no longer needed nor is it loaded automatically or byENGINE_load_builtin_engines So a explicit ENGINE_load_openssl call isrequired by applications or a modification to eng_allc before this ENGINEwill be used This change will send output to stderr as/when itsimplementations are used
This changes EVP's cipher and digest code to hook via the ENGINE supportSee crypto/engine/README for details it also removes openbsd_hwc from the build that functionality isgoing to be available in the openbsd ENGINE in a upcoming commit evp_test has had the extra initialisation added so it will use ifpossible any ENGINEs supporting the algorithms required
This change adds cipher and digest support into ENGINE using theENGING_TABLE mechanism The necessary hooks from crypto/evp/ to use thiswill be committed shortly
indentation
"make update"
Make necessary tweaks to apps/ files due to recent ENGINE surgery Seecrypto/engine/README for details
This commits changes to various parts of libcrypto required by the recentENGINE surgery DH, DSA, RAND, and RSA now use both "method" and ENGINEpointers to manage their hooking with ENGINE Previously their use of"method" pointers was replaced by use of ENGINE references Seecrypto/engine/README for detailsAlso, remove the ENGINE iterations from evp_test  even when thecipher/digest code is committed in, this functionality would require adifferent set of API calls
This commits the changes to STACK macros forced by recent ENGINE surgery
This change replaces the ENGINE's underlying mechanics with the newENGINE_TABLEbased stuff  as described in crypto/engine/READMEAssociated miscellaneous changes; the previous cipher/digest hooks that hardwired directly to EVP'sOBJ_NAMEbased storage have been backed out New cipher/digest supporthas been constructed and will be committed shortly each implementation defines its own ENGINE_load_<name> function now the "openssl" ENGINE isn't needed or loaded any more core not algorithm or class specific ENGINE code has been split intomultiple files to increase readability and decrease linker bloat ENGINE_cpy has been removed as it wasn't really a good idea in thefirst place and now, because of registration issues, can't bemeaningfully defined any more BN_MOD_EXP[_CRT] support is removed as per the README a bug in enginetestc has been fixedNB: This commit almost certainly breaks compilation until subsequentchanges are committed
Some major restructuring changes to ENGINE, including integrated cipher anddigest support, are on their way Rather than having gigantic commit logmessages and/or CHANGES entries, this change to the README will serve as anoutline of what it all is and how it all works
Fix AES CBC mode EVP_CIPHER structures: the IV length is always16
'openssl rsa' etc should include AES support in addition to DES
'openssl speed' does not include AES support yet
"make update"
In case of memory problems, the va_start wasn't cleaned with a va_endNoticed by Thomas Klausner <wiz@danbalaifoertuwienacat>
comment
ignore binary
avoid everything resembling a magic trigraph
The 'norijndael' option must define OPENSSL_NO_AES because that iswhat we look for in crypto/evp
crypto/idea and crypto/rijndael were missing in the list ofdirectories that may have been deleted
bugfix: handle HelloRequest received during handshake correctly
Disable session related stuff in SSL_ST_OK case of ssl3_accept if wejust sent a HelloRequest
Bugfix: correct cleanup after sending a HelloRequest
New function SSL_renegotiate_pendingNew option SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
make update
fix ssl3_accept: don't call ssl_init_wbio_buffer in HelloRequest case
Fix ssl/s3_encc, ssl/t1_encc and ssl/s3_pktc so that we don'treveal whether illegal block cipher padding was found or a MACverification error occuredIn ssl/s2_pktc, verify that the purported number of padding bytes is inthe legal range
comments
Change Makefile so that it works without any additional changesat least on Solaris
Another demo
Some of the ENGINE file names were changed for 83 filename uniquenessrecently So comments including file names have been fixed, and copyrightnotices brought up to "2001" at the same time
Fix a typo in the preprocessor logic in eng_listc that had left RSA, DSA,and DH all conditional upon OPENSSL_NO_RSA
Add a SHA1 test to evpteststxt  only the MD5 hash algorithm was beingtested previously
'evp_test' needs to initialise and cleanup EVP_CIPHER_CTX structures Also,fix a typo and add cleanup operations This also switches on memory leakchecking which is how the rest was found
add comment
Get rid of junk deleted/renamed function by rebuildingbased on 096 tree
add details
Typo
One more manual page
Rework section about return values another time based on hints fromBodo Moeller
avoid "statement not reached" warning
Updated dependencies from "make update"
Reduce the header dependencies on engineh in apps/
ENGINE uses a very opaque design, so we can predeclare the structure typein "typesh" so that very few headers will need to include engineh,generally only C files using API functions will need it reducingthe header dependencies quite a lot
ENGINE files were renamed, and error strings are now in eng_errc
Add certificate and request demosFix X509V3 macro so they compile
Make maximum certifcate chain size accepted from the peer applicationsettable proposed by "Douglas E Engert" <deengert@anlgov>
add 'release showstopper' entry
update
ex_data situation is no longer that bad
make update
Put all "common" initialisation in the apps_startup and apps_shutdownmacros in appsh
enginetest needs 'memset' defined
missed one file
While ispell may not like it, "cancelling" may be spelt with two "l"s
fix memory leak I think
remove an old comment
restore previous revision  memory leak should be fixed in memc
fix memory leak
avoid warning 'const' discarded
exclude disabled message digests
add AES ciphers
Update so that progsh can indeed be automatically generatedWorking file: progshrevision 124date: 2001/02/19 16:06:03;  author: levitte;  state: Exp;  lines: +59 59Make all configuration macros available for application by makingsure they are available in opensslconfh, by giving them names startingwith "OPENSSL_" to avoid conflicts with other packages and by makingsure e_os2h will cover all platformspecific cases together withopensslconfh[]
typo
Get rid of hazardous EVP_DigestInit_dbg/EVP_DigestInit casedistinction which does not work well because if CRYPTO_MDEBUG isdefined at library compile time, it is not necessarily defined atapplication compile time; and memory debugging now can be reconfiguredat runtime anyway  To get the intended semantics, we could just usethe EVP_DigestInit_dbg unconditionally which uses the caller's__FILE__ and __LINE__ for memory leak debugging, but this would makememory debugging inconsistent  Instead, callers can useCRYPTO_push_info to track down memory leaks
Get rid of hazardous EVP_DigestInit_dbg/EVP_DigestInit casedistinction which does not work well because if CRYPTO_MDEBUG isdefined at library compile time, it is not necessarily defined atapplication compile time; and memory debugging now can be reconfiguredat runtime anyway  To get the intended semantics, we could just usethe EVP_DigestInit_dbg unconditionally which uses the caller's__FILE__ and __LINE__ for memory leak debugging, but this would makememory debugging inconsistent  Instead, callers can useCRYPTO_push_info to track down memory leaksAlso fix indentation, and add OpenSSL copyright
copyright
Delete pointless casts
Fix apps/opensslc and ssl/ssltestc so that they useCRYPTO_set_mem_debug_options instead of CRYPTO_dbg_set_options,which is the default implementation of the former and should usuallynot be directly used by applications at least if we assume that theoptions accepted by the default implementation will also be meaningfulto any other implementationsAlso fix apps/opensslc and ssl/ssltest such that environment variablesetting 'OPENSSL_DEBUG_MEMORYoff' actively disables the compiledinlibrary defaults ie such that CRYPTO_MDEBUG is ignored in thiscase
Replace old and invalid copyright notice
The various hash includes in rand_lclh are needed despite<openssl/evph> is now used MD_DIGEST_LENGTH definitions!No need to include such headers directly in md_randc
Recognize OpenUNIX8 with compiler
Add a cleanup function for MDs
Look up MD5 by name
Remove duplication
Now need shah for some reason
Redo typesafety fix
ispell
ispell
make engine file names unique in 83
Completely reworked SVR5 shared library support
unused function
include the proper header file
double definition
Even more corrections for OpenUNIX 8
Avoid strdupSome platforms need _XOPEN_SOURCE and _XOPEN_SOURCE_EXTENDED to getthe declaration, but on other platforms _XOPEN_SOURCE disablesthe strdup declaration in <stringh>
Sort out mess of colons
Support for shared libraries on Unixware7 and OpenUNIX8Boyd Lynn Gerber <gerberb@zenezcom>
Totally get rid of CRYPTO_LOCK_ERR_HASHIn errc, flags int_error_hash_set and int_thread_hash_setappear superfluous since we can just as well initializeint_error_hash and int_thread_hash to NULLChange some of the errc formatting to conform with the rest ofOpenSSL
Build shared libaries for Unixware7 and OpenUNIX8 in old pre 097style Boyd Lynn Gerber <gerberb@zenezcom>
improve OAEP check
fix formatting so that the file can be view with any tabwidth
Mention DSO_up > DSO_up_ref renaming
Renaming DH_up to DH_up_ref does not warrant a CHANGES entry of its ownas the functions were only introduced a couple of days agoSome '' apparently should be '+' as the changes do not applyto the 096 bugfix branch
ENGINEs can now perform structural cleanup
This adds "destroy" handlers to the existing ENGINEs that load their ownerror strings  the destroy handler functions unload the error strings soany pending error state referring to them will not attempt to referencethem after the ENGINE has been destroyed
ENGINE's init and finish handler functions are used when the ENGINE isbeing enabled or disabled respectively for operation Additionally, eachENGINE has a constructor function where it can do more 'structural' levelintialisations such as loading error strings, creating "ex_data" indices,etc This change introduces a handler function that gives an ENGINE acorresponding opportunity to cleanup when the ENGINE is being destroyed Italso adds the "get/set" API functions that control this "destroy" handlerfunction in an ENGINE
Add some missing CHANGES items
Oops^2: It was the correct line, but an incorrect change
Oops, wrong line
mcpui486 vs m486 
Change DH_up > DH_up_ref
"DH_up" had been changed to "DH_up_ref" in libeaynum but the functiondeclaration and implementation had not So a recent update recreated theoriginal definition in libeaynum  this corrects it and changes the "dh"code to the "up_ref" variant
Solaris <stringh> does not declare 'strdup' if _XOPEN_SOURCE isdefinedPreprocessor symbols such as _POSIX_C_SOURCE or _XOPEN_SOURCE aresupposed to disable anything not allowed by the respectivespecification; I'm not sure why 'strdup' would be consideredan outlaw though
bug fix: bn_sqr_recursive output is twice its input size
Eric Hanchrow points out that Cygwin perl works
Use GCC 295/30 optimization
Update the ENGINE README, and stock it up with extra verbeage for goodmeasure including info and instructions on "dynamic" ENGINEs
strsep implementation to allow the file to compile on nonBSD systemsSubmitted by: "Brian Havard" <brianh@kheldarapanaorgau>
Make the 'dynamic' ENGINE bundle up the loading application/library'slocking callbacks to pass to the loaded library in addition to theexisting mem, ex_data, and err callbacks Also change the defaultimplementation of the "bind_engine" function to apply those callbacks, iethe IMPLEMENT_DYNAMIC_BIND_FN macro
Add a "_up" > "_up_ref" change to libeaynum that was missing from therecent changes Also, do the same change to the DSO_up function
typo
Now that we have ERR_unload_strings, ERR_load_ERR_strings mustalways load its strings because they might have been unloadedsince the 'init' flag was deletedBut build_SYS_str_reasons can use an 'init' flag
changing something requires a write lock, not a read lock
CHANGES should list all API changes relevant for applicationshere: X509_STORE_CTX_init
OpenSSL copyright notices 
delete redundant ERR_load_CRYPTO_strings prototype
This changes the existing hardware ENGINE implementations to dynamicallydeclare their own error strings so that they can be more easily compiled asexternal sharedlibraries if desired Also, each implementation has beengiven canonical "dynamic" support at the base of each file and is onlybuilt if the ENGINE_DYNAMIC_SUPPORT symbol is definedAlso, use "void" prototypes rather than empty prototypes in engine_inthThis does not yet;i remove error strings when unloading,ii remove the redundant ENGINE_R_ codes though ENGINE_F_ codeshave gone, oriii provide any instructions on how to build sharedlibrary ENGINEs oruse themAll are on their way
This change adds a new ENGINE called "dynamic" that allows new ENGINEimplementations to be loaded from selfcontained sharedlibraries It alsoprovides in engineh definitions and macros to help implement aselfcontained ENGINE Version control is handled in a way whereby theloader or loadee can veto the load depending on any objections it has witheach other's declared interface level The way this is currentlyimplemented assumes a veto will only take place when one side notices theother's interface level is too old If the other side is newer, it shouldbe assumed the newer version knows better whether to veto the load or notVersion checking like other "dynamic" settings can be controlled usingthe "dynamic" ENGINE's control commands Also, the semantics for theloading allow a sharedlibrary ENGINE implementation to handle differinginterface levels on the fly eg loading secondary sharedlibrariesdepending on the versions requiredCode will be added soon to the existing ENGINEs to illustrate how they canbe built as external libraries rather than building statically intolibcryptoNB: Applications wanting to support "dynamic"loadable ENGINEs will need toadd support for ENGINE "control commands" See apps/enginec for an exampleof this, and use "apps/openssl engine vvvv" to test or experiment
Note the "ERR_unload_strings" function
Add a new ERR function, "ERR_unload_strings", to complement the existing"ERR_load_strings" function
Correct a typo
Rename recently introduced functions for improved code clarity:[DR]SA_up  >  [DR]SA_up_ref
Use uniformly chosen witnesses for MillerRabin testby using new BN_pseudo_rand_range function
rearrange includes because trying to include <crypto/cryptodevh>is a bad idea if OPENSSL_OPENBSD_DEV_CRYPTO is not defined
Convert "max" to "mx" for variable names brought to my attention by SteveHenson Also, reverse a previous change that used an implicit functionpointer cast rather than an explicit data pointer cast in the STACK cleanupcode
Make MD functions take EVP_MD_CTX  instead of void , add copy function
Note the "ex_data" changes
Make the necessary changes to work with the recent "ex_data" overhaulSee the commit log message for that for more informationNB: X509_STORE_CTX's use of "ex_data" support was actually misimplementedinitialisation by "memset" won't/can't/doesn't work This fixes that butrequires that X509_STORE_CTX_init be able to handle errors  so itsprototype has been changed to return 'int' rather than 'void' All uses ofthat function throughout the source code have been tracked down andadjusted
First step in fixing "ex_data" support Warning: big commit log Currently, this change merely addresses where ex_data indexes are storedand managed, and thus fixes the threadsafety issues that existed at thatlevel "Class" code eg RSA, DSA, etc no longer store their own STACKSand perclass index counters  all such data is stored inside ex_datac Sorather than passing both STACK+counter to indexmanagement ex_datafunctions, a 'class_index' is instead passed to indicate the class egCRYPTO_EX_INDEX_RSA New classes can be dynamically registered ontheflyand this is also threadsafe inside ex_datac though whether the callermanages the return value in a threadsafe way is not addressedThis does not change the "get/set" functions on individual "ex_data"structures, and so threadsafety at that level isn't yet assuredLikewise, the method of getting and storing perclass indexes has notchanged, so locking may still be required at the "caller" end but isnonetheless threadsafe inside "ex_data"'s internal implementationTypically this occurs when code implements a new method of some kind andstores its own perclass index in a global variable without locking thesetting and usage of that variable If the code in question is likely to beused in multiple threads, locking the setting and use of that index isstill up to the code in question Possible fixes to this are beingsketched, but definitely require more major changes to the API itself thanthis change undertakesThe underlying implementation in ex_datac has also been modularised sothat alternative "ex_data" implementations that control all access tostate can be plugged in Eg a loaded module can have its implementationset to that of the application loaded it  the result being thatthreadsafety and consistency of "ex_data" classes and indexes can bemaintained in the same place rather than the loaded module using its owncopy of ex_data support code and stateDue to the centralisation of "state" with this change, cleanup of all"ex_data" state can now be performed properly Previously all allocation ofex_data state was guaranteed to leak  and MemCheck_off had been used toavoid it flagging up the memory debugging A new function has been added toperfrom all this cleanup, CRYPTO_cleanup_all_ex_data The "openssl"commands have been changed to use this cleanup, as have the relevant testprograms External application code may want to do so too  failure tocleanup will not induce more memory leaking than was the case before, butthe memory debugging is not tricked into hiding it any more so it may"appear" where it previously did not
Only OPENSSL_free nonNULL pointers
undo, didn't work
 empty log message 
strsep implementation to allow the file to compile on nonBSD systemsSubmitted by: "Brian Havard" <brianh@kheldarapanaorgau>
make update
zlib default was broken on most platformsmcpui486 is new as of gcc 295, and if you have that, you wouldn'twant to optimize for 486 anyway
A version of gcc had been giving somewhat odd "trigraph" warnings aboutthis construct, and Ulf provided the following insight as to why;> ANSI C compliant compilers must substitute "??" for "]" because your> terminal might not have a "]" key if you bought it in the early 1970sSo we escape the final '?' to avoid this pathological case
Ensure that failure to create the BIO in 'CRYPTO_mem_leaks_fp' doesn'tleave memory debugging turned off[Spotted by Gtz BabinEbell]
Fix SSL memory leak
Make sure "CRYPTO_mem_leaks_fp" doesn't itself create a reportable memoryleak
"make update"
gcc can't spot that 'derlst' is not used uninitialised, so appease it
Test digests
Add digests
Tidy up some code formatting
Note the "ERR" changes
This changes the "ERR" code to have all access to state a hash table oferror strings and a hash table storing perthread error state go via anERR_FNS function table The first time an ERR operation occurs, theimplementation that will be used from then on is set to the internal"defaults" implementation if it has not already been set The actual LHASHtables are only accessed by this implementationThis is primarily for modules that can be loaded at runtime and bound intoan application or a sharedlibrary version of OpenSSL If the module hasits own staticallylinked copy of OpenSSL code  this mechanism allows itto not create and use ERR information in its own linked "ERR" code, butinstead to use and interact with the state stored in the loaderapplication or shared library The loader calls ERR_get_implementationand the return value is what the module should use when calling its owncopy of ERR_set_implementation
Make a note of the "up" functions
Changes crypto/evp/ and ssl/ code from directly incrementing referencecounts in DH, DSA, and RSA structures Instead they use the new "_up"functions that handle this
Give DH, DSA, and RSA functions to "up" their reference counts Otherwise,dependant code has to directly increment the "references" value of eachsuch structure using the corresponding lock Apart from code duplication,this provided no "REF_CHECK/REF_PRINT" checking and violatedencapsulation
Allow client certificate lists > 16kB "Douglas E Engert" <deengert@anlgov>
Wording of comment
Needed for build on SunOS 41x with gcc Jeffrey Hutzelman <jhutz@cmuedu>
More docs
passin argument not used when actually loading the keyfound by Massimiliano Pala <madwolf@hackmastersnet>
Load OCSP responder key before waiting for an incomingconnection so it can prompt for pass phrase on startupinstead of after the first connectionAdd port switch to usage message
Add ifdefs to some devcrypto code
Typo
More manual pages Constify
As discussed recently on opensslusers
Make clear, that using the compression layer is currently not recommended
typo
More tests
One more manual page
Documentation on how to handle compression methodsHopefully it is clear enough, that it is currently not recommended
Checked in from the wrong !@$& copy
More interdependencies with respect to shutdown behaviour
Alert description strings for TLSv1 and documentation
Add RC4 support to OpenBSD
Add AES tests
Add EVP test program
Add first cut symmetric crypto support
More details about session timeout settings
One more function documented
SSL_shutdown has even more properties
One more step on the way for complete documentation
Unidirectional shutdown is allowed according to the RFC
Make sure evil file name characters, like spaces or ampersands !,don't disturb the rehashing processSpotted and suggested patch from Rudo Thomas <rudo@internetsk>
Make passin passout etc work againFix leak in cac when using passin
Add CRL utility functions to allow CRLs to bebuilt up without accessing structures directlyUpdate cac to use new functionsFix cac so it now build CRLs correctly again
Bugfixes provided by "Stephen Hinton" <shinton@netopiacom>
Better description of the behaviour of SSL_shutdown as it is now, brokenor not
gcc 30 tells me that m486 is deprecated  The gcc 295 manual tellsme the same and that the correct option is mcpui486  I'm assumingmcpu has been around for some time, and that it's therefore safe tochange all occurences of m486 to mcpui486
The indexes returned by _get_ex_new_index functions are used whensetting stack actually, array values in ex_data So only increment theglobal counters if the underlying CRYPTO_get_ex_new_index call succeedsThis change doesn't make "ex_data" right see the comment at the head ofex_datac to know why, but at least makes the source code marginally lessfrustrating
The indexes returned by _get_ex_new_index functions are used whensetting stack actually, array values in ex_data So only increment theglobal counters if the underlying CRYPTO_get_ex_new_index call succeedsThis change doesn't make "ex_data" right see the comment at the head ofex_datac to know why, but at least makes the source code marginally lessfrustrating
Move CIPHER_CTX cleanups to _Final routines instead of _Init, which avoidsproblems with leaks and uninitialised structures
Apply the Tru64 patch from Tim Mooney <mooney@dogbertccndsuNoDakedu>His comments are:1 Changes all references for `True64' to be `Tru64', which is the correctspelling for the OS name2 Makes `alphacc' be the same as `alpha164cc', and adds an `alphaoldcc'entry that is the same as the previous `alphacc'  The reason is that mostpeople these days are using the newer compiler, so it should be the default3 Adds a bit of commentary to Configure, regarding the name changes ofthe OS over the years, so it's not so confusing to people that haven't beenwith the OS for a while4 Adds an `alphaccrpath' target which is not selected automaticallyby Configure under any circumstance that builds an RPATH into theshared libraries  This is explained in the comment in Configure  It'svery very useful for people that want it, and people that don't want itjust shouldn't choose that target5 Adds the `pthread' flag as the best way to get POSIX thread supportfrom the newer compiler6 Updates the Makefile targets, so that when the `alpha164cc', `alphacc',or `alphaccrpath' target is what Configure is set to use, it uses a Makefiletarget that includes the `msym' option when building the shared libraryThis is a performance enhancement7 Updates `config' so that if it detects you're running version 4 or 5of the OS, it automatically selects `alphacc', but uses `alphaoldcc'for versions 13 of the OS8 Updates the comment in opensslvh, fixing both the OS name typo andadding a reference to IRIX 6x, since the shared library semantics arevirtually identical there
add missing link
Bugfix: larger message size in ssl3_get_key_exchange becauseServerKeyExchange message may be skippedSubmitted by:  Petr Lampa <lampa@feevutbrcz>
Fix typos shinagawa@starzkodeccom
More typedef'd struct names as search targets
Reinsert typedef'ed names for structs to help those trying to read thesourcecode including fgrep
Start to reduce some of the header bloat
Fix memory leak
Parameter correction for CIOFSESSION
Remove extra whitespace Sorry
Reinstate accidentally deleted code
Get rid of the stuff we, err, got rid of
Header bloat reduction for EVP_PKEY
This ghastly hack prevents CVS wars over Kerberos which is disabled by default
Oops, one SSL_OP_NON_EXPORT_FIRST was left
Make /dev/crypto work with new EVP structures
Make sure memcpy gets properly declared by including stringh
remove a comma
Don't disable rollback attack detection as a recommended bug workaround
Mention removed option
Remove SSL_OP_NON_EXPORT_FIRST:It did not work, it was deactivated by if 0/endif anyway _and_ we now havethe working SSL_OP_CIPHER_SERVER_PREFERENCE
make update
Make sure the source file is included among the dependencies  This isthe norm for 'gcc M' but not for 'makedepend', and is merelyintroduced here to avoid commit wars
Reworked manual pages with a lot of input from Bodo Moeller
Document DES changes better
Remove old unused stuff
Indent
Vade retro C++ comments!Latin for "comments", anyone?
Make as sure as possible that gethostname will be properly declared
Correct most of the unsigned vs signed warnings or int vs size_t,and rename some local variables to avoid name shadowing
Whoops, my fault, a backslash got converted to a slash
More Kerberos SSL changes from Jeffrey Altman <jaltman@columbiaedu>His comments are:First, it corrects a problem introduced in the last patch where thekssl_map_enc would intentionally return NULL for valid ENCTYPEvalues  This was done to prevent verification of the kerberos 5authenticator from being performed when Derived Key ciphers werein use  Unfortunately, the authenticator verification routine wasnot the only place that function was used  And it caused core dumpsSecond, it attempt to add to SSL_SESSION the Kerberos 5 ClientPrincipal Name
Remove //
make update
Really add the EVP and all of the DES changes
Make EVPs allocate context memory, thus making them extensible RationaliseDES's keyschedulesI know these two should be separate, and I'll back out the DES changes if theyare deemed to be an errorNote that there is a memory leak lurking in SSL somewhere in this version
Only set the verify callback if there's one to set!
Just a "get to know your system" bit
Enhanced support for IA64 Linux and HPUX as well as better support forHPUX in common in /config Note that for the moment of this writingnone of 64bit platforms pass bntest I'm committing this anyway as it'stoo frustrating to patch snapshots over and over while 096 is known towork
Support for Intel and HPUXi assemblers
ANSIfication
Typo in stty command lines
Don't miss files
Fix inconsistent behaviour with respect to verify_callback handling
Forgot to mention second fix
length of secret exponent is needed only when we create one
Undo DH_generate_key change: s3_srvrc was using it correctly
Another uninitialized static that may lead to problems on Solaris under somecircumstances
Addapt VMS script to the latest changes in the makefiles
Make sure outl is always initialized in EVP_EncryptUpdate
More linker bloat reorganisation:Split private key PEM and normal PEM handling Private keyhandling needs to link in stuff like PKCS8Relocate the ASN1 _dup functions, to the relevant ASN1modules using new macro IMPLEMENT_ASN1_DUP_FUNCTION Previouslythese were all in crypto/x509/x_allc along with every ASN1BIO/fp function which linked in every ASN1 function ifa single dup was usedMove the authority key id ASN1 structure to a separate fileThis is used in the X509 routines and its previous locationlinked in all the v3 extension codeAlso move ASN1_tag2bit to avoid linking in a_bytesc whichis now largely obsoleteSo far under Linux stripped binary with single PEM_read_X509is now 238K compared to 380K before these changes
First of several reorganisations toreduce linker bloat For example thesingle line:PEM_read_X509results in a binary of around 400K in Linux!This first step separates some of the PEM functions andavoids linking in some PKCS7 and PKCS12 code
Fix problem occuring when used from OpenSSH on Solaris 8
DH key generation should not use a do  while loop,or bogus DH parameters can be used for launching DOS attacks
Don't preserve existing keys in DH_generate_key
md_randc thread safety
always reject data > n
Support for 64bit Solaris build with GCC 30 and later It should beexplicitely noted that 64bit SPARCv9 ABI is not officially supportedby GCC 30 support is scheduled for 31 release, but it appears towork, at the very least 'make test' passes
Fix wrong information about SSL_set_connect_state
add a comment
avoid warnings
Avoid race conditionSubmitted by: Travis Vitek <vitek@roguewavecom>
 New INSTALL document describing different ways to build "tunala" andpossible problems New file breakagec handles so far missing functions Get rid of some signed/unsigned/const warnings thanks to solariscc Add autoconf/automake input files, and helper scripts to populate missingbut autogenerated filesThis change adds a configurein and Makefileam to build everything usingautoconf, automake, and libtool  and adds "gunk" scripts to generate thevarious files those things need and clean then up again after This meansthat "autogunksh" needs to be run first on a system with the autotools,but the resulting directory should be "configure"able and compilable onsystems without those tools
Additional inline reference
Add missing reference
Tidy up "cvs update" output a bit
Not all platforms have the OpenBSD crypto device
Documentation about ephemeral key exchange
Clean up EVP macros, rename DES EDE3 modes correctly, temporary support forOpenBSD /dev/crypto this will be revamped later when the appropriate machineryis available
More Kerberos SSL patches from Vern Staats <staatsvr@aschpcmil>His comments are:This patch fixes the problem of modern Kerberos using "derived keys"to encrypt the authenticator by disabling the authenticator checkfor all derived keys enctypesI think I've got all the bugfixes that Jeffrey and I discussed rolledinto this  There were some problems with Jeffrey's code to convertthe authenticator's Kerberos timestring into struct tm eg Z, 1900;it helps to have an actual decryptable authenticator to play withSo I've shamelessly pushed in my code, while stealing some bits fromJeffrey
Updated explanation
Some more documentation bits
Currently, RSA code, when using no padding scheme, simply checks that inputdoes not contain more bytes than the RSA modulus 'n'  it does not checkthat the input is strictly less than 'n' Whether this should be thecase or not is open to debate  however, due to security problems withreturning miscalculated CRT results, the 'rsa_mod_exp' implementation inrsa_eayc now performs a publickey exponentiation to verify the CRT resultand in the event of an error will instead recalculate and return a nonCRTmore expensive mod_exp calculation As the mod_exp of 'I' is equivalentto the mod_exp of 'I mod n', and the verify result is automatically between0 and n1 inclusive, the verify only matches the input if 'I' was less than'n', otherwise even a correct CRT calculation is only congruent to 'I' iethey differ by a multiple of 'n' Rather than rejecting correctcalculations and doing redundant and slower ones instead, this changes theequality check in the verification code to a congruence check
Missing line 096b release and IA64 patch advertisement:
SSL_get_rfc were documented but not implemented
SSL_get_[rw]fd were documented but not implemented
Allow OCSP server to handle multiple requestsDocument new OCSP options
Initial OCSP server support, using indextxt formatThis can process internal requests or behave like amini responderTodo: documentation, update usage info
Prevent KSSL server from requesting a client certificateSubmitted by Jeffrey Altman <jaltman@columbiaedu>
paddr may be NULL  Do not crash if it is
Clarify that zlibdynamic is the default choice
Add the possibility to specify the use of zlib compression anddecompression  It can be set up to link at link time or to load thezlib library at runtime
Clarify actual state
Some of the Kerberos code had dissapeared  Reapply
Document the recent Kerberos SSL changes
Delete extra ;
In ocsp_match_issuerid we are passed the CA that signed the respondercertificate so need to match its subject with the certificate IDs in theresponse
make updateNote that since some private kssl functions were exported, thesimplest way to rebuild the number table was to toss everything thatwas new since OpenSSL 096b  This is safe, since those functionshave not yet been exported in an OpenSSL release  Beware, people whotrust intermediary snapshots!
Include kssl_lclh where needed
Private functions do not belong in an exported header file, so movethem to one that won't get exported
Changes to the Kerberos SSL code by Jeffrey Altman <jaltman@columbiaedu>His comments are: adds use of replay cache to protect against replay attacks adds functions kssl_tgt_is_available andkssl_keytab_is_available which are used within s3_libcand ssl_libc to determine at runtime whether or notKRB5 ciphers can be supported during the current session
openssl speed is quite useful for testing hardware support among otherthings, especially as the RSA keys are fixed However, DSA only fixes theDSA parameters and then generates the public and private components on thefly each time  this commit hardcodes some sampled key values so that thisis no longer the case
Code to avoid the use of nonstandard strptime  ByJeffrey Altman <jaltman@columbiaedu>Really, the time that's being parsed is a GeneralizedTime, so ifASN1_GENERALIZEDTIME_get ever gets implemented, it should be usedinstead
Typo
Changes to the Kerberos SSL code by Jeffrey Altman <jaltman@columbiaedu>His comments are: Fixed all of the Windows dynamic loading functions, prototypes, etc Corrected all of the unsigned/signed comparison warnings Replaced the references to krb5_cksumarray[] for two reasonsFirst, it was an internal variable that should not have beenreferenced outside the library; nor could it have been witha shared library with restricted exports  Second, thevariable is no longer used in current Kerberos implementationsI replaced the code with equivalent functionality using functionsthat are exported from the library
What is an 'engine' version?
The implementation of the TKTBODY ASN1 functions was missing
make update
Make sure crypto/krb5/krb5_asnh is copied to the directory ofexported header files
Make sure crypto/krb5/krb5_asnh becomes part of libeaynum
Clarify! based on recent mailinglist discussions
One forgotten function
make update
EVP_Digest takes one more parameter
For consistency with the terminology used in my SAC2001 paper, avoidthe term "simultaneous multiplication" which  acording to thepaper, at least  applies only to certain methods which we don't usehere
comment change
Fix PRNG
In version numbers, there is just one "M" nybble
Precomputation will not necessarily be LImLee precomputation
If I define _XOPEN_SOURCE before including any system header file,things will work much more smoothly
Patches from Vern Staats <staatsvr@aschpcmil> to get Kerberos 5 inSSL according to RFC 2712  His comment is:This is a patch to opensslSNAP20010702 to support Kerberized SSLauthentication  I'm expecting to have the full kssl05 kit up onsourceforge by the end of the week  The full kit includes patchesfor modssl, apache, and a few text clients  The sourceforge URLis http://sourceforgenet/projects/kssl/ Thanks to a note from Simon Wilkinson I've replaced my KRB5 AP_REQmessage with a real KerberosWrapper struct  I think this is fullyRFC 2712 compliant now, including support for the optionalauthenticator field  I also added opensslstyle ASN1 macros fora few Kerberos structs; see crypto/krb5/ if you're interested
A better compromise between encrypt and decrypt but why isn't it as fastfor encrypt?
Handle the common case first where input size is a multiple of block sizeWorth around 5 for encrypt Slows down decrypt slightly, but I expect toregain that later
Use & instead of   worth about 4 for 8 byte blocks
Don't update argc, argv for decrypt flag!
Speed test decrypt EVP operations
Correct constness
Remove unnecessary casts
Constification
Use one address consistently
Change info to correct values
Align with 096stable CHANGES file, and make some corrections
Engine memory leaks have been fixed by now
Call ENGINE_cleanup to avoid memory leak
Entry for Andy's mips3s fix
Update nCipher header with more liberal licence
When only the key is given to "enc", the IV is undefinedfound by Andy Brown <logic@warthogcom>
Make an extra note about shared libraries and backward compatibility
Let's include cryptlibh before things like NO_SYSLOG are tested orused
[Forgotten commits?]Changes to have OpenSSL compile on OS/2Contributed by "Brian Havard" <brianh@kheldarapanaorgau>
Fix warning
Insuline shot
Changes to have OpenSSL compile on OS/2Contributed by "Brian Havard" <brianh@kheldarapanaorgau>
Modify apps to use NCONF code instead of old CONF codeAdd new extension functions which work with NCONFTidy up extension config routines and remove redundant codeFix NCONF_get_numberTodo: more testing of apps to see they still work
Make better use of load_cert, load_certs and load_key
Another empty X509_NAME fix
Handle empty X509_NAME in printing routines
DSA verification should insist that r and s are in the allowed range
Make better use of load_cert, load_certs and load_key
Make get_ip a bit more strict in it's parsing of IP addresses, andat the same time a bit more accepting with host names
Make better use of load_cert, load_certs and load_key
Translate into valid C don't call functions with wrong prototypes
Call apps_shutdown to take down what apps_startup set up
Make sure we don't return 0 on error
In {RSA,DSA,DH}_new_methodx need to increase the referencecount of the ENGINE is x is not NULL since it will be freedin {RSA,DSA,DH}_free
Use the new UI features, among others the new boolean inputNOTE: Boolean input hasn't been very well tested yet, so this part mayfail miserably
Including stdioh before setting _XOPEN_SOURCE and_XOPEN_SOURCE_EXTENDED wasn't very smart
make update
Use apps_shutdown in all applications, in case someone decides notto go the monolith way does anyone do that these days?NOTE: a few applications are missing in this commit  I've a few morechanges in them that I haven't tested yet
apps_startup needs a corresponding apps_shutdown
Make use of new features in UI's  Among others, the applicationpassword callbak doesn't need to check for sizes any more
Oops, applies to 097 only
Document recent changes
Do not loop i the OpenSSL UI method any more  Instead, lettheapplication do thatNOTE: there's no requirement for other UI_METHODs to avoid this kindof loop  For example, a GUI UI_METHOD would probably check thelengths of the answers from within instead of being constantlyredisplayed for everything that is wrong
make update
Implement boolean yes/no or OK/Cancel,  inputImplement UI controls  Current controls are the possibility to outputthe OpenSSL error stack on the same channel from within UI_processand to check if the same user interface can be redone without beingrebuilt this is often more a question of philosophy thantechnicalities
New error printing function that gives the possibility to print theerrors through an arbitrary function
Include the UI error strings
For the UI functions that return an int, 0 or any positive number is asuccess return, any negative number is a failure  Make sure we checkthe return value with that in mind
Fix hwcrhk_insert_card
Fix UI leak in apps
In UI_dup_ function, use the duped string, not the original
Update my config entry to allow use of DSOs
This fixes "Spurious test failures on IRIX?" reported in April ApparentlyI was wrong in conclusions about when addition starts overflowing in combaXroutines
Fix memory leak when RAND is used: need to cleanupRANDs ENGINE reference in ENGINE_cleanup
Update my status
Since there is a way to create UI_METHODs, implement a destructor aswellThis probably requires reference counters and locks as well  To beimplemented later
Modify "openssl engine" to handle and display internal controlcommands appropriately
Change all calls to low level digest routines in the library andapplications to use EVP Add missing calls to HMAC_cleanup anddon't assume HMAC_CTX can be copied using memcpyNote: this is almost identical to the patch submitted to openssldevby Verdon Walker <VWalker@novellcom> except some redundantEVP_add_digest_/EVP_cleanup calls were removed and some changesmade to avoid compiler warnings
Fix memory leaks
cp is only used when DSA is built
Do a proof of concept  "openssl genrsa" will make the name of thefile part of the password prompt unless it's standard inputMore will be added
Change the common application routines to use a UI_METHOD for passwordprompting, even when done through the callback
 Add the possibility to control engines through control names butwith arbitrary arguments instead of just a string Change the key loaders to take a UI_METHOD instead of a callbackfunction pointer  NOTE: this breaks binary compatibility withearlier versions of OpenSSL [engine] Addapt the nCipher code for these new conditions and add a cardinsertion callback
The default flag should be for default passwords only  Otherwise,someone having a default that is not a password will be confused
Enhance the user interface with better support for dialog boxprompting, applicationdefined prompts, the possibility to usedefaults for example default passwords from somewhere else andinterrupts/cancelations
make apps compile again
Don't set pointer if add_lock_callback used
One feature wasn't quite commited yet
Provide an applicationcommon setup function for engines and use iteverywhere
Fix a memory leak there's another around here somewhere, thoughPR:
Delete a redundant line
pay attention to blocksize before attempting decryption
For MSDOS, the tty filename still is "con", not "/dev/tty" 
Get rid of "possible WAW dependency" warningsSubmitted by:Reviewed by:PR:
even use of default engines leaks memory
Add directory name to the entry on /crypto/ui/
Earlier OpenSSL versions printed prompts to stderrIn the new crypto/ui/, this was changed into tty which is usually/dev/tty, ie the FILE  used for reading passwords from the userHowever stdio buffering for read/write streams is not without pitfallspasswords would be echoed on some systemsTo avoid problems, split tty into tty_in and tty_out which areopened separately
Make update
Initialize UI ex_data
Add support for MS CSP Name PKCS12 attribute
more error codes fixed
ERR_peek_error returns "unsigned long"
Use memmove instead of memcpy on areas that may overlapSpotted by Nalin Dahyabhai <nalin@redhatcom>
Don't forget to initialise
OAEP fix
when checking OAEP, signal just a single kind of 'decoding error'
move check to avoid memory leak
make sure we don't write to seed[1]
'make update'
Defining __USE_XOPEN_EXTENDED was the wrong thing  Instead, define_XOPEN_SOURCE
A good use of the UI interface is as a password callback replacementfor new functions  One might still want to be able to pass downa userdata pointer to be used by the UI  However, ex_data doesn'tquite cut it, since that means the appropriate index to it might needto be shared between parts that aren't really related in that sense,and would require the currently hidden static index holders to beuncovered  Not a good thing  Therefore, add the possibility to add auserdata pointer to a UI
Small detail about AIX forgotten
Accept digits in symbol names  Spotted by Brian Havard <brianh@kheldarapanaorgau>
More info on SRP
Added more info in SRP
Confusion between algorithms resolved
nCipher callbacks shall return 0 on success, something else otherwise
Stop mishandling the type number in dynlock locking
Fix Bleichenbacher PKCS 1 15 countermeasureThe attack against SSL 31 and TLS 10 is impractical anyway,otherwise this would be a security relevant patch
increase DEFAULT_BUFFER_SIZE 4K instead of just 1K
Don't decrement the reference counter twice when destroying dynamiclinks
Fix a memory leak in 'sk_dup' in the case a realloc fails Also, tidy upa bit of weird code in sk_new
Get rid of RAW dependency warningsSubmitted by:Reviewed by:PR:
Extend all the loading functions to take an engine pointer, a passstring some engines may have certificates protected by a PIN! anda description to put into error messagesAlso, have our own password callback that we can send both a passwordand some prompt info to  The default password callback in EVP assumesthat the passed parameter is a password, which isn't always the rightthing, and the ENGINE code at least the nCipher one makes otherassumptionsAlso, in spite of having the functions to load keys, some utilitiesdid the loading all by themselves  That's changed too
A wish was expressed
Don't forget responsible person so that its clear who is to blame
Assembler support for IA64 See the source code commentary for furtherdetails performance numbers and accompanying discussions: Note thatthe code is not engaged in /Configure yet I'll add it later this weekalong with updates for spec fileSubmitted by:Reviewed by:PR:
Document the latest change in ENGINEs
We had the password callback for ENGINEs pretty much wrong  Andpasswords that were given to the key loading functions were completelyignored, at least in the ncipher code, and then we made the assumptionthat the callback wanted a prompt as user argumentAll that is now changed, and the application author is forced to givea callback function of type pem_callback_cb and possibly an argumentfor it, just as for all other functions that want to generate passwordpromptingNOTE: this change creates binary and source incompatibilities withprevious versions of OpenSSL [engine]  It's worth it this time, toget it right or at least better and with a chance that it'll work
Add missing variable length cipher flag for BlowfishOnly use trust settings if either trust or reject settingsare present, otherwise use compatibility mode This stopsroot CAs being rejected if they have alias of keyid set
VMS doesn't support more than on period in a file name
Add examples to EVP_EncryptInit manual page
Fix for new UI functions under Win32For some unknown reason fopen"con", "w" is theonly way to make this work Using "r+" and "w+"causes the fopen call to fail and the fallbackusing stdin doesn't work because writing to stdinfails
Add a requirements section for OpenVMS
Add a few more details on what one might need  make and a developmentenvironment were a part of a Unix operating systems, but these daysyou see an increasing number of installations that do not necessarelyhave these crucial parts by default, so it's needs mentioning
Add missing items SSL_ERROR_WANT_CONNECT, SSL_ERROR_WANT_ACCEPT
New internal function OPENSSL_gmtime, which is intended to do the sameas gmtime_r on the systems where that is defined
Increase ENTROPY_NEEDED to support Rijndael's larger key size
Do not forget to increment the pointers
Lowcase the names of the system routines, since some versions ofDEC C only have them declared that way it doesn't really matter,since the linker is caseinsensitive by default
branch on equal is beql, not beq
Make sure strdup is properly declared
Make sure memset is properly declared
ui was forgotten when installing libcrypto and it's headers
ui_compath was forgotten in the "symlinking" routine
Remove the password reading objects from LIB_DES
Make more short aliases for symbols that are longer than 31characters
len is a size_t, which is an unsigned integer  Therefore, somecompilers will complain against the check for less than zero
Use ui_compath to get the password reading functions
Make it so the compiler doesn't inform me about the dollars in somesymbols
Typos
One more point to clarify, pointed out by "Greg Stark" <ghstark@poboxcom>
It seems like the removal of "extern" before "static" wasn't amistake
Document the addition
A randomizer for OpenVMS, using the statistics that are easilyreachableIt's completely untested for now  To be done in the next few days
Define `ok' and better error detection
make update
Win16 too :
des_read_password and des_read_2passwords can only appear if DESis compiled
When doing rewrites on ssleaynum, the file was prematurely closedMake rewrites the default, since it works, and people get confused ifchanged information doesn't get rewritten automagically
Move the password reading functions completely away from the DESsectionAdd ui_compath for inclusion by those who want the old functions andprovide all of them, not just the higherlevel ones, in ui_compatc
Put back a removed "extern", or many compilers will complain aboutredefined variables
if 0 out deleted ? functions to stop Win32 DLLbuild falling over
Change Win32 to use EXPORT_VAR_AS_FNFix OPENSSL_IMPLEMENT_GLOBALAllow Win32 to use EXPORT_VAR_AS_FN in mkdefplmake update
Clarify behaviour with respect to SSL/TLS records
Under VC++ _DLL is set to indicate that the applicationwill be linked against the DLL runtime library It isautomatically set when /MD is usedAs a result OpenSSL shouldn't use _DLL to determine ifit should set OPENSSL_OPT_WINDLL because this willcause linkage conflicts with static builds which doinclude the /MD compiler switch
Typo
e_os2h defines things like OPENSSL_SYS_MSDOS, not opensslconfhbasically: whooops :
Clarify behaviour of SSL_write by mentioning SSL_MODE_ENABLE_PARTIAL_WRITEflag as discussed on the mailing list
Update changelog to reflect additional changes made to the egdlocations
restore change undone in 1831 apparently by accident
Purpose and trust setting functions for X509_STORETidy existing code
Fix warning with DEBUG_SAFESTACK
Fix to allow multiple NONE libraries in mkerrpl 
Allow various X509_STORE_CTX properties to beinherited from X509_STOREAdd CRL checking options to other applications
fix an old entry
There is no uitest
Don't forget crypto/ui
Initial CRL based revocation checking
Clarify the license and copyright, make preprocessor dirctives alittle bit clearer and use the new OPENSSL_SYS_ macros
make update
Add a general user interface API  This is designed to replace thingslike des_read_password and friends backward compatibility functionsusing this new API are provided  The purpose is to remove promptingfunctions from the DES code section as well as provide for promptingthrough dialog boxes in a window system and the like
the backslash is significant
rnd issues
bctest changes for Ultrix don't return 1 from bctest, otherwise make aborts
Some platforms most notably Windows do not have a $HOME by defaultFor those, unless the environment variables RANDFILE or HOME aredefined the default case!, RAND_file_name will return NULLThis change adds a default HOME for those platformsTo add a default HOME for any platform, just define DEFAULT_HOME inthe proper place, wrapped in appropriate ifdefendif, in e_osh
Add support for Sun C on Solaris x86  Contributed by Ben <mouring@etoheviladminorg>
Remove part conflict indicator
In RSA, DSA, DH, and RAND  if the "_new" function fails because theENGINE code does not return a default, set an error
Win32 fixes:define LLONG properly for VC++stop compiler complaining about signed/unsigned mismatch in apps/enginec
A method to create shared libraries on AIX, and according to"Howard Chu" <hyc@highlandsuncom>, it may be general enoughto work on any Unixly system
make update
For some inexplicable reason, I'd a left the debugging irreversiblyturned on, and b left a somewhat curious debugging string in the output
Some fixes to the referencecounting in ENGINE code First, there were afew statements equivalent to "ENGINE_addENGINE_openssl" etc The innercall to ENGINE_openssl as with other functions like it orphans astructural reference count Second, the ENGINE_cleanup function alsoneeds to clean up the functional reference counts held internally as thelist of "defaults" ie as used when RSA_new requires an appropriateENGINE reference So ENGINE_clear_defaults was created and is calledfrom within ENGINE_cleanup Third, some of the existing code waslogically broken in its treatment of reference counts and locking myfault, so the necessary bits have been restructured and tidied upTo test this stuff, compiling with ENGINE_REF_COUNT_DEBUG will cause everyreference count change both structural and functional to log a message to'stderr' Using with "openssl engine" for example shows this in actionquite well as the 'engine' subcommand cleans up after itself properlyAlso replaced some spaces with tabs
Make proper use of all disabling variables
"make update"
Make notes about ENGINE changes
Linux shared libraries can be linked with debug symbolsTru64 shared libraries can be linked with static libraries
make update
This adds 2 things to the ENGINE code "ex_data"  a CRYPTO_EX_DATA structure in the ENGINE structure itselfthat allows an ENGINE to store its own information there rather than inglobal variables It follows the declarations and implementations usedin RSA code, for better or worse However there's a problem when storingstate with ENGINEs because, unlike related structure types in OpenSSL,there is no ENGINEvsENGINE_METHOD separation Because of what ENGINEis, it has method pointers as its structure elements   which leadsto; ENGINE_FLAGS_BY_ID_COPY  if an ENGINE should not be used just as areference to an "implementation" eg to get to a hardware device, butshould also be able to maintain state, then this flag can be set by theENGINE implementation The result is that any call to ENGINE_by_idwill not result in the existing ENGINE being returned with itsstructural reference count incremented but instead a new copy of theENGINE will be returned that can maintain its own state independantly ofany other copies returned in the past or future Eg keygenerationmight involve a series of ENGINEspecific control commands to setalgorithms, sizes, modulekeys, ids, ACLs, etc A final command couldgenerate the key An ENGINE doing this would have to declareENGINE_FLAGS_BY_ID_COPY so that the state of that process can bemaintained "perhandle" and unaffected by other code having a referenceto the same ENGINE structure
Clean up ENGINE before exiting
Provide the possibility to clean up internal ENGINE structures  Thistakes care of what would otherwise be seen as a memory leak
gcc warns when certain values of an enumeration aren't taken care of,unless there's a default clause
Check for OPENSSL_NO_RSA, OPENSSL_NO_DSA and OPENSSL_NO_DH and disableappropriate code if any of them is defined
engineh includes all the needed header files, so don't do it againhere
We shouldn't skip over header files to avoid functions of disabled algorithms  The selection is done in a different way
User OPENSSL_UNISTD instead of <unistdh>Spotted by Mark Crispin <MRC@PandaCOM>
This change to the "dl", "dlfcn", and "win32" DSO_METHODs adds the filenameor symbol name to the error stack in the event a load or bind operationfailed
Typo reported by Petr Lancaric <PetrLancaric@ipsagcz>
Make update
Fix ASN1 bug when decoding OTHER typeVarious S/MIME DSA related fixes
Script to create shareable images shared libraries in Unixly termson VMS
VMS was behind when it comes to OCSP
Add notes about the new ENGINE functionality
Changes to "openssl engine" to support the new control command code inENGINE Extra verbosity can be added with more "v"'s, eg 'vvv' givesinformation about input flags and descriptions for each control commandin each ENGINE Check the output of "openssl engine vvv" for example 'pre <cmd>' and 'post <cmd>' can be used to invoke control commands onthe specified ENGINE or on all of them if no engine id is specified,although that usually gets pretty ugly 'post' commands are onlyattempted if 't' is specified and the engine successfully initialises'pre' commands are always attempted whether or not 't' causes aninitialisation to be tried afterwards Multiple 'pre' and/or 'post'commands can be specified and they will be called in the order theyoccur on the command lineParameterised commands the normal case, there are currently nounparameterised ones are split into command and argument via a separatingcolon Eg "openssl engine pre SO_PATH:/lib/libdriverso <id>" results inthe call;ENGINE_ctrl_cmd_stringe, "SO_PATH", "/lib/libdriverso", 0;Application code should similarly allow arbitrary namevalue string pairsto be passed into ENGINEs in a manner matching that in apps/enginec,either using the same colonseparated format, or entered as two distinctstrings Eg as stored in a registry The last parameter ofENGINE_ctrl_cmd_string can be changed from 0 to 1 if the command shouldonly be attempted if it's supported by the specified ENGINE eg forcommands like "FORK_CHECK:1" that may or may not apply to the runtimeENGINE
Some more tweaks to ENGINE codeThis change adds some basic control commands to the existing ENGINEsexcept the software 'openssl' engine All these engines currently loadsharedlibraries for hardware APIs, so they've all been given "SO_PATH"commands that will configure the chosen ENGINE to load its shared libraryfrom the given path Eg by calling;ENGINE_ctrl_cmd_stringe, "SO_PATH", <path>, 0The nCipher 'chil' ENGINE has also had "FORK_CHECK" and "THREAD_LOCKING"commands added so these settings could be handled via applicationlevelconfiguration rather than in application source codeChanges to "openssl engine" to test and examine these control commands willbe made shortly It will also provide the necessary tips to applicationprograms wanting to support these dynamic control commands
Some BIG tweaks to ENGINE codeThis change adds some new functionality to the ENGINE code and API tomake it possible for ENGINEs to describe and implement their own controlcommands that can be interrogated and used by calling applications atruntime The source code includes numerous comments explaining how it allworks and some of the finer details But basically, an ENGINE will normallydeclare an array of ENGINE_CMD_DEFN entries in its ENGINE  and the variousnew ENGINE_CTRL_ command types take care of iterating through this listof definitions, converting command numbers to names, command names tonumbers, getting descriptions, getting input flags, etc Theseadministrative commands are handled directly in the base ENGINE code ratherthan in each ENGINE's ctrl handler, unless they specify theENGINE_FLAGS_MANUAL_CMD_CTRL flag ie if they're doing something clever ordynamic with the command definitionsThere is also a new function, ENGINE_cmd_is_executable, that willdetermine if an ENGINE control command is of an "executable" type thatcan be used in another new function, ENGINE_ctrl_cmd_string If not, thecontrol command is not supposed to be exposed out to user/config levelaccess  eg it could involve the exchange of binary data, returningresults to calling code, etc etc If the command is executable thenENGINE_ctrl_cmd_string can be called using a name/arg string pair Thecontrol command's input flags will be used to determine necessaryconversions before the control command is called, and commands of thisform will always return zero or one failure or success, respectivelyThis is set up so that arbitrary applications can support control commandsin a consistent way so that tweaking particular ENGINE behaviour isspecific to the ENGINE and the host environment, and independant of theapplication or OpenSSLSome code demonstrating this stuff in action will applied shortly to thevarious ENGINE implementations, as well as "openssl engine" support forexecuting arbitrary control commands before and/or after initialisingvarious ENGINEs
Some more tweaks to ENGINE codeThe existing ENGINEs including the default 'openssl' software engine werestatic, declared inside the source file for each engine implementation Thereason this was not going boom was that all the ENGINEs had referencecounts that never hit zero once linked into the internal list, each wouldalways have at least 1 lasting structural referenceTo fix this so it will stay standing when an "unload" function is added tomatch ENGINE_load_builtin_engines, the "constructor" functions for eachENGINE implementation have been changed to dynamically allocate andconstruct their own ENGINEs using API functions The other benefit of thisis that no ENGINE implementation has to include the internal "engine_inth"header file any more
Make a note of the recent ENGINE developments
typo
fix md_randc locking bugs
Make the shared library name and function symbol for the "nuron" ENGINEstatic data where they could be parameterised by ctrl commands
Some more tweaks from ENGINE codePreviously RAND_get_rand_method was returning a nonconst pointer, but itshould be const As with all other such cases, METHOD pointers are stored andreturned as "const" The only methods one should be able to alter are methods"local" to the relevant code, in which case a nonconst handle to the methodsshould already existThis change has been forced by the constifying of the ENGINE code beforewhich RAND_METHOD was the only method pointer in an ENGINE structure that wasnot constant
Some more tweaks to ENGINE codeENGINE handler functions should take the ENGINE structure as a parameter this is because ENGINE structures can be copied, and like otherstructure/method setups in OpenSSL, it should be possible for init,finish, ctrl, etc to adjust state inside the ENGINE structures ratherthan globally This commit includes the dependant changes in the ENGINEimplementations
Some more tweaks to ENGINE codePrevious changes permanently removed the commentedout old code for whereit was possible to create and use an ENGINE statically, and this code getsrid of the ENGINE_FLAGS_MALLOCED flag that supported the distinction withdynamically allocated ENGINEs It also moves the area for ENGINE_FLAGS_values from engine_inth to engineh  because it should be possible todeclare ENGINEs just from declarations in exported headers
Some more tweaks to ENGINE code Constify the get/set functions, and add some that functions were missing Add a new 'ENGINE_cpy' function that will produce a new ENGINE basedcopied from an original except for the references, ie the new copy willbe like an ENGINE returned from 'ENGINE_new'  a structural reference Removed the "null parameter" checking in the get/set functions  it islegitimate to set NULL values as a way of changing an ENGINE ieremoving a handler that previously existed Also, passing a NULL pointerfor an ENGINE is obviously wrong for these functions, so don't botherchecking for it The result is a number of error codes and strings couldbe removed
Structural references should never be decremented directly  so leave thatto ENGINE_free Also, remove "if 0" code that has no useful future
This moves string constants out of vendor headers and into C files
'make update'
Clarify request of client certificates This is a FAQ
Fix warning
Constify Jason Molenda <jason@molendacom>
Missing link "Greg Stark" <gstark@ethenticacom>
Fix wrong information with respect to CAs listed to the clientfollows from technical discussion with Amit Chopra <amitc@psplcoin>
update so that changes going into the 096 tree can be logged
undo previous change 
update from 096a
Typo Junichiro itojun Hagino <itojun@iijlabnet>
Correct typo
Add keyform
Show an example of moving the emailAddress object from the subkect DNto subjectAltName when signing a certificate
Make it possible to move the emailAddress object to the subjectAltNameextension instead of just copying it  That makes a certificate complyeven more with PKIX recommendations according to RFC 2459
Add information on 096a in a form such that the list can beverified by looking at 'diff u /openssl096a/CHANGES CHANGES'
NetBSD and OpenBSD use TOD as well
Mention automatically queried EGD sockets OpenSSL 097095 is obsolete, so we don't have to discuss its 'openssl rsa'seeding bug
Some clarifications about $RANDFILE usage
OpenSSH 122p1 is dead and gone Errors detecting the OpenSSL libraryare however still common and are solved by checking configlog
Correct info in the FAQ
Adjust BN_mod_inverse algorithm selection according to experiments onUltraSparcs both 32bit and 64bit compilations
update 096a
comment
code documentation
binary algorithm for modular inversion
avoid '||' since Ultrix apparently doesn't understand it
'||', '&&' and 'test x' apparently don't work on Ultrix;also 'test' appears to be available as '[' only in 'if' conditions
Avoid assert in the library
Add forgotten "passin" option to smimec usage help
Resize a local buffer to accomodate the size requirements of AESProtect against future mistakes with an assert
Add the possibility to have AES removed in Windows as wellSpotted by Harald Koch <chk@poboxcom>
Don't use 'tt' uninitialized when reporting an errorwe don't have an ASN1_TEMPLATE to complain about at this stage,so  errtt  NULL  should be OK
Fix couple of memory leaks in PKCS7_dataDecodeprovided by Stephen
Unixware config
don't use shell functions
Correct a typo  linux ! linus
Incorporate some changes that make OpenSSL compilable in CygWin
Since vmsmar handles 32bit integers, do not use it on Alpha, that'sjust a slowdown
OpenVMS/Alpha should use 64 bits  If nothing else, there'sperformance to gain
Make do_bsdgccshared depend on do_gnushared instead of the nonexistent linuxshared
Fix warnings
Make sure OPENSSL_SYS_ is defined when we need it
This change should be suitable as a workaround for the Solaris x86compiler bug reported in <0103211029377522278@weba3inamenet>the '++seq[i]' condition is evaluated as 256 rather than 0when the previous value is 255
Plug a memory leak  Spotted by "Shijin" <shijin@comexcom>
Reports on Windows, DGUX and older OpenVMS
libfisdefh and LIB do not exist on older VMS versions
Remove a typo in dguxR4gcc
ENGINE_load_[private|public]_key had error handling that could returnwithout releasing a lock This is the same fix as applied toOpenSSLengine0_9_6stable, minus the ENGINE_ctrl change  the HEADalready had that fixed
Actually there were two error cases that could return without releasing thelock  stupidly, my last change addressed only one of them
Don't return an error until the global lock is released
Reports on VMS
Rewrite CHOICE field setting code to properly handlecombine in CHOICE optionsThis was causing d2i_DSAPublicKey to misbehave
A few more reports
Note reports
avoid buffer overflow
Note the Alpha asm change
linuxelf verified
Beta 3 has been released and announced
this time really fix the // check 
For WWW, fix test for "" directory references and avoid warning forindex 1
News for 096a
Fix bctest, and add a workaround that should solve the problem withFreeBSD's /bin/sh
Complete the des_encrypt to des_encrypt1 rename in the maindevelopment line as well
One des_encrypt to des_encrypt1 I forgot to commit
Stress the news about the name change
I forgot to rename des_encrypt to des_encrypt1 in libeaynum
Since there has been reports of clashes between OpenSSL'sdes_encrypt and des_encrypt defined on some systems Solaris andUnixware and maybe others, we rename des_encrypt to des_encrypt1This should have very little impact on external software unlesssomeone has written a mode of DES, since that's all des_encrypt ismeant for
Add news section for OpenSSL 096a  Please add what's missing
check CRT
check CRT
mips
Restore asm/mips3s to be compiled and linked in, since the bug hasat least hopefully : been fixed
The IRIX fix Asm recap and corresponding declationSubmitted by:Reviewed by:PR:
Include bnh so we get BN_LLONG properly defined  Otherwise, we can forget things like lld
Reports seem to show that asm/mips3s has faults  To be investigated, but let's avoid using it in the mean time
For mips3 and alpha, put the assembler file directives in separatevariables and disable the Alpha assembler for now, since it has beenshown to failThe Alpha failure can be shown by adding the following numbers:FFFFFFFFFFFFFF0000FF2E00000000EBFFFFFF0000D1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF46FFE0FFFF0000The result is:1FFFFFFFFFFFEFF0000FF2E0000000032FFE0FEFF00D1The result should really be:1FFFFFFFFFFFFFF0000FF2E0000000032FFE0FEFF00D1
make update
When using the native tools on Solaris, make damn sure the native ldis used, even if the user has GNU ld earlier in his $PATH
gcc uses collect2, not ld, to link things  Therefore, when using gccthere's no need fooling ourselves, it's the gnushared method that weshould use  Do it for Solaris to begin with
ln on Solaris expects f to come before sThe linuxshared method is actually gccspecific, so call itgnushared as well
Small AIX problems solved
A lot of reports
We really have no need for PEX_LIBS, so empty it
Add missing 'ifndef OPENSSL_NO_DSA'
Remove redundant operations and update version info
Harmonize CHANGES and STATUS files between the 096a branch andthe trunk to keep diffs small
Use stdlibh to get size_t
Update docs
Since they aren't implemented yet, EC_GFp_{recp,nist}_method need tobe "if 0"'d, or they will reappear as existing functions inutil/libeaynum
Tag EC_GFp_{nist,recp}_method as "NOEXIST" because they havenot yet been implemented
avoid linking problems when OpenSSL is built with nodsa  Spotted by Hellan,Kim KHE <khe@kmddk>
Increase boundaries in EC_window_bits_for_scalar_size table
Table for window sizes
Update
New cofiguration for Unixwre and SCO,with slightly better granularity  Contributed by Tim Rice <tim@multitalentsnet>
Fix PKCS12 key generation bug
Explicitly ignore the exit code of /bctest  Usually the shellignores it anyway in command substitution, but Ultrix reportedlyaborted the test when bctest returned 1
Correct a typo which might have lead to a dumpNoted by Martin Kraemer <MartinKraemer@FujitsuSiemenscom>
An enhanced bctest submitted by Tim Rice <tim@multitalentsnet>It now looks along $PATH for a working bc and returns the absolutepath to one that does work
Add copy_extensions option to 'ca' utility
Add 'align' option to nameoptAdd default values for display by the 'ca' utilityto opensslcnfUpdate docs
Minimise the amount of L when linking the shared libraries  Itseems like some Unixen SCO have opinions about too many L
bsdielf needs to link with ldl
For AIX 43 or above, allow the use of dlfcn
Overhaul the display of certificate details inthe 'ca' utility This can now be extensivelycustomised in the configuration file and handlesmultibyte strings and extensions properlyThis is required when extensions copying fromcertificate requests is supported: the usermust be able to view the extensions beforeallowing a certificate to be issued
Completely remove mont2 stuffIt does not appear to be faster than the current Montgomery codeexcept for very small moduli somewhere between 192 and 224 bitsin a 64bit Sun environment, and even less than 192 bitson 32 bit systems
Forgot "cvs add", so only the surrounding changes made it sigh
avoid infinite loop
error codes are longs, not ints
More error_data memory leaks
It is a good thing to prepare the def files
Document the certopt option to the x509 utilityAdd no_issuer optionFix X509_print_ex so it prints out newlines whencertain fields are omitted
The former ULTRASPARC preprocessor symbol is now calledOPENSSL_SYSNAME_ULTRASPARC, so we'd better check for that one
Fix: return 0 if no error occured
make update
We need to build MINFO
typo
Use err_clear_data macro
fix memory leak in errc
Rename function EC_GROUP_precompute to EC_GROUP_precompute_mult,which indicate its purpose more clearly
Add various X962 OIDs GF2^n mostly left out
Initial docs for PEM routines
EC_METHOD based on bn_mont2 not used in the library
Forcibly enable memory leak checking during "make test"
Timings are not supposed to be enabled by default 
Add functions EC_POINT_mul and EC_GROUP_precomputeThe latter does nothing for now, but its existence meansthat applications can request precomputation when appropriate
handle negative scalars correctly when doing point multiplication
use fflush
Change timing output: We don't have "exponents" here, curves areconsidered additive
comment and error code update
Remove files from Lenka's EC implementation
More EC stuff, including EC_POINTs_mul for simultaneous scalarmultiplication of an arbitrary number of points
Document the change
For some experiments, it is sometimes nice to serve files with completeHTTP responses
In crypto/ec if 0 out structures which reference currentlynon existent functions because this breaks shared libraries
Typo
Add the 'ec' directory to mkdefpl and mkfilesplso the Windows build can see itFixup mkdefpl so it doesn't mess up with functionnames longer than 39 characters in length
Use 32bit longs on Alpha as well, because that's what the VMSassembler code works withOf course, the assembler code could differ between platforms  Thatmight happen in the future
Instead of telling both 'make' and the user that ranliberrors can be tolerated, hide the error from 'make'This gives shorter output both if ranlib fails and ifit works
Update docs
Workaround for solaris64 linking problem explicit "ar rs" is neededto create a symbol tableSun patches such as 10914706 probably fix this problem,but we can easily avoid it
Consistently use 'void ' for SSL read, peek and write functions
Change the EVP_somecipher and EVP_somedigestfunctions to return constant EVP_MD and EVP_CIPHERpointersUpdate docs
Bug fixes
Fix ec_GFp_simple_cmpUse example group from Annex I of X962 in ectestc
ssl23_peek
add ssl23_peek
Avoid problems with multiline NAME sections
Too many dollars
Implement EC_GFp_mont_method
Fixes to make 'noec' work it should not turn 'objects' into 'objts' for example
More method functions for elliptic curves,and an ectestc that actually tests something
Bugfix: previously the serial number file could turn negativebecause an incompletely initialized ASN1_INTEGER was used
Add newly learned knowledge from yesterday's discussion
Write a small comment so we know
Build ectest too
Some EC function names are really long  Make aliases for VMS on VAX
note the rand_winc change
Comment
old MSVC versions don't have rdtscuse _emit insteadPointed out by Jeremy Cooper <jeremy@baymooorg>
Hide BN_CTX structure detailsIncease the number of BIGNUMs in a BN_CTX
VMS catches up on the EC modifications
Make EVP_Digest routines return a valueTODO: update docs, and make soe other routineswhich use EVP_Digest check return codes
avoid compiler warning
Constify BN_value_one
Integrate ec_err[co]"make depend"
Throw out all absolute pathnames, not matter what they look likeThe filenames we are interested in for Makefile dependenciesare always relative
Sort opensslec, the configuration file for mkerrplChange mkerrpl so that it puts the ERR_load__stringsprototype in header files that it writes
Integrate ectestc which does not yet do anything
Order ERR_load_ calls like the stuff in errh
Get rid of 'define ERR_file_name __FILE__', which is unnecessary indirectionIt cannot possibly help to avoid duplicate 'name of file' stringsin object files because the preprocessor does not work at object filelevel
Let EC_POINT_copy do nothing if destsrc
More 'TODO' items
More method functions for EC_GFp_simple_method
More method functions
Some actual method functions not enough yet to use the EC library, though,including EC arithmetics derived from Lenka Fibikova's code with someadditional optimizations
Code for better build under Darwin MacOS XSubmitted by Brad Dominy <jdominy@darwinuserorg>
_init functions are methodspecific toothey can't do much useful, but they will have to set pointersto NULL
Optimized EC_METHODs need specific 'set_curve' and 'free' functions
The next bunch of vaporware
extra_data 'mixin'This will be used for Lim/Lee precomputation data
Oops 
In clear_free, clear the complete structure just in casethe method misses something
Fix ERR_R_ problems
Implement dispatcher for EC_GROUP and EC_POINT method functionsInitial EC_GROUP_new_curve_GFp implementation
Add a few 'const's
Forgot a '$'
Change obj_ generation so that it does not generate rubbish orabort with errors if no name is defined for some object, which was thecase for 'pilotAttributeType 27'Also avoid this very situation by assigning the name'pilotAttributeType27'
'is_at_infinity' tests don't need a BN_CTX
New function declarations
Add BN_CTX arguments where appropriateRename 'EC_GROUP_set'related functions to names similar to 'EC_GROUP_set_curve'because they don't care about the generatorAdd new functions
DEC
Add EC_GROUP_new_GFp prototype
Change comments
Some declarations that outline what I intend to implement
Update the VMS build scripts for EC
Another file I had forgotten to add
Add yet another still empty source code file that I forgot
Add more EC vaporware empty source code files I missed in myprevious commit
Move ech to ec2h because it is not compatible with what we will useAdd EC vaporware: change relevant Makefiles and add some empty sourcefiles"make update"
Document the SSLv2 session reuse fix
Add the possibility for option macros and start using it to indicatefor Windows compilations if DLL linkage is required or not
New option 'subj arg' for 'openssl req' and 'openssl ca'  Thissets the subject name for a new request or supersedes thesubject name in a given requestAdd options 'batch' and 'verbose' to 'openssl req'Submitted by: Massimiliano Pala <madwolf@hackmastersnet>Reviewed by: Bodo Moeller
increase emailAddress_max
EC_set_half and the 'h' component of struct bn_ec_struct are unnecessaryThe computations for which h was used can be done more efficientlyby using BN_rshift1
For SSLv2, return the SSLv2 method, not the SSLv23 method  This way,it's possible to reuse an SSLv2 session
Sort platforms lexicographically as well  Also, support more than twovariants of a symbol
Spelling corrected
Introduce the possibility to access global variables throughfunctions on platform were that's the best way to handle exportingglobal variables in shared libraries  To enable this functionality,one must configure with "EXPORT_VAR_AS_FN" or defined the C macro"OPENSSL_EXPORT_VAR_AS_FUNCTION" in crypto/opensslconfh the latteris normally done by Configure or something similarTo implement a global variable, use the macro OPENSSL_IMPLEMENT_GLOBALin the source file fooc like this:OPENSSL_IMPLEMENT_GLOBALint,foo1;OPENSSL_IMPLEMENT_GLOBALdouble,bar;To declare a global variable, use the macros OPENSSL_DECLARE_GLOBALand OPENSSL_GLOBAL_REF in the header file fooh like this:OPENSSL_DECLARE_GLOBALint,foo;define foo OPENSSL_GLOBAL_REFfooOPENSSL_DECLARE_GLOBALdouble,bar;define bar OPENSSL_GLOBAL_REFbarThe defines are very important, and therefore so is including theheader file everywere where the defined globals are usedThe macro OPENSSL_EXPORT_VAR_AS_FUNCTION also affects the definitionof ASN1 items, but that structure is a bt differentThe largest change is in util/mkdefpl which has been enhanced withbetter and easier to understand logic to choose which symbols shouldgo into the Windows def files as well as a number of fixes and codecleanup among others, algorithm keywords are now sortedlexicographically to avoid constant rewrites
Typo, spotted by "Greg Stark" <gstark@ethenticacom>
Fix bug in copy_email which would notfind emailAddress at start of subject name
Fix a bug which caused BN_div to produce thewrong result if rmnum and num < 0
f conversion bug fixSubmitted by: Henrik Eriksson <henrikeriksson@axiscom>
don't read from tty in test mode
run selftest with nokrb5
MacOSX doesn't have ftimeSpotted by Pieter Bowman <bowman@mathutahedu>
Typo in comment
Enhance OCSP_request_verify so it finds the signers certificateproperly and supports several flags
make updateNote that all _it variables are suddenly nonexistant according tolibeaynum  This is a bug that will be corrected  Please be patient
Add the CCITT pilot directory OIDs
Trap an invalid ASN1_ITEM construction and print outthe errant field for more ASN1 error conditions
New function and options to check OCSP response validity
Print out OID of unknown signature or public keyalgorithms
Stop PKCS7_verify core dumping with unknown publickey algorithms and leaking if the signature verifyfails
Describe new callback for session id generation
SSL_get_version was an easy one :
That statement seems to be not true In fact, I have said that I wouldlike to use libtool, but not automakeLet's investigate that further, or leave the question open for now
autoconf would be useful
Make OCSP cert id code tolerate a missing issuer certificateor serial number
Oops, forgot CHANGES entry for ASN1_ITEM_FUNCTIONS
Get rid of ASN1_ITEM_FUNCTIONS dummy functionprototype hack This unfortunately means thatevery ASN1__END construct cannot have atrailing ;
make depend
Initial support for ASN1_ITEM_FUNCTION option tochange the way ASN1 modules are exportedStill needs a bit of work for example the hack which adummy function prototype to avoid compilers warning aboutmultiple ;s
I missed one
Fix an oversight  when checking a potential session ID for conflicts withan SSL_CTX's session cache, it is necessary to compare the ssl_version atthe same time a conflict is defined, courtesy of SSL_SESSION_cmp, as amatching id/id_length pair and a matching ssl_version However, theSSL_SESSION that will result from the current negotiation does notnecessarily have the same ssl version as the "SSL_METHOD" in use by theSSL_CTX  part of the work in a handshake is to agree on an ssl version!This is fixed by having the check function accept an SSL pointer ratherthan the SSL_CTX it belongs to[Thanks to Lutz for illuminating the full extent of my stupidity]
Define the right macro for Linux and other GNUbased systems to get a correct declaration of strdup
e_osh defines Getenv
CONF_METHOD is one of the few places where you find MS_FAR  I can'treally see why we need to define these function pointers with MS_FARif it's not done cosistently everywhereIf we decide to support MS_FAR modifiers, it's better to have thenamed something more unique for OpenSSL and to define them in e_os2h
Define the OPENSSL_NO_ macros as NO_ macros for the sake of applications thathaven't yet been changed
e_osh problems have been solved in the main branch
undo previous change: "e_osh" is now the official name for the fileto include but the OpenSSL_0_9_6stable branche still hasinconsistencies
include e_osh as "openssl/e_osh" as elsewhere
e_osh does not belong with the exported headers  Do not put it thereand make all files the depend on it include it without prefixing itwith openssl/This means that all Makefiles will have $TOP as one of the includedirectories
Since RAND_file_name uses strlen, make sure the number that'scompared to it has the type size_t  Included the needed headers tomake that happen
Use e_os2h rather than opensslconfh, since some needed macros aredefined there
Exported header files should not include e_osh
Since opensslconfh might be included over and over, undefineOPENSSL_UNISTD before redefining it, to avoid compiler warnings
One indirection level too little compared to thepreCRYPTO_MEM_LEAK_CB time
Windows does not know of strigsh or strcasecmp, so when in Windows,make strcasecmp a macro to _stricmp
Always include opensslconfh, even if it's already been done beforeThe reason is that some parts are only included when certain otherinclude files have been includedAlso, it seems that the rest of the OpenSSL code assumes that allkinds of M$ Windows are MSDOS as well
When inside a if 0endif, do not define anything
Since SSL_add_dir_cert_subjects_to_stack isn't impemented on VMS,there's no point creating an alias for it
Include e_os2h instead of opensslconfhSSL_add_dir_cert_subjects_to_stack is not implemented on WIN32 andVMS, so declare it the same way
Rebuild ASN1 error codes to remove unused function and reason codes
If a callback is generating a new session ID for SSLv2, then upon exiting,the ID will be padded out to 16 bytes if the callback attempted to generatea shorter one The problem is that the uniqueness checking function used incallbacks may mistakenly think a 9byte ID is unique when in fact itspadded 16byte version is not This makes the checking function detectSSLv2 cases, and ensures the padded form is checked rather than the shorterone passed by the callback
Note changes re: session ID generation callbacks, etc
This adds commandline support to s_server for controlling the generationof session IDs Namely, passing "id_prefix <text>" will set agenerate_session_id callback that generates session IDs as random datawith <text> blockcopied over the top of the start of the ID This can beviewed by watching the session ID s_client's output when it connectsThis is mostly useful for testing any SSL/TLS code eg proxies that wishto deal with multiple servers, when each of which might be generating aunique range of session IDs eg with a certain prefix
This change allows a callback to be used to override the generation ofSSL/TLS session IDs in a server According to RFC2246, the session ID is anarbitrary value chosen by the server It can be useful to have some controlover this "arbitrary value" so as to choose it in ways that can aid inthings like external session caching and balancing eg clustering Thedefault session ID generation is to fill the ID with random dataThe callback used by default is built in to ssl_sessc, but registering acallback in an SSL_CTX or in a particular SSL overrides this BTW: SSLcallbacks will override SSL_CTX callbacks, and a new SSL structure inheritsany callback set in its 'parent' SSL_CTX The header comments describe howthis mechanism ticks, and source code comments describe hopefully why itticks the way it doesMan pages are on the way [NB: Lutz was also hacking away and helping me to figure out how best to dothis]
'make update'
'make update'
Modify mkdefpl to recognise and parse prprocessor conditionals of theform 'if defined || defined || ' and 'if !defined&& !defined && '  This also avoids the growing number ofspecial cases it was previously handling some of them wrongly
I had forgotten to change mkerrpl to use the new macro system
strdup is a X/Open extension
With later version of DEC C on VMS, some functions strcmp, forexample are declared with some extra linkage information  Thisgenerates a warning when using the function name as a value to aregular function pointer with the "correct" definition of thefunction  Therefore, use a macro to cast the appropriate function onVMS
Some functions, like strdup and strcasecmp, are defined instringsh according to X/Open
I forgot there was a reason why the inclusions and definition of u_intwas made in a certain sequence  This change restores the earlier"chain of command"
OpenVMS catches up
The callbacks in the NAME_FUNCS structure are not used directly as LHASHcallbacks, and their prototypes were consistent as they were These castsneed reversingAlso, I personally find line breaks during parameter lists ie a lineending in a comma easier to read at a glance than line breaks at the endof a function call and before a dereference on the return value ie a lineending in a closedbracket followed by a line starting with ">"
make it a loop as in dsa
Get e_os2h to get all the system definitions correctly
Get the right cast for lhash callback functions
Include stringh so mem functions get properly declared
Fix typo
A new bunch of too long symbols to hackOCSP_CRLID_new and OCSP_crlID_new clash on caseinsensitive systems
DEC C on VMS is pedantic by definition
Include OpenSSL header files earlier so macros like OPENSSL_SYS_VMSget a chance to be definedMake a batter file name translator uhm, no, that's not the finishedvariant :
Include OpenSSL header files earlier so macros like OPENSSL_SYS_VMSget a chance to be defined
Include opensslconfh or the like early to make sure system macros getcorrectly defined
Let VMS catch up
DEC C on VMS is pedantic by definition
Use sk__new_null instead of sk__newNULL  That avoids gettinglots of silly warnings from the compiler
honour 'no_tmp_rsa'
Include stringh so mem functions get properly declared
Include OpenSSL header files earlier so macros like OPENSSL_SYS_VMSget a chance to be defined
Include stringh so mem functions get properly declared
Use 0 instead of NULL, at least for function casts, since there arevariants of stdioh that define NULL in such a way that it's "unsafe"to use for function pointer casting
update
Use newstyle systemid macros everywhere possible  I hope I haven'tmissed anyThis compiles and runs on Linux, and external applications have noproblems with it  The definite test will be to build this on VMS
Fix BN_[pseudo_]rand: 'mask' must be used even if top1Mention BN_[pseudo_]rand with top1 in CHANGES
Use newstyle systemid macros
I'm sick of the warnings about long long
Use BN_rand_range
Fix warning
BN_rand_range needs a BN_rand variant that doesn't set the MSB
note OPENSSL_issetugid
Temporary fix for build breakIt's still inconsistent  probably better to undo the whole OPENSSL_NO_ thing
Make sure time is properly declared
Use the newstyle systemidentity macros
I forgot to document the system identification macros
Make all configuration macros available for application by makingsure they are available in opensslconfh, by giving them names startingwith "OPENSSL_" to avoid conflicts with other packages and by makingsure e_os2h will cover all platformspecific cases together withopensslconfhI've checked fairly well that nothing breaks with this apart fromexternal software that will adapt if they have used something likeNO_KRB5, but I can't guarantee it completely, so a review of thischange would be a good thing
Remove temporary files when done
make update
An obvious but hardtosee cut'n'paste error corrected
New set_serial options to 'req' and 'x509'Remove the old broken bio read of serial numbers in the 'ca' indexfile This would choke if a revoked certificate was specified witha negative serial numberFix typo in uidc
Do not insert things in syms{} and kind{} when parsing the headerfiles  Instead, insert proper information in the $def string, whichwill be properly munged later on
Make the choice of "makedepend" program choosable through a switch
VMS follows suit
Memory leak detection bugfixes for multithreading
Add uid{c,o}
Perl code patch contributed by "Kurt J Pires" <kjpires@iatcom>His own words are:The patch adds no new functionality other than a simple test packageto the libraries, but it allows them to be compiled with Perl560It has only been tested under "Red Hat Linux release 70 Guinness"with the unpatched verion of OpenSSL 096 released last September
Make it possible to use gcc to generate the dependency tables
ispell
pod format error
New options to 'ca' utility to support CRL entry extensionsAdd revelant new X509V3 extensionsAdd OIDsFix ASN1 memory leak code to pop info if external allocation used
Move entry to match chronologic orderering
Don't forget to mention minor change
Add "rand" option to s_client and s_server
That was misleading The problem won't happen with 096a anyway
Include the newly reported problem with bc on FreeBSD 42
Option to disable standard block padding with EVP APIAdd nopad option to enc commandUpdate docs
New function OPENSSL_issetugid Needs more work
Initial OCSP SSL support
IRIX bugfix
Finish first round of session cache documentation
Update of linuxppc  Contributed by MATSUURA Takanori<tmatsuu@proteinosakauacjp>
New manual page: SSL_CTX_set_mode
New function OCSP_parse_url and url option for ocsp utilityDoesn't handle SSL URLs yet
Modify OCSP nonce behaviour
Work around for libsafe "error"
Reorder a couple of static functions and "if 0" out unused ones  thisgets rid of gcc warnings
This change was a quick experiment that I'd wanted to try that works quitewell and is a good demonstration of how encapsulating the SSL in amemorybased state machine can make it easier to apply to differentsituationsThe change implements a new commandline switch "flipped <0|1>" which, ifset to 1, reverses the usual interpretation of a client and server for SSLtunneling Normally, an ssl client ie "server 0" accepts "cleartext"connections and conducts SSL/TLS over a proxied connection acting as an SSLclient Likewise, an ssl server ie "server 1" accepts connections andconducts SSL/TLS as an SSL server over them and passes "cleartext" overthe proxied connection With "flipped 1", an SSL client specified with"server 0" in fact accepts SSL connections and proxies clear, whereas anSSL server "server 1" accepts clear and proxies SSL NB: most of thisdiff is commandline handling, the actual meat of the change is simply theline or two that plugs "clean" and "dirty" file descriptors into the itemthat holds the statemachine  reverse them and you get the desiredbehaviourThis allows a network server to be an SSL client, and a network client tobe an SSL server Apart from curiosity value, there's a couple of possiblyinteresting applications  SSL/TLS is inherently vulnerable to trivial DoSattacks, because the SSL server usually has to perform a private keyoperation first, even if the client is authenticated With this scenario,the network client is the SSL server and performs the first private keyoperation, whereas the network server serves as the SSL client Anotherpossible application is when clientonly authentication is required iethe underlying protocol handles or doesn't care about authenticating theserver Eg an SSL/TLS version of 'ssh' could be concocted where theclient's signed certificate is used to validate login to a server system whether or not the client needs to validate who the server is can beconfigured at the client end rather than at the server end ie a completeinversion of what happens in normal SSL/TLSNB: This is just an experiment/plaything, using "flipped 1" probablycreates something that is interoperable with exactly nothing :
More about session caching
Include information that automatic query is a new feature
Update for 097 with SSL_OP_CIPHER_SERVER_PREFERENCE
Manual page for SSL_CTX_set_options Unfortunately for some of theoptions someone much longer working with OpenSSL/SSLeay is needed
Oops: It's RegTP, not RegPT 
Add German SiG root certificates extracted from the official cert registryfile http://wwwnrcadsde/ftp/pkdttp, which contains a total of 288certificates issued by the RegPT so far
disable stdin buffering in load_cert
use caseinsensitive comparison in set_table_optssimilar to how arguments such as inform/outform specificationsare treated
Fix CRL printing to correctly show when there are no revoked certificatesMake cac correctly initialize the revocation dateMake ASN1_UTCTIME_set_string and ASN1_GENERALIZEDTIME_set_string set thestring type: so they can initialize ASN1_TIME structures properly
Simplify BN_rand_range
New Option SSL_OP_CIPHER_SERVER_PREFERENCE allows TLS/SSLv3 server to overridethe clients choice; in SSLv2 the client uses the server's preferences
Typo
Fix "wierd" typo as submitted by Jeroen Ruigrok/Asmodai <asmodai@wxsnl>
Various Win32 related fixed Make nokrb5 work in mkdefpl Fix warning in apps/enginecRemove definitions of deleted functionsAdd missing definition of X509_VAL
Various updates to mkdefpl to cope with new aesand ASN1 code
fix editing error
add linuxs390 configuration based on information submitted byDenis Beauchemin <DenisBeauchemin@CourrierUSherbca>
Add missing \n's to ocsp usage message
Allow various options to be included for signing and verify ofOCSP responsesDocumentation to followUrgh this conflicted with the VAfile patch I hope I haven'tbroken it
The check for request including a nonce and response not having it wasinversed  Corrected  Hopefully, this will make it work withoutdumping core
Add the VAfile option to 'openssl ocsp'  This option will give theclient code certificates to use to only check response signaturesI'm not entirely sure if the way I just implemented the verificationis the right way to do it, and would be happy if someone would like toreview this
use < instead of 
point out that RAND_load_file etc are only for seed files, not forentropy devices or sockets
Note that EGD is used automatically
cleanup
Another comment change  Previous comment does not applyfor range  11000000 or range  100000
Change comments  The expected number of iterations in BN_rand_rangenever exceeds 1333
oops  remove observation code
Integrate my implementation of a countermeasure againstBleichenbacher's DSA attack  With this implementation, the expectednumber of iterations never exceeds 2New semantics for BN_rand_range:BN_rand_ranger, min, range now generates r such thatmin < r < min+rangePreviously, BN_rand_ranger, min, max generated r such thatmin < r < maxIt is more convenient to have the range; also the previousprototype was misleading because max was larger thanthe actual maximum
platform specific CFLAGS don't belong into this Makefile
Update documentation to match the state at 096 _and_ the recent changes
Bleichenbacher's DSA attack
Modify access to EGD socket to deal with EINTR etc that can appearduring connect and other calls First seen on Unixware7Unify access to EGDsocket for all RAND_egd_ methods
Fix AES codeUpdate Rijndael source to v30Add AES OIDsChange most references of Rijndael to AESAdd new draft AES ciphersuites
Change preferences for sockets of EGDstyle entropy daemons to a morereasonable selection
Fix typo preventing correct usage of out option
Rijdael CBC mode and partial undebugged SSL support
Improve the state machine
Avoid coredumps for CONF_get_NULL, 
don't dump core
format strings
Fix potential buffer overrun for EBCDIC
Fix a memory leak in BIO_get_accept_socket  This leak was small andonly happened when the port number wasn't parsable ot the host wasn'tpossible to convert to an IP addressContributed by Niko Baric <NikoBaric@epostde>
Include stringh whis is in all relevant standards instead ofmemoryh which is not
New function to copy nonce values from OCSPrequest to response
Make depend
BN assembler is no longer option on x86
Can't remember why this was needed?
Fix a warning
Documenting session caching, 2nd step
Fix ASN1_TIME_to_generlizedtimeAdd protoype for OCSP_response_createAdd OCSP_request_sign and OCSP_basic_signprivate key and certificate checks and makeOCSP_NOCERTS consistent with PKCS7_NOCERTS
Various OCSP responder utility functionsDelete obsolete OCSP functionsLargely untested at present
Clarify why SSL_CTX_use_certificate_chain_file should be preferred
Typo: on my screen it nicely wrapped around at 80 :
If the source has already been succesfully queried, do not try to open itagain as file
Document session caching, first step
Various function for commmon operations
Tidy up the mess in bss_sockc and bss_fdcby placing them socket/fd code in separatefiles rather than trying to have them bothshare the same one
Tolerate some "variations" used in somecertificatesOne is a valid CA which has no basicConstraintsbut does have certSign keyUsageOther is S/MIME signer with nonRepudiation butno digitalSignature
New manual page for a hardly known but important item :
Document the change
Increase consistency of header data some mail readers really do notlike spaces before the semicolon, and besides, other parts of thisfile makes the values without those spaces, and move spacing ofcontinuation lines to support BIO's that break lines after eachwrite
Remove serial number file during 'make clean'
Comment and indentation
Make sk_sort tolearate a NULL argument
New OCSP response verify option OCSP_TRUSTOTHER
Documentation language corrections, contributed by Chris Pepper <pepper@mailreppepcom>
Zero the premaster secret after deriving the master secret in DHciphersuites
Insert a missing space to stop pod2man giving stroppy "malformed" warnings
update
Add debugging info to new ASN1 code to trace memory leaksFix PKCS7 and PKCS12 memory leaksInitialise encapsulated content type properly
Update "OAEP reconsidered" comment
new year
EVP_add_digest_alias additions to SS_library_init
There is no C version of bn_div_3_words
For improved compatibility with 'strange' certificates, add somedigest aliases as found in OpenSSL_add_all_digests
Use OpenSSL_add_all_algorithms instead of the backwards compatibilityalias SSLeay_add_all_algorithms
More on the e_osh mess 
Copy over just written manpage to the ones still missing
Add entries for new manpages
Definition of NO_KRB5 in sslh for external applications
Use the correct number of arguments in the example
Mention the /config script fixes
Documentation about SSL_get_ex_data_X509_STORE_CTX_idx andSSL_get_ex_new_index functionality Extended verify_callbackexample to show the usage
Fix to stop X509_time_adj using GeneralizedTime
Update ocsp utility documentation
Fixes to various ASN1_INTEGER routines for negative caseEnhance s2i_ASN1_INTEGER
Fix openssl passwd 1
Additional functionality in ocsp utility: print summaryof status info Check nonce values Option to disableverify Update usage messageRename status to string functions and make them global
Don't shadow
Implement remaining OCSP verify checks inaccordance with RFC2560
Make the change log on the RAND_poll change a bit more explicit  Suggested by Bodo Moeller
Keep up with Unix
Initial OCSP certificate verify Not complete,it just supports a "trusted OCSP global root CA"
link to the new manpage
New 'extfile' option for 'openssl ca'This allows keeping extensions in a separate configuration fileSubmitted by: Massimiliano Pala <madwolf@comunemodenait>
Update the LHASH man page Correct some prototypes and macros with respect to "const"ness Add the extra macros and examples due to the lh_doall[_arg] modificationsmade recently The existing example is also reworked for consistency Rewrite, tweak, and supplement bits of the existing comments that seemedIMHO to be a little convoluted and misleading Add a NOTE section that explains the use of macros and avoiding functioncasts ie generate a wrapper as with the macros, or prototype anycallback functions exactly to not require casting Also, explain the"const" approach taken in LHASH for the purposes of API comprehensibilityand also application code auditing
Change PKCS12 key derivation routines to cope withnon null terminated passwords
Fix warning in apps/cac
Preliminary ocsp utility documentationFix ocsp usage message
New OCSP utility This can generate, parse and printOCSP requests It can also query reponders and parse orprint out responsesStill needs some more work: OCSP response checks andof course documentation
Disable RegQueryValueEx callProblem reported by "Wolfgang Marczy" <WMarczy@topcallcoat>in a message to openssldev 19 Dec 2000 13:40:51 +0100
New 'openssl ca status <serial>' and 'openssl ca updatedb'commandsSubmitted by: Massimiliano Pala <madwolf@comunemodenait>
isspace must be used only on unsigned chars
note strncpy problem
When we are waiting for user action, we should say this explicitly
Fix typo in OCSP ASN1 module, this causedinvalid format in OCSP request signaturesAdd spaces to OCSP HTTP headerChange X509_NAME_set there's no reasonwhy it should return an error if thedestination points to NULL though itshould if the destination is NULL
Remove "AVAILABLE PATCH" that has now been appliedMove ex_datac entry from "NEEDS PATCH" to "OPEN ISSUES"
New newreqnodes option to CAplSubmitted by: Damien Miller <djm@mindrotorg>
Add configuration for GNU Hurd
OCSP basic response verify Very incompletebut will verify the signatures on a responseand locate the signers certifcateStill needs to implement a proper OCSP certificateverifyFix warning in RAND_egd
No functional change, but slightly improved code clarity
After discussion with Richard, change the new API for extended memoryallocation callbacks so that it is no longer visible to applicationsthat these live at a different call level than conventional memoryallocation callbacks
It's silly to use a different default for PERL than in the topMakefile  The default is never actually used though becausethe top Makefile passes its value of PERL down to subMakefiles
Pass ${PERL} down to the Makefile in subdirectory "test" in"make tests"
Use $PERL in place of hardcoded perl
Add new items: 096a is under development a couple of illegal includes of <openssl/e_osh> should be purged ex_data sucks
Last time I asked, noone appeared to remember if these "NEEDS PATCH"entries are still current or what they are about:o  nonblocking socket on AIXo  $PERL in /MakefilesslSo I'll remove them for now
make indentation consistent
Add SSLEAY_DIR argument code for SSLeay_versionAdd 'd' option for 'openssl version' included in 'a'
'char' argument to islower must be converted to 'unsigned char'
Add a pointer to digest options in the description of fingerprint
Fix C code generate by 'openssl dsaparam C'
Change prototypes for new CRYPTO__mem_ex_functions functions sothat they match the function definitions namely, remove file/lineparameters from free_func
As response to a user request to be able to use external memoryhandling routines that need file name and line number information,I've added a call level to our memory handling routines to allow thatkind of hooking
Fix uni2asc so it can properly convert zero lengthunicode strings Certain PKCS12 files contain thesein BMPStrings and it used to crash on them
rsa_num is not used with NO_RSA
oops, void functions shouldn't try and return a value Strangely, gccdidn't even give a warning for this yet HPUX cc considered it an errorReported by Lutz@opensslorg
Add automatic query of EGD sockets to RAND_poll The EGD sockets areonly queried when the /dev/[u]random devices did not return enoughentropy Only the amount of entropy missing to reach the required minimumis queried, as EGD may be drainedQueried locations are: /etc/entropy, /var/run/egdpool
It was correctly pointed out to me that my CHANGES entry was a little thinon details :
Don't cheat: when only getting several bytes from each source, n is incrementedcorrectly, but RAND_add,n counts the increasing n several timesOnly RAND_add,n once entropy collection is finished
Move all the existing function pointer casts associated with LHASH's two"doall" functions to using typesafe wrappers As and where required, thiscan be replaced by redeclaring the underlying callbacks to use theunderlying "void"based prototypes eg if performance suffers from anextra level of function invocation
Get rid of the function pointer casting in the debugging memory code dueto LHASH usage NB: The callback type used as been suctioned off intocryptoh as CRYPTO_MEM_LEAK_CB to improve clarity
This adds macros to implement and/or declare typesafe wrapper functionsaround the callbacks required in the LHASH code for the "doall" functionsAlso  fix the evil function pointer casting in the two lh_doall functionsby deferring to a static utility function Previously lh_doall wasinvoking lh_doall_arg by casting the callback to the 2parameterprototype and passing in a NULL argument This appears to have been workingthus far but it's not a hot idea If the extra level of indirection becomesa performance hit, we can just provide two virtually identicalimplementations for each variant later on
Whilst in the process of fixing outstanding functionpointer casts in theLHASH code, this evil was uncovered The cast was obscuring the fact thatthe function was prototyped to take 2 parameters when in fact it is beingused as a callback that should take only one Anyway, the function itselfignores the second parameter thankfully A proper cure is on the way butfor now this corrects the inconsistency
Keep up with Unix code  It's beginning to be  time to rethink the VMSbuild system
Because /dev/urandom has a better chance of giving us a good andquick answer, take that one first
Add prototypes for new OCSP functionsFix bug in OCSP_find_status
Change RAND_poll for Unix to try a number of devices and only readthem for a short period of time actually, poll them with select,then read whatever is there, which is about 10ms hardcoded valueeachSeparate Windows and Unixly code, and start on a VMS variant thatcurrently just returns 0
Add set of OCSP client functions All experimentaland subject to addition, modifcation or deletionAdd two OCSP nonce utility functionsFix typo in status code name
Keep up with the Unixly changes
Modify OCSP API to more closely reflectapplication needsAdd OCSP library name to error code
Fix typo in OCSP nonce extensionSet correct type in ASN1_STRING forINTEGER and ENUMERATED typesMake ASN1_INTEGER_get and ASN1_ENUMERATED_getreturn 1 for invalid type rather than 0 which isoften valid 1 may also be valid but this is lesslikelyLoad OCSP error strings in ERR_load_crypto_strings
Update OCSP APIRemove extensions argument from various functionsbecause it is not needed with the new extensioncodeNew function OCSP_cert_to_id to convert a pairof certificates into an OCSP_CERTIDNew simple OCSP HTTP function This is rather primitivebut just about adequate to send OCSP requests andparse the responseFix typo in CRL distribution points extensionFix ASN1 code so it adds a final null to constructedstrings
Fix the S/MIME code so it now works again anduses the new ASN1 code
Make the DSO code for VMS work again  First attempt
The option line may start with a space, which gives an empty optionMake sure those are purged
Look for nokrb5 and add the definition of NO_KRB5 if it's thereI've no idea were the KRB5 header files and libraries are placed onWin32  When there's better knowledge, we might be able to process theother KRB5related arguments as well
Temporary measure: if no KRB5 is defined, add "nokrb5" to theoptions  This is so mk1mfpl can pick it up from Makefile
Since asn1h gets included recursively from many places, the easiestis to have asn1h include e_osh and e_os2h  Of course, this makesthe unofficial "nonexport" status of e_osh a bit delicate
Rewrite PKCS12 code and remove some of the oldhorrible macrosFix two evil ASN1 bugs Attempt to use 'ctx' whenNULL if input is indefinite length constructedin asn1_check_tlen and invalid pointer to ASN1_TYPEwhen reusing existing structure this took ages tofind because the new PKCS12 code triggered it
Remove RSArefrelated things
Document
If OPENSSL_BUILD_SHLIBCRYPTO for files that end up as libcryptoobjects or OPENSSL_BUILD_SHLIBSSL for files that end up as libsslobjects is defined, redefine OPENSSL_EXTERN to be OPENSSL_EXPORTThis is actually only important on Win32, and can safely be ignored inall other cases, at least for now
Define OPENSSL_EXPORT and OPENSSL_IMPORT and give OPENSSL_EXTERN thedefault value OPENSSL_IMPORT  Explain the use of all those macros
Remove anything connected to RSAref, since that's gone by nowAdd the C macros OPENSSL_BUILD_SHLIBCRYPTO and OPENSSL_BUILD_SHLIBSSLto the build of the object files as appropriate for each library
Uhmm, the keyword TRUE does not exist of course
Delete PKCS12 redundant files
ASN1_ITEM versions of ASN1_d2i_{fp, bio} and replacement ofmost of the old wrappers A few of the old versions remainbecause they are non standard and the corresponding ASN1code has not been reimplemented yet
Replace the old ASN1_dup with ASN1_item_dup andzap some evil function pointers casts along the way
Check for deselection of KRB5  In fact, skip it completely on VMS for now
Correct a typo
"make update" plus a rewrite of both num files
Enhancements to mkdefpl: detect "unknown" algorithms any C macro starting with NO_ that isnot explicitely mentioned in mkdefpl as a known algorithm andreport add a number of algorithms that can be deselected look in ssl/ksslh as well accept multiple whitespace not just one SPC in preprocessor lines
ASN1_ITEM version of ASN1_dup Might wantsomething more efficient later
Update VMS build procedures to match the current status
Add NO_ASN1_OLD to remove some old style functions:currently OpenSSL itself wont compile with this setbecause some old style stuff remainsChange old functions X509_sign, X509_verify etcto use new item based functionsReplace OCSP function declarations with DECLARE macros
ASN1_ITEM versions of sign, verify, pack and unpackThe old function pointer versions will eventually goaway
New OCSP extension functions
Get rid of unused error code
Avoid compiler warnings in hw_ubsecc: unused staticfunctions and signed/unsigned mismatchThis will of course change if some of the unused functionssuddenly get used
X509V3_add_i2d needs to be able to allocate aSTACK_OFX509_EXTENSION so it should be passedSTACK_OFX509_EXTENSION  in the first argumentModify wrappers appropriately
Finish SSL_peek/SSL_pending fixes
Fix SSL_peek and SSL_pending
New function X509V3_add_i2d this is used forencoding, replacing and deleting extensionsFix X509V3_get_d2i so it uses takes note ofnew critical behaviour
Reorder the options in tunala and add command switches like s_server fordisabling different SSL/TLS protocol versions
Various Win32 related fixes Doesn't compile yet onWin32 but it is getting thereUpdate mkdefpl to handle ASN1_ANY and fix headersStop various VC++ warningsInclude some fixes from "Peter 'Luna' Runestig"<peter@runestigcom>Remove external declaration for des_set_weak_key_flag:it doesn't exist
This adds support to 'tunala' for supplying DH parameters without which itwill not support EDH cipher suites The parameters can either be loadedfrom a file via "dh_file", generated by the application on startup"dh_special generate", or be standard DH parameters as used ins_server, etc
Some minor changes to the "tunala" demo Seal off some buffer functions so that only the higherlevel IO functionsare exposed Using the above change to buffer, add support to tunala for displayingtraffic totals when a tunnel closes Useful in debugging and analysis you get to see the total encrypted traffic versus the total tunneledtraffic This shows not only how much expansion your data suffers fromSSL a lot if you send/receive a few bytes at a time, but also theoverhead of SSL handshaking relative to the payload sent through thetunnel This is controlled by the "out_totals" switch to tunala Fix and tweak some bits in the READMEEg sample output of "out_totals" from a tunnel client when tunneling a brief"telnet" sessionTunnel closing, traffic stats followSSL network traffic to/from server;     7305 bytes in,     3475 bytes outtunnelled data to/from server;            4295 bytes in,      186 bytes out
branches have been merged
Stop build when an error occurs"Peter 'Luna' Runestig" <peter+openssldev@runestigcom>
Don't access nonexisting element buf[256], use buf[255] insteadSubmitted by: draslar <draslar@elraych>
Split a CHANGES entry so that one of the halves matches thecorresponding new entry in the OpenSSL_0_9_6stable branch
Fixes to OCSP print codeDon't try to print request certificates if signature is not presentRemove unnecessary test for certificates being NULLFix typos in printed outputTidy up outputFix for typo in OCSP_SERVICELOC ASN1 templateAlso give a bit more info in CHANGES about the ASN1 revision
fix indentation
Don't hold CRYPTO_LOCK_RSA during timeconsuming operations
Add a comment intended change
Import s2_pktc wbuf fixes from OpenSSL_0_9_6stable branch
Comment correction
Obtain lock CRYPTO_LOCK_RSA before creating BN_MONT_CTXstructures and setting rsa>_method_mod_{n,p,q}Submitted by: "Reddie, Steven" <StevenReddie@cacom>
undo previous change: 'prexit' is already available in current versions of s_client
Redo OCSP response printing Remove duplicate orobsolete code Delete some redundant files
When mentioning features that don't exist in current releases ofOpenSSL such as the new undocumented 'prexit' option to s_client,the FAQ should point out that they don't: The FAQ is not just partof the release, it's current version is also published on the web
Simplify preprocessor statements
Add OCSP service locator extension
Do not poll DEVRANDOM if were building without an file pointer APISpotted by "David Schwartz" <davids@webmastercom>
Make sure each FAQ item has an index entry
Add support for the noCheck OCSP extension This isjust a NULL and appears in a certificate
Make mkdefpl parse some ASN1 IMPLEMENT macrosInitial support for variables in DEF files
Add a couple of FAQs
"Andrew W Gray" <agray@iconsinccom> says /GD is no longer a validcompiler switch
If CONF_get_string returns NULL and we want to tolerate thiseg, use a default, we have to call ERR_clear_error
Locking issues
Implement some standard OCSP extensions in the v3 code Theseare all raw print only extensions at present
The C version of bn_sub_part_words is needed not onlyin NO_ASM configurations
Very few in the "README" is uptodate
Add OCSP nonce extension to supported extensionsThis is a little unusual because it can contain nostructure ie the extension OCTET STRING contentoctets do not contain a DER encoded structure
Make a note of the new engine
This is an engine contributed by Broadcom  it is meant to support theBCM5805 and BCM5820 units So far I've merely taken a skim over the codeand changed a few things from their original contributed sourcedeshadowing variables, removing variables from the header, andreconstifying some functions to remove warnings If this givescompilation problems on any system, please let me know We will hopefullyknow for sure whether this actually functions on a system with the relevanthardware in a day or two  :
New function X509V3_extensions_print this removes extension duplicationfrom the print routinesReorganisation of OCSP code: initial print routines in ocsp_prnc Doesn'twork fully because OCSP extensions aren't reimplemented yetImplement some ASN1 functions needed to compile OCSP code
typo
The BN_mul bug test apparently is no longer needed
First step towards SSL_peek fix
Update
New function X509_signature_print to remove some duplicatecode from certificate, CRL and request printing routines
Change the PKCS7 structure to use SEQUENCE OF for theauthenticated attributes: this is used to retain theoriginal encoding and not break signaturesSupport for a SET OF which reorders the STACK whenencoding a structure This will be used with thePKCS7 code
c&p error spotted by Martin Forssen
Replace the old style OCSP ASN1 module
Constification of the data of a hash table  This means the callbackfunctions need to be constified, and therefore meant a number of easychanges a little everywhereNow, if someone could explain to me why OBJ_dup cheats
Problem: bn_mul_normal misbehaves if the size of b is 0Solution: multiply a with 0, putting the result in r, and return
In bn_mul_recursive, make sure the comba routines are only calledwhen both a and b are of the exact right size  This may change tosomething better later
When using pedantic, it's a good thing to define PEDANTIC as wellAlso, define a second debugging configuration without assembler
Stop extension creation code core dumpingThis was caused by no initialising the bufferto NULL when using the auto allocating versionif i2d
Rewrite the extension code to use an ASN1_ITEM structurefor its ASN1 operations as well as the old style functionpointers i2d, d2i, new, free Change standard extensionsto support thisFix a warning in BN_mul, bn_mulc about uninitialised 'j'
Add description of SSL_[CTX_]_check_private_key
SSL_new may potentially add a certfificate  Therefore, wenduplicating the certificate that is in the original SSL, remove theone that SSL_new provided, if anySpotted by: Mike Zeoli <zeoli@roguewavecom>
Change/add comments
Stop on bntest error
 empty log message 
Make TYPE_RSA the default type instead of just setting it when new isgiven  That also allows the arguments to come in any order newlast, for example
Use continuation lines in test/bctest as far as it is possibleto dermine what the expression should look likeApparently CVS does not like lines longer than about 2^10 characters
Don't throw away bctest's error messages
Test for SCO bc bug
Next step in tidying up the LHASH codeDECLARE/IMPLEMENT macros now exist to create type and prototype safewrapper functions that avoid the use of function pointer casting yet retaintypesafety for typespecific callbacks However, most of the usage withinOpenSSL itself doesn't really require the extra function because the hashand compare callbacks are internal functions declared only for use by thehash table So this change catches all those cases and reimplements thefunctions using the baselevel LHASH prototypes and does pervariablecasting inside those functions to convert to the appropriate item typeThe exception so far is in ssl_libc where the hash and compare callbacksare not static  they're exposed in sslh so their prototypes should not bechanged In this last case, the IMPLEMENT_LHASH_ macros have been leftintact
bn_part_sub_word prototype
Merge from the ASN1 branch of new ASN1 codeto main trunkLets see if the makes it to opensslcvs :
Add manual pages for certficate/key loading and friends
Placeholder for SCO bc bug detection
Fix some things that look like bugsOne problem that looked like a problem in bn_recpc at first turnedout to be a BN_mul bug  An example is given in bn_recpc; findingthe bug responsible for this is left as an exercise
TEST_MUL and TEST_SQR added
Signrelated fixes and testsBN_mod_exp_mont does not work properly yet if modulus mis negative we want computations to be carried outmodulo |m|
Move 'q>neg  0' to those places where it is neededjust in cases someone uses a negative modulus
BN_mod_sqrt documentation/comment
Don't check for bc at all We can now run a meaningful test even ifit is missing
remove a comment that shouldn't have been there any more
Faster BN_mod_sqrt algorithm for p  5 8
Printing "verify " should not be counted as a test for the"xxx tests passed" message
During the self test, we only want to know what bctest says onstderr
Have the self test use bctest to check that bc is sane
Use bc's "print" feature whenever it is available,not just on certain platforms
Add a comment
Workaround for broken or missing bc
remove useless instruction
Intel assembler version for bn_sub_part_words  I haven't gotreliable timings yet, please try it out!
another fix for the debug print
test_mod_mul is useful, let's run it more often
move constants for debug functions to end of file
Update the internal docs
Typo and additional information about certchain building
Add EXAMPLES for SSL_CIPHER_description output
Discuss http://wwwshoupnet/papers/oaeppsZ
On Windows, Rainbow uses _stdcall convention under WindowsSpotted by plin <plin@rainbowcom>
push the flags too
looks like it works now
save registers in the debug output code return value is overwritten too
more of the same: add printf for perlasm
minor modification to the previous change
PERLASM  the wierdest programming language since Intercaladd debug output facilities
Use assert as in the rest of the BN library
Improve formatting
It's completely unnecessary to add a compression algorithm that isreally undefinedSpotted by Jeffrey Altman <jaltman@columbiaedu>
Remove the last bn_wexpands that made us break constness  Ofcourse, that means we need to handle the cases where the two arrays tobn_mul_recursive and bn_mul_part_recursive differ in sizeI haven't yet changed the comments that describe bn_mul_recursiveand bn_mul_part_recursive  I want this to be tested by more peoplebefore I consider this change final  Please test away!
Change error message to "bignum too long"
Sync up with a minor change in lhashh
ANSI C doesn't allow trailing semicolons after a function's closing braceso these macros probably shouldn't be used like that at all So, thischange removes the misleading comment and also adds an implicit trailingsemicolon to the DECLARE macros so they too don't require one
Update the documentation to the current state of the LHASH changes Therewill probably be more when the lh_doall[_arg] callbacks are similarlytidied up, but this 'pod' should now be current
Make a note of the LHASH changes
Make the remaining LHASH macro changes This should leave no remainingcases of function pointer casting in lh_new calls  and leave only thelh_doall and lh_doall_arg cases to be finished
Fix warnings
include <limitsh>
Don't allow BIGNUMs to become so large that computations with dmaxmight overflow
Use the new LHASH macros to declare typesafe wrapper functions that canbe used as the hash/compare callbacks without function pointer castingFor now, this is just happening in the apps/ directory whilst a few peoplecheck the approach The rest of the library will be moved across to thesame idea if there's no problems with this
Next step in tidying up the LHASH code This commit defines DECLARE andIMPLEMENT macros for defining wrapper functions for "hash" and "cmp" callbacksthat are specific to the underlying item type in a hashtable This preventsfunction pointer casting altogether, and also provides some typesafetybecause the macro does pervariable casting from the void  type used inLHASH itself to the type declared in the macro  and if that doesn't match theprototype expected by the "hash" or "cmp" function then a compiler error willresultNB: IMPLEMENT macros are not required unless predeclared forms are requiredeither in a header file, or further up in a C file than the implementationneeds to be The DECLARE macros must occur after the typespecific hash/cmpcallbacks are declared Also, the IMPLEMENT and DECLARE macros are such thatthey can be prefixed with "static" if desired and a trailing semicolon shouldbe appended making it look more like a regular declaration and easier onautoformatting texteditors tooNow that these macros are defined, I will next be commiting changes to anumber of places in the library where the casting was doing bad things Afterthat, the final step will be to make the analogous changes for the lh_doalland lh_doall_arg functions more specifically, their callback parameters
Add a comment to explain the purpose of bn_cmp_part_words
last commit was wrong Now it works :
argl
remember the problem with ftime
forgot to remove the loop variable
Loops like this one:if bp  NULLfor j0; j<10000; j++BN_add&c,&a,&b;seem to be pretty useless, and bp never is NULL anyway
Move the rijndael "test" to the bf and cast tests
Note the bntest changeThe _part_words functions are not static
New function BN_bntest_rand to detect more BN library bugsThe bn_cmp_part_words bug was only caught in the BN_mod_mul test,not in the BN_mul test, so apparently the choice of parameters insome cases is bad
Fix bn_cmp_part_words and move it to bn_libc
remove unused static function
First step in tidying up the LHASH code The callback prototypes andcasts used in the lhash code are about as horrible and evil as they canbe For starters, the callback prototypes contain empty parameter listsYuckThis first change defines clearer prototypes  including "typedef"'dfunction pointer types to use as "hash" and "compare" callbacks, as well asthe callbacks passed to the lh_doall and lh_doall_arg iteration functionsNow at least more explicit and clear casting is required in all of thedependant code  and that should be included in this commitThe next step will be to hunt down and obliterate some of the functionpointer casting being used when it's not necessary  a particularly evilvariant exists in the implementation of lh_doall
Write a first HOWTO on how to create certificates  This is currentlya draft
Correct a mail address
Document the addition of Kerberos stuff
Typo corrected
functionality for BN_mod_sqrt timings
"make depend"
update
GPL FAQI hope this adequately summarizes the results of all those disussions
Borland C fix
typo
Recognise Darwin as well  For now, have it do exactly the same thing as for Rhapsody
COMP_zlib should always be declared, even if it is not functionalDon't dump core in ssltest
Fix the recently introduced test that checks if the result is 0
First tentative impementation of Kerberos 5 cryptos and keys for SSL/TLS  Implemented by Vern Staats <staatsvr@aschpcmil>, further hacked and distributed by Jeffrey Altman <jaltnab@columbiaedu>
Fix BN_rshift, which caused lots of trouble
Remove randomness from the test These constants give me a segmentviolation in test_kron on a 32 bit system
BN_mod_expr,a,p,m,ctx should not be called with r  pBut even if this is avoided, there are still segmentation violationsduring one of the BN_frees at the end of test_kronin some cases, in other cases during BN_kronecker, orlater in BN_sqrt; choosing a different exponentiationalgorithm in bntestc appears to influence when the SIGSEGVtakes place
It's "elif", not "elsif"
A few bug fixes for Windows
Changes to Lenka's Montgomery implementationSubmitted by: Lenka Fibikova
New format for the FAQ  We now have different sections for differenttypes of questions  Hopefully, that'll make them easier to spot, andspecially, easier to refer to
Corrections to the comments in BN_mod_inverse
The compression method may be undefined for some reason that hasgenerated errors  Therefore, print whatever error there may be
Simplify and provide the possibility to clean a compression method
comp_methods in a SSL_CTX points at an internal database  Do notfree that, since it's shared by all SSL_CTX's, present and future
Turn off memory checking when loading new compression algorithms
COMP_METHOD has a new argument since some time back
Make it possible to test SSL compression
Change c_zlib further to allow loading a shared zlib on all operatingsystems where such an operation is supported
BN_mod_exp problems 
Changes to c_zlibc to make ZLIBDLL dynamically loadable underWindows  Really, this should probably be done on Unix as well, butthat will be a later story
Move reduction step from BN_mod_exp to BN_mod_exp_mont_wordFix BN_mod_exp_simple for a0 mod mSkip useless round in BN_mod_sqrt 1 is always a square, no needto test BN_kronecker for it
 Fix a slight bug in the statemachine This caused the client end of atunnel to not proactively close down when failing an SSL handshake Change the certchain callback  originally this was the same one used ins_client and s_server but the output's as ugly as sin, so I've prettiedtunala's copy output up a bit and made the output level configurable Remove the superfluous "errors" from the SSL state callback  these are justnonblocking sideeffects
bn_modfsc is no longer needed, a BN_sqrt implementationexists in bn_sqrtc now
Fix bntestc problem  one of the primes got lost
Handle special cases correctly in exponentation functionstest_bn still fails in the BN_sqrt test becausesmall primes appear to turn into zero for noobvious reason, leading to "div by zero" errors
BN_mod_sqrt
BN_sqrt
Add a warning about the usage of the montgomery functions if the inputsare not reduced modulo m, the outputs won't be either
Amend the original CHANGES log entry The ex_data handling has beensimilarly modified now on DH and DSA
BN_legendre is no longer needed now that OpenSSL has BN_kronecker
Do to DH and DSA what has already been done to RSA This involves movingthe initialisation and cleanup of "ex_data" elements to before an inithandler and after a finish handler respectively
mark a bug
Fix BN_kronecker so that it works correctly if 'a' is negativewe need the two's complement of BN_lsw then
More little changes to the tunala demo; A little bit of codecleanup Reformat the usage string not so wide Allow adding an alternative usually DSA cert/key pair a la s_server Allow control over certchain verify depth
BN_to_montgomery expects its inputs to be in the interval 0  modulus1,so we have to reduce the random numbers used in test_montBefore this change, test_mont failed in [debug]solarissparcv9gccconfigurations "Montgomery multiplication test failed!" becausethe multiplication result obtained with Montgomery multiplicationdiffered from the result obtained by BN_mod_mulSubstituing the old version of bn_gcdc BN_mod_inverse did not avoidthe problemThe strange thing is that it I did not observe any problemswhen using debugsolarissparcv8gcc and solarissparcv9cc,as well as when compiling OpenSSL 096 in the solaricsparcv9gccconfiguration on the same system
Log security relevant change
fix for Borland C
add missing braces
Store verify_result with sessions to avoid potential security holeFor the server side this was already done one year ago :
Fix warnings in expspeedc but the segmentation fault remainsImprove readability of bn_shiftcAdd comment in bn_libc why zero data between top and max?Change bntestc output for BN_kronecker test
BN_bin2bn did not contain an offbyone error;I'm still investigating what caused the segementation faultmaybe "make clean; make" will cure it But BN_bin2bn should always reset ret>neg
Expand expspeedc to make BN_kronecker timingsThis caused a segmentation fault in calls to malloc, so I cleaned upbn_libc a little so that it is easier to see what is going onThe bug turned out to be an offbyone error in BN_bin2bn
Implement BN_kronecker testModify "CHANGES" entry for BN_mod_inverse it's not just avoiding BN_divthat increases performance, avoiding BN_mul also helps
avoid segmentation fault
Make BN_mod_inverse a little faster
Improve BN_mod_inverse performanceGet the BN_mod_exp_mont bugfix for handling negative inputs correctthis time
Copy and paste error  bn_add_part_words should of course callbn_add_words, not bn_sub_words
Make s_client/s_serverstyle cert verification output configurable bycommand line, and make the peerauthentication similarly configurable
use standard C
Minor tweaks and improvements to the tunala demo Add "cipher" and "out_state" command line arguments to control SSLciphersuites and handshake debug output respectively Implemented error handling for SSL handshakes that break down This usesa cheat  storing a nonNULL pointer as "app_data" in the SSL structurewhen the SSL should be killed
A typo and a couple of logic errors fixed I think there may still be oneor two kinks lurking around, but it now appears to deal with the basictest cases ok
Use BN_pseudo_rand instead of BN_rand
Timings
Note that SSL_peek has been disabled
Addapt to added files in the BIGNUM section
Correct a bug in BN_kroneckerSketch the test for BN_kronecker
Comments on SSL_peek deficiencies
Disable SSL_peek until it is fixed
Add test_kron function, which will contain a test for BN_kronecker
Add bn_kronc BN_kronecker, which I forgot in the previous commitAlso add the next file in advance so that I can't forget this one :
Undo previous commit, which was an accident
Fix BN_is_ macrosFix BN_gcdAnalyze BN_mod_inverseAdd BN_kronecker"make update"
Change submitted files so that they compile in particular,use BN_CTX_start/get/end instead of accessing ctx>tosChange indentation to "EAY" style
Change submitted files so that they compile in particular,use BN_CTX_start/get/end instead of accessing ctx>tosChange indentation to "EAY" style
It was a small change, but it could conceivably affect people  so I'mmaking a note in the CHANGES file
Ensure that the "ex_data" member of an RSA structure is initialised beforethe RSA_METHOD's "init" handler is called, and is cleaned up after theRSA_METHOD's "finish" handler is called Custom RSA_METHODs may wish toinitialise contexts and other specifics in the RSA structure upon creationand that was previously not possible  "ex_data" is where that stuffshould go and it was being initialised too late for it to be used
More BN_mod_ functions
Add bn_modc should have happend in the previous commit BN_swap manual page
modular arithmetics"make update"
Remove CR at line ends
Elliptic curves over GFp, new BIGNUM functions, Montgomery reimplementationThese new files will not be included literally in OpenSSL, but I intendto integrate most of their contents  Most file names will change,and when the integration is done, the superfluous files will be deletedSubmitted by: Lenka Fibikova <fibikova@expmathuniessende>
Correct a number of syntax errors
Addapt the VMS scripts to the changes in the Makefiles
Remove RSAREF not usedYou can still get the code using tag "rsaref"
Addapt the VMS scripts to the changes in the Makefiles
Reimplement bn_div_words, bn_add_words and bn_sub_words for VAXI'm a little bit nervous about bn_div_words, as I don't know what it'ssupposed to return on overflow  For now, I trust the rest of thesystem to give it numbers that will not cause any overflow
Avoid getting warnings about unary  being used on unsigned integer
Oops! Read a full buffer instead of some spurious number from elswhere
'echo on' works better all over than 'echoon'  We had the sameproblem in some other file, but I can't recall which
Better handling of EVP names, add EVP to speed
Make sure bs is assigned NULL when it's free'd, or there will be anincorrect attempt to free it once more
I wonder if I do too much
Add news items early  Please fill in with what I have forgotten
Remove two bn_wexpand from BN_mul, which is a step toward gettingBN_mul correctly constified, avoids two realloc's that aren'treally necessary and saves memory to boot  This required a smallchange in bn_mul_part_recursive and the addition of variants ofbn_cmp_words, bn_add_words and bn_sub_words that can take arrayswith differing sizesThe test results show a performance that very closely matches theoriginal code from before my constification  This may seem like avery small win from a performance point of view, but if one remembersthat the variants of bn_cmp_words, bn_add_words and bn_sub_wordsare not at all optimized for the moment and there's no correspondingassembler code, and that their use may be just as nonoptimal, I'mpretty confident there are possibilitiesThis code needs reviewing!
Remove a declaration for a function that does not exist
Make the definition of bn_add_words match the definition
I might want to debug the assembler modules
Increase permissible ClientKeyExchange message length
include 'err' label only when it is actually used
Make sure BN_DIV2W is not defining when defining it, and remove thedeclarations of bn_add_part_words and bn_sub_part_words since theydo not exist
tag SSL_peek bugs
Documentation on using the SSL library with nonblocking I/O
Improve usability of 'openssl passwd' by includingpassword verification where it makes sense
Constify bn_dump1 implementation so that it matches the prototypein bnh
More constification of the BN library
Make sure to print the BN counting BN_COUNT to stderr instead ofstdout  bc gets so confused by bean counts
Oops, when I clean, I should do it thoroughly
I've checked again and again  There really is no need to expand a to4 times it's size when bn_sqr_recursive won't look farther than theoriginal length  Thereby, constification is no longer a problem
/proc/cpuinfo can have several lines containing the word "type"  We want the one that is "type", plain and simple  Caught by Raoul Borenius <borenius@shuttlede>
I have no idea how this comment got there, but it's certainly notapplicable to ENGINE_ctrl
Many applications that use OpenSSL with ENGINE support might face asituation where they've initialised the ENGINE, loaded keys which are thenlinked to that ENGINE, and performed other checks such as verifyingcertificate chains etc At that point, if the application goesmultithreaded or multiprocess it creates problems for any ENGINEimplementations that are either not thread/process safe or that performoptimally when they do not have to perform locking and other contentionmanagement tasks at "runtime"This defines a new ENGINE_ctrl command that can be supported by enginesat their discretion If ENGINE_ctrl, ENGINE_CTRL_HUP, returns anerror then the caller should check if the _R_COMMAND_NOT_IMPLEMENTED errorreason was set  it may just be that the engine doesn't support or need theHUP command, or it could be that the attempted reinitialisation failed Acrude alternative is to ignore the return value from ENGINE_ctrl andclear any errors with ERR_clear_error and perform a test operationimmediately after the "HUP" Very crude indeedENGINEs can support this command to close and reopen connections, files,handles, or whatever as an alternative to runtime locking when such thingswould otherwise be needed In such a case, it's advisable for the engineimplementations to support locking by default but disable it after thearrival of a HUP command, or any other indication by the application thatlocking is not required NB: This command exists to allow an ENGINE toreinitialise without the ENGINE's functional reference count having to sinkdown to zero and back up  which is what is normally required for thefinish and init handlers to get invoked It would also be a bad ideafor engine_lib to catch this command itself and interpret it by calling theengine's init and finish handlers directly, because reinitialisationmay need special handling on a casebycase basis that is distinct from afinish/init pair  eg calling a finish handler may invalidate the statestored inside individual keys that have already loaded for this engine
Fill in missing information about the string returned fromSSL_CIPHER_description, as there is no other API function to findout details about the cipher used besides the number of bits or protocol used
ignore
Modify  to void, since that's what is actually defined in theengine structure, and some ANSI C compilers will complain otherwise
Two OCSP functions that aren't yet implemented
make update
Get the Rijndael function declarations
Detect and mark functions that no longer exist
Some platforms namely HPUX require the 'x' bit set for shared librariesFor performance reasons, it is also recommended to make the mmap'edshared library 'readonly'> New permissions for installed shared libraries  555This doesn't hurt anybody, provided the installation is performed with'cp f' :
Typo, was "time" instead of "tim"Caught by Jeffrey Altman <jaltman@columbiaedu>
Add Rijndael as things to look through
HPUX shared libraries do not build any longer, as EX_LIBS contains"Wl,+s" instead of +s: Hardcoded necessary references to ldld/ldl into the build rules andremoved EX_LIBSHPUX records the pathnames of dependent libraries when the shared libsare built, so that /libcryptosl is recorded in libsslsl, with"/" not being resolvable when running an application linked against lssl: Build libssl without explicit reference to libcrypto, applications willbe linked with "lssl lcrypto" anywayDocument these informations in Makefileorg
in some new file names the first 8 characters were not unique
For a long time, I've wanted to be able to easily run one or a fewindividual tests  I finally got myself to implement it
Additional explanations for SSL_ERROR_WANT_READ/WRITE
Enhance granularity on what I want to debug for the moment by changingLEVITTE_DEBUG to LEVITTE_DEBUG_MEM
Update my own debugging configuration entry
Make Rijndael work! Those long flights have some good points
Make this stuff compile
Point to SSL_set_bio3 early because that manpage providesinformation that is essential for using BIO pairs
add missing word
tmp2 is not used in BN_mod_mul_montgomery
Really stupid glitch a comment not properly ended fixed
Remove references to RSAref  The glue library is but a memory to fadeaway now
BN_CTXrelated fixes
Constification of LHASH  Contributed by "Paul D Smith" <psmith@gnuorg>I didn't apply all his patches yet, since I have some hesitance aboutunconstifying  To be pondered
Document that the Nuron hardware has been added and remove therequirement for an engine utility since we now have that
Constify DHrelated code
Constify DSArelated code
Make sure ERR_get_error is declared
A few more constifications of some RSA routines that I forgotyesterday
Lutz tells me HP cc uses the same syntax for flags that should bepassed down to ld as GNU cc
When ENGINE_by_id couldn't find the given engine id, it generates anerror  When checking like engine_add is, those errors are actuallygood, so remove them
shl_load also needs to load along a path given through anenvironment variable, SHLIB_PATH  This change makes that possible
Handle BN_copy failure after successful BN_new
handle the case when BN_new returns NULL
Document recent constifications
Constification of CRYPTO_get_ex_data needed for the sake ofRSA_get_ext_data
The consequence of constification is that to pass the address to apointer to a const double pointe parameter, the pointer must point toconst data as well
Constify the RSAref glue code
Constify the RSA parts of the ASN1 library  Note some ugly caststhat are needed in the ASN1 macros  Hopefully, we can get rid ofthose in an elegant way in the future
Constify the RSA library
Constify the RSA library
As a consequence of the BIGNUM constification, the ENGINE code needs afew small constifying changes, and why not throw in a couple of extraswhile I'm at it?
Make all engines available in the openssl application
looks like a cut&paste error
Constify the BIGNUM routines a bit more  The only trouble were thetwo functions that did expansion on in parameters BN_mul andBN_sqr  The problem was solved by making bn_dup_expand which isa mix of bn_expand2 and BN_dup
mode used too early in EVP_PKEY_save_parametersSpotted by Ken Lalonde <ken@torusca>
Make sure that shared libraries get the internal name engine with thefull version number and not just 0  This should mark the sharedlibraries as not backward compatible  Of course, this should bechanged again when we can guarantee backward binary compatibility
Set the CryptoAPI randomness estimate back to 0The randomness may not actually be very good we don't know
increase the value a bit
Richard moved hw_nuronc over to DSOland recently, so this include isn'tneeded now
Minor corrections HPUXFrom: Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
avoid memory leak
Instead of just STACK, use STACK_OFASN1_OBJECT
Update the standards list to the current status
Change the engine library so the application writer has to explicitelyload the "external" builtin engines those that require DSO  Thismakes linking with libdl or other dso libraries nonmandatoryChange 'openssl engine' accordinglyChange the engine header files so some declarations that differed atthat! aren't duplicated, and make sure engine_inth includesengineh  That way, there should be no way of missing the neededinfo
'openssl engine' can now list engine capabilities  The currentimplementation is contained in the application, and the capabilitystring building part should really be part of the engine libraryThis is therefore an experimental hack, and will be changed in thenear future
Better error reporting in 'openssl engine'
make update
Never call load_dh_paramNULL because this leads to an illegalfopenNULL
t is supported, so display some help about it
oops, remove comments that are no longer true
Explanation, tips, etc
This is a demo that performs SSL tunneling client and/or server and isbuilt using an abstracted state machine with a nonblocking IP wrapperaround it README will follow in the next commit
Add application to enumerate, list and test engines with
Add support for shared libraries under IrixSubmitted by Albert ChinAYoung <china@thewrittenwordcom>
Rename true64 to the correct tru64Suggested by Albert ChinAYoung <china@thewrittenwordcom>
Improvements to opensslspecSubmitted by Damien Miller <djm@mindrotorg>This change has been CC:ed to crypt@bxadocgov
Add configuration option to build on Linux on both bigendian andlittleendian MIPSSubmitted by Ralf Baechle <ralf@unikoblenzde>
Make flag variables int instead of char  This avoids getting into trouble on systems where char is unsigned by default
_lrotl is a call to the C runtime library!
DSO_load should also work when it is passed a NULL  a new DSO is createdautomatically, however some code was still referring to the originalpointer rather than the internal one and thus to NULL instead of thecreated pointer
Document the change
Add the possibility to use keys handled by engines in moreapplications
Small documentation change
engine is gone
NetBSD doesn't use ftime
Document the OCSP addition
make update
The majority of the OCSP code from CertCo

Merge the engine branch into the main trunk  All conflicts resolvedAt the same time, add VMS support for Rijndael
Add a note about the recent DSO changes in CHANGES
On HPUX, at least when shl_ are used, the libraries have theextension sl instead of so
For the operating systems where it matters, it is sometimes good totranslate library names by only adding "so" to them withoutprepending them with "lib"  Add the flag DSO_FLAG_NAME_TRANSLATION_EXT_ONLYfor that purpose
This changes the behaviour of the DSO mechanism for determining anappropriate filename translation on the host system Apart from this point,users should also note that there's a slight change in the API functionstoo The DSO now contains its own tobeconverted filename"dso>filename", and at the time the DSO loads the "dso>loaded_filename"value is set to the translated form As such, this also provides an impicitway of determining if the DSO is currently loaded or not Except, perhaps,VMS  :The various DSO_METHODs have been updated for this mechanism except VMSwhich is deliberately broken for now, Richard is going to look at how tofit it in the source comments in there explain "the issue"Basically, the new callback scheme allows the filename conversion toa be turned off altogether through the use of theDSO_FLAG_NO_NAME_TRANSLATION flag,b be handled in the default way using the default DSO_METHOD's converterc overriden perDSO by setting the override callbackd a mix of b and c  eg implement an override callback that;i checks if we're win32 "ifstrstrdso>meth>name, "win32""and if so, convert "blah" into "blah32dll" the default isotherwise to make it "blahdll"ii default to the normal behaviour  eg we're not on win32, sofinish with return dso>meth>dso_name_converterdso,NULLe be retried a number of times by writing a new DSO_METHOD where the"dso_load" handler will call the converter repeatedly Then thecustom converter could use state information in the DSO to suggestdifferent conversions or paths each time it is invoked
rsautlc requires RSA
s_server not s_client
Cert chain verification is useable by nowWhether Steve is still working on 'proper' verification is up tohim to decide 
Correction from Tani Hosokawa <unknown@riverstyxnet>
internal_verify now does know about extensions
Don't ever set 'seeded' if RAND_status returned 0although maybe this static variable should be abolished totally,it was introduced before RAND_status existed
When building shared libraries on HPUX 1020 and HPUX 1100 32bit,ld warns that Fl "may not be supported in future releases"  We knowthat, and are doing things in HPUX 11 64bit, so turn off thatwarning with +vnocompatwarnings
It seems like grep isn't as capable as I thought on some Unix systemsUse egrep instead
Pointer error corrected
If the functions get_dh are declared static, they should be defined the same way
On some operating systems, MAX is defined  Call ours OSSL_MAX instead
Document
There's no reason why app_RAND_load_file should return 0 whenRAND_status hasn'tReported by Dale Stimson <dale@accentrecom>
Krister Walfridsson <cato@dflthse> tells us sysctl lives in /sbinsince NetBSD 15
FreeBSDelf can do threads  However, there seems to be confusion ifyou should defined _THREAD_SAFE I found that in an include file, andthat's what everybody tells me or _THREADSAFE that's what the gccmanual says in the FreeBSDspecific section, so I defined both, justto be safe
Add what's needed to get shared libraries on HPUXNB: This has not been tested at all, that's my next step
make update
Document the change to NCONF
Fix for bug ? in assembly language routines for SHA1 Thiscauses MASM to complain and not produce valid debug infoHopefully this wont break anything elseAlso fix typo in e_rdc
Move expired CA certificate
give pseudo prototypes instead of macro definitions for better clarity
"DESCRIPTION" is required
correction from Lutz
Keep binary backward compatibility by putting new method functionpointers at the end of the structure
Make it possible for methods to load from something other than a BIO,by providing a function pointer that is given a name instead of a BIOFor example, this could be used to load configuration data from anLDAP server
NCONF_get_number has no error checking at all  As a replacement,NCONF_get_number_e is defined _e for "error checking" and ispromoted strongly  The old NCONF_get_number is kept around forbinary backward compatibility
Add short overview, move header files section further down
cosmetic changes
cosmetic change
John Denney <jdenney@camdiscom> reports that we forgot to convertFree to OPENSSL_free in the SSL demos
Two questions have been asked quite often lately
Update test server certificate in apps/serverpem it was expired
Always return a valueSubmitted by:Reviewed by:PR:
CRYPTO_get_ex_new_index would never return an error
Fix for typo in certificate directory lookup code
The experimental Rijndael code moved to the main trunkmake update done
Even when you don't want to create shared libraries, it's a good ideato have the full extension information, so residual shared librariescan be removed so the applications and test programs do not get linkedagainst them by mistake
Rework the system to generate shared libraries: Make note of the expected extension for the shared libraries andif there is a need for symbolic links from for example libcryptoso0to libcryptoso097  There is extended info in Configure forthat Make as few rebuilds of the shared libraries as possible Still avoid linking the OpenSSL programs with the shared libraries When installing, install the shared libraries separately from thestatic ones
Bump the shared library version should have been done a while ago
Make the new conf implementatoin bugcompatible with the old oneActually, it's a feature that it goes looking at environmentvariables  It's just a pity that it's at the cost of the errorchecking  I'll see if I can come up with a better interface forthis
make update
New docs and new facts in older docsSubmitted by Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Make non blocking I/O work for accept BIOs
fix problems in the selftest
Do a favor to those who get weird compiles and report if RAND_pseudo_bytesreturns 1
A few small corrections to the SSL documentationSubmitted by Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
BIO_sock_init returns 1 for success and 1 for failure, not 0;thus the condition '!BIO_sock_init' doesn't make sense
DSO_ctrl changes have removed a couple of DSO_METHODspecific functionsso I've regenerated the error numbers and strings for the DSO functions
Make sure ranlib is only used on a libraries
Make sure that shareable libraries are turned off if we don't know howto make them
None of the DSO_METHOD's were handling anything except generic messagesThese are now processed inside DSO_ctrl itself
Time to get rid of some rather silly code duplication  some DSO_ctrlcommands are common to all DSO_METHODs, hence handle them at the top
Linux on Alpha with gcc knows about shared libraries
Linux on Alpha has the configuration name linuxalphagcc, notlinuxalpha
More code for X509_print_ex support
Global DirectoryString mask fixAdd support for X509_NAME_print_ex in reqInitial code for cutomizable X509 print routines
More SSL functions documented  Submitted by Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Document
Remove what was described by someone as "an EAY hack for compilingSSLeay with Colin Plumb's MD5 implementation instead of his one"
Include arpa/ineth, since that's where htons and friends aresupposed to be defined according to XPG42Found by Evan <n2xjk@ulsternet> for the MVS platform
The des_modes manpage is in section 7
A compiler warning removed  Thanks to the folks at HP!
Verbose output when installing manual pages so that you see thatsomething is going on and what
Add BUGS section
Note read_aheadflag related fixes
Set s>read_ahead in SSL_new because SSL_clear no longer modifies it
Don't modify s>read_ahead in SSL_clear, which is called fromaccept/connect functions; those should not change theread_ahead setting of the SSL structure
Fix SSL_CTX_set_read_ahead macroSubmitted by: Anders Gertz <gertz@epactse>
Document the change
Update
When creating a def file, be a bit more selective so disabledalgorithms do not get in
echooff works on NT, but not on W2K
'ranlib' doesn't always run on some systems  That's actuallyacceptable, since all that happens if it fails is a library withan index, which makes linking slower, but still working correctly
Make the algorithm implementations depend on the correspondingselection macros
typo
Update the status and version number to 097dev
Forgot to change the STATUS file
Time to build the release  Bump the version info accordingly
make update
Change the Windows building scripts to enable DSO_WIN32
print the perlasm rule only for linuxelf it seems it confuses someversion of make for Mingw32
spelling
update info to match the README
stop perlpod from complaining
more manpage links
tlhelp32h
Workaround for tlhelp32h: place the missing header file in outinc
Add some missing info
tlhelp32h is currently missing in Mingw32 release 2952 and 29521
URL to "latest" Mingw release which is almost a year old :
typo
Avoid protocol rollback
Only use the new informational verify codes if wespecifically ask for themFix typo in docs
Catch V_ASN1_NULL
Problem on FreeBSD/Alpha fixed
Kris Kennaway <kris@FreeBSDorg> tells us that FreeBSD/Alpha shouldn'tuse an optimization higher than O
More reports
More reports
Fix ASN1_TYPE bug
More reports
Change IMPORTANT to WARNING for greater emphasis
More reports
Oops, if the target only had USE_TOD, an error message was issued
Ugly hack to make sure static libraries are usable  Without this,anything that just links with libeay32lib or libssl32lib will get anerror saying the __imp__RegQueryValueEx is unresolvedThe right thing would really be to fix crypto/rand/rand_winc to loadADVAPI32DLL dynamically, but that won't be done just before arelease
More reports
Tests so far
Tests so far
Prepare STATUS for the beta 3 reports
Time to build beta 3  Bump the version numbers accordingly
make update
I'm using GNU tar
Changes by Jeffrey Altman <jaltman@columbiaedu> to make RAND_pollwork better in Win32  Verified by zhu qunying <qyzhu@krdlorgsg>
Clarifications and new documentsSubmitted by Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Portability patch for HP MPE/iX  Submitted by Mark Bixby <mark_bixby@hpcom>
New documents  Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Mistakes corrected  Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Add news and a description of the ENGINE part and how it's currentlydistributed
Additions for 096
Reports about a few old systemsReported by Bernhard Simon <bs@bswszidtuwienacat>
AIX doesn't like ftime either
Wrong variable used  It's funny how some bugs take a long timegetting triggered
On VMS, stdout may very well lead to a file that is written to in arecordoriented fashion  That means that every write will write aseparate record, which will be read separately by the programs tryingto read from it  This can be very confusingThe solution is to put a BIO filter in the way that will buffer textuntil a linefeed is reached, and then write everything a line at atime, so every record written will be an actual line, not chunks oflines and not usually doesn't happen, but I've seen it once severallines in one record  Voila, BIO_f_linebuffer is bornSince we're so close to release time, I'm making this VMSonly fornow, just to make sure no code is needlessly broken by this  Afterthe release, this BIO method will be enabled on all other platforms aswell
make update
ispell
Malloc > OPENSSL_malloc etc
The RSA patent will have expired when the next version is released
ispell
Add docs for X509_get_ext_d2i functionAdd some major changes to NEWS
Totally remove the supposedly 'faster' variant inBN_mod_mul_montgomery, which calls bn_sqr_recursivewithout much preparationbn_sqr_recursive requires the length of its argument to bea power of 2, which is not always the case hereThere's no reason for not using BN_sqr  if a simplerapproach to squaring made sense, then why not changeBN_sqr?  Using BN_sqr should also speed up DH where g is chosensuch that it becomes small [eg, 2] when convertedto Montgomery representationCase closed :
BSDI only supports ftime through libcompat, which means it'sbetter not to use it
Document SSL_library_init and it's aliases  Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Type correction  Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Extend the docs on setting the cipher list  Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Clarification about Montgomery problem
Note about contribtions from the US
Document BN_mod_mul_montgomery bug;make disabled code slightly more correct this does not solvethe problem though
Fix a typo in apps/pkcs12c which was using the wrong part ofASN1_TYPE though they are both ASN1_STRING so it didn't causeany problemsMake 'siglen' an int in apps/dgstc so we can check the returnvalue of BIO_read etc
Disable buggy code variant in BN_mod_mul_montgomery that was enabledin 096beta1 and 096beta2 and caused the BN_mont_exp_mont_wordfailure bug report "openssh 220p1 fails with openssl 096beta1"
It seems like all HPUX are successes as soon as the ldl vs ldldquirk is fixed
FreeBSD only supports ftime through libcompat, which means it'sbetter not to use it
A few more HPUX reports  Reported by Kevin Steves <stevesk@swedenhpcom>
Reorder the Blowfish documentation so the lowlevel routines do not get so prominent, and make sure to say out loud what they expect
Clarify the BIO_seek mess and related issuesBuffering BIO docs
ispell
Note the BN_mod_exp_word bug Markus Friedl provided a test program
A couple more reports
ftime is not supported on SGIReported by Steve Robb <steve@euc2net>
New documentation about things related to SSL_CIPHER  Submitted by Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
HPUX 64bit has dlfcn, so let's use that instead of the old dl
A few more reports
No engine stuff in the main trunk
A few more reports
Work around for Netscape PKCS7 signedData bug
A few more reports
Going through performance statistics sometimes generates an exception,so disable that partReported by Jeffrey Altman <jaltman@columbiaedu>
cyclecount is only used when __GNUC__ isn't defined
Disable the net statistics gathering code, since different compilersdisagree on the proper syntax and type names
HPUX didn't go through
Typo in the added hpux targets  ldl should be ldld
The test status as it has been reported so far
Unless we cast, thorough compilers will complain
Jeffrey Altman reminds us to initialize some variables and ercommends the use of LOadLibrary instead of GetModuleHandle
Declare the availability of beta 2 in STATUS
A new beta is being released  Change the version numbersaccordingly
make update
A patch from HP for better performanceSubmitted by Kevin Steves <ks@hpse> 3 months ago
Restore the descriptions to conform with the rest of thedocumentation  We'll work on better documents after the release of096
Jeffrey Altman <jaltman@columbiaedu> sent me a patch that fixes theproblems with GetCursorInfo, but also adds network statistics andperformance statistics where available
Use sk__new_null instead of sk__newNULL, since that takes careof complaints from the compiler about data pointers and functionpointers not being compatible with each other
siglen is unsigned, so comparing it to less than 0 is silly, andgenerates a compiler warning with Compaq C
Oops, no engine in the main trunk
Tell users that a rewrite might be a good idea
Some platforms define NULL as void 0  Unfortunately, a voidcan't be used as a function pointer according the the standards  Usea 0 instead and there will be no trouble
A couple of more names need to be shortened for VMS on VAX
Make sure Compaq C doesn'r complain about dollars, and go around theincompatibility between function and data pointers
Inform the VMS people that RSAref is no longer needed
VMS didn't work out too well
Rename new BIO_set_shutdown_wr macro to just BIO_shutdown_writ's similar to the shutdown, SHUT_WR system callfor sockets
Move text that isn't really descriptions of the functions in the pageto the NOTES section, and add references to the functions mentionedand perhaps a few more
Add BIO_seek and BIO_tell to the BIO control functions manual
New macro BIO_set_shutdown_wrUpdate docs
SSL > TLS/SSL
TLS > TLS/SSL
Change spelling back to "behaviour" and "flavour" instead of theAmerican variants
Clarification
ispell and some other nitpicking
Remove redundant manpages and references to them
add links to the new BIO and SSL manpages to make them visible on the web
BIO_f_ssl docs
Compile all dso files on VMS as well
'make update'
Make sure dso_vmsc compiles on other operating systems as well
A DSO method for VMS was missing, and I had the code lying around
Move up inclusion of confh, so nonMONOLITH programs can benefit fromit as well, especially in appsc
Accept BIO docs
'make update'
Add a flag for OpenVMS
Later, Jeffrey changed his mind  Apparently, GetCursorInfo exists butdoesn't quite work on WinNT 4 earlier than SP6  It works fine onWindows 98 and Windows 2000I'm disabling it for now  What's really needed is some kind of checkto see if GetCursorInfo is safe to call, or alternatively, GetCursoror GetCursorPos could be used, according to Jeffrey
Jeffrey Altman points out that GetQueueStatus crashes on NT
Update BIO_s_connect
Some small clarifications
In the name section, all the functions described shoud be enumeratedThis will also make it much simpler to generate softlinks name likeeach function to manpages containing the info
Update the info on version numbering
BIO_seed and BIO_tell were documented in two other documents,which is redundant  They are now in their own documentAlso, in the name section, all the functions described shoud beenumerated  This will also make it much simpler to generate softlinksname like each function to manpages containing the info
BIO_seed and BIO_tell were documented in two other documents,which is redundant  Instead, move them to their own page
Items without a over and a back are ignored
BIO_s_bio manual page detailing BIO pairThis combines several manual pages provided byLutz Jaenicke <LutzJaenicke@aetTUCottbusDE>,various comments by Bodo to the lists and a bitof source examination by me
Bug fix: Montgomery multiplication could produce results with the wrongsign
Remove engine stuff that was erroneously put in the main trunk
Add Damien Miller's RPM specification file with a few modifications
Remove indentation in the NAME section  There's really no need toindent there, especially since the pod2 scripts will regard that aspreformated text  In one case, indent a code section one step
Add a number of documentation files, mostly for SSL routines, but alsofor a few BIO routinesSubmitted by Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
Add a configuration for Sony News 4Submitted by NAKAJI Hiroyuki <nakaji@tutrptutacjp>
Initial connect BIO docs
Remove indentation in the NAME section  There's really no need toindent there, especially since the pod2 scripts will regard that aspreformated text  In one case, indent a code section one step
rsa_num2 is no longer used, so remove it
Jeffrey Altman convinced me this patch was really needed, or there isno way to make sure GetCursorInfo will give us a valid answer
Docs for socket BIO
'make update'
BIO_s_fd manual page
Point to Peter Gutmann's revised paperThe copy at wwwusenixorg is the old version
One more passed test
Update info on what has been fixed
Update info on what has been fixed, and switch format for failure data
Make sure that Configure will defined DSO_WIN32 for the Win32 targets  I feel a bit unsure if this should really be done for Mingw32 and CygWin32
3 changes: Make sure PCURSORINFO is defined even on systems that do not provide it Change the reference to Peter Gutmann's paper Make sure we don't walk the whole heap lists for performance reasonsJeffrey Altman suggests following Peter Gutmann's advice to keep itto 50 heap entries per heap list
The other log message should have read "Note the DSA change"
More Windows failures reported
Not the DSA change
Don't set the two top bits to one when generating a random number < q:wq
Clarify some of the I/O issuesAdd case of using select and blocking I/O withBIOs and why you shouldn't thanks Bodo!
A few more systems reported successfull
New SSL API mode 'SSL_MODE_AUTO_RETRY', which disables the defaultbehaviour that SSL_read may result in SSL_ERROR_WANT_READ
bug: RAND_poll
Holger Reif reports a few more Solaris successes
Note the failure on Win32
FreeBSD and solaris with gcc passed
Better error checking for RSA and DSA signature and verification speedtests  This was required to not get mysterious errors when theywouldn't quite want to work
Linux in Sparc v7 passed
SCO 505 with both gcc and cc passed
More BIO docs
DSA_verify and DSA_sign might return 1
A couple more HPUX targets tested
debuglinuxelf and debuglinuxelfefence need to be linked withlibdl just as linuxelf
Failure on Solaris when using the CSwift card
mkdefpl still needed better logic  Also, the semantics of theplatforms list is clarified it's however not quite followed in theRSAREF caseRSAREF is also checked now
Document an old change
mkdefpl has erroneous conditions to check if a symbol is excludedfrom the given target  Fixed, I hope
linuxelf passed
OpenBSD doesn't support timeb
Don't include e_osh before the system headers
Reports for OpenBSD 27 and HPUX 1020
Last minute update, in time to make it to 096beta1
Time to release a beta  Change the status accordingly
Time to release a beta  Change the version numbers and datesaccordingly
I started with a make update, but a rewrite was actually neededPerhaps we should make rewrites the default thing to do?
A cast is needed or Borland C will complain
Docs for cipher and base64 BIOs
More new BIO docs, correct some old ones
Marin Kraemer <MartinKraemer@MchPSiemensDe> sent us patches to makethe OpenSSL commands x50 and req work better on a EBCDIC system
More preliminary BIO docsIncomplete and possibly inaccurate Hope somone ischecking these :
More VMS synchronisation
Fix some CygWin problems
Really add BIO_read this time
Add BIO_read etc docsAdd an ASN1 FAQ because I'm sick of answering it :
Clarify how one should behave when make fails  The fault is notnecessarely ours
Synchronise the VMS build with the Unix one
Two places where I forgot to change vms_idhacks to symhacks
Update verify docsNew option to verify program to print out diagnostics
Two new PKCS12 demo programsUpdate PKCS12_parseMake the keyid in certificate aux info more usable
Ugh, BIO_find_type cannot be passed a NULLFix doc example, and fix BIO_find_typeFix PKCS7_verify It was using 'i' for both theloop variable and the verify return value
Add docs for BIO_find_type and friendsAdded function BIO_next otherwise you can'ttraverse a chain without accessing BIO internals
'make update'
num rewitten to include the extra information
Major hack of mkdefpl  There should be no more need to redo theprocess when some symbols are missing  Instead, all needed info issaved in the num files, including what conditions are needed for aspecific symbol to existThis was needed for the work I'm doing with shared libraries underVMS
It's not just VMS that needs some symbols to be hacked  Let'scentralise those hacks in crypto/symhacksh and use it everywhere it'sneeded
Another thing I'm working on
clarification source/sink BIOs are usually both source and sink
Change the printing mahine used by BIO_printf and friends so it canhandle an externally provided "static" buffer as well a a dynamicbuffer  The "static" buffer is filled first, but if overflowed, thedynamic buffer is used instead, being allocated somewhere i the heapThis combines the benefits of putting the output in a preallocatedbuffer on the stack, for example and in a buffer that growssomewhere in the heap
Some BIO docs, incomplete, more to followHmmm I didn't realise BIO_pop did that:isn't source wonderful?
Use name whateversolaris2 instead of sunsolaris2the middle string describes the architecture
Get rid of ASN1_UTCTIME_get, which cannot work with time_treturn type on platforms where time_t is a 32 bit valueNew function ASN1_UTCTIME_cmp_time_t as a replacementfor use in apps/x509c
See RSA Security's press release athttp://wwwrsasecuritycom/news/pr/0009061html September 6, 2000:"RSA Security Releases RSA Encryption Algorithm into Public Domain"
Another superfluous pair of parentheses
Another round of indentation changes: Position braces consistently,add some whitespace for 'if ', 'for ', 'while ' to distinguishkeywords from function names, and finally remove parens around returnvalues why be stingy with whitespace but fill the source codewith an abundance of parentheses that are not needed to structureexpressions for readability?
More indentation consistency: for , while , if , return usually get a space between keyword and opening paranthesisso that they don't look like function calls, where no space isused
Fix X509_STORE_CTX_init  Make indentation more consistent  Dump core less often
'make update'
Changes for QNX: there is no thread support, and the previousconfiguration only worked with noasm
typo
Add OAEP Seed the PRNG
update
Add rsautl
Clarification for SSL_ERROR_ZERO_RETURN
Fix typo in rsautlAdd support for settable verify time in X509_verify_certDocument rsautl utility
Ignore executable
Handle WANT_READ more correctly thanks to Bodo
BIG verify code reorganisationThe old code was painfully primitive and couldn't handledistinct certificates using the same subject nameThe new code performs several tests on a candidate issuercertificate based on certificate extensionsIt also adds several callbacks to X509_VERIFY_CTX so itsbehaviour can be customisedUnfortunately some hackery was needed to persuade X509_STOREto tolerate this This should go away when X509_STORE isreplaced, sometimeThis must have broken something though :
Distinguish between assertions and conditions that should cause death
Keep a not of original encoding in certificate requestsAdd new option to PKCS7_sign to exclude S/MIME capabilities
Mention fix in bio_libc
Increase print buffer 10K instead of just 2K
Ignore Makefilesave
Remove silly test for b>references at the end of BIO_write:If some other thread deletes the BIO that one thread needs forBIO_write, then there's a lot of trouble anyway; there'snothing special about calling the callback
Consistency
Use consistent indentation,
Avoid abort throughout the library, except when preprocessorsymbols for debugging are defined
Fix for BN_mul_worda, 0
Wall insists that main return an int
Include MD4 in documentation
Tell CVS to ignore 'lib'
Add 'rsautl' low level RSA utilityAdd DER public key routinesAdd passin argument to 'ca' utilityDocument sign and verify options to dgst
Undo change from 17 to 18:Returning 1 for an attempt to read from an empty buffer is empty isnot an error that should be signalled via the error queue, it's a'retry read' condition and is signalled as such
Use C syntax, not FORTRAN or whatever that was :
QNX 4 support
N option to diff is not essential, and mentioning it is unnecessarilyconfusing to people whose diff doesn't implement it
Add demo state machine
Fix typo in i2d_ASN1_ENUMERATEDFix bug in read only memory BIOs so BIO_reset worksAdd sign and verify options to dgst utility, needto update docs
Diagnose EOF on memory BIOs or you just get mysterious errors with no errormessage
Use the passed buffer in ERR_error_string!
Change PKCS7 test data to take account of removal ofindefinite length encoding
New option to CApl to sign request using CA extensionsThis allows intermediate CAs to be created more easilyPKCS12_create now checks private key matches certificateFix typo in x509 appUpdate docsNew function ASN1_STRING_to_UTF8 converts any ASN1_STRINGtype to UTF8
Add support for 'other' PKCS7 content types
max > dmax in bn_check_top
Fix ASN1_INTEGER_to_BN properly this time
Fixes to d2i_ASN1_OBJECT, ASN1_INTEGER_to_BN and a_strexc
Various fixesinitialize ex_pathlen to 1 so it isn't checked if pathlenis not presentset ucert to NULL in apps/pkcs12c otherwise it gets freedtwiceremove extraneous '\r' in MIME encoderAllow a NULL to be passed to X509_gmtime_adjMake PKCS7 code use definite length encoding rather thenthe indefinite stuff it used previously
Added OIDs from RFC 2247, 1155, and a few from 1700
Assar wanted an address change
Added BIO_vprintf and BIO_vsnprintf  The former because I'vefound myself needing it a number of times, the latter for completeness
NULL is not an integer
Document the added diversity to the possible log levels
Add more diversity to the possible log levels  Now we have fullcoverage for all syslog level
Added md4 to the VMS compilation
make update
New option 'ctestall' for mkdefpl, that makes it not only generateexisting functions, but really all functions that exist in libeaynumand ssleaynum  This is a good check on how much we should actuallyclean up the number files
Document the reconfiguratoin option for Configure
Allow reconfiguration  This can be useful if some source updaterequires that you configure again, but you don't want to reenter allthose configuration arguments again
Correct the title  This also fooled the automatic documentation builderthat this was actually the pkcs7 document
IBMcxx complains that maxmem is as low as 2048 for certain moduleslike all the digests  Setting maxmem to 16K seems to give thecompiler enough space to do all the optimization it wants
I forgot this file that Assar provided as well
MD4 implemented  Assar Westerlund provided the digest code itself and the test utility, I added the bits to get a EVP interface, the command line utility and the speed test
Memory leaks fix  It now looks like all memory leaks, at least aroundbuilding complete chains, are gone
Memory leaks fix  There seems to be more in other parts of OpenSSL
The pkcs12 had no way of getting a CA file or path to be used whenbuilding a complete chain  Now added through the CAfile and CApatharguments
Abdelilah Essiari <aes@georgelblgov> reports that for very smallrecords, EVP_EncodeUpdate may misbehave  This happens when there'sa record boundary between the two ending b64 equal signs, which makesEVP_EncodeUpdate think there has been more than one EOF, and thereforeadd an extra NUL at the end of the output buffer  This fix correctsthat problem
Duplicate names detected
Make sure that 'initialized' is zeroed as well when cleaning up
Fix for bad sorting of object namesAdd warning print out if duplicate names found:should end up as a fatal error but a warning fornow until they problems are fixed
For n > 7, we might get uninitialized unzeroed dataSpotted by "Kyoungho Jeon" <khjeon@securesoftcokr>
Changes needed for Tandem NSK, supplied by Scott Uroff scott@xyprocomFix warnings with BIO_dump_indent
On Unicos, shorts are 8 bytes, so instead, use a structure with 2 32bit ints, just as in destestc
On Unicos, openlog isn't constified, so let's not do that in xopenlog
Unicos doesn't have sys/timebh  Fix it by defining the TIMEB macro unless on Unicos
mumble unicos 10003 with Cray Standard C Version 6200 has a sysloghwhere the openlog is declared like this:extern int openlog __char _Ident, int _Logopt, int _Facility;
Include SKIP DH parameters with OpenSSLThese have been created by a SHA1 based procedure, seehttp://wwwskipvpnorg/spec/numbershtmlThese values are taken from that document, I have notimplemented the prime generator
Added and corrected documentation for the 'shared' option
We've now covered the shared library support for Solaris, so the shared hackin config is no longer needed
It's probably a good idea to make the shared libraries depend in EX_LIBS
"make update"
I had completely forgotten that print_table_entry also needed to read the two"shared" variables on it's own
Add support for shared libraries on Solaris
A few corrections with the shared library support:1 make sure libsslso becomes dependent on libcryptoso2 correct a number of silly bugs in the solarisshared target, and makesure libso also depends on libcso
Make it so we can dynamically enable memory allocation debugging through theenvironment variable OPENSSL_DEBUG_MEMORY existence is sufficient  At thesame time, it makes sure that CRYPTO_malloc_debug_init gets expanded somewhere and thereby tested for compilation
Remove casts that are no longer needed
If a ip address is successfully parsed, the WSA structure under Win32 wasn'tproperly initialised  FixedBug reported by DeJuan Jackson <djackson@invergecom>
Update 'openssl passwd' documentation on selection of algorithms
Document the new DN printing optionsChange a few names to be more meaningfulFix typos in CApl docs
Document rollback issues
Fix SSL 20 rollback checking: The previous implementation of thetest was never triggered due to an offbyone errorIn s23_clntc, don't use special rollbackattack detection paddingRSA_SSLV23_PADDING if SSL 20 is the only protocol enabled in theclient; similarly, in s23_srvrc, don't do the rollback check ifSSL 20 is the only protocol enabled in the server
New ASN1_STRING_print_ex and X509_NAME_print_exfunctions These are intended to be replacementsfor the ancient ASN1_STRING_print and X509_NAME_printfunctionsThe new functions support RFC2253 and various prettyprinting options It is also possible to displayinternational characters if the terminal properly handlesUTF8 encoding Linux seems to tolerate this if the"unicode_start" script is runStill needs to be documented, integrated into otherutilities and extensively tested
There's a slight possibility that a is 0 in BN_sub_word, and mighttherefore have unallocated parts  Therefore, a check for the 0 caseis needed, resulting with the same thing as when a is negative
In the case where a < 0 and |a| < w, the result assigned to a fromBN_add_word becomes wrongly negativeThis was discovered by Darrel Hankerson <dhankers@cacrmathuwaterlooca>
Looks like Win32 builds do not define THREADS  However, they're stillsupporting threads, which means that th assertion is supperblydangerous, so make sure it's not compiled under Win32, period
Add the possibility to get hexdumps of unprintable data when using'openssl asn1parse'  As a side effect, the functions ASN1_parse_dumpand BIO_dump_indent are added
Fix a bug in the new i2d_{ENUMERATED,INTEGER} thatdidn't recognise NULL to mean 'don't output anything'
When data are written out in very small blocks less than 3 bytes insize through the base64 filter, b64_write messes up it's parametersin such a way that instead of writing correct base64 output, the first4 characters of that output is repeated over and over  This fixcorrects that problem
There's a deadlock when ssleay_rand_bytes is called the first time, sinceit wants to stir the pool using ssleay_rand_add  This fix provides thepossibility to call ssleay_rand_add inside a locked state by simply tellingit not to do any locking through a static variable  This isn't the mostelegant way one could do this, but it does retain thread safety during thestirring process
Fix warningsIn crypto/err/errc need to initialise p toNULL in case thread_hash is NULL Otherwisep will be uninitialized
Make NEG_PUBKEY_BUG on by defaultASN1_TIME fixesNew function c2i_ASN1_OBJECT
Darrel Hankerson <dhankers@cacrmathuwaterlooca> correctly discoveredthat of the result pointer to bn_mul was the same as one of the two arguments,That argument might have it's sign destroyed  He provided this fix
Avoid a race condition if another thread happens to remove the errorstate at the same time
Add support for solaris shared libraries, currently just experimentalthere's no way to get it through configuration yet
Avoid loops, and make sure that it's possible to still build sharedlibraries even if the "shared" configuration option wasn't chosen
This isn't entirely necessary if you do everything right from thestart, but can save you some trouble  Just ignore "shared" if itcomes up among the given options, at least for now
"make update"
Add a note on installation under Win32
Show the running line count and definition cont in debug mode  Thathas helped me a bit when I ran into trouble
Profiling option for mk1mfpl
crypto/errc bugfix
Redo and enhance the support for building shared libraries  Currentlythere's support for building under Linux and True64 using examplesfrom the programming manuals, including versioning that is currentlythe same as OpenSSL versions but should really be a different seriesWith this change, it's up to the users to decide if they want sharedlibraries as well as the static ones  This decision now has to bedone at configuration time well, not really, those who know what theydo can still do it the same way as beforeThe OpenSSL programs openssl and the test programs are currentlyalways linked statically, but this may change in the future in aconfigurable manner  The necessary makefile variables to enable thisare in placeAlso note that I have done absolutely nothing about the Windows targetto get something similar  On the other hand, DLLs are already thedefault there, but without versioning, and I've no idea what thepossibilities for such a thing are there
Bugfix: use write locks, not just read locks
We do PKCS8 as well
oops
don't print debug output
Move RNG initialization to RAND_poll, and shared definitions torand_lclh
Randomness polling function for Win9x
Document purpose option in usage string
Make req seed the PRNG if signing withan already existing DSA keyDocument the new smime options
FAQ about ar "missing" on Solaris
Add an early reference to BN_CTX_new so that the usage of BN_CTX_startis easier to grasp
Fix some typose in the i2d/d2i functions thatcall the i2c/c2i they were not using thecontent length for the headersFix ASN1 long form tag encoding This neverworked but it was never tested since it isonly used for tags > 30New options to smime program to allow thePKCS7 format to be specified and the contentsupplied externally
Corrected small bug that could add ',L' when it shouldn't
New ASN1 functions that just deal withcontent octets, not tag+length
More experiments show that you can set your data segment size softlimit higher and thereby get through compilation of sha_dgstc
Change the FAQ entry a bit, giving the details as I observed them
Document the change
I got sick and tired of having to keep track of NIDs when such a thingcould be done automagically, much like the numbering in libeaynum andssleaynum  The solution works as follows: New object identifiers are inserted in objectstxt, following thesyntax given in objectsREADME objectspl is used to process obj_macnum and create a newobj_mach obj_datpl is used to create a new obj_dath, using the data inobj_machThis is currently kind of a hack, and the perl code in objectsplisn't very elegant, but it works as I intended  The simplest way tocheck that it worked correctly is to look in obj_dath and check thearray nid_objs and make sure the objects haven't moved around this isimportant!  Additions are OK, as well as consistent name changes
Beautification
Add a blurb on how to solve the problem with failing compiltaion of sha_dgstc on Alpha True64 Unix
Add PRNGD link
Update STATUS
Return bignum '0' when BN_rand is asked for a 0 bit random number
Fix code structure if  else if  where both partsmay be disabled by preprocessor symbols
Don't dereference NULL pointersSubmitted by: bowe@chipmacertcocom
Don't let top go below zero!
Use uptodate functions
Give the user the option to measure real time instead of user CPU time
Undo the changes I just made  I'm not sure what I was thinking ofThe message to everyone is "Do not hack OpenSSL when stressed"
Document my latest changes
Make it possible for users of the openssl applications to specify theEGD should be used as seeding input, and where the named socket is
Make it possible for people to tell where the EGD socket is throughthe RANDEGD environment variable
That's it, I've seen questions about this one time too many fortoday  Time to add extra info so the poor users know where togo with their troubles
Make sure we use /usr/sbin/sysctl, especially since /usr/sbin is notalways in the users $PATH
Added references to RFCs 1421 to 1424, that describe PEMSuggested by Randolph Bentson <bentson@griegholmsjoencom>
BSDstyle MD5based password algorithm in 'openssl passwd'Still needs to be tested against the original using sample passwordsof different length
Steve fixed up some strange errors introduced into dso_win32c, and I'mjust converting some spaces to tabs from his fix :
Actually comment out the parts of BN_MOD_MUL_WORD that I inteded tocomment out in the previous commit
In BN_mod_exp_mont_word, avoid one application of BN_MOD_MUL_WORD,and for small 'a' also a couple of calls toBN_mod_mul_montgomeryr, r, r, 
Move add_oid_section to appsc, so it can be shared by severalapplications  Also, have it and the certificate and key loadingfunctions take a BIO argument for error output
Document the change in req
Change req so the new parameter 'rand file' uses the given file inaddition to the file given through the RANDFILE option or environmentvariable
On caseinsensitive systems, the 'install' target gets matched againstthe 'INSTALL' file, which means that 9 times of 10, the BlowFishheaders won't get installed  Avoid this in the same way it's done incrypto/des/Makefilessl, where someone apparently has thought of this
Move the certificate and key loading functions to appsc, so they canbe shared by several applications
Forgot the selfdocumentation within req
Document the change in req
Small change to accept the command line parameter 'rand file'  Thisparameter takes precedence over the RANDFILE option in theconfiguration file
Change mkstackpl so it now sorts each groupinto lexical order Previously it depended onthe order of files in the directoryThis should now mean that all systems willagree on the order of safestackh and willnot change it needlessly and avoid massiveneedless commits to safestackh in futureIt wont however avoid this one :
use faster version
 This adds some checking to the 'dlfcn' DSO_METHOD that at least letsit cope with OpenBSD which doesn't understand "RTLD_NOW" Added the dso_scheme config string entry for OpenBSDx86 to give itDSO support 'make update' that has also absorbed some of Steve's mkstack changesfor the ASNrelated macros
Fixes for Win32 buildThis is mostly a work around for the old VC++ problemthat it treats func as funcvoidVarious prototypes had been added to 'compare' functionpointers that triggered this This could be fixed by removingthe prototype, adding function pointer casts to every call orchanging the passed function to use the expected argumentsI mostly did the latterThe mkdefpl script was modified to remove the typesafefunctions which no longer existOh and some functions called OPENSSL_freeLibrary werechanged back to FreeLibrary, wonder how that happened :
Handle ASN1_SET_OF and PKCS12_STACK_OF using functioncasts in the same way as STACK_OF
'make update'
Avoid unnecessary links and incomplete program file in apps/
'make update'
Add the missing callback pointer handling functionsAlso, make sure empty slots of the dynamic lock stack are usedActually, I'm not really sure this is the right thing to do, and mayremove it, with an endlessly growing stack as result
The dynamic thread API changed, and so does the documentation
Add OPENSSL_free at the end of CRYPTO_destroy_dynlockid
Redo the support for dynamic locks  First of all, it was terriblyinsecure, so a static lock is added to isolate the sensitive partsAlso, to avoid one thread freeing a lock that is used by another, areference counter is added
With the new stack hack macros, there's no need to shorten the namesany more
Modifications for VMS
Add support for dynamically created and destroyed mutexes  This willbe needed in some ENGINE code, and might serve elsewhere as wellNote that it's implemented in such a way that the locking itself isdone through the same CRYPTO_lock function as the static locksWARNING: This is currently experimental and untested code it will gettested soon, though :
First of all, with the current macros, we should never get anytypespecific stack function  Second, even when we don't build any ofthose functions, DECLARE_STACK_OF lines should not find themselvesinto $def
Using speaking "variable" names in macros so that eg grepping forsk_whatever_insert and sk_whatever_set immediately reveals the subtledifference in parameter orderChange mkstackpl so that safestackh is not rewritten whennothing has changed
Safe stack reorganisation in terms of function castsAfter some messing around this seems to work but needsa few more tests Working out the syntax for sk_set_cmp_funccast it to a function that itself returns a function pointerwas painful :Needs some testing to see what other compilers think of thissyntaxAlso needs similar stuff for ASN1_SET_OF etc etc
Change to have a single library that works on both Win9x and WinNTAs far as I understand, it still needs to be compiled on NTContributed by Arne Ansper <arne@atscyberee>
typo
In EVP_BytesToKey, replace explicit "8" by "PKCS5_SALT_LEN"
There are compilers that complain if a variable has the same name as alabel Reported by Alexei Bakharevski
Currently the DSO_METHOD interface has one entry point to bind all"symbols" including functions of all prototypes and variables Whilstcasting any function type to another violates ANSI C I believe, it isa necessary evil in sharedlibrary APIs However, it is quiteconceivable that functions in general and data symbols could very wellbe represented differently to each other on some systems, as Bodo said;> Since the function/object distinction is a lot more likely to be> important on reallife platforms supporting DSO and it can be quite> easily done and it will silence compilers that don't like> assignments from void pointers to function pointer variables, why> not do it?I agree So this change splits the "dso_bind" handler in DSO_METHODinto "dso_bind_var" and "dso_bind_func" Similarly the exportedfunction DSO_bind has been split in two I've also put togetherchanges for the various DSO_METHOD implementations, but so far onlyDSO_dlfcn has been tested BTW: The prototype for dso_bind had beena bit strange so I've taken the opportunity to change its shape inboth variationsAlso, the README has been updated  particularly with a note aboutusing customised native nametranslation for shared libraries and thatyou can't do it yet
Add support for the modified SGC key format used in IIS
This seems to work better with enums
Make sure that bs is not getting free'd againReported by Robert Eiglmaier <roberteiglmaier@ixosde>
Add info on what some other people are currently working on
Report "error" usually just "File exists", which is harmlesswhen symlink fails
This probably fixes a BN_rshift bug
Use BN_CTX_end when exiting early from BN_mod_exp_mont_word becauseBN_mod_exp_atalla could be used
The atalla functionality doesn't work with the "word" version ofBN_mod_exp Call the regular atalla mod_exp operation instead
Enable DSO support on alpha OSF1, cc and gccAlso, "make update" has added some missing functions to libeaynum,updated the TABLE for the alpha changes, and updated thousands ofdependancies that have changed from recent commits
protoypes
typo
Fix evp_loclh macrosDocumentation correction
Make EVP_SealInit and EVP_OpenInit check EVP_EncryptInit andEVP_DecryptInit return valuesUpdate docs
Document EVP routines Change EVP_SealInit and EVP_OpenInitto support multiple callsNew function to retrieve email address from certificates andrequests
In longer tests with g2, DH exchange does not become quite as fastas expected  maybe it's the different processor, maybe myprevious timings were too inaccurate
BN_mod_exp_mont_word entry:Don't give performance gain estimates that appear to be more precisethan they really are, especially when they are wrong2/1/115 + 1  ca 10698
Comment about bcopy on SunOS 4x
Using checks of the existence of HEADER_{foo}_H in other header fileswas a really bad idea  For example, the following:include <x509h>include <bioh>include <asn1h>would make sure that things like ASN1_UTCTIME_print wasn't definedunless you moved the inclusion of bioh to above the inclusion ofx509h  The reason is that x509h includes asn1h, and thedeclaration of ASN1_UTCTIME_print depended on the definition ofHEADER_BIO_H  That's what I call an obscure bugInstead, this change makes sure that whatever header files are neededfor the correct process of one header file are included automagically,and that the definitions of, for example, BIOrelated things aredependent on the absence of the NO_{foo} macros  This is alsoconsistent with the way parts of OpenSSL can be excluded at will
Comment for increased code clarity
Another attempt to allow compiling on SunOS 4
Harmonize indentation
Accept F4 option in lower case, which is what the usage informationsays one should use
Slightly faster DSA verification BN_mod_exp2_mont,marginally faster BN_mod_exp for 1024 bit exponents
Add entry that Richard forgot
Use the equivalent of a sliding window without precomputationbecause we're only handling words anyway in BN_mod_exp_mont_wordmaking it a little faster for very small exponents,and adjust the performance gain estimate in CHANGES accordingto slightly more thorough measurements15 faster than BN_mod_exp_mont for "large" base,20 faster than BN_mod_exp_mont for small base
Speed up DH with small generator
No need to abort if c_rehash fails here eg because Perl is not whereit is expected
use consistent indentation
Option "nosymlinks" to configure without creating the links egfor use with makefileone
Compaq C warns that "the expression 'pscan_escp' modifies the variable'p' more than once without an intervening sequence point  This behavioris undefined" What it essentially complains about is 'pp+1' Now it'schanged to 'pp+1'
MTsupport for IRIX 6x and AlphaLinux
Increased consideration for stupid Linux users
GCC 2952 from IRIX 65 mabi64 compiler bug workaround:Submitted by:Reviewed by:PR:
int may be smaller than 32 bits
According to Gordon Atwood <gordon@csualbertaca>, GNU C on SunOS414 uses libiberty to define strtoul and strerror
According to Gordon Atwood <gordon@csualbertaca>, stdlibh isneeded, or size_t won't be defined on SunOS 414
Typo
CygWin32 supportSubmitted by: John Jarvie <jjarvie@newsguycom>
Yet another bc FAQ
EVP constification
There have been a number of complaints from a number of sources that nameslike Malloc, Realloc and especially Free conflict with already existing nameson some operating systems or other packages  That is reason enough to changethe names of the OpenSSL memory allocation macros to something that has abetter chance of being unique, like prepending them with OPENSSL_This change includes all the name changes needed throughout all C files
Use NO_FP_API
Don't include <stdlibh> In the NO_FP_API case, don't include <stdioh>
Small documentation bug, probably a cut'n'paste, corrected
Bug fix for 64 bit HPUXSubmitted by: Karsten Spang <ks@bellesystemscom>
Small fix to enable reading from stdin as wellContributed by Yoichiro Okabe <okabe@wizsoftcojp>
"make update" + stripping the typespecific stack functions out oflibeaynum and ssleaynum
This change will cause builds by default to not use different STACKstructures and functions for each stack type The previous behaviourcan be enabled by configuring with the "DDEBUG_SAFESTACK" optionThis will also cause "make update" mkdefpl in particular toupdate the libeaynum and ssleaynum symbol tables with the number ofextra functions DEBUG_SAFESTACK createsThe way this change works is to accompany each DECLARE_STACK_OFmacro with a set of "define"d versions of the sk_type_functions that ensures all the existing "typesafe" stack calls areprecompiled into the underlying stack calls The presence or abscenceof the DEBUG_SAFESTACK symbol controls whether this block of"define"s or the DECLARE_STACK_OF macro is taking effect Theblock of "define"s is in turn generated and maintained by a perlscript util/mkstackpl that encompasses the block with delimitingC comments This works in a similar way to the autogenerated errorcodes and, like the other such maintenance utilities, is invokedby the "make update" targetA long but mundane commit will follow this with the results of"make update"  this will include all the "define" blocks foreach DECLARE_STACK_OF statement, along with stripped downlibeaynum and ssleaynum files
The previous commit to crypto/stack/[ch] pulled the typesafety stringsyet tighter, and also put some heat on the rest of the library byinsisting correctly that compare callbacks used in stacks are prototypedwith "const" parameters This has led to a depthfirst explosion ofcompiler warnings in the code where 1 constification has led to 3 or 4more Fortunately these have all been resolved to completion and the codeseems cleaner as a result  in particular many of the _cmp functionsshould have been prototyped with "const"s, and now are There was onelittle problem however;X509_cmp should by rights compare "const X509 " pointers, and it is nowdeclared as such However, it's internal workings can involverecalculating hash values and extensions if they have not already beensetup Someone with a more intricate understanding of the flow control ofX509 might be able to tighten this up, but for now  this seemed theobvious place to stop the "depthfirst" constification of the code byusing an evil cast they have migrated all the way here from safestackhFortunately, this is the only place in the code where this was requiredto complete these typesafety changes, and it's reasonably clear andcommented, and seemed the least unacceptable of the options Trying totake the constification further ends up exploding out considerably, andindeed leads directly into generalised ASN functions which are not likelyto cooperate well with this
This is the first of two commits didn't want to dump them all into thesame one However, the first will temporarily break things until thesecond comes through :The safestackh handling was mapping compare callbacks that externallyare of the type int type ,type  into the underlying callbacktype used by stack[ch], which is int void ,void  After somedegree of digging, it appears that the callback type in the underlyingstack code should use double pointers too  when the compare operationsare invoked from sk_find and sk_sort, they are being used by bsearchand qsort to compare two pointers to pointers This change corrects theprototyping by only casting to the void,void form at the momentit is needed by bsearch and qsort and makes the mapping in safestackhmore transparent It also changes from "void" to "char" to stay inkeeping with stack[ch]'s assumed base type of "char"Also  the "const" situation was that safestackh was throwing away"const"s, and to compound the problem  a close examination of stackcshowed that const char  is not really achieving what it is supposedto when the callback is being invoked, what is needed isconst char  const  So the underlying stack[ch] and the mappingmacros in safestackh have all been altered to correct thisWhat will follow are the vast quantities of "const" corrections requiredin stackdependant code that was being let "slip" through whensafestackh was discarding "const"s These now all come up as compilerwarnings
is needed
typo
dh and gendh have been obsoleted by dhparam
include <stdioh> not needed
include <stdlibh> is not needed
Result of "make update"
This seems to become a FAQ
sk__new_null seems to be there to avoid exactly this sort of thingwhich is a cast between NULL and a function pointer
sk_value was also suffering from deconstificationAlso, add in a couple of missing declarations in pkcs7 code
config can now detect ARM Linux automagicallyContributed by Jeremy Norris <jeremynorris@rebelcom>
strtoul is not used anywhere
When compiling with /opt/SUNWspro/SC42/bin/cc on Solaris, __svr4__ isnot defined, but __SVR4 is
All the little functions created by the IMPLEMENT_STACK_OF macro willcast their typespecific STACK into a real STACK and call the underlyingsk_ function The problem is that if the STACK_OF parameter beingpassed in has a "const " qualifier, it is discarded by the castI'm currently implementing a fix for this but in the meantime, this isone case I noticed a few typespecific sk__num functions pass inconst typespecific stacks If there are other errors in the code whereconsts are being discarded, we will similarly not notice them yuck
Move Windows seeding functions into a separate fileThey have nothing to do with the particular PRNG md_randc
Add "FIXME" comment
Improve PRNG robustness
More EVP cipher revisionChange EVP_SealInit and EVP_OpenInit tohandle cipher parametersMake it possible to set RC2 and RC5 paramsMake RC2 ASN1 code use the effective key bitsand not the key lengthTODO: document how new API works
"make update"Also, corrects the linuxelfarm config string, it was previously setting$des_obj  dlfcn :
You must have an empty line between item's
Fourth phase EVP revisionDeclare ciphers in terms of macros This reducesthe amount of code and places each block cipher EVPdefinition in a single file instead of being spreadover 4 files
Fourth phase EVP revisionDeclare ciphers in terms of macros This reducesthe amount of code and places each block cipher EVPdefinition in a single file instead of being spreadover 4 files
Configuration for linux on ARM contributed by Jeremy Norris<jeremynorris@rebelcom>
Minor corrections to documentation speed processes any/all options passed to it, not just one DH and DSA have no "_get_method" functions, only RSA does typos
another warning
It seems that mktime does what is required here Certainly timegm cannot be used because it is not available on all systems most notably,win32
This declaration seems to have been added into the header file accidentlyThere's no trace of it being implemented and it doesn't seem to have beenintended given that it is prototyped with a BIO yet there was a BIOspecific version added in at the same time
oops
Third phase of EVP cipher overhaulRemove duplicated code in EVP
Bugfix: clear error queue after ignoring ssl_verify_cert_chain result
Second phase of EVP cipher overhaulChange functions like EVP_EncryptUpdate so they now return avalue These normally have software only implementationswhich cannot fail so this was acceptable However cipherscan be implemented in hardware and these could return errors
Beginnings of EVP cipher overhaul This should eventuallyenhance and tidy up the EVP interfaceThis patch adds initial support for variable length ciphersand changes S/MIME code to use thisSome other library functions need modifying to support useof modified cipher parametersAlso need to change all the cipher functions that shouldreturn error codes, but currenly don'tAnd of course it needs extensive testing
cvs update
typo
Implement SSL_OP_TLS_ROLLBACK_BUG for serversCall dh_tmp_cb with correct 'is_export' flagAvoid tabs in CHANGES
Add the target system linuxm68k
Add DSA library string Workaround for IIS key file invalidASN1 encoding
Fix Blowfish URLSubmitted by: Arnaud De Timmerman <ArnaudDeTimmerman@branchurfr>
Yet more typesafety
Avoid sprintf
Avoid sprintf
Avoid sprintf, and harmonize indentation
Avoid sprintf
'make update'
Remove extra comma creates a unnessecary null element, right?
Add required cast
Fix "FIXME" indentation :
Add "FIXME" comment, and adjust the indentation
Add a couple of macros that make OpenSSL compilable on SunOS 414Contributed by SAKAI Kiyotaka <ksakai@ksonetwknttatcojp>
typo
Add a note about the new document
Add a new file where all the standards and other documents that we tryto adhere to are listed  It should be regarded as a complement towhatever is out on the web, including the docs in http://wwwopensslorg/
Fix c_rehash script, add fingerprint option to crl
Typesafety Thought Police last part
Typesafety Thought Police part 5
Typesafe Thought Police part 4
Typesafety Thought Police part 3
Typesafety Thought Police Part 2
Typesafety thought police
Get rid of more nonANSI declarations
prototype
Make sure that NORSA applications etc can include evph
Missing cases when no_rsa is definedSubmitted by: Zeroknowledge
MacOS changes
Allow UTCTIME objects to be retrieved Check for imminent cert expiry
When opening 'file' in RAND_write_file, don't use O_EXCLThis is superfluous now that we don't have to avoid creatingmultiple versions of the file on VMS because older versionsare now deleted
Being sick and tired of the hogging Efence does on my laptop, Idecided to provide an alternative
Fix for SSL server purpose checking
Make PKCS12 code handle missing passwordsAdd a couple of FAQs
Note apps/x509c bugfixes
Fix a memory leak, and don't generate inappropriate error messagewhen PEM_read_bio_X509_REQ fails
Initialise
In MessageID: <003201bfb332$14a07520$0801a8c0@janmtransactionsitecom>,"Jan Mikkelsen" <janm@transactionsitecom> correctly states that theOpenSSL header files have include's and extern "C"'s in an incorrectorder  Thusly fixedAlso, make the memory debugging routines defined and declared withprototypes, and use void instead of char for memory blobsAnd last of all, redo the ugly callback construct for elegance andbetter definition with prototypes
In MessageID: <003201bfb332$14a07520$0801a8c0@janmtransactionsitecom>,"Jan Mikkelsen" <janm@transactionsitecom> correctly states that theOpenSSL header files have include's and extern "C"'s in an incorrectorder  Thusly fixed
In MessageID: <003201bfb332$14a07520$0801a8c0@janmtransactionsitecom>,"Jan Mikkelsen" <janm@transactionsitecom> correctly states that theOpenSSL header files have include's and extern "C"'s in an incorrectorder  Thusly fixed
Add missing include
Avoid leaking memory in thread_hash and enable memory leak detectionfor it
linuxelf bugfixSubmitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:
Stylistic changes: Don't use a macro for the malloc'ed length since itis not constant
Warn about truncation also in the case when a single password is read usingthe password prompt
Use CONFerr, not RSAerr, in the conf library
Clarifications and removal of double declaration
This case in the "dso_unload" handlers should not be reported as an error if a DSO_loadNULL, operation fails, it will have to call DSO_free onthe DSO structure it created and that will filter through to this "unload"callIf the stack size is "< 1", then the library never actually loaded To keepthings clean higher up, I'll treat this as a vacuous case without an errorIt makes the error stack easier to follow real world cases, and the errorthis ignores was only useful for catching bugs in internal code, notmismatched calls from applications which should be handled in the genericDSO layer
The handling of DSA_METHOD and DH_METHOD wasn't quite as problematic aswith RSA_METHOD the _get_default_methods do set the default value ifit's not set However, the code had some duplication and was a bitconterintuitive
Previously, the default RSA_METHOD was NULL until the first RSA structure wasinitialised, at which point an appropriate default was chosen This meant acall to RSA_get_default_method might have returned FALSEThis change fixes that; now any called to RSA_new, RSA_new_methodNULL, orRSA_get_default_method will ensure that a default is chosen if it wasn'talready
Thanks to "make update" 
This change facilitates name translation for shared libraries Thetechnique used is far from perfect and alternatives are welcomeBasically if the translation flag is set, the string is not toolong, and there appears to be no path information in the string,then it is converted to whatever the standard should be for theDSO_METHOD in question, eg;blah > libblahso   on nix, andblah > blahdll     on win32This change also introduces the DSO_ctrl function that is usedby the name translation stuff
Correction
Ignore lib and Makefilesave
New function ERR_error_string_n
Minor corrections
OpenVMS, not OpenVSM
I forgot to update the change log
"make update"
I've always wanted to make the CONF library more adaptable  Here'sthe resultI have retained the old behavior of the CONF_ functions, and haveadded a more "object oriented" interface through NCONF_ functionsNew CONF, you see :, working the same way as, for example, theBIO interface  Really, the CONF_ are rewritten so they use theNCONF_ functions internallyIn addition to that, I've split the old confc code into two files,conf_defc and conf_apic  conf_defc contains the default configobject that reads a configuration file the standard OpenSSL way, aswell as configuration file with Win32 registry file syntax I'm notsure I got that one right  conf_apic provides an API to build otherconfiguration file readers around can you see a configuraion file inXML?  I can :Finally, I've changed the name conf_lclh to conf_defh, since it'smade specifically for that "class" and none others
"make update" for DSO additions
In theory, TLS v1 ciphersuites are not the same as SSL v3 ciphersuites
Clarifications
Avoid memory leak
Constification, and a silly mistake in the comments
I forgot about $openssl_other_defines  should probably do thisfor consistency Not sure though whether HAVE_DLFCN_H should beincluded too? If we go the autoconf route then this probably wouldn'tbe included
This helps make the DSO stuff more portable; "nodso" option available in Configure so that all DSO methods willreturn NULL, overriding any support the platform might otherwisehave built dlfcn_no_h config string now available rather than just dlfcn Thisis for platforms that have dlfcnh functions but do not have orneed the dlfcnh header file
Better make a note of what's going on  :
This commit ties the new DSO code crypto/dso/ into the build for avariety of platforms A few are missing, and they will be added ineventually, but as this is new stuff, it was better to not break lots ofplatforms in one go that we can't easily test The changes to "Configure"should illustrate how to add support to other systems if you feel likehaving a goNB: I'll add something shortly to allow you to add "dlfcnh" support onthose platforms that don't have or need a dlfcnh header file Thesymbol for Configure will probably by "dlfcn_no_h"Thanks to Richard Levitte, who is responsible for the dso_dlc support,understanding the trickier aspects of the build process, and giving greatfeedback on everything else[Don't use this stuff if you're easily offended by changes to theinterface or behaviour  it's still work in progress]PR:
This is a set of startup code for the DSO support, it's not yet linked intothe build process an upcoming commit no doubt, and is very much newcode  what that means is that it compiles ok  usually It certainlydoesn't mean it runs well or even properly yet Please don't muck roundwith this unless you're looking to help out and hunt bugs :Currently this code doesn't have any support for controlling the "load"behaviour eg paths, filename translations, etc That'll be handledusing DSO_ctrl and various flags, once we work out a sensible set offlags
Extend entry on ERR_print_errors
Release done, change status
Tagging has now been done, update to the next version it's not quiteas important to keep a low profile here :
Tagging has now been done, update to the next possible version I keepa low profile, so we don't get discontinuity in the numbering
Version and name changes, and a last minute changelog
Building version 095a
_lrotl and _lrotr are defined in MSVC but nowhere else that we knowoff
Entry for ssleay_rand_status locking fix
'entropy > ENTROPY_NEEDED' should be evaluated while thevariables are locked
Add a couple of FAQs
Since ssleay_rand_initialize unlocks then locks CRYPTO_LOCK_RAND,it's a good thing if ssleay_rand_status would do the correspondinglock and unlock as everyone else
Add pointer to EGD manpageUpdate the "randomness" section for the upcoming 095a release
Add a default banner  Contributed by Joon Radley <jradley@vpscoza>
Don't force the use of GNU make with Borland C++ Builder  Contributed by Joon Radley <jradley@vpscoza>
Fix typo in clrext option, but add a compatibility hack because095a should not break anything that works in 095
Comments for SSL_get_peer_cert_chain inconsistency
Removed, especially since it conflicts with despod oncaseinsensitive file systems
Fix for HMAC
NeXT workaround
Beautifying code
List "no" option first because it's the most frequently needed one
Vi, again
Info on proposed release date
Another VAX environment passed
VI gave me 4space tabs  Corrected
One VAX environment passed
Update docs
Explain configuration options more completely
Update for new hpuxparisccco4 entry
another one done
More info in the Win32 test
A couple of corrections concerning HPUX 10 and shared librariesContributed by Lutz Jaenicke
Geoff Thorpe reports a whole bunch of tests passing
Another VMS/Alpha with a much more evil compiler passed as well
VMS on Alpha passed
Add a few more FAQs
Test results
Surround the diff with the new snippage delimiters
Update status
Tagging has been done, update to next probable version
I almost forgot
Time for version 095a beta2I know it's earlier than announced  The high amount of problems inbeta1 warants this, however
New FAQ for the OpenSSH configuration problemI know, this isn't really a OpenSSL issue, but we keep gettingquestions about it, so we might as well provide the solution
Clean up context, even if an error occured
ssize_t for Ultrix
Corrected  It said before that ivec had to be initialised to zero,which isn't true  What is true, however, is that SSH assumes it is
"make update"
A quick hack to have ssize_t work with gcc under SunOS 4 tested onSunOS 414
Update docs and remove old PKCS7 README file
RAND_event
Fix a memory leak in PKCS12_parseDon't copy private key to X509 etc public key structuresFix for warning
more failures
More failures
Ulf Mller reports OpenBSDx86 and solarissparcv9cc passed
OpenBSD complains
In some of the Makefiles CPP was not defined
Jaenick Lutz reports that hpuxparisccc with +02 passed
Ref: MessageID: <20000320070111A90876@wizSendmailCOM>
Problems with the Windows build
Document pseudocommands
Mention the bug fixes
I just got a not very pleasant report
There are a few new features in 095a  And I've probablyforgotten a few
New status
Tagging done, we move to the next possible
Beta 1 of 095a building
make update
Change the version text, it's time to release the first beta of 095a
Sample application using RAND_event to collect entropy from mousemovements, keyboard etc and write it to a seed file
Bug fix: RAND_write_file failed to write to files created by openon Win32
Make sure an error condition is returned if, for some reason, the filecouldn't be opened
oops don't use "entropy" directly
New function RAND_event collects entropy from Windows events
FLAT_INC is not needed; we use I all the time
Integrate poddh skh into set_keyc
Change the notation and coding of the version to be able to containboth a patch level and a beta status  IMHO, it also makes more senseto have beta status be part of the development status than to have itbe an alternate name for patch levels under special conditions
Keep in sync with Unix code, and prepare for a misfeature fix
make update
cleanup
libdes manpageThis may still contain a few errors from the old documentation,but most of it should make sense
des_quad_cksum byte order bug fixSee http://wwwpdckthse/kthkrb/Their solution for CRAY is somewhat awkwardI'll assume that a "short" is 32 bits on CRAY to avoid theifdef _CRAYtypedef struct {unsigned int a:32;unsigned int b:32;} XXX;elsetypedef DES_LONG XXX;endif
add cut
DES in Perl was incomplete and not very useful
superseded by des_modespod
change manpages to pod Contents are not up to date!
Eliminate memory leaks in mem_dbgc
Small bugs in the test scripts removed
e_osh: don't do double work with status codesopensslc: make damn sure e_osh knows about OPENSSL_C
Make sure to complete the cleanup of names
Bugs corrected
The previous exit code handling was completely bogus for VMS
Typo corrected
Point out the PRNG usage bug affecting openssl rsaShould we point to snapshots, or directly give the oneline patch?
Remove CRYPTO_push/pop_info invocations to improve code readability I hope all memory leaks that may occur here have already been tracked down
Avoid a warning
SSL_ALLOW_ADH no longer has a meaning
Insert a comment: This is one of the few files in this directorythat is actually used even though it may not appear so at firstsight
Use correct function names in SSLerr macros
Remove "Makefileuni" files and some related stuffThis was meant for building individual ciphers separately;but nothing of this is maintained, it does not workbecause we rely on central configuration by the Configureutility with <openssl/opensslconfh> etc, so the filesare only wasting space and time
Typos corrected
Make it possible top build just a part of the crypto library
Target added
Bugs corrected, and a couple of include files to get declarations forlib$functions and sys$functions
Typo corrected
bss_log has dollars, so compile it with that warning flag disabled
Typo corrected
Make sure strcmp gets declared
Make V_ASN1_APP_CHOOSE work again
another typo
typo
Synchronise with Unixly tests
Correction
Clarifications for 'noXXX'
Run test_ssl last  it's the only test that really uses the SSL libraryin addition to the crypto library
"openssl no" commands for avoiding the need to grep"openssl liststandardcommands"
Include a timing test that works without RSA
CorrectionsIn testss, use MD5 as digest algorithm so that the resultingcertificates can be used for testssl with RSA
Update usage info
Update test suite so that 'make test' succeeds in 'norsa' configuration
Synchronise with Unix
Correct a potential bug
Don't try to test the RSA command if it is not available
Copy DH key if available in addition to the bare parametersin SSL_newIf SSL_OP_SINGLE_DH_USE is set, don't waste time in SSL_[CTX_]set_tmp_dhon computing a DH key that will be ignored anywayssltest dhe1024dsa w/ 160bit subprime had an unfair performanceadvantage over dhe1024 safe prime: SSL_OP_SINGLE_DH_USE waseffectively always enabled because SSL_new ignored the DH key set inthe SSL_CTX  Now dhe1024 takes the server only about twice as longas dhe1024dsa instead of three times as long for 1024 bit RSAwith 1024 bit DH
Connection timings using ISO C function clock
Remove Win32 assembler files  They are always rebuilt with somechoice of parameters when they are needed
cleaning up a little
asm workaround for SuSE Linuxproposed by Holger Reif
make update
Workaround for Windoze weirdness
On NeXT, ssize_t is int, not long see <sys/typesh>  the definitionis activated only when _POSIX_SOURCE is defined
NO_SYSLOG is defined for MSDOS anyway just don't include the Unixheader
ssize_t
Use signed types where necessary, and add missing functionalityto make SSL_nread0 work
Use L for all constants
Don't generate asm files for noasm
Repair bss_logCuriously enough, void functions don't return a value
Mention ign_eof
Always use fixed DH parameters created with 'dhparam C',don't dynamically create them  This allows using ssltestfor approximate performance comparisons:$ time /ssltest num 50 tls1 cert /apps/server2pem \[no_dhe|dhe1024dsa|dhe1024]server2pem contains a 1024 bit RSA key, the default has only512 bits Note that these timings contain both the server's andthe client's computations, they are not a good indicator forserver workload in different configurations
Add the possibility with ign_eof to ignore end of file on input butstill not be quiet  Also make it clear that quiet implicitely meansign_eof as well
Change to code generated by 'dhparam C': Move DH parameter components inside the function Automatically include the required header file if ithas not already been included
another typo
typo
clarify
bug fixSubmitted by: "Yoram Meroz" <yoram@mailidrivecom>
Manual page installation did not work if INSTALL_PREFIX was a relative path
Don't Free password if it was read from config file
Clarification
Fix typo and make ca get the CA and request fields correct
Manual pages for EVP_Open and EVP_Seal
Protect variables from potential misinterpretations, for example acolon which may bite the lesser knowleged
Check that a password was actually passed, or the user will just getmysterious crashes
Manual pages for EVP signing and verifying
spelling
New compatability trust and purpose settings
{NEXT,OPEN}STEP don't have pid_t
Fix the PKCS8 DSA code so it works again All thebroken formats worked but the valid didn't :
bug fix release planned
Fix the indentation, and avoid a compiler warning
Let's not lie to the people
Add missing include only MONOLITH builds were possible without itSubmitted by: Andrew W Gray
Preserve reason strings in automatically build tables
Beautifying  Sorry, but code that's slammed to the far left is notvery readable in my opinion
Let's care about the compiler warnings for both cases, shall we?
There is no reason to use downcase letters throughout in error reasonstrings, it's just the default because it's usually ok
Read complete seed files given in rand options
Get definition of ssize_t
Change output text ar is not a linker
Generate correct error reasons strings for SYSerr
The selftest sometimes lacked important information
new component
gcc warnings
Note about PRNG error message for openssl command line tool
Add an include
Use signed type where 1 may be returned
Avoid potential memory leak in code generated by 'openssl dhparam C'
New 'dsaparam' option for 'openssl dhparam', and related fixes
Fix for previous patch: If RAND_pseudo_bytes returns 0, this is not an error
Make name_funcs_stack static
Move the 'file scope' argument in set_label tothe third argument: the second was being usedalready
Synchronise
Use RAND_pseudo_bytes, not RAND_bytes, for IVs/salts
Use RAND_pseudo_bytes, not RAND_bytes, for IVs/salts
Update comment
Add missing dependencies
Use RAND_METHOD for implementing RAND_status
Change comment
Hack b_printc to implement asprintf functionality  Not enabled bydefault yet, I wanna play with it a bit moreFor those who don't know: asprintf is an allocating sprintf  Thefirst argument to it is a double indirection to char instead of asingle
Make bss_logc a bit more readable, and implement it for VMS as well
It started with finding a misplaced endif  Then I wanted to see thestructure better  I hope noone minds, and that it still works  Steve?
I'm experimenting with a hack in dopr and friends b_printfc to makeit work like asprintf
Fix bug which would free up a public keytwice if the verify callback tried tocontinue after a signature failure
add comment
Bug fix
Note bug fix for the DSA infinite loop
pseudoseed for the PRNG before testing DSA
add RAND_status to title
change info text as on the web site
'rand'/'rand' documentation
Document the 'rand' application
check for WIN32 needed by Mingw32
Keep the references to other INSTALL files short These are the Unixinstructions
'rand' application for creating pseudorandom files
Check BN_rand return value"make update"
Point to INSTALLMacOS for MacOS pre X
some people can't read :
change wording
how to recognize assembler problems
Added configuration support for Linux/IA64Submitted by: Rolf Haberrecker <rolf@susede>
MacOS pseudorandom entropy collectorSubmitted by: Yoram Meroz <yoram@mailidrivecom>Reviewed by: <appro>
Bug fixPointed out by: Gisle Vanem <gvanem@eunetno>
Forgot to check correctly for the new options
Mingw32 can now use assembler
Switch for turning on the predictable "random" number generator
Fix for nonmonolithic buildSubmitted by: Andrew Gray <agray@iconsinccom>
Support assembler for Mingw32
Shared library support for Solaris and HPUXby Lutz Behnke and by Lutz JaenickeHopefully we'll have a unified way of handling shared libraries whenwe move to autoconf
Switch to 096, and finally remove the annoying messageabout renamed header files
Ouch! PKCS7_encrypt was heading MIME text headers twicebecause it added them manually and as part of SMIME_crlf_copyRemoved the manual add
Tagging has been done, time to switch to 096dev
Time for a release
A few more tests were reported
Typo corrected
Short is always promoted to int when passed as a function argumentThis is especially true when it's part of a ''
Include randh so RAND_pseudo_bytes may be declaredRemove one ampersand so the compiler may complain lessMake rand static so it will not conflict with the C RTLMake bug static too, for good measure
More platforms passed the test
More tests passed
works on solaris
Update the OpenVMS/VAX status
IRIX6 tests passed
MacOS tidbits Add new files to the project, update config
corrections
Works with gcc 280 as well
No, the VAX is not a 64 bit architecture
Use standard header file stringh for memset prototype where"standard" refers to the C language, probably there's also somestandard that defines memoryh
Don't call BN_rand with zero bits in bntestc
Make sure to catch UnixWare 7, even if the version is 711 orsomething like that
Update config for the unixware targets by looking at what was done inApache's GuessOS from Apache 131
Declare memset
Typo
AIX and HPUX are passing the testsWarning about old gcc, though and I recall getting in trouble withgcc 280  I'll try that again
OpenSSL doesn't compile well on OpenVMS/VAX, it seemsI'm looking into it, it's probably a simple script error
One test passed for VMS
A new beta has been released, and one test is documented
OpenVMS often has problems with files with more than on period in itHere's instructions on what to do if you get into trouble because ofthat
remove obsolete BN_CTX info
Add a comment
For lack of a better name, this is now called 095beta3dev until therelease
Change version string to reflect the release of beta 2
Stop logging all the files that are copied all over the place
New logical names to skip algorithms are now supported
New logical names to skip algorithms are now supportedAlso, on Alpha, vmsmar is no longer used it produced a lot ofconfusing messages for BN  Instead, the assembler part of bn_lclhis used
New "target": CONFIG  This will build the opensslconfh file fromwhat is known about VAX and Alpha running VMS, and from theopensslconfhin in VMS often named OPENSSLCONFH_IN file
Add and change docs for the changes that have been made
put function names in the title
Statement that it fails only on 32bit architectures isn't true
Overly long lines look ugly in the DOS editor :
Bug fix!
Fix so Win32 compiles again
Fix so Win32 assembly language works with MASMAdd info about where to get MASM
 empty log message 
workaround no longer needed
remove
Reorganize bn_mulc no bugfix yet, remove obsolete files in BN library
minor clarification
Make ASN1 types real typedefsRebuild error files
BN_div_recp fix I've ran divtest for 10 mins and it didn't exhibit asingle fault: Needless to mention that bnbugc posted couple of daysago passes as well
A small script to compile mttestc on VMS as well
Make sure there's some entropy, and log a few more errors
More get0 et al changes  Also provide fgrep targets in CHANGESwhere the new functions are mentioned
make update
Make sure that all test files are gone before starting the tests, orbackup will complain about some version not existing  Perhaps
Move to using the same perl code as Makefilessl
Just as in Unix, make sure to generate some kind of "random data"
Typo corrected
Don't include sys/typesh if NO_SYS_TYPES_H is defined
The OpenVMS library is most definitely not built for anything butfiles, unless it's all in unixly syntax  We can't guarantee thatright now, so let's skip the whole test suit  There are other placeslike the open where errors are detected anyway
Add support for Unixware 7  Thanks to Ron Record <rr@scocom> for thepatch
Make clear which naming convention is meant
Fix shadow warning
ftruncate and fileno are not supported on all versions of OpenVMSthey don't really exist before version 7, so that solution was toastInstead, let's do it the way it's done on Unix, but then remove olderversions of the fileThat new mechanism may fail for some unixly formated file spec,although I wouldn't worry too much about it
Rename functions for new convention
Let's avoid compiler warnings over typesActually, this should be resolved by using size_t a bit more, butthat'll be for later
Compile rand_egdc on VMS as well
For safety, check __VMS as well
Correct small typo
Since a stack with quite long name is declared here, vms_idhacksh isalso needed to get around C compilers on VMS that set the symbol limitto 31 characters  Bot the macros VMS and __VMS are checked, sincethere's no real way to know if e_osh has been included yet
Small error fix
Adjust all the old scripts to deal with the new location
New script to compile on systems that already have pthreads in thesystem
Update the two threads modules to conform to our recommendations useCRYPTO_num_locks instead of CRYPTO_NUM_LOCKS!, and correct all theinconsistencies with the rest of OpenSSLAt least, this compiles nicely on Linux using PTHREADS  I've done noother tests so far
Some time in history, SSL_CTX_sessions disappeared  It is nowrestored, but not as a macro this time
flush outputLooks like it fails when b is a power of 2, but I never get incorrectresults
Another test passed
Enhance consistency by using BIO_flush instead of fflush
Changes to synchronise with Unixactually, much more is needed, like a real config script
Test the division functionsApparently BN_div_recp reports an error for small divisors1,2,4,8,40I haven't got mismatches so far If you can, please run the testprogram for a few days nohup divtest >out& or something, and if itreports a mismatch, post the output
Status update
Linux is almost the only one where getpid  threadid IRIX isanother one, but only if you stick to sproc2
Use unsigned loop index to make compilers happy
The main return value is a program's exit code
links
There're two incompatible ways to write multithreaded programs underIRIX, one is to call sproc2 when every thread does get own pid andPOSIX threads when all the threads share same pid
mention RAND_egd
The previous revision should have generated _more_ warnings, not less The return value of handshake_func is signed, not unsigned
More VC++ pickiness destestc doesn't have a "return" and the usualsigned/unsigned stuff in s3_pktcSubmitted by:Reviewed by:PR:
Gets around VC++ compiler pickiness long ! doublePR:
Add OpenSSL licen[cs]e
mt contained an old copy of mttestc remove it and move the otherfiles to crypto/threads
Fix offbyone error :
In "make clean", delete files created by "make report"
Fix warnings by using unsigned int where appropriate
Ignore files that, well, should be ignored
VC++ problem
 empty log message 
EGD bugfixSubmitted by: Lutz Jaenicke <LutzJaenicke@aetTUCottbusDE>
ispell
linuxppcSubmitted by: Franz Sirl <FranzSirlkernel@lauterbachcom>
signed/unsigned mismatch VC++Submitted by: Peter 'Luna' Runestig" <peter+opensslusers@runestigcom>
different snprintf version
Use threads for linuxppc
Clarification
handle entropy estimate correctly
Allow code which calls RSA temp key callback to copewith a failureFix typos in some error codes
divide the correct number
work around a bug in BN_div_recp or BN_reciprocal
BIO_printf change
some test results
Yet another "unixware" spelling
Use public domain snprintf implementation by Patrick Powell to avoidpotential buffer overrun in BIO_printfcrypto/bio/b_printc CVS:
Version 095beta2dev so that the next snapshot will notclaim to be 095beta1Are the version number examples correct  the same numericalcode for: 093beta2dev 0x00903002 093beta2     0x00903002?
Don't use buffered fread to read from DEVRANDOM,because this will drain the entropy pool
Do fflushstdout when there was an error
mention that EGD is used in nonblocking mode
Don't define platformdependent preprocessor symbols for OPENSSL_THREAD_DEFINES"make update"
EGD socket info
remove some apparently obsolete entriesplease put them back in if they're still valid, and remove othersthat are outdated
Remove structures that are no longer used
nicer manpages
Add missing prototypes for new functions
Make gcc 2952 happy here, too
Add an evil cast, because POSIX/SUSv2 define connect2 requirethe second argument to be of type ``struct sockaddr ''
Avoid filename "testc" because otherwise "make test"will invoke a default rule built into make
Fix NO_RSA misplaced endif
EGD info, as requested
remove test "goto err"
Support EGD
095beta1
Make it possible to have differing tar versions
Correct a couple of command errors
CRYPTO_num_locks
New make target "report" to run util/selftestpl
yet another faq
make update
Avoid saving any macros starting with a _, since that can createtrouble if header files are included in some "impropper" orderIt's much better if the application programmer has to specify on hisor her own if _REENTRANT shall be defined and when
correct macro
 empty log message 
Run the test suite and generate a report
add missing names
Sync with Unix
another faq
threads mapage
minor docs changes added links is the openssl1 text
Frequently asked questions
Add PBE algorithms with ciphers, not digests
Allow ADH to be used but not present in the default cipherlistAllow CERTIFICATE to be used in PEM headers for PKCS7 structures:some CAs do this
Make pkcs8 work againMake EVP_CIPHER_type return NID_undef if the cipher has noASN1 OID, modify code to handle this
Update docs
warning
Don't list prototypes for internal functions
Check tlen size in all padding_check functions As called within the rsalibrary, the output buffer always is large enough, but if the tlenparameter is there, it should be checked in the interest of clarity,as proposed by David Sacerdote <das33@cornelledu>
Correction to RSA_padding_check_xxx docs this time for real
Correction for RSA_padding_check_xxx documentation
Change EVP_MD_CTX_type so it is more logical and add EVP_MD_CTX_md forthe old functionalityVarious warning fixesInitial EVP symmetric cipher docs
Workarounds to make broken programs happy such as s_client and s_server
Fix some bugs and document others
Move ssl3_do_write from s3_pktc to s3_bothc
More news
Move MAC computations for Finished from ssl3_read_bytes intossl3_get_message, which is more logical and avoids a bug,in addition to the one that I introduced yesterday :and makes Microsoft "fast SGC" less specialMS SGC should still work now without an extra state of its ownit goes directly to SSL3_ST_SR_CLNT_HELLO_C, which is the usual statefor reading the body of a Client Hello message, however this shouldbe tested to make sure, and I don't have a MS SGC client
Blowfish docs
More compact Configure usage message
Move the registration of callback functions to special functionsdesigned for that  This removes the potential error to mix data andfunction pointersPlease note that I'm a little unsure how incorrect calls to the oldctrl functions should be handled, in som cases  I currently return 0and that's it, but it may be more correct to generate a genuine errorin those cases
Workaround for irrelevant problem
ignore Client Hellos when we're in handshake anyway
Tolerate fragmentation and interleaving in the SSL 3/TLS record layer
Document OPENSSL_VERSION_NUMBER
Fix gcc warnings
Change the 'other' structure in certificate aux info
Allow for higher granularity of entropy estimates by using 'double'instead of 'unsigned' countersSeed PRNG in MacOS/GetHTTPSsrc/GetHTTPScppPartially submitted by Yoram Meroz <yoram@mailidrivecom>
Add clrext option to 'x509'
Keep variable names consistent with corresponding preprocessorsymbols
Make excluded cipher entry in opensslconfh a bit more descriptive
Change the example to show apr1 with an 8character salt
Stay compatible to older Perl5 releases see diff r111 r112
Avoid potential conflicts between defines in opensslconfh anddefines when compiling applications, and allow applications toselect what defines to enable  OPENSSL_EXLUCDE_DEFINESenables the "define NO_whatever" stuff only, which avoidspotential severe confusion caused by "define _REENTRANT" whenopensslconfh is not the first header file included
add missing 'static'
Make Configure add the configuration options that it was copmiledwithCurrently, those defines are protected with a OPENSSL_EXCLUDED  Thatmay not be the best strategy, but it will do for now
Cosmetic change  No, opensslhin is not autogenerated :
New functions and option to use NEW in certificate requests
Make sure the return value of by_file_ctrl, X509_L_FILE_LOAD, aka X509_LOOKUP_load_file is always 0 or 1, not the counterreturned from the recently introduced function X509_load_cert_crl_fileX509_STORE_load_locations expects X509_LOOKUP_load_file to return 1 onsuccess, and possibly there's other software that relies on this too
Casts now unnecessary because of changed prototype
Get rid of evil cast
Reflect API changes
Add pass argument to 'enc'Fix to make Win32 compile work again
Pass phrase reorganisation
Add support for Compaq Atalla crypto accelerator
Move primes to readonly segment
Fix signed/unsigned warnings
Install manpages below OPENSSLDIR I think it was meant to be this way?New variable for man directory
Create the man directories where the manpages will be put
Move initial key to readonly segment
Move CAST_S_tables to readonly segment
Avoid GNU C assembler templates under Solaris x86
New NO_INLINE_ASM macro Primary target for the moment is Solaris x86which can't stand GNU C assembler templates
Fix for Netscape "hang" bug
test_mont was exercising 100bit multiplication modulus XIbit, whereX is 5120 on 32bit and 151552 on 64bit architectures and I variesfrom 0 to 4 As result the test was unreasonably slow and virtuallyimpossible to complete on 64bit architectures eg IRIX bc couldn'teven swallow such long lines
Remove the access call altogether for VMS, since it doesn't quitework for directory specifications this will be reported as a bug toDEC^H^H^HCompaq  It could as well be removed for all others as well,since stat and open will return appropriate errors as well, but Ileave that to someone else to decide
Time ran away
Add a couple of forgotten $PERL, and make the code to run pod2html atad more readable
Modernise 'selfsignc' to use new X509_NAME codeand add example of extension aliasing Also fixthe extension aliasing because it didn't work :
HPUX tuneup: new unified configs, HP C compiler bug workaround
Make pkcs12 and smime applications seed random numbergenerator otherwise they don't work and add randoption Update docs
A hack to make sure access will give us the correct answer about theaccessability of an "empty" directory  Thsi is weird, and a bettersolution will be provided in apps/cac, when I get time to hack at it
Corrections
Update
Implement MD5based "apr1" password hash
Correct time in seconds instead of minutes
Fix shadow
Add compilation of the new passwd utility
Add references to the new passwd utility
Make gcc 2952 happy again, even under ``Wall Wshadow Wpointerarith WcastalignWmissingprototypes Wmissingdeclarations Wnestedexterns Winline''
'passwd' tool
16  8  128
Move down the attributions
Note about des_ncbc_encrypt
Constify
Update docs
Add command line password options to the reamining utilities,amend docs
des_modes is a section 7 manual, so let's make sure that's where it ends up
First try at documenting the DES and other algorithms modes
Rename the X509V3__d2i functions to X509_get_ext_d2i etcThis better reflects their behaviour
"print" is GNU bc specific
Refer to EVP_DigestInit in the hash function descriptions
A proposed freeze and release time has come up
Document EVP digest operations
BN bug fixes
put missing line back in
Improve bntest slightly, and fix another bug in the BN library
Support for MacOS X Rhapsody is added Also get rid of volatilequalifier in asm definitions as it prevents compiler from movingthe instructions during optimization pass
Typo corrected
Memory leak
BN_div bugfix The q loop should not be entered in the n0d0 case
Correction: opensslc must get the long version of the apps_startupmacro
Cosmetic changes
Add support for some broken PKCS8 formats
Commit patch to bnh that CVS decided to throw away during 'cvs update',and initialize too_many because memset, 0,  is not used here
Generate just one error code if iterated SSL_CTX_get failsAvoid enabled 'assert' in production library
Use MONT_WORD macro to control if the wordbased or the bignumalgorithm is used
New functions BN_CTX_start, BN_CTX_get, BN_CTX_end to accesstemporary BIGNUMs BN_CTX still uses a fixed number of BIGNUMs, butthe BN_CTX implementation could now easily be changed
md2 is documented in the md5 page lets see if this works
Document RC4
Replace ridiculous libdes PRNG with RAND_bytes These functions are notused anywhere in OpenSSL, but might be used by libdes applications
New xcbc_ok test vector is required after the parity bits in cbc2_keywere fixed up The catch is that in the DESX test the cbc2_key is usedas whitening key where all 64 bits are significant
Rename SSLeay_add_all_algorithms et al toOpenSSL_add_all_algorithms Move these intoseparate files so they work properly
Report progress as in dsatestc when creating a DHE key
Use correct, not American spelling
Correct spelling as it was done in the source
 empty log message 
a short page for "speed"
ispell and minor modifications
Document hash functions
Add new notext option to 'ca', pubkey option to spkacRemove some "WTF??" casts from applicationsFixes to keep VC++ happy and avoid warningsDocs tidy
Some 'const's for BNs
Include OpenSSL license
Tolerate negative numbers in BN_is_prime
rndsort{Miller, Rabin} primality test
Support for "multiply high" instruction, see BN_UMULT_HIGH comment incrypto/bn/bn_lclh for further details It should be noted that forthe moment of this writing the code was tested only on Alpha Ifcompiled with DEC C the C implementation exhibits 12 performanceimprovement over the crypto/bn/asm/alphas on EV56 box runningAlphaLinux GNU C is unfortunately 8 behind the assemblerimplementation But it's OpenVMS Alpha users who may benefit mostas 'apps/openssl speed rsa' exhibits 6 six times performanceimprovement over the original VMS bignum implementation Where "may"means "as soon as code is enabled though define SIXTY_FOUR_BIT andcrypto/bn/asm/vmsmar is skipped"
Update docs
Bug fix: BN_is_prime would fail with a high probability for smallprimes negligible for larger ones
match the prototype
Remove an over that never ends
link to SSL_get_error3
dhgen is gone
Correct one link
If n0  d0, we must alway compute 'rem' "by hand"
Typo in preprocessor symbol
Pointer to important manual page that should be written
Change log entry completed
undo I keep confusing my directories :
EBCDIC supportSubmitted by: Martin Kraemer <martinkraemer@mchsnide>
Document ERR library
spelling
Print a reassuring message when Configure is done
Reference for SHA1
Checked in some junk Sorry
Note changes
Seek out and destroy another evil cast
Typos
Source code cleanups: Use void  rather than char  in lhash,eliminate some of the Wcastqual warnings debugbenstrict target
Update docs: corrections, turn buffer docs into manpage, fold SHA1pages into one for improved readability, add lhash manpage
Synchronise
Documentation for BN_is_prime_fasttest
Make output of "openssl dsaparam 1024" more interesting :
Tiny changes to previous patch the log message was meant to be"Make DSA_generate_parameters faster"
Make DSA_generate_parameters, and fix a couple of bugincluding another problem in the s3_srvrc state machine
Update docs
Reimplement so only one synchronous stack is used  The benefit isthat function pointers are nicely tucker in their structure
Finally found a form that I like
Fix CRL encoding bug
more information on 095
Synchronise with Unix code
Put config in section 5, where it belongs
Add CApl man page this time
New pkcs12 option to CAplDocument CApl scriptInitialise and free up the extra DH fieldsnothing uses them yet though
fix link
Declare BN_pseudo_rand
It works much better when you don't press shift at the wrong moment
A couple of things were reversed for BN_pseudo_rand 
Added a configuration for myself
Use the pod2man that comes with OpenSSL  Make it so config5 reallyends up in section 5
Since pod2man is still evolving, and some sites among others devopensslorgdon't have a version that will handle the L<foo1|foo1> construct yet, hereis a copy from my laptop slightly modifed to work independently of the placewhere perl itself resides
Update all links so they will be rendered better
comment was wrong
Update comment from bnh
Document DSA and SHANew function BN_pseudo_randUse BN_prime_checks_sizeBN_num_bitsw rounds of MillerRabin whengenerating DSA primes why not use BN_is_prime?
New news
Increase the year by one
typo in a comment
Update comments to provide a better approximation of reality
Add a pointer to a paper is the algorithm in section 42 thewordbased algorithm we are using?
enable Montgomery test
Update references
Small correction
Correct typos that ispell did not find
Made link of reference
New manpage
Run ispellClean up bn_montc
Update all links so they will be rendered better
Some comments added, and slight code cleanups
Clarification
New manual page
Avoid a race condition
Improve clarity
Document RAND_load_file change
Man page section forgotten
Give the correct email address even though the message is not quite serious
RAND_load_file, 1 now means "read the complete file";this is what we now use to read $RANDFILE / $HOME/rndPreviously, after 'cat'ting lots of stuff into rndonly the first MB would be looked atBugfix for apps/encc: Continue if RAND_pseudo_bytes returns 0only 1 is an error
RAND_pseudo_bytes is good enough for encryption IVs,we should not need RAND_bytes and we cannot use the latterunless we load a seed file
The des_xcbc_encrypt apparently always failsWorkaround so that "make test" continues anyway
Add the PID to the output on Win32
Let's make all the example formated the same, shall we?
Correct indentation
Document how CRYPTO_EX_DATA stuff works forRSA structures Other structures behave ina similar way
Documented in the RSA_print page
RSA_print etc
Rename asn1/pkcs8c to asn1/p8_keyc to avoid name conflict
Tidy up CRYPTO_EX_DATA structures
Document the BN library
Under VMS, ftruncate should be available
As ftruncate is not availabe on all platforms, switch back toopening the output file with "wb" to truncate it except on VMSwhere the file now keeps its original length because it is openedwith "rb+"  does VMS have ftruncate?
Make s_server, s_client check cipher list return codesUpdate docs
Minor patch: check only match @STRENGTH and remove eNULLcommentAdd documentation for the ciphers command including a fulldescription of cipher lists
update PRNG documentation/comments
dh renamed to dhparam
config string comment
fail on all errors
Document the DH library, and make some minor changes along the way
Add new program dhparam and update docs
Gets Lutz Jaenicke's name right this time :Apologies to both concerned
Apply Lutz Behnke's 56 bit cipher patch with a fewminor changesDocs haven't been added at this stage They are probablybest included in the 'ciphers' program docs
Move sslpod to doc/ssl
Use comment from md_randc part 2, as well
Use comment from md_randc in randpod
Docs for sess_id utility
change comments
Avoid integer overflow in entropy counterSlightly clarify the RAND_ documentation
Document RAND library
Move sslpod to doc/ssl
In RAND_write_file, truncate the file to the no of bytes writtenwe're now using fopen, "rb+" instead of fopen, "wb",so the file is not truncated automatically
add ERR_print_errors after "end" label
Don't "goto err" in client_master_key because no such label exists;just return 1 as in other error cases
doc/man moved to doc/apps
mention manual pages
Make CAcreateserial start from 1 instead of 0 forserial numbers
Change the 'man' directory to 'apps' Yes I wish cvscould rename too :
Check RAND_bytes return value or use RAND_pseudo_bytes
Some more ifdefs for noxxx options
Don't build the testapps automatically because the openssl program nowhas s/mime functionality
AFAICS lst1 stands for "lshift test" not "list"
WINDOWS is defined in e_osh The problem was WIN32 the new egcs uses _WIN32
Define WINDOWS in all Mingw32 cases
Rename lst1 to list1 to avoid name conflict on some platforms
Define WINDOWS for Mingw32 and Cygwin
Define WINDOWS
Oops undo change to wrong prototype
Finish off the X509_ATTRIBUTE string stuff
Rename X509_att stuff to X509at_, add X509_REQ wrappers
Rename rsa_oaep_test to the more appropriate name rsa_test for thebenefit of MSDOS users
Compaq C 62 for VMS will complain when we want to convertnonfunction pointers to function pointers and vice versaThe current solution is to have unions that describe theconversion we want to do, and gives us the ability to extractthe type of data we wantThe current solution is a quick fix, and can probably be madein a more general or elegant way
Avoid converting void  to a function pointer when NULL is defined asvoid 0, by have a 0 instead
A test script to check on the header files
Build the test apps after all of the library has been built
SOCKETSHR is showing bad declarations again  However, a simple castwhich does no harm fixes that problem
Build the crypto test applications as well
Prepare for a possible disabling of certain messages that DEC C spews out
Give the user the possibility to ask for compilation of only the filesthat are directly in crypto/, and prepare for a possible disabling ofcertain messages that DEC C spews out
It doesn't make sense to try see if these variables are negative, since they're unsigned
Beautification and a few entries added
SSL_R_UNSUPPORTED_PROTOCOL as in s23_clntc for SSL 2 whenNO_SSL2 is defined, not SSL_R_UNKNOWN_PROTOCOL
Add missing ifndefs that caused missing symbols when building libsslas a shared library without RSA  Use ifndef NO_SSL2 instead ofNO_RSA in ssl/s2cSubmitted by: Kris Kennaway <kris@hubfreebsdorg>Modified by Ulf Mller
Header for RAND_seed
remove debug modification that I checked in accidentally
New function RAND_pseudo_bytes generated pseudorandom numbers thatare not guaranteed to be unpredictable
In ssl3_read_n, set rwstate to SSL_NOTHING when the requestednumber of bytes could be read
Another name longer than 31 chars
Cut'n'paste error
RAND_seed
Synchronise with the makefiles
Tell the truth about list separators
add "randomness"
RAND_bytes's return values is 0 for an error, not 1
Enable memory checking earlier we correctly free everythingexcept for the BIO through which we print the memory leak list,and the leak printing function ignores this one block
Typo
Typo
Delete "random" file rnd in "make clean"
Let "make test" survive without DEVRANDOMand rename a target in test/Makefilessl to make iteasier to guess the name of the file executed by it
In EVP_PKEY_assign[_], return 0 for an error when they"key" is NULL
 Pseudoseed the PRNG in programs used for "make test"because otherwise BN_rand will fail unless DEVRANDOM works,which causes the programs to dump core because theydon't check the return value of BN_rand and if theydid, we still couldn't test anything add comment to some files that appear not to be used at all
Avoid some warnings, and run "make update"
Avoid shadowing variables,and reenable seeding with more data than read from DEVRANDOM  justdon't pretend it contains entropy
minor change for the prng
Use CRYPTO_push_info to track down memory leakonly the CRYPTO_push_info's in the apps/ directoryare included in the CVS commit, not all those I usedin crypto/
slightly change usage information
note about things still to do with RAND_bytes
Use CRYPTO_push_info to find a memory leak in pkcs12c
Precautions against using the PRNG uninitialized: RAND_bytes nowreturns int 1  ok, 0  not seeded New function RAND_add is thesame as RAND_seed but takes an estimate of the entropy as an additionalargument
Note about CRYPTO_malloc_init
PKCS1 signatures don't use randomnessAdd a note about the padding functions
corrections
Turn BN_prime_checks into a macroPrimes p where p1/2 is prime too are called "safe", not "strong"
add dependency and autogeneration rule for bn_primehcreated by bn_primepl, which now prints the copyright/licensenote as found in bn_primeh
Dummy page superseded by crypto/cryptopod
Document the RSA library
Added a comment about Win32
Add more info to the memory allocation change logSuggested by Bodo
Make sure that generated files are labeled as such except in dofile, for now
add check for internal error
The buffer in ss3_read_n cannot actually occur because it is nevercalled with max > n when extend is set
Clean up some of the SSL server code
dep/ directory is not needed
Add missing back
Update docs
New function X509_CTX_rget_chain, make SSL_SESSION_print display return codeRemove references to 'TXT' in inform and outform switches
s_client and s_server now have their own man pages
Man page for s_server
Make NO_RSA compile with pedantic
Add prexit command to s_client and patch some BIOfunctions so it doesn't crash Document s_client
superseded by doc/man/opensslpod
Unify doc/opensslpod and doc/man/opensslpod, which were almost thesame and now are identicalThe next step will be to delete doc/opensslpod, this is justto see the individual CVS deltas
Use basename instead of complicated sed line
Manpages for the DH utils and fix for a memory leak in dh program
Add PKCS12 manpage and use MAC iteration counts by default
Install man pages
Minor format changes
CApl is now generated automatically using CAplin as input
apps/opensslcnf and the documentation say it's "nombstr",but crypto/asn1/a_strnidc had "nombchar"
make nodes and norc2 work
add V_CRYPTO_MDEBUG_ALLSubmitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:
Honor the noxxx Configure options when creating DEF files
undef PKCS7_SIGNER_INFO for Win32 to avoid clashesFix so CRLDistributionPoints relativeName option usesthe correct type
Remove obsolete SSLeay instructions
ispell
Add some newlines needed for pod2man, and run ispellSubmitted by:Reviewed by:PR:
More X509_ATTRIBUTE changes
add "UnixWare", treated like "unixware"Submitted by: "Gary E Miller" <gem@rellimcom>
Initial automation changes to 'req' and X509_ATTRIBUTE functions
New functions SSL_get_finished, SSL_get_peer_finishedAdd short state string for MS SGC
Use less complicated arrangement for data strutures related to Finishedmessages
Use separate arrays for certificate verify and for finished hashes
Use prototypes
Slight code cleanup for handling finished labels
Further work on MacOS port See INSTALLMacOS for details
Rename CApl to CAplin no actual changes, and let Configureset the ! line with the path to PerlSubmitted by: Peter Jones
Rhapsody 55 aka MacOS X compiler bug workaround At the very leastpasses 'make test' now:
Metrowerks for Motorola tuneup
Alpha Linux update companion
Enhanced support for Alpha Linux See CHANGES for details
Add support for MS "fast SGC"
Fix some of the command line password stuff New functionthat can automatically determine the type of a DER encoded"traditional" format private key and change some of thed2i functions to use it instead of requiring the applicationto work out the key type
Don't request client certificate in anonymous ciphersuitesexcept when following the specs is bound to fail
Fix SSL_CTX_add_session: When two SSL_SESSIONs have the same ID,they can sometimes be different memory structures
Delete NO_PROTO section which apparently was just a typo for NOPROTO if anyone had actually ever needed that they should have fixed this typo
fix comment
Add OIDs for idea and blowfish Unfortunately these are inthe middle of the OID table so the diff is rather large :
Simplify the trust structure: basically zap the bit strings andrepresent everything by OIDs
MacOS updates Initial support for GUSI MacOS socket implementationis added
New {i2d,d2i}_PrivateKey_{bio, fp} functions
Makefile cleanups, crypto/bn/asm/alphas compiles on Alpha Linux
Allow passwords to be included on command line for a fewmore utilities
Fixes so NO_RSA works again
Add PKCS8 utility functions and add PBE options
Correct spelling, and don't abuse grave accent as left quotewhich was allowed by old ASCII definitions but is not compatiblewith ISO 88591, ISO 10646 etc
Synchronising
Support for ASN1 NULL type
Minor documentation update
Even more late breakin MacOS tidbits last for today
Even more late breakin MacOS tidbits
Late breakin patch for MacOS support
Initial support for MacOS is now availableSubmitted by: Roy Woods <roy@centricsystemsca>Reviewed by: Andy Polyakov
MacOS updates
RenameCRYPTO_add_info    > CRYPTO_push_infoCRYPTO_remove_info > CRYPTO_pop_infoin the hope that these names are more descriptive;and "make update"
fix typos and other little errors 
 Don't assume that int and size_t have the same representationand that malloc can be called with an int argument Use proper prototypes with argument list for various function pointers,avoid casts  however there are still many such cases left in these files Avoid collissions in app_info_cmp if sizeof int ! sizeof long Use CRYPTO_LOCK_MALLOC in mem_dbgc
Avoid shadowing p to make the compiler happy
 Added more documentation in CHANGES Made CRYPTO_MDEBUG even less used in cryptoh, givingMemCheck_start and MemCheck_stop only one possible definition Made the values of the debug function pointers in memc dependenton the existence of the CRYPTO_MDEBUG macro, and made the rest ofthe code understand the NULL caseThat's it  With this code, the old behvior of the debug functionalityis restored, but you can still opt to have it on, even when thelibrary wasn't compiled with a defined CRYPTO_MDEBUG
 Made sure some changed behavior is documented in CHANGES Moved the handling of compiletime defaults from cryptoh tomem_dbgc, since it doesn't make sense for the library users to tryto affect this without recompiling libcrypto Made sure V_CRYPTO_MDEBUG_TIME and V_CRYPTO_MDEBUG_THREAD had clearand constant definitions Aesthetic correction
Point out that opensslbugs is public
Add a comment
Add missing semicolon to make compiler happy, and switch backfrom MemCheck_start to CRYPTO_mem_ctrlCRYPTO_MEM_CHECK_ONbecause that is what applications should useMemCheck_start/stop never really worked for applicationsunless CRYPTO_MDEBUG was defined both when compiling the libraryand when compiling the application, so probably we shouldget rid of it
Clear out license confusion
Rebuild of the OpenSSL memory allocation and deallocation routinesWith this change, the following is provided and present at all timesmeaning CRYPTO_MDEBUG is no longer required to get this functionality: hooks to provide your own allocation and deallocation routinesThey have to have the same interface as malloc, realloc andfree  They are registered by calling CRYPTO_set_mem_functionswith the function pointers hooks to provide your own memory debugging routines  The have tohave the same interface as as the CRYPTO_dbg_ routines  Theyare registered by calling CRYPTO_set_mem_debug_functions withthe function pointersI moved everything that was already built into OpenSSL and did memorydebugging to a separate file mem_dbgc, to make it clear what iswhatWith this, the relevance of the CRYPTO_MDEBUG has changed  The onlything in crypto/cryptoh that it affects is the definition of theMemCheck_start and MemCheck_stop macros
Use MemCheck_start instead of CRYPTO_mem_ctrl, and generate a small leak to test conditional
Synchronise VMS scripts with Unix Makefiles
Update contact information opensslbugs, opensslsecurity
Delete an unused variable and make the PKCS12 keygen debugging code workagain
Fix the S/MIME code to use canonical MIME format forencrypted mail Also update the smime docs
Solaris x86 assembler problem is already addressed in /configbug reports keep coming in because that was still missing in 094
Various S/MIME fixes Fix for memory leak, recipient list bugand not excluding parameters with DSA keys
Fix a typo in a_enumc
Various S/MIME fixes
Fix for crashing INTEGERs, ENUMERATEDs and OBJECT IDENTIFIERsAlso fix a memory leak in PKCS7 routines
Make the PKCS7 S/MIME functions check for passed NULL pointersFix the usage message of smime utility and sanitise the returncodesAdd some documentation
Don't use inline assembler on x86 Solaris would need a different syntax
Useless files deleted  they were just copies of files of the same namein the apps/ directory which were recently changed
Add i2d_ASN1_PRINTABLESTRING function, and do 'make update'
Modify S/MIME application so the signer option writes the signersto a file if we are verifying
Merge in my S/MIME library and utility
CORE SDI proposed patch doesn't make any sense Undo
Oops!
Circumvent an exploitable buffer overrun error in RSA Security's RSAREFlibrary See: http://wwwCORESDICOM/english/ssh/indexhtmlSubmitted by:Reviewed by:PR:
Use des_set_key_unchecked, not des_set_key
Add functions des_set_key_checked, des_set_key_uncheckedNever use des_set_key it depends on the global variable des_check_key,but usually des_set_key_uncheckedOnly destestc bothered to look at the return values of des_set_key,but it did not set des_check_key  if it had done so,most checks would have failed because of wrong parity andbecause of weak keys
New function PKC12_newpass
Fix a bug in the modified purpose code: it wasn't updated to use thenew purpose getting functionUpdate the cacertpem and pcacertpem "CA" certificates so theyreally are CA certificate: that is they have the appropriate extensions
Change the trust and purpose code so it doesn't need initeither and has a static and dynamic mix
Modify the X509 V3 extension lookup code
Make salting the default Fail gracefully if the input is not salted
Document the extension tests performed by the purpose testin the x509 utility
Document all possible errors and some impossible from the verify program
Remainder of SSL purpose and trust code: trust and purpose setting inSSL_CTX and SSL, functions to set them and defaults if no values set
Add part of chain verify SSL support code: not complete or doing anythingyetAdd a function X509_STORE_CTX_purpose_inherit which implements the logicof "inheriting" purpose and trust from a parent structure and using a default:this will be used in the SSL code and possibly future S/MIMEPartial documentation of the 'verify' utility Still need to document how allthe extension checking works and the various error messages
Add trust setting support to the verify code It now checks thetrust settings of the root CAAfter a few fixes it seems to work OKStill need to add support to SSL and S/MIME code though
Add compilation of x509_trs
Oops! Commit died on me :
Initial trust code: allow setting of trust checking functionsin a table Doesn't do too much yetMake the <digestname> options in 'x509' affect all relevantoptionsChange the name of the 'notrust' options to 'reject' as thiscauses less confusion and is a better description of theeffectA few constification changes
New options to the verify program which can be used for chain verificationExtend the X509_PURPOSE structure to include shortnames for purposed and defaulttrust idsStill need some extendable trust checking code and integration with the SSL andS/MIME code
Initial chain verify code: not tested probably not workingat present However nothing enables it yet so this doesn'tmatter :
Support for authority information access extensionFix so EVP_PKEY_rset_ check return codes
Transparent support for PKCS8 private keys in RSA/DSANew universal public key formatFix CRL+cert load problem in by_filecMake verify report errors when loading files or dirs
Support for otherName in GeneralName
Update dependencies
Fix warning
Restore traditional SSL_get_session behaviour so that s_client and s_serverdon't leak tons of memory
Missing ifdef NO_DES
Modify verify code to handle self signed certificates
Store verify_result with sessions to avoid potential security hole
Fix for a bug in PKCS7 code and nondetached dataRemove rc464 from ciphers since it doesn't exist
Clarify docs
Add a salt to the key derivation using the 'enc' program
New function X509_cmp
This corrects the reference count handling in SSL_get_sessionPreviously, the returned SSL_SESSION didn't have its reference countincremented so the SSL_SESSION could be freed at any time causingsegfaults if the pointer was subsequently used Code that usesSSL_get_session must now make a corresponding SSL_SESSION_free call whenit is done to avoid memory leaks or blocked up session cachesSubmitted By: Geoff Thorpe <geoff@euc2net>
'req' fixes Reinstate length check one request fieldsFix to stop null being added to attributesModify X509_LOOKUP, X509_INFO to handle auxiliary info
Add some examples to the enc man page
Add support for the 40 and 64 bit RC2 and RC4 ciphers in 'enc'add documentation for 'enc'
Add info about the header and footer lines used in PEM formatsand add an nseq manpage
Correct x509 manpaghe and add a crl manpage
The info removal code was overcomplicated, and errorprone references being wrongly decreased  Fixed
Avoid deadlock
Add an spkac manual page and fix the pkcs7 manpage
Avoid some silly compiler warnings, and add the change log I forgot :
Two changes have been made:1 Added code to the memory leak detecting code to give the user thepossibility to add information, thereby forming a traceback2 Make the memory leak detecting code multithreadsafeThe idea is that we're actually dealing with two separate criticalsections, one containing the hash tables with the information, theother containing the current memory checking mode  Those should notbe handled with the same lock, especially since their handling overlapHence, the added second lock
Some crypto applications are now being built on Unix, so they should on VMS as well  Not by default, however
It's possible that considering the configuration file as a binary fileworks on Unix and MSDOS/Windows  It does not under VMS, so open itas text
Avoid silly compiler warnings about functions not being declared and an int missing
Some new names in asn1h are longer than 31 chars, which disturbs the VMS C compilers
Adjust to changes in apps/opensslcnf
Adjust to changes in apps/Makefilessl
DIFFERENCE doesn't handle long >255 chars lines well  Use BACKUP instead  No, I'm not joking
adjust to changes in test/Makefilessl
adjust to changes in test/testssl
Make sure installed files are world readable
Merge some common functionality in the apps, deletethe encryption option in the pkcs7 utility they neverdid anything and add a couple more options to pkcs7
Oops forgot the S/MIME v3 RFC
More docs and corrections/updates
Add password command line options to some utils Fix and update manpages
Fix a couple of outstanding issues: update STATUS file, fix NO_FP_API problemsUpdate docs, change 'ca' to use the new callback parameter Now moved key_callbackinto appc because some other utilities will use it soon
Oops The pkcs8 man page wasn't finished: this is an updated version
Very preliminary POD format documentation for someof the openssl utility commands
Undo silly change
Fix spurious warnings
Avoid some warnings
Fix to the revoke option in ca It was leaking memory, crashing and justplain not working :Also fix some memory leaks in the new X509_NAME codeFix so new app_rand code doesn't crash 'x509' and move include so it compilesunder Win32
Allow additional information to be attached to acertificate: currently this includes trust settingsand a "friendly name"
Fix assembler for Alpha tested only on DEC OSF not Linux or BSD  Theproblem was that one of the replacement routines had not been working sinceSSLeay releases  For now the offending routine has been replaced withnonoptimised assembler  Even so, this now gives around 95 performanceimprovement for 1024 bit RSA signs
 empty log message 
Fix to PKCS7 routines so it can decrypt some oddball RC2 handling
Continued multibyte character supportAdd a bunch of functions to simplify the creation of X509_NAME structuresChange the X509_NAME_entry_add stuff in req/ca so it no longer usesX509_NAME_entry_count: passing 1 has the same effect
Always hash the pid in the first iteration in ssleay_rand_bytes,don't try to detect forks by looking at getpidThe reason is that threads sharing the same memory can have differentPIDs; it's inefficient to run RAND_seed each time a different threadcalls RAND_bytes
Make md_randc more robust
Warn about RANDFILE being overwritten
Don't be overly paranoid
New file app_randc with some functionality used in various opensslapplications
Various randomness handling bugfixes and improvements some utilities that should have used RANDFILE did not,and rand handling was broken except in genrsa
Report an error from X509_STORE_load_locationswhen X509_LOOKUP_load_file or X509_LOOKUP_add_dir failed
Update Borland C++ builder supportSubmitted by: Janez Jere <jj@voidsi>
Improve support for running everything as a monolithic applicationSubmitted by: Lennart Bng, Bodo Mller
Respect PEX_LIBS and EX_LIBS when building binariesneeded for RSAREF builds
More multibyte character supportFunctions to get keys from EVP_PKEY structures
Constification
Don't return stuff from void functions
New function ASN1_mbstring_copy to handle ASN1 string copying Ultimatelythis will be used to clear up the horrible DN mess
Replace the macros in asn1h with function equivalents Also make UTF8Stringstolerated in certificates
Use of DEVRANDOM must be ifdef'ed the ifdef was commented outbetween SSLeay 081b and 090b with no apparent reasonIf we want an error when DEVRANDOM is not defined it always is withthe current e_osh we should use error
Initial support for certificate purpose checking: this willultimately lead to certificate chain verification It isVERY EXPERIMENTAL at present though
Add EX_DATA support to X509Fix a bug in the X509_get_d2i functions which didn't check if crit was NULL
New functions to parse and get extensions
More patches
RC4 tuneup featuring 3040 performance improvement on most RISCplatforms See crypto/rc4/rc4_encc for further details
RC4 tuneup featuring 3040 performance improvement on most RISCplatforms See crypto/rc4/rc4_encc for further details
Fix incorrect usage messages in some commands
Fix for bug in pkcs12 program and typo in ASN1_tag2str
Fix for bug in pkcs12 program and typo in ASN1_tag2str
New option dhparam to s_server to allow the DH parameter file to be setexplicitly Previously it couldn't be changed because it was hard coded as"serverpem"
Add support for public key input and output in rsa and dsa utilities with somenew DSA public key functions that were missingAlso beginning of a cache for X509_EXTENSION structures: this will allow themto be accessed more quickly for things like certificate chain verification
Fix for d2i_ASN1_bytes and stop PKCS7 routines crashing is signed messagecontains no certificatesAlso fix typo in RANLIB changes
Add prototypes for new DSA functions Steve added recently
Pass $RANLIB when doing "make install" in subdirectories;rsaref needs istSubmitted by: Will Day
Fix warnings
Fix for base64 BIO decoding bug
Modify the 'speed' application so it now uses RSA_sign and RSA_verifyinstead of RSA_private_encrypt and RSA_public_decrypt
HPUX 11 flagsContributed by: Peter Huang <PETER_HUANG@HPCupertinoom8omhpcom>
Cosmetic changes
VC++ warning
Generate obj_dath in "make update"
"make update"
new control code BIO_C_RESET_READ_REQUEST
RC4 tuneupSee comments in the code after if definedRC4_CHUNK for more details
Fix typo in error messageSubmitted by: Alan Batie
Honor BUFSIZZ definition in s_server, don't use tiny 32 bytebuffer which leads to truncation of client cipher list
Bugfix: avoid opening CAfile when it's NULL
Use a temporary file, not a pipe, for BN test because there are somebroken bc's around
Fix typo that I introduced when reformatting lines
Fix warnings
More patchesAre there any others that have been submitted but not yet reviewed/integrated?
typo
Keep line lengths < 80 characters
note a few things that need to be done
Fix to make s_client and s_server work under Windows A bit of a hack butan improvement on not working at all
Lots of evil casts to stop VC++ choking with "possible loss of data"warnings :
Add new sign and verify members to RSA_METHOD and change SSL code to use signand verify rather than direct encrypt/decrypt
Various CRL enhancements tidies and workaround for broken CRLs
Document startdate and enddate in usage summary
Fix typo
Update dependencies
typo in a comment
Add some debugsolariscc configurations
Set s>version correctly for "natural" SSL 30 client hello
Initial support for MacOSThis will soon be complemented with MacOS specific source code files andINSTALLMacOSI Andy have decided to get rid of a number of include <sys/typesh>I've verified it's ok both by examining /usr/include/h and compilingon a number of Unix platforms Unfortunately I don't have Windows boxto verify this on I really appreciate if somebody could try to compileit and contact me asap in case a problem occursSubmitted by: Roy Wood <roy@centricsystemsca>Reviewed by: Andy Polyakov <appro@fychalmersse>
Fix yet another bug for client hello handling
Repair another bug in s23_get_client_hello:tls1 did not survive to restarts, so get rid of it
Parantheses not needed
"make update"
Use noncopying BIO interface in ssltestc
typo
Correction for the testapps lines
Truncate message about "new" include filenames
Reenable message about transition <fooh> > <openssl/fooh>because various programs are not updated that oftenand hence still expect header files names without the openssl/ prefix
Correct warnings
some more patches for avoiding problems with nonautomatic variables
Fix typo
Oops forgot the other RSA_NULL patches
This is preliminary support for an "RSA null" cipher Unfortunately whenOpenSSL is compiled with NO_RSA, no RSA operations can be used: includingkey generation storage and display of RSA keys Since these operations arenot covered by the RSA patent my understanding is it only covers encrypt,decrypt, sign and verify they can be included: this is an often requestedfeature, attempts to use the patented operations return an error codeThis is enabled by setting RSA_NULL This means that if a particular applicationhas its own legal US RSA implementation then it can use that instead by settingit as the default RSA methodStill experimental and needs some fiddling of the other libraries so they havesome options that don't attempt to use RSA if it isn't allowed
Use proper flags to build the testapps default CC value causes confusionon Solaris
Noncopying interface to BIO pairsIt's still totally untested 
Correct address in a comment
 empty log message 
Check the as version on Solaris x86 People don't read INSTALL anyway :
New function to convert ASN1 tag values to strings Also fix typo in asn1h
Fix warnings
Fix warnings
Reinitialize conf to NULL whenver ca application is startedSubmitted by: Lennart Bang
SHA cleanup Intel assembler companionI've chosen to nest two functions in order to save about 4K As a results1win32asm doesn't look right nested PROC/ENDP SEGMENT/ENDS and it'sprobably impossible to compile I assume I have to reconsider But nottoday
SHA cleanup and LP64 tuneup"Cleanup" stands for the fact that it's using common message digesttemplate /md32_commonh and sha[1_]dgstc are reduced down to'define SHA_[01]' and then 'include "sha_loclh"' It stands "LP64"there because it's 64 bit platforms which benefit most from the tuneupThe updated code exhibits 40 performance improvement on IRIX64sounds too good, huh? I probably should double check if it's notsome cache trashing that was holding it back before, 28  onAlpha Linux and 12  Solaris 7/64
New UTF8 utility functions to parse/generate UTF8 strings
Reinitialize global variables when necessary for monolith application
use explicit constant 11 just once
Make previous bugfix actually work
Fix server behaviour when facing backwardscompatible client hellos
no_dhe option for ssltestc
Use closesocket macro consistently, not close directly, for easierportabilitySubmitted by: Lennart Bng
Handle "if 0" correctly I hope
Add new 'spkac' utility and several SPKAC utility functions
Make DH_free free up any ex_data and also call the finish method
RIPEMD160 shapeup Final touch
RIPEMD160 shapeup Intel assembler companion Cycle counter benchmarkswent down from 1050 to 921 cycles on Pentium II I haven't checked thefigures on Pentium yet
RIPEMD160 shapeup Major news are that it's operational on all platformsnow and I'm putting it back to 'make test' later today
make testapps after the library
md32_commonh update and accompanying MD5 update
Allow the extension section specified in config files to be overriddenon the command line for various utilities
Allow the 1OU"my OU" syntax in 'ca' for SPKACs
Allow extensions to be added to certificate requests, update the sampleconfig file change RAW to DER
make update
Minor MIPS III/IV tuneup
Fix for a bug which meant encrypting BIOs sometimes wouldn't read the finalblock
Initial support for DH_METHOD Also added a DH lock A few changes made toDSA_METHOD to make it more consistent with RSA_METHOD
Initial support for DSA_METHOD
Allow memory bios to be read only and change PKCS7 routines to use them
Fix horrible and hard to track down bug in ssl23_get_client_hello:In case of a restart, v[0] and v[1] were incorrectly initialisedThis was interpreted by ssl3_get_client_key_exchange as an RSA decryptionfailure don't ask me why and caused it to create a _random_ master keyinstead even weirder, which obviously led to incorrect input tossl3_generate_master_secret and thus caused "block cipher pad iswrong" error messages from ssl3_enc for the client's Finished messageArrgh
Really undo the base64 change so that make test survives
Fix PKCS7_ENC_CONTENT_new to include a sensible default content type and addsupport for encrypted content type in PKCS7_set_content
Return 0 for succesful exit when noout is used
Undo base64 decoding change was not a bug fix
editing error
Honor $PERL environment variable in ConfigureSubmitted by: Even Holen <EvenHolen@iteantnuno>
Fix faulty base64 decoding of data that was 46 or 47 bytes longSubmitted by: Ivan Nejgebauer <ian@unsnsacyu>
Add pkcs7 and des apps to "make all"
Compile pkcs7 and des apps
Disable the text about fooh > openssl/foohEveryone should have got it by now
Remove DWINDOWS in debug configurationSubmitted by: Erik Johannisson <erik@johannissonse>
Submitted by: Lidong Zhou <ldzhou@cscornelledu>
Add functions to allow extensions to be added to certificate requestsModify obj_datpl to take its files from the command line Usage is nowperl obj_datpl objectsh obj_daththis should avoid redirection shell escape problems under Win32
Fix typo
UpdatesPrototypes and constant declarations for noncopying reads and writes forBIO pairs which is totally untested as of now, so I don't yet committhe actual source code, but reserve the numbers to avoid conflicts
Support for parsing of certificate extensions in PKCS10 requests: these areused by things like Xenroll Also include documentation for extendedKeyUsageextension
BIO_write and BIO_read could, in theory, return 2
crlf option
Provide fixed seed for parameter generation to speed up dhe1024
Bump after tarball rollingFriends, feel free to start again hacking for 095 ;
Bump version to 094
Ok, I'll do a few more final platform tests and then I'll roll the 094tarball baby for us PLEASE DO NOT COMMIT ANYTHING UNTIL YOU SEE MY FINALCOMMITS TO `STATUS' INDICATING THAT WE'VE REACHED 095dev
Ok, final fix for `config' script to detect all flavors of FreeBSDin a more general way
spelling
Install libRSAgluea when OpenSSL is build with RSArefThis should now finally make the RSAref users happy
Comments
add comments
more consistent formatting
 empty log message 
Backout the following change:| revision 1109| date: 1999/06/24 19:39:23;  author: ulf;  state: Exp;  lines: +0 1| Use the same CPU recogition method for FreeBSD 3 as for the other FreeBSD| versions The FreeBSD and FreeBSDelf Configure entries were identicalBecause Ulf overlooked the ELF vs aout difference, ie the two entries were_NOT_ identical! This way OpenSSL 094 at least compiles again under FreeBSD2 and 3 For 095dev I'll try to fix the stuff in a more general way to alsoallow FreeBSD 4 and other variants
094
Fix two remaining prototyperelated warnings
Remove the perl stuff also optically from the build procedure,because it could confuse people which then send us bug reports
Let us prepare for tomorrow
I don't think this is a real showstopper  Our internal verify procedure lackseven more and I consider this more a useful feature request than a releaseshowstopper
A few more ``ifndef NO_FP_API / endif'' pairs for consistencyHint from: Andrija Antonijevic <TheAntony2@bigfootcom>
consistent style
New option "crlf" to s_client and s_server which tells them to convertLFs into CRLFs when forwarding data from stdin to the TLS connectionThis is necessary for properly talking HTTPBecause of the code freeze this change is by default disabled for now;without DAPPS_CRLF, the code is exactly as before
add some more entries for 094
change formatting a bit
Fix startdate and enddate arguments to 'ca' program Also update NEWS filewith some 094 changes
fix the bug
Dont' assume that something starting with '' is a filename "openssl gendsa help" now prints the usage summary, not errormessages that now file help was found
typo while I poke around
DSA_dup_DH
New function DSA_dup_DH, and fixes for bugs that were foundwhile implementing and using it
Add a wish
Change all the 's to _'s
Configure fix for Windows: under Windows+perl "system" ends up going via thecommand shell which means that redirecttion needs backslashes in the paths
improve clarity of instructions
094 won't be completed in July 
More diagnostics
Make it compile under pedantic
comment
Revert erroneous change
automatically use nomdc2 if nodes is requested
Revert previous change  it was an accident
avoid some NO_<cipher> problems
generate error message
fix previous modification  if ssl>cert is NULL, don't follow the pointer
avoid cast
The SSL_CTX's cert structure is not relevant for the SSLbecause now SSL_new makes a copy
SSL_shutdown was done too early
don't prematurely shut down socket  use SSL_shutdown
Extra i386+gcc bn_divc tuneup featuring inline division and savingthe remainder left in edx Here is the resulting performance improvementmatrix improvement as a result of this and previous tuneup committedtwo days ago The results were obtained by profiling the "div" part ofthe crypto/bn/bnspeedcCPU	BN_div	bn_div_words	overall	commentPII	+16	accumulated by	+23	PII multiplies damn fast! Takinginlining		multiplication out of the loopdidn't make too much differenceEliminating of the multiplicationinvolved in remainder calculationis the major factorPentium	+45	accumulated by	+79	mull isn't that fast and replacinginlining		multiplications with additions inthe loop has more visible effect:MIPS	+75	+12		+2025	In addition to the taking multsR10000					out of the loop giving 12 in theasm/mips3s three mults wereeliminated in BN_divAlpha	+30	+50		+1015	Same as above But remember thatEV4					bn_div_words is a C implementationIt takes 4 Alpha mults in C to dothe same thing as 1 MIPS mult inassembler does So the effect 50is more impressive But not theoverall one Well, if Alphabn_mul_add would be implementedin assembler overall improvementwould be closer to MIPS
by request: let BN_dupNULL just return NULL
Bignum division tuneup Idea is to move multiplications in front ofloop body and replace 'em with addition/subtraction
correct error signalling for opendir failure
Fix to PKCS12 code to use the cipher block length when allocating a bufferfor encrypted data, rather than hard coding '8'
Allow the PKCS7 S/MIME encrypt application to support more than onerecipient
Tidy up pkcs12 application
Avoid path separator problems
No use in naming the cblock _; the structure still is incompatibleto Kerberos
 empty log message 
obj_dath is autogenerated it was in the CVS because old versions ofConfigure didn't generate the file in Windows builds
Always use buildinfh, which now includes the mk1mfinfh dataUsing different files caused problems because the dependenciesin the Makefiles produced by mk1mfpl were for the standard case,ie mentioned buildinfh and not mk1mfinfh
Restore compability with kerberos/desh I had deleted some seemingly uselessdefinitions such as C_Block earlier
VMS updatesSubmitted by: Richard Levitte <levitte@stackenkthse>
New function OBJ_obj2txt
New RSA flag RSA_FLAG_EXT_PKEY, to always call rsa_mod_exp
when invoking bn__comba[48] result>top wasn't always set correctly
close files
Use correct CFLAG definition for makefileone builds
change CFLAGS to those given in Configure
DPLATFORM and DCFLAGS command line arguments are no longer used
summary of Andy's changes to Configure
SPARC Solaris config updates/config sences whole range of SPARC instruction sets Do note thatit favors Sun C now if both gcc and cc 42 or later are present!
SGI IRIX config updates
Minor MD5 tuneup for WIN32 on Intel
Added support for SPARC Linux
GNU assembler read SPARC Linux support added
 performance retunes, v8plus bn__comba routines are reimplemented; support for GNU assembler read SPARC Linux;
First cut for a proposed code freeze and release dates from Steve and meAll OpenSSL developers: Please feel free to adjust the dates if they still donot fit into your personal scheduling
Don't include x509h when we just need asn1h
Remove obsolete files
ignore r586unixcpp
dateh no longer to be deleted by "make clean"
Make the perl module compile and eliminate some of the warningsStill doesn't work the destructor on BIO and SSL is called immediatelyafter creating the object Why that??
Torture weak compilers less by not automatically including x509h whereit is not needed
additional argument for key_callback
Additional user data argument to pem_password_cb function typeand to lots of PEM_ functionsSubmitted by: Damien Miller <dmiller@ilogiccomau>
avoid DPLATFORM\"\" and DCFLAGS\"\" command lines,use new file buildinfh instead
slight cleanup
Autogenerated file  this should not be under version controland the other /asm/cpp files are not
Get rid of redundant multiplications in bn_div_words
"make TABLE" to follow recent Configure change
MIPS III/IV assembler module is reimplemented
crypto/bn/asm/mips3s is moved to crypto/bn/asm/obsolete/
crypto/bn/asm/mips3s is obsolete I'm moving it to crypto/bn/asm/obsoletein order to replace it with a new version
SSL_MODE_ENABLE_PARTIAL_WRITE and SSL_MODE_ACCEPT_MOVING_WRITE_BUFFERwork as intended, both for SSLv2 and TLS
New compile time option DCRYPTO_MDEBUG_THREAD
Have CRYPTO_MDEBUG_TIME automatically set CRYPTO_MDEBUG,and make it the default for some debugging configurations
Add optional compiletime configurable time to CRYPTO_mem_leaks outputThis is much more helpful than the counter when doing tests with the libraryinteractively
"make clean" has to delete dateh
DES library changes
Did not check the last SDIR line for excluded algorithms
More DES library cleanups: remove references to srand/randand delete an unused file
RSA private keys without dmp1/dmq1/iqmp are also valid but slower
NO_HMAC
Fix option processingSubmitted by: Sam Tetherow
Judging from various messages on the OpenSSL mailing lists, HPUX 10with cc but not gcc seems to work well with BN_LLONG; but O4 is toomuch
Eliminate a warning: BN_mod_inverse returns a BIGNUM  and remove andunnecessary cast
Continues NASM support This might work now Its still experimental but itpasses all the tests Added documentation in INSTALLW32
cosmetic changes
More NASM support code it still doesn't work but it doesn't work less than itdidn't work before :
fix memory leak in s3_clntc
typo in string
Looks like another memory leak 
Beginnings of experimental support for NASM assembler This is a freeassembler for various X86 platforms including Win32 It can output object filesthat VC++ will tolerate so it could be used to provide assembly language supportto Win32 without the need for MASMThis is preliminary stuff: it doesn't even work yet
correct error handlinginsert spaces in products that occur in error codes
typo
New function RSA_check_key
New function RSA_check_key,openssl rsa check
Various changes to stop VC++ choking under Win32
Add a debugging option to PKCS5 v20 key generation function
Copy flags in ASN1_STRING_dup
Fix a bug in x509c that omitted DSA parameters when they didn't match thesigners parameters Changed it to never omit parameters
SXnet code was freeing up the extension data rather than the temporaryzone number
Fix memory checking
Obsolete/experimental code
Provide CFLAGS and PLATFORM information on Windows platforms
remove editing artifacts
Mention modification to Configure
Don't confuse mk1mfpl by combining multiple options into one
Updated to reflect recent "Configure" modification
Broken HPUX cc
improve readability of if conditions ELF, if defined, supersedes BSDI[which we don't really define if ELF is defined, but who knows]
avoid confliction definitions of NDEBUG
Disable asserts for standard configurations
make debugsolaris[u]sparcgcc more useful
typo
typo
New functions SSL[_CTX]_{set,get}_mode; the initial set of mode flags isSSL_MODE_ENABLE_PARTIAL_WRITE, SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER
Don't use oldgcc for egcs compiler
More noxxx option tweaks
Fix nohmac and noripemd
New functions to allow RSA_METHODs to be changed without poking round inRSA structure internals
Use "long long" for all Win32 gcc ports
With mingw32, use "long long" rather than "_int64" the latter doesnot work, at least the package mentioned in INSTALLW32 does not knowabout it
Fix commentsSubmitted by: Anonymous
The Mingw32 configuration entry was missing one colon found by"Zot O'Connor" <zot@ZotConsultingcom>Also, Windows probably does not need the warning about multithreading
configuration change for debugging
Update TABLE
Memory leak checks
Close another memory hole
Avoid some memory holes, one of which was pointed out by"Chad C Mulligan" <mulligan@antipopeorg>
Use the same CPU recogition method for FreeBSD 3 as for the other FreeBSDversions The FreeBSD and FreeBSDelf Configure entries were identical
Fix d2i_ASN1_INTEGER and i2d_ASN1_INTEGER so it correctly works outthe length of negative integers
Don't use inline assembler when configured for "noasm"
New function PKCS7_signatureVerify to allow the signing certificate tobe explicitly stated with PKCS7 verifyAlso fix for util/mkerrpl: if the nostatic option is being used this will befor an external library so the autogenerated C file should include theheader file as:include "any/path/to/headerh"rather than the internal library form:include <openssl/headerh>
Change the PEM_ function prototypes to use DECLARE_PEM macros and changeutil/mkdefpl to handle this Also do a 'make update'
Implement STACK_OFANS1_OBJECT for extended key usage extension, change thedocumentation to reflect the STACK_OFCONF_VALUE change to the CONF lib anduse ANSI typedefs for X509V3_EXT_I2D and X509V3_EXT_FREE
Make some debug configurations more useful for debugging
Perl variable names are casesensitive 
Don't shadow
"make update"
Convert the CONF library to use a typesafe stack: a STACK_OFCONF_VALUE Itseemed like a good idea at the time several hours later it was ratherobvious that these are used all over the place making the changes ratherextensive
New functions CONF_load_bio and CONF_load_fp to load a configurationfile from a bio or fp Added some more constification to the BN library
Clarification
"make update"
New function CRYPTO_num_locks
Use same name in the definition as in the header file declaration :/the extra "get" makes the name quite long, but otherwise it'd soundas if you could request something rather than obtain informationabout what the peer did
Don't access configuration files outside the source tree
Typo
Recognize CPU on BSD/OS
Some people don't have /dev/fd/0 on Solaris, so use  instead
Don't try to use zerobyte buffers
Obsolete
long obsolete
Comment adjusted to reality
rc4_loclh and bf_loclh incorrectly defined _HEADER_;opensslconfh always expects HEADER_ no leading underscoreSubmitted by: Andy Polyakov <appro@fychalmersse>
Provide fallback configurations for all hpux configurationsproblems with BN_LLONG have been reported both for hpuxccand for hpux10gcc
Bugfix
Avoid some warnings on silly compilers
"make update"
BIO pairs
Fix to i2d_DSAPublicKey to return the correct lengthSubmitted by: Jeon KyoungHo <khjeon@sdssamsungcokr>
Changes for BSD/OS 4
Don't use unquoted whitespace in "case" case
Document the X509V3 code and change some of the extension function pointersto use 'void ' rather than 'char ' for an "arbitrary extension"
NeXT 33 can handle O3 30 can't
Fix warnings
hpuxcc HPUX 9x does not work with BN_LLONG floating point exceptionsSubmitted by: Andreas Ley <andy@rzunikarlsruhede
Try to detect NeXT 33 working Configure entry for this still missing
Avoid warning
Two new functions to write out PKCS8 private keys Also fixes for some ofthe the PBE code and a new constant PKCS5_DEFAULT_ITER for the defaultiteration count if it is passed as zero
Avoid warnings
Fix determination of Perl interpreter: A perl or perl5_directory_ in $PATH was also accepted as the interpreter
Another <unistdh> 
Reformat and "modernise" the signc demo
Put SC5 warning back in, future changes might trigger the compiler bug again
tiny optical change
Repair PEM_write_PrivateKey and PEM_write_bio_PrivateKey
Oops, I forgot to add the dependency "TABLE: Configure"
Circumvent bug in SC5 without patch 10735701Submitted by: Andy Polyakov <appro@fychalmersse>
Don't define _ANSI_SOURCE for NetBSDSubmitted by: Eric Ding <ericding@MITEDU>
Change the PEM function implementation to use a common set of macros: thisshould make modifying them easierFix the selfsign demo: it was rather ancient and used deleted functions
Delete unnecessary newlines in TABLE
des_cbc_encrypt / des_ncbc_encrypt issue
Update dependencies
Unify DES library: ncbc_encc wasn't used, but its content was almostduplicated in cbc_encc without IV updating and in des_enccAs pointed out by others on the openssldev list, des_cbc_encrypt withoutIV updating; defined in cbc_encc exists only for historical reasons:des_ncbc_encrypt should be used instead and the caller does not haveto manually update the IVIf des_cbc_enrypt is not needed for backwards compatibility, thedefinition of des_ncbc_encrypt should be put back into des_encc, andboth cbc_encc and ncbc_encc can be deletedIf des_cbc_encrypt is needed for backwards compatibility, its behaviourobviously should not change ie, don't add IV updating
"extern" is a C++ reserved wordPointed out by: Janez Jere <jj@voidsi>
Remove old libdes version number
"make update" added to top Makefile, and applied
DES CBC change looks dubious to me
Mention unistdh
Some prePOSIX systems don't have unistdh but eg libcAllow configuring the name of that header file
Oops Get rid of now incorrect comment
I keep forgetting to fix this: update the IV! Most important!
Make "make test" fail if bntest fails an internal selfcheck
The des app
Survive pedanticism
crypt, demos patched
Call our crypt implementation des_crypt crypt now is a wrapper ifthere is no system crypt available
Casts
Warnings and casts
Don't define _, and eliminate casts
Fix to compile the des app
Prevent name conflictsSubmitted by: Janez Jere <jj@voidsi>
"request" added
Use mkdirppl more efficiently
Don't make assumptions on what the path looks like
Complete support for PKCS5 v20 Still needs extensive testing
Fix for BIO pairs
Use locking in a way that makes more sense
Use the same path to perl in all ! lines in util
This is the main PKCS5 v20 key generation function, it parses the ASN1structure and decides what key to generate if any Not currently added tothe PBE algorithm list because it is largely untested
treat init properly
Don't mix real tabs with tabs expanded as 8 spaces  that'sa pain to read when using 4space tabs
Introduce "BIO pairs", which when finished will relay dataso that the SSL library can be used for applications thathave to handle all the actual I/O themselves
Mention mkdirppl
mkdir p is not fully portable according to Marc Crispin,NeXTstep creates a directory called p; now mkdirppl does its job
Use only O, not O3 for NeXTstep:> The nextstep port uses the O3 switch to gcc  Support for O3 didn't appear> until later and buggier versions of NeXTstep  Use O instead, or have a> separate portSubmitted by: Mark Crispin <MRC@PandaCOM>
Comments added
linuxsparc
"linuxsparc" configurationSubmitted by: Christian Forster <fo@hawostwunierlangende>
More general definition for S_ISDIR needed not only for VMS butalso for NeXT
More PKCS5 v20 development Add a function to setup a PKCS5 v20AlgorithmIdentifier and make various ASN1 fixes
Change PBE handling a bit more: now the key and iv generator does callsEVP_CipherInit this because the IV wont be easily available when doingPKCS5 v20
Rewrite PBE handling read to support PKCS5 v20 and update the functionlist for Win32
Change so PEM private key read routines can handle PKCS8 transparently
More PKCS8 stuff Support for unencrypted forms of private key
const/type fixes
Add d2i,i2d bio and fp functions for PKCS8 and add inform and outformarguments to pkcs8 application
Add a 'pkcs8' application for initial PKCS8 support Still needs lots moreoptions to handle encrypted and unencrypted forms and DER format input andoutput
The rest of the PKCS5, PKCS8 patch I forgot before :
Add PKCS5 v15 compatible algorithms and initial PKCS8 support PKCS8 needsmore work: need an application and make the private key routines automaticallyhandle PKCS8
Update
Aha! That's how pkcs12 got missed from stackification
Some constification and stacks that slipped through the cracks how?
Support the EBCDIC character set and BS2000/OSDPOSIX work in progressSubmitted by: Martin Kraemer <MartinKraemer@MchPSiemensDe>
remove conflict indicator 
Support the EBCDIC character set and BS2000/OSDPOSIX work in progressSubmitted by: Martin Kraemer <MartinKraemer@MchPSiemensDe>
"linuxsparc64gcc" configurationSubmitted by: Ray Miller <raymiller@oucsoxacuk>
Support the EBCDIC character set and BS2000/OSDPOSIX work in progressSubmitted by: Martin Kraemer <MartinKraemer@MchPSiemensDe>
Generate noxxx options for missing ciphers
Test apps
Hint about unresolved symbols when mixing compilers
Avoid type conflict on Unix with DEC CPointed out by Sergio Rabellino <Rabellino@diunitoit>
Define a macro to avoid name conflicts
gcc dumps core on HPUX
More evil cast removal
Make samples compile
stack
Evil cast extermination
stack
Move stack implementations to more natural places
Stack
Remove redundant line
Labels longer than eight characters might cause problems
Borland C fixSubmitted by: Andy Polyakov
more typesafe stacks 
More consistency
stack
Stack
"BTW, I no longer have a wish for this This was solved in other ways"Mats Nilsson <matsnilsson@xwarese>,<4119990531095211040bf2e0@beritxwarese> to <openssldev@opensslorg>
Complain about deficiency of internal_verify
More stack
Adjust bsdielfgcc to look more like FreeBSDelf, linuxelf and the like
BSD/OS 4x support bsdielfgcc
Yet another stack
Another stack
Another safe stack
Another safe stack
More safe stack
Puhhh today is a very hot day
And carry on with development
Oops!
Prepare to release 093a
Update dependencies
Pass INSTALL_PREFIX to subdirectories of cryptoSubmitted by: strube@physik3gwdgde Hans Werner Strube
Some assemblerrelated cleanups
sco5gcc configurationSubmitted by: David Greaves
Include <stdioh>
Updated C++ SSL demosSubmitted a month ago by: Wade Scholine
Updated some demosSubmitted by: Sean O Riordain <SeanORiordain@cyronacom>
 empty log message 
Change function call according to current API
Ignore directories created by "make f makefileone"
Free up 'out' before exiting pkcs12 applicationSubmitted by: Wu Zhigang <zhigangwu@yahoocom>
der_chop is now generated from der_chopin
I386_ONLY is defined in opensslconfh, so we need to include itSubmitted by: John Keith <jtkeith@kavicom>
Circument egcs bugSubmitted by: Andy Polyakov <appro@fychalmersse>
Fix for memory leak
Update md5 assembly source for Win32
Set ! path to Perl in apps/der_chop automatically
Add closing parenthesis to usage output
Temporary workaround for IRIX64 buildSubmitted by: Andy Polyakov <appro@fychalmersse>
Last minute VMS updates for 093Submitted by: Richard Levitte
Update for 093
Final version for 093
Move on to 094
Here we go: prepare to roll 093
Fix URL for perl in INSTALLW32
Move to beta 3
Prepare for final? beta
Don't use NULLpointer :/
Detect linuxmips
Comment about bug
Let ssl_get_prev_session reliably work in multithreaded settings
Set ext_list to NULL after use
Avoid memory hole when we don't like the session proposed by the client
Fixup do_ntbat for new mk1mf arg order
Move the Win32 undefs of X509_NAME and PKCS7_ISSUER_AND_SERIAL so they willalways get included with the relevant files
We need e_osh here
Remove traces of bad idea :
Older versions of SINIX C development system inherited a bug fromSGI' cc; enable workaroundSubmitted by: Martin Kraemer
It was a very bad idea to use include "/e_osh"  when this occursin cryptlibh which is often included as "/cryptlibh", then thequestion remains relative to which directory this is to be interpretedgcc went one further directory up, as intended; but makedepend thinksdifferently, and so probably do some C compilers  So the / must go away;thus e_osh goes back into include/openssl but I now useinclude "openssl/e_osh" instead of <openssl/e_osh> to make the point and we have another huge bunch of dependency changes  Argh
Don't include toplevel CVS directory
The last argument in the d2i_XXX_fp and  d2i_XXX_bio functions should beof type XXX  not XXX 
Add a kludge :There were problems with putting e_osh just into the top directory,because the test programs are compiled within test/ in the "standard"case in in their original directories in the makefileone case;and in the latter symlinks may not be available
Don't install e_osh in include/openssl, use it only as a localinclude file
Bring VMS in sync with the recent changesSubmitted by: Richard Levitte <levitte@stackenkthse>
On seconds thoughts, the version number shoud _never_ decrease
Revert
Prepare for a beta release
NeXT doesn't have direntPointed out by Juergen Moellenhoff <jurgen@oicde>
Detect Siemens platformsSubmitted by: Martin Kraemer <MartinKraemer@MchPSiemensDe>
Some solarisusparc MD5 fixes
Avoid a warningSubmitted by: Sylvain Robitaille <syl@alcorconcordiaca>
Declare test key data as staticSubmitted by: Andy Polyakov <appro@fychalmersse>
Change selfdescription mklinkpl is not just faster than the lastreleased version of mklinksh  the latter couldn't even handlethe //include/openssl case
Bignum library bug fix IRIX 6 passes "make test" now!This also avoids the problems with SC42 and unpatched SC5Submitted by: Andy Polyakov <appro@fychalmersse>
Include some notes on basic extension usage and change opensslcnf to usuallydo sensible things with extensions
Add mv8 to solarisusparcoldgcc
Typos
Oops
Small corrections
Note that the numbering scheme used to be different
Switch to new version numbering scheme
Convert gcc version detection for solarisusparcgcc into a formbetter suited for finding what went wrong in case that some compilerversions create an output we can't parse
Bugfix: GCCVAR contains two lines "Reading specs " and the actualversion, so we needecho $GCCVAR | sed instead ofecho "$GCCVAR" | sed to process it as intended
New functions sk_set, sk_value and sk_num to replace existing macros: this isto minimise the effects on existing code
For Solaris with old gcc versions that don't understandmcpuultrasparc, don't silently step to solarissparcgcc, whichwould unnecessarily use less efficient assembler codeInstead, use new configuration variant solarisusparcoldgcc;this also means that someone who reads the output of /config willnotice that it may be advantegeous to upgrade gcc
gcc < 28 does not support ultrasparc
Change default PKCS12 iteration count to 2048, include rsa_oeap_test in thetest batch file
noxxx options
BSD alpha configSubmitted by: Rich Bud <rbud@forteancom>
Get rid of some unnecessary casts and add a necessary one
Spelling error
Protect applications from failing to compile when theytry to directly include opensslvh
Don't forget that it's freeze time now
BC now compiles crypto/des
Move prototypes to the right place
If we couldn't handle "showcerts" which happens with the currentSSL2 implementation, show at least the server certificate
Mention "make depend"
Substitute spaces for tab
Various clarifications to extension docs: change the name of literalextensions from RAW to DER to avoid confusion with raw extensionsUpdate NEWS file
Mention Andy's assembler stuff
mk1mfpl syntax has been changed
Make MD5 work on Alpha, and fix a bugSubmitted by: Andy Polyakov
Additional, more descriptive error message for rejection of a session IDbecause of missing session ID context so that application programmersare directly pointed to what they should do differently
gcc in some versions doesn't like the const_des_cblock typedefSo omit it for now :
Rename "openssl x509" option "config" to "extfile", because itdoesn't have a default value like the "config" options of otheropenssl subprograms
Clarification
Oops! Get the pmatch test the right way round
Keep text lines less than 80 characters wide
Fix various less obvious bugs in PKCS7 handling: such as not zeroingthe secret key before we've encrypted it and using the right NID for RC264Add various arguments to the experimental programs 'dec' and 'enc' to maketesting less painfulThis stuff has now been tested against Netscape Messenger and it can encryptand decrypt S/MIME messages with RC2 128, 64 and 40 bit DES and triple DESIts still experimental though
Typo
DES changes
Change type of various DES function arguments from des_cblockmeaning pointer to char to des_cblock  meaning pointer toarray with 8 char elements, which allows the compiler todo more typechecking  The changed argument types were of typedes_cblock  back in SSLeay, and a lot of ugly casts wereused then to turn them into pointers to elements; but it can bedone without those castsIntroduce new type const_des_cblock  before, the pointers ratherthan the elements pointed to were declared const, and forsome reason gcc did not complain about this but some othercompilers did
Added a comment pointing out the behaviour of "openssl x509 conf ",which cost me some time to find out about
Marked probable bug, pointed out by Anonymous
Convert void 
Don't run "make depend" automatically
Fix some obvious bugs in the PKCS7 library handling It didn't try tofind the right RecipientInfo based on the recipient certificate so wouldfail a lot of the time and fixup cipher structures to correctly maybemodify the AlgorithmIdentifiers  Largely untested at present this will befixed in due course Well the stuff was broken to begin with so if its brokennow then you haven't lost anything :
Various Win32 fixes Change args in do_msbat to put platform last Fixunsigned/signed cmp error in asn1parse Change various pem_allc args touse pem_password_cb
Get rid of casts
Add actual testing to bntest
Use OPENSSL_GLOBAL, OPENSSL_EXTERN instead of GLOBAL and EXTERN
OPENSSL_EXTERN
OPENSSL_EXTERN, OPENSSL_GLOBAL
Update dependencies
Get rid of another cast
Use e_os2h, not e_osh in exported header file desh
e_os2h is used for things that must be visible when external applicationsuse certain parts of OpenSSL
e_os corrections
Comment
Bugfix set shutdown only when we shouldSubmitted by: Oleg Girko
Update
Get rid of the cast
Return 0 for an error, 1 for no error from read_options;that's what the calling code seems to expect
Comment
A comment
Avoid compiler warnings for x86
The encoding of negative ASN1 INTEGERs and the conversion of BNs to negativeintegers was completely broken Also added a NEG_PUBKEY_BUG compilation optionto compensate for public keys improperly encoded as negative integers
Various bugfixes: Uses locking for some more of the stuff that is notthreadsafe where threadsafe counterparts are not available on allplatforms, and don't memcpy to NULLpointersSubmitted by: AnonymousReviewed by: Bodo MoellerAlso, clean up htons vs ntohs confusions
Fix cryptlibcSubmitted by:Reviewed by:PR:
Introduce and use function typedef pem_password_cb so that we don't callthose functions without having a parameter list declarationThere are various similar cases left 
 empty log message 
Delete a wish
Change cast in function calls to that which is, I think, the rightone for those functions is it?
Add release dates to the "CHANGES" file, because that's an obviousplace to look for them
Missed one line
Don't use reserved name "_encrypt" for parameters;instead I've picked "enc", because that's what's in the prototypes"_encrypt" is reserved only as an external name, but stillusing it in an application doesn't look like good style to me and it certainly isn't if the point is just avoiding shadowing,which is apparently why the previous name "encrypt" was changed
Update dependencies
Cut&paste error
Oops Close the file
Avoid shadowing, and a bit of constification while I'm at it
Some tiny cleanups related to the cert_st / sess_cert_st change
New structure type SESS_CERT used instead of CERT inside SSL_SESSIONWhile modifying the sources, I found some inconsistencies on the use ofs>cert vs s>session>sess_cert; I don't know if those couldreally have caused problems, but possibly this is a proper bugfixand not just a cleanup
For solarisusparc configurations, avoid problems with GNU as, whichcannot handle all opcodes we need
Remove redundant ifdef
VMS support bug fixes
VMS supportSubmitted by: Richard Levitte <richard@levitteorg>
Reorganize and speed up MD5Submitted by: Andy Polyakov <appro@fychalmersse>
VMS supportSubmitted by: Richard Levitte <richard@levitteorg>
Spacing in comment corrected
First tiny changes in preparation of changing of "sess_cert" handlingAlso I've subsituted real tabs for 8spaces sequences in some lines so thatthings don't look that weird with a tabwidth of 4
mk1mfpl and mkdefpl read OPTIONS from toplevel MakefileConfigure no longer changes files in place
Several of the EVP_CIPHER structures had the get and set asn1 parameterfunctions transposed
Add new out option to asn1parse to allow the parsed data to be outputFixed strparse option: it didn't work if used more than once this was dueto the d2i_ASN1_TYPE call parsing a freed buffer On Win32 the file wincrypthdefine's X509_NAME and PKCS7_SIGNER_INFO causing clashes so these are undef'ed
Caldera OpenLinux passes test now
Missing argument in prototypeSubmitted by: Andreas Ley <ley@rzunikarlsruhede>
Use ifndef PEDANTIC for all inline assembler
CommentSubmitted by:Reviewed by:PR:
argc counting bug fixedSubmitted by: Tomas HulekReviewed by:PR:
Clarify commentSubmitted by:Reviewed by:PR:
Move opensslcnf out of lib/Submitted by: Richard Levitte <levitte@stackenkthse>
And I thought I could spell  but in caps really everything looks the sameSubmitted by:Reviewed by:PR:
Make SSL library a little more foolproof by not requiring any longerthat SSL_set_{accept,connect}_state be called beforeSSL_{accept,connect} may be usedSubmitted by:Reviewed by:PR:
Various PKCS7 related fixes,tidies and comments
Move opensslcnf out of lib/
Update
Fix for +xxx optionsSubmitted by: Anonymous
Ok, give us more time
Changed a commentSubmitted by:Reviewed by:PR:
The various character predicates isspace and the like may not beused with negative char values, so I've added casts to unsigned charMaybe what really should be done is change all those arrays andpointers to type unsigned char [] or unsigned char , respectively;but using plain char with those predicates is just wrong, so somethinghad to be doneSubmitted by:Reviewed by:PR:
Moved some variable declarations inside blocks where they are neededso that warnings about unused variables for certainD constellations are avoided; this corresponds to the earlierchange for SHA1Submitted by:Reviewed by:PR:
New entry debugsolarisusparcgcc, as debugsolarissparcgcc no longerapplies to usparc systemsSubmitted by:Reviewed by:PR:
Fix various things to let OpenSSL even pass ``egcc pipe O2 Wall WshadowWpointerarith Wcastalign Wmissingprototypes WmissingdeclarationsWnestedexterns Winline'' with EGCS 112+
Various PKCS7 fixes to properly maybe! handle PKCS7 enveloped dataContaints elements of code by Sebastian Akerman <sak@parallelconsultingcom>and made a bit less "naughty" by Steve
No actual change, but the cert_st member of struct ssl_session_st is nowcalled sess_cert instead of just cert  This is in preparation of furtherchanges: Probably often when s>session>sess_cert is used, we shoulduse s>cert instead; s>session>sess_cert should be a new structurecontaining only the stuff that is for just one connection egthe peer's certificate, which the SSL client implementations currentlystore in s>session>[sess_]cert, which is a very confusing thing to doSubmitted by:Reviewed by:PR:
Create a duplicate of the SSL_CTX's CERT in SSL_new instead of copyingpointers  The cert_st handling is changed by this in various waysSubmitted by:Reviewed by:PR:
One comment was in the wrong line  some others are newSubmitted by:Reviewed by:PR:
Kill evil casts, fix PKCS7 and add new X509V3 Function
Makefilesave was missing hereSubmitted by:Reviewed by:PR:
Some tiny changes to the source code to make future diffs smallerwhen restructuring the cert_st handling removed unnused parts,and the likeSubmitted by:Reviewed by:PR:
Move variable definitions into the blocks where they are really needed,so that warnings about unused variables don't appear if those blocksare removed by the C preprocessorSubmitted by:Reviewed by:PR:
Use "const char " instead of "char " for filenames passed to functionsSubmitted by:Reviewed by:PR:
Various Win32 fixes Win95 doesn't support MoveFileEx which was used for aWin32 version of rename  There isn't a precise rename equivalent underWin95: the standard rename complains if the destination already exists soreplaced with a combination of unlink and MoveFile
Allows PKCS12 password to be placed on command line and add allow configfile name for 'ca' to come from the environment
GeneralizedTime setting fixes
noxxx option to exclude ciphers
The libssl32dll definition file is called ssleay32def why?
Mingw32
pass $PERL on make files
Superseded by sparcv8S and sparcv8pluss
This was an unused derivate of an old version of s_clientc that hadbeen changed so that it almost could be used under WindowsNo one asked to keep it and no one volunteered to bring it into useablestate, so away with itSubmitted by:Reviewed by:PR:
Generate DLLs with Mingw32
Get the Mingw32 makefiles right
Make pedantic work again
Bodo didn't do that
Restored path names that were changed by a previous "Configure" runRather than changing the files in places, we really should use in filesSubmitted by:Reviewed by:PR:
Some commentsSubmitted by:Reviewed by:PR:
config is Unix specific
Add missing semicolonSubmitted by: Janez Jere <jj@voidsi>
Typo
Borland C++ builderSubmitted by: Janez Jere <jj@voidsi>
Support additional Win32 compilersBorland C submitted by: Janez Jere <jj@voidsi>
Info on how to submit patches
Remove unreachable return statements
v8plus must be specified
Note about required SC50 patches
Use ANSI stdarg
C++ bug fixSubmitted by: Franco Papacella <franco@arpagech>
Fix problem with /usr/ccs/lib/cppSubmitted by: Andy Polyakov <appro@fychalmersse>
SHA1 cleanups and performance enhancementsSubmitted by: Andy Polyakov <appro@fychalmersse>
Recognise Ultra Sparc and compiler version number
solaris64 entrySubmitted by: Andy Polyakov <appro@fychalmersse>
Andy Polyakov points out there are default rules in make in gmake for this
Sparc v8plus assemblerSubmitted by: Andy Polyakov <appro@fychalmersse>
c_rehash doesn't work at that point of the installation, so don't eventry
Update HPUX config, work around HPUX library incompatibilitySubmitted by: Anonymous
Typo You ought to trademark "Configurion" :
Add other people who've done stackification
Bundle stack'ification entries on Bens request
Add missing sk_<type>_unshift function to safestackh
Convert casted X509_INFO stacks to typesafe STACK_OFX509_INFOPS: Feel free to move the IMPLEMENT_STACK_OFX509_INFO fromcrypto/asn1/x_infoc to any other place where you think it fits betterX509_INFO is a structure slightly spreaded over ASN1, X509 and PEM code,so I found no definitive location for IMPLEMENT_STACK_OFX509_INFO  Incrypto/asn1/x_infoc it's at least now bundled with X509_INFO_new andfriends
consistency cosmetics
Some more stack stuff
Yet another stack
Annotate a bugSubmitted by:Reviewed by:PR:
Update dependencies
Entry for resolved error macro confusionSubmitted by:Reviewed by:PR:Submitted by:Reviewed by:PR:
Another stack
Another stack
New function SSL_CTX_use_certificate_chain_fileSubmitted by:Reviewed by:PR:
Another safe stack
Better to not have blanks in cvsignore files
Start assembling some NEWS entries
Support verify_depth from the SSL API without need for userdefinedcallbacksSubmitted by:Reviewed by:PR:
Point out the "rehashing skipped" is not a problemSubmitted by:Reviewed by:PR:
Add "static" to function definitionSubmitted by: AnonymousReviewed by:PR:Submitted by:Reviewed by:PR:
Use correct error macro so that error messages make senseSubmitted by:Reviewed by:PR:
Broken line that was too longSubmitted by:Reviewed by:PR:
Better Sun configSubmitted by: Anonymous
More information about installing
New function SSL_CTX_set_session_id_contextSubmitted by:Reviewed by:PR:
Hopefully improved compatibility with earlier versions of Perl5Submitted by:Reviewed by:PR:
Remove extra braceSubmitted by:Reviewed by:PR:
Fix a couple of cases where an attempt is made to lock an already lockedmutex
$perl should never be empty
Typo
Superseded by mklinkplSubmitted by:Reviewed by:PR:
Unused file
OAEP bug fix
ignore MakefilesaveSubmitted by:Reviewed by:PR:
Support INSTALL_PREFIX for packagersSubmitted by:Reviewed by:PR:
Bug fix
Close files
Submitted by:Reviewed by:PR:
New Configure options "threads" and "nothreads"For Solaris and Linux, "threads" with proper compiler optionsis the defaultSubmitted by:Reviewed by:PR:
Compare with BN_mod_exp_simple, too
Ignore MakefilesaveSubmitted by: Anonymous
exptest dumps core Optimizer bug?
Missing "else"
Pass PERL to subMakefiles during "make links"Submitted by:Reviewed by:PR:
Obey $PERL when running util/mklinkplSubmitted by:Reviewed by:PR:
Fix make target "install"Submitted by: Niels PoppeReviewed by:PR:
Typo fixedSubmitted by:Reviewed by:PR:
Change error message for consistency
Use util/mklinkpl instead of util/mklinkshSubmitted by:Reviewed by:PR:
Autogenerated files
Ignore autogenerated assembler files
Decrypt test vector data even if previous decryption failed to getbetter diagnostics
Pass $PERL on make dclean
A faster and more general, and better documented replacement for mklinkshSubmitted by:Reviewed by:PR:
Install various scripts to $OPENSSLDIR/misc instead of $INSTALLTOP/binSubmitted by:Reviewed by:PR:
Linux shared libraries now in Makefilessl
Linux shared libraries
Do make rehash automatically at make test
Don't shadow
Remove autogenerated file
TypoPointed out by Nick Boyce <nickboyce@edscom>
More portable blowfish macrosSubmitted by: Andy Polyakov <appro@fychalmersse>
A new commentSubmitted by:Reviewed by:PR:
 empty log message 
Update NO_ macros
Undo
Message digest stuff
New Configure option no<cipher> rsa, idea, rc5, 
Add missing DEPFLAG
Oops  fix warning
New Configure option no<cipher> rsa, idea, rc5, 
Add PKCS12 documentation and new option in x509 to add certificate extensions
Remove NOPROTOrelated macros
Last week I proposed to increase the version number to 10So far nobody complained
Ignore autogenerated fileSubmitted by: Anonymous
Remove NOPROTO definitions and error code comments
Extensively changed the DEF file generator mkdefpl to use a modified versionof Ulf's prototype parser, also general tidying and fixing of several problemswith the original Its still a bit of a hack but should workThis is the last bit of the old code that uses the K&R prototypes: after sometesting they can finally go away
Fixes so it will compile again under Win32
Various header consistency fixes
Fix mkerrpl to find functions returning function pointers thanks Ulf!also add a few missing prototypes
Submitted by:Reviewed by:PR:
Fixed a typoSubmitted by:Reviewed by:PR:
Comment changedSubmitted by:Reviewed by:PR:
exit on error
Removed traces of cryptallh, and did a "make depend"Submitted by:Reviewed by:PR:
 empty log message 
New Configure option openssldir to replace ssldirpl
New Configure option openssldir to replace util/ssldirpl
cryptallh is not needed for anything and cannot even be includedwithout producing error messagesSubmitted by:Reviewed by:PR:
Fix header files so that any one can be included firstSubmitted by:Reviewed by:PR:
Replaced by mkerrpl
Some instructions for how to handle the <fooh>  >  <openssl/fooh>transitionSubmitted by:Reviewed by:PR:
Change the command line options of mkerrpl so static is now default anda write option is needed to actually change anything Second attempt atgetting rid of ERR, ERRC definitions: it might even work this time :
"perl util/mkerrpl static recurse rebuild" because the previouscodebase apparently was inconsistent  And crypto/Makefilessldoes need an ERRC Submitted by:Reviewed by:PR:
Removed superfluous reference to ERRCSubmitted by:Reviewed by:PR:
Restore ERRC definitions that are needed to compile the librarySubmitted by:Reviewed by:PR:Submitted by:Reviewed by:PR:
Avoid "incomprehensible" errors when required definitions are missingSubmitted by:Reviewed by:PR:
Delete the unnecessary ERR and ERRC lines in makefiles, add some functionalityto error code script: it can now find untranslatable function codes usuallybecause the function is static and not defined in a header: occasionally becauseof a typo and unreferenced function and reason codes To see this try:perl util/mkerrpl recurse debugAlso fixed some typos in crypto/pkcs12 that this found :Also tidy up some error calls that had to be all on one line: the old errorscript couldn't find codes unless the call was all on one line
C indentation style definition for EmacsSubmitted by:Reviewed by:PR:
ANSIfy, fix typo in error message, and remove redundant statement frommy code
Submitted by:Reviewed by:PR:
Complete rewrite of the error code generation script It now runs as a singlescript, translates function codes better and doesn't need the K&R functionprototypes to work NB the K&R prototypes can't be wiped just yet: they arestill needed by the DEF generator I also ran the script with the rewriteoption to update all the header and source files
Submitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:Submitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:
"make depend"Submitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:
Remove header files from cvsignore
Submitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:
Change include filenames from <fooh> to <opensslh>Submitted by:Reviewed by:PR:
org files are gone for good
Andy Polyakov points out that BF_PTR2 is slower than the generic case
Undo evil cast! <g>
Function didn't get ANSIfied because of unusual formatting
Recognize CPU version on NetBSD and FreeBSDNetBSD entry submitted by: Todd Vierling <tv@poboxcom>
Work with pedantic!
Submitted by:Reviewed by:PR:
Remove references to org header file names
Pass the $PROCESSOR variable through
Set the 386 flag automatically when building on i386
Be more specify about system requirements
Ultrix compatibilitySubmitted by: Bernhard Simon <simon@zidtuwienacat>
CVS confusion?Submitted by:Reviewed by:PR:
Don't return 0 from ssl2_read when a packet with empty payload is receivedSubmitted by:Reviewed by:PR:
Reverse unexplained change
Submitted by:Reviewed by:PR:
Fixed some race conditionsSubmitted by:Reviewed by:PR:
Oops! Fixup CHANGES
Suppport for CRL distribution points extension Also document some ofthis stuff
New header file opensslconfh contains the macros set by ConfigureThe configuration process could use some more cleanups
Move all autogenerated header file parts to crypto/opensslconfh
Remove some unnecessary? casting
Fix DES export ciphersuites
Fix lots of warningsSubmitted by: Richard Levitte <levitte@stackenkthse>
Fix some warnings
Wall implies Wuninitialized
Problems with 64bit longPointed out by Andy Polyakov <appro@fychalmersse>
Remove useless defines
Problems with 64bit longPointed out by Andy Polyakov <appro@fychalmersse>
Arguments are des_cblock
Update dependencies
Various fixes so Win32 compile may work Convert GeneralNames to use safe stack
const correctness
Missing endif
Change functions to ANSI C
Finish off support for Certificate Policies extension
Clean up prototypes prepare for removing NOPROTO
Document additional Configure flags
Error in comment
Fix typos in error codes
Definition did not match prototypePointed out by: Bernhard Simon <simon@zidtuwienacat>
Defunct assembler files removed; various cleanupsNew Ultrix and Alpha entries submitted by Bernhard Simon<simon@zidtuwienacat>
SPARC v8 assembler BIGNUM codeSubmitted by: Andy Polyakov <appro@fychalmersse>
New "Configure" entry Solaris with debug infoSubmitted by:Reviewed by:PR:
Removed extra semicolonsSubmitted by:Reviewed by:PR:
Pass $PERL on make errors
Initial support for Certificate Policies extension: print out works but settingisn't fully implemented yet
Fix const declarations
Update dependencies
Allow asn1parse to print out VISIBLESTRING and some code needed for certificatepolicies extension
Massive constification
Add support for VISIBLESTRING and UTF8String
Another STACK bites the dust
Add initial support for r2i RAW extensions which can access the config databaseadd various X509V3_CTX helper functions and support for LHASH as the configdatabase
Fix some warnings Contributed by Anonymous
Another bug
Write random seed file in binary modeSubmitted by: Richard Levitte <levitte@stackenkthse>
Fix a horrible BN bug in bn_expand2 which caused BN_add_word et al to failwhen they cause the destination to expandTo see how evil this is try this:include <pemh>main{BIGNUM bn  NULL;int i;bn  BN_new;BN_hex2bn&bn, "FFFFFFFF";BN_add_wordbn, 1;printf"Value s\n", BN_bn2hexbn;}This would typically fail before the patchIt also screws up if you comment out the BN_hex2bn line above or in anysituation where BN_add_word causes the number of BN_ULONGs in the resultto change try doubling the number of FFs
Add new experimental ciphersuites Bring naming into line with RFC
Just use an ANSI declaration, instead
/ Just some comments /Submitted by:Reviewed by:PR:
Add some utilities to support SXNet extension also add support in DEF filesgenerator to typesafe stacks
Cleaning up Ben's cleanups :Submitted by:Reviewed by:PR:
Make Windows compilers happySubmitted by:Tom TitchenerReviewed by:PR:
Some tiny fixesSubmitted by:Reviewed by:PR:Submitted by:Reviewed by:PR:
Typo
Start with some plans
Delete all the old X509V3 pack and unpack stuff and various structures andfiles associated with them This stuff is all obsoleted by the new X509V3 code
SSL_ALLOW_ENULL was renamed to SSL_FORBID_ENULL some time ago by Ben
Submitted by:Reviewed by:PR:
New Configure option "rsaref"
Dont autogenerate crypto/pem/pemh  a fixed file is fine for itSubmitted by:Reviewed by:PR:
Add typesafe STACKs and SETs
gcc claims this is a shadow, though I can't find what it is shadowing
Add `openssl ca revoke <certfile>' facility which revokes a certificatespecified in <certfile> by updating the entry in the indextxt fileThis way one no longer has to edit the indextxt file manually forrevoking a certificate The revoke option does the gory details nowSubmitted by: Massimiliano Pala <madwolf@opencaorg>Cleaned up and integrated by: Ralf S Engelschall
Fix `openssl crl noout text' combination where `noout' killed the `text'option at all and this way the `noout text' combination was inconsistent in`openssl crl' with the friends in `openssl x509|rsa|dsa'
Make sure a corresponding plain text error message exists for theX509_V_ERR_CERT_REVOKED/23 error number which can occur when averify callback function determined that a certificate was revoked
Obsoleted by new openssl command "listciphercommands"Submitted by:Reviewed by:PR:
Submitted by:Reviewed by:PR:
Fix a few typos and tabs while I'm poking around in cac
Rid the world of yet more evil casts
Adjust renegotiation slightly
Fix a typo in the X509v3 docs: cRLSign instead of cRLCertSign is correctaccording to the sources found by Steffen Dettmer <steffen@tfhberlinde>
Rid the world of more evil casts
Install signal handler if we are using sigaction
Bugfix: s_client occasionally would sleep in select when it shouldhave checked SSL_pending firstSubmitted by:Reviewed by:PR:
recent changes
Test PKCS1 v15 padding as well
Use Perl 5 even if Perl 4 comes first in the search path
Separate DSA functionality from ASN1 encodingNew functions DSA_do_sign and DSA_do_verify to provide access tothe raw DSA values
Preprocessor file to allow testenc to test only those ciphersthat are availableSubmitted by:Reviewed by:PR:
Tiny comment to improve code comprehensibilitySubmitted by:Reviewed by:PR:
Add PKCS5 v20 ASN1 structures
Bugs
New "open issue" ERR_Submitted by:Reviewed by:PR:
Avoid error message about missing gccSubmitted by: Niels Poppe <niels@netboxorg>
Be more optimistic about the availability of termios for ~ECHO,because sgtty emulation tends to fail on various systemsSubmitted by:Reviewed by:PR:
Bad dependencies
Test RSA after the BN library it is based onSubmitted by: Anonymous <nobody@replaycom>
Fix linuxmips entrySubmitted by: Niels Poppe <niels@netboxorg>
bn_div_words has been added to alphas Hannes Reinecke's patch
More assembler problems; new OCSP patch; obsolete patches removed fromlist
Bug fix for X509 twodigit yearPointed out by Alexander Tyshlek <tyshlek@fuibcom> and Peter Gutmann<pgut001@csaucklandacnz>
Remove obsolete files from SSLeay 08
Don't shadow
Avoid EADDRINUSE for s_serverSubmitted by:Reviewed by:PR:
Did a 'make errors' to update asn1 error codes now typo is fixed
Delete some auto generated files and correct a typo in crypto/asn1/p5_pbec
Include bnh instead of defining BIGNUM as char
Update dependencies
Remove obsolete files
Pointer to Ariel Glenn's SSLeay documentation
New Makefile variables $RANLIB and $PERL
pre093 development version
Add cvsignore in new pkcs12 directory
Don't shadow
New option to generate 80386 code
New option "showcerts" for s_clientSlight cleanup in ssl/
Remove file that is to be autogenerated by sha1586plPR:
TypoPR:
New switch "386" to generate 80386 code emulate bswap
Remove deleted PKCS12 functions from pkcs12h, get rid of object creationkludge, remove CRs from ssl_ciphc and update Win32 functions for PKCS12code It might compile under Win32 now 
Include pkcs12 program as part of openssl This completes most of the PKCS12integration
Added comments to des_enc_{read,write} functions warning about theircryptographic weakness IV reuse
Various PKCS12 related tidies and fixes: it might even compile now :
Yet more PKCS12 integration: add lots of files under crypto/pkcs12 and addthem to the build environment
Further PKCS12 integration, PBE, PKCS8 additions
This is the beginning of PKCS12 integration This just adds the PKCS12objects to objectshNOTE: during this integration it will not be possible to compile my PKCS12program against OpenSSL because there will be conflicts between the externalfunctionality and that being added to the core code
extranet file added
Add initial support for Thawte strong extranet certificate extensions andinclude an 'indent' option to V3 stuff
Linux PPC support
Fix Alpha assembler, remove redundant file
Make sure the RSA OAEP test is skipped under DRSAref becauseOAEP isn't supported when OpenSSL is built with RSArefSubmitted by: Ulf Moeller <ulf@fitugde>Reviewed by: Ralf S Engelschall
Move definitions of IS_SET/IS_SEQUENCE inside crypto/asn1/asn1hso they no longer are missing under DNOPROTOSubmitted by: Soren S Jorvang <soren@tdk>Reviewed by: Ralf S Engelschall
Update after release
Typo
Ops, interrupted commit Fixed
update list
Merge extconftxt and buffertxt into a global openssltxt because weshouldn't again start with thousend little text files or we quickly come backto the old SSLeay days ;
Add two recently added functions
function names recently changed  consistency
One more 092b
Final polishing for README file
Add latest changes to NEWS file
Bring style of INSTALL documents in sync with README fileand fix some inconsistencies
Remove up_verpl call
up_verpl is now obsolete
More 092 > 092b
Be consistent: 092b
Remove obsolete references to SSLeay and change default PLATFORM from"FreeBSD" to the generic "dist" as it's done implicitly by "make dist"
Print a little bit more information
Fix security hole
Add missing pipe char to "make dist" targetFound by Richard Levitte <levitte@stackenkthse>
Remove confusing hint to nonexisting file  Instead make it clear that oneshouldn't change it manually just here The util/ssldirpl script does moreand has to be used for this  Pointed out by Jacques Supcik<supcik@infethzch>
Some more source tree cleanups removed obsolete files crypto/bf/asm/bf586pl,test/testtxt and crypto/sha/asm/fs; changed permission on "config" script tobe executable and a fix for the INSTALL documentSubmitted by: Ulf Moeller <ulf@fitugde>Reviewed by: Ralf S Engelschall
Comment out the lines that generated by mk1mfpl include three separate rulesthat are equivalent to $OUT_D This was what was causing the 'too many rules'warning under VC++
Using int for the digest length in EVP_DigestFinal broke some compilersChanged to unsigned int: also need an evil cast in pk7_doitc because asigned, unsigned comparison chokes VC++
Remove some references which called malloc and free instead of Malloc and Free
Delete Win32 test with testreqpem and req: there is already a test withtestreq2pem
Fail if test fails
Update dependencies
Allow bsdigcc  see if it gets anyone anywhere
Solaris shared library support
This is now generated, it seems
Use the right compiler for ctx_size
Delete NULL ciphers from 'ALL' in the cipher list aliases This means thatNULL ciphers specifically have to be enabled with eg "DEFAULT:eNULL" Thisprevents cipher lists from inadvertantly having NULL ciphers at the topof their list eg the default ones because they didn't have to be takeninto account before
Fix for RSA private key encryption if p < q This took ages to track down
Just cosmetics: replace a tab with a normal space becausethe tab always looked too estoeric to my eyes while building ;
Be less restrictive and allow also `perl util/perlpathpl /path/to/bin/perl'in addition to `perl util/perlpathpl /path/to/bin', because this way one canalso use an interpreter named `perl5' which is usually the name of Perl 5xxxon platforms where an Perl 4x is still installed as `perl'Submitted by: Matthias Loepfe <MatthiasLoepfe@adnovumch>Reviewed by: Ralf S Engelschall
Let util/cleandependpl work also with older Perl 500x versionsSubmitted by: Matthias Loepfe <MatthiasLoepfe@adnovumch>Reviewed by: Ralf S Engelschall
Fix couple of ANSI declarations and prototypes
Update
Update platform test list
Two more things we should look at before release
Make CC,CFLAG etc get passed to make links and various Win32 fixes
Remove some hard coded paths from Win32 test stuff
Remake cert links when the app is built
Update to current state
Make it more clear what option WWW to s_server does
Fix quad checksum bug
Go faster
Correct English
Comment out two unimplemented functions from bioh Attempt to get theWin32 test batch file going again
Add missing funtions from non ANSI section of header files and add missingordinals to libeaynum
test
Various fixes to Win32, update ssleaynum, libeaynum, shuffle various ifdefsaround so more options appear in e_osh
Make links no longer needed
Solaris 26 makes still problemsDetails were posted
typo
Make `openssl version' output lines consistent
Start with some more tarball rolling preparation to make sure it's notoverlooed next Monday: rmlinks is no longer existing use openssl as the name and not rse don't roll the STATUS file into the tarball
Let us start with some platform test list
Fix Win32 symbol export lists for BIO functions: Added BIO_get_ex_new_index,BIO_get_ex_num, BIO_get_ex_data and BIO_set_ex_data to ms/libeay{16,32}defI'm not a Win32 hacker, but I think I've done it correctlySteve or Ben: can you confirm that it's correct?I don't want to break any Win32 stuff
Second round of fixing the OpenSSL perl/ stuff It now at least compiled fineunder Unix and passes some trivial tests I've now added But the whole stuffis horribly incomplete, so a README1ST with a disclaimer was added to makesure no one expects that this stuff really works in the OpenSSL 092 releaseAdditionally I've started to clean the XS sources up and fixed a few littlebugs and inconsistencies in OpenSSL{pm,xs} and openssl_bioxsPS: I'm still not convinces whether we should try to make thisfinally running or kick it out and replace it with someother module
Two more cvsignore files for the assembler stuff
Notice freeze state and update my entry
Delete obsolete old X509V3 files
Don't make links in INSTALL doc  also, work first time!
Don't make links on Windoze
Fix perl assembler
Fix DWP when only given three parameters
Linux MIPS support
Always make links
Fix a typo
Added support for adding extensions to CRLs, also fix a memory leak andmake 'req' check the config file syntax before it adds extensions Addedinfo in the documentation as well
Add a useful kludge to allow package maintainers to specify compiler and otherplatforms details on the command line without having to patch the Configurescript everytime: One now can use ``perl Configure <id>:<details>'', ieplatform ids are allowed to have details appended to them seperated bycolons This is treated as there would be a static preconfigured entry inConfigure's table under key <id> with value <details> and ``perl Configure<id>'' is called  So, when you want to perform a quick testcompile underFreeBSD 31 with pgcc and without assembler stuff you can use ``perl Configure"FreeBSDelf:pgcc:O6:::"'' now, which overrides the FreeBSDelf entryontheflyPS: Notice that the same effect _cannot_ be achieved by using``make CCpgcc '' etc, because you cannot override allthings from there
Disable new TLS1 ciphersuites
Fix names of cert stack functions
Typo :
Allow DSO flags like fpic, fPIC, KPIC etc to be specified on the `perlConfigure ' command line This way one can compile OpenSSL libraries withPosition Independent Code PIC which is needed for linking it into DSOs
Put the dependencies back
Move the SSL_CTX_xxx defines at the top of sslh to the location of otherSSL_CTX_xxx defines What was the reason to move them to the top, even beforethe copyright and ifdef HEADER_SSL_H? Hmmm  when there was and still is agood reason feel free to reverse this patch, but please document why it isneeded this way
Fix export ciphersuites, again
Reshape the README file out of the existing README stuffinto a single file Need more cleanup for final release IMHO
just a little typo
Add a first cut for a NEWS document similar to what other packages mostly GNUpackages provide  The idea is that because of the large number of CHANGESentries, this file summarizes the major changes for a brief overview
Bring the README file in sync and shape a little bit more
Cleaned up the LICENSE document: The official contact for any licensequestions now is the OpenSSL core team under opensslcore@opensslorg  Andadd a paragraph about the duallicense situation to make sure people recognizethat _BOTH_ the OpenSSL license _AND_ the SSLeay license apply to the OpenSSLtoolkit
Ralf is now using FreeBSD 31 which runs ELF instead of aout
General source tree makefile cleanups: Made `making xxx in yyy' displayconsistent in the source tree and replaced `/bin/rm' by `rm'  Additonallycleaned up the `make links' target: Remove unnecessary semicolons, subsequentredundant removes, inline pointsh into mklinksh to speed processing and nolonger clutter the display with confusing stuff Instead only the actuallydone links are displayed
Permit null ciphers
Fix GCC warningt_reqc: In function `X509_REQ_print':t_reqc:181: warning: suggest explicit braces to avoid ambiguous `else'
Add an extra 'raw' function r2i to the extension code Nothing uses this yet andit is just a place holder for functionality to be added later Its been addednow so the X509V3_EXT_METHOD structure shouldn't hopefully have to changeafter the release
Fix the PKCS7 stuff: signature verify could fail if attributes reordered, thedetached data encoding was wrong and free up public keys
Workaround for a Win95 console bug triggered by the password read stuff
Deleted my str_dup function from X509V3: the same functionality is providedby BUF_MEM_strdup Added text documentation to the BUF_MEM stuff
Added the new `Includes OpenSSL Cryptography Software' button asdoc/openssl_button{gif,html} which is similar in style to the old SSLeaybutton and can be used by applications based on OpenSSL to show therelationship to the OpenSSL projectPS: This beast caused me three hours to create, becauseof the size I had to handpaint the 7pt fonts in Photoshop
Remove confusing variables in function signatures in filesssl/ssl_libc and ssl/sslh At least the double ctxvariableconfused some compilersSubmitted by: Lennart Bong <lob@kultheastackenkthse>Reviewed by: Ralf S Engelschall
Don't install bss_filec under PREFIX/include/  It was introduced by Ericbetween SSLeay 08 and 09 and just looks useless and confusingPointed out by: Lennart Bong <lob@kultheastackenkthse>Submitted by: Ralf S Engelschall
Fix the Win32 compile environment and add various changes so it will now compileunder Win32 9X and NT again Note: some signed/unsigned changes recentlychecked in were killing the Win32 compile
Supper's cooking
Add functions to add certs to stacks, used for CA file/path stuff in servers
More truth in declarations
doxygen configuration file
Experiment with doxygen documentation
Update dependencies
Get rid of remaining C++style comments which strict C compilers hatePointed out by Carlos Amengual
Ops, the logic of the second argument has to be coupled with the ! test towork correctly for the SSL_CTX_xxx situations, too Now "make test" passesagain fine
Use consistent and existing addresses
BN_RECURSION causes the stuff in bn_montc to fall over for large keys Fornow change it to BN_RECURSION_MONT so it isn't compiled in
Perhaps if I do a tiny bit of docco, others may follow?
Remember one more wish from the users
Add a bunch of SSL_xxx functions for configuring the temporary RSA and DHprivate keys and/or callback functions which directly correspond to theirSSL_CTX_xxx counterparts but work on a perconnection basis This is neededfor applications which have to configure certificates on a perconnectionbasis eg Apache+mod_ssl instead of a percontext basis egs_serverFor the RSA certificate situation is makes no difference, but for the DSAcertificate situation this fixes the "no shared cipher" problem where theOpenSSL cipher selection procedure failed because the temporary keys were notovertaken from the context and the API provided no way to reconfigure themThe new functions now let applications reconfigure the stuff and they are indetail: SSL_need_tmp_RSA, SSL_set_tmp_rsa, SSL_set_tmp_dh,SSL_set_tmp_rsa_callback and SSL_set_tmp_dh_callback  Additionally a newnonpublicAPI function ssl_cert_instantiate is used as a helper functionand also to reduce code redundancy inside ssl_rsacSubmitted by: Ralf S EngelschallReviewed by: Ben Laurie
Move s_server dcert and dkey options out of the undocumented feature areabecause they are useful for the DSA situation and should be recognized by theusers Thanks to Steve for the original hint
Typo
Fix the cipher decision scheme for export ciphers: the export bits are notwithin SSL_MKEY_MASK or SSL_AUTH_MASK, they are within SSL_EXP_MASK  So, theoriginal variable has to be used instead of the already masked variableSubmitted by: Richard Levitte <levitte@stackenkthse>Reviewed by: Ralf S Engelschall
Fix 'port' variable from `int' to `unsigned int' in crypto/bio/b_sockcSubmitted by: Richard Levitte <levitte@stackenkthse>Reviewed by: Ralf S Engelschall
Change type of another md_len variable in pk7_doitc:PKCS7_dataFinalfrom `int' to `unsigned int' because it's a length and initialized byEVP_DigestFinal which expects an `unsigned int 'Submitted by: Richard Levitte <levitte@stackenkthse>Reviewed by: Ralf S Engelschall
Fix clearly untested "clever" hack
More CVS ignore stuff
Don't hardcode path to Perl interpreter on shebang line of Configurescript Instead use the usual Shell>Perl transition trick
Remember good pointers to Montgomery multiplication algorithmdescriptions as pointed out by Dave Carman <carman@erolscom>
Make `openssl x509 noout modulus' functional also for DSA certificates inaddition to RSA certificates to match the behaviour of `openssl dsa nooutmodulus' as it's already the case for `openssl rsa noout modulus'  For RSAthe modulus is the real "modulus" while for DSA currently the public key isprinted a decision which was already done by `openssl dsa modulus' in thepast which serves a similar purpose  Additionally the NO_RSA no longercompletely removes the whole modulus option; it now only avoids using the RSAstuff Same applies to NO_DSA now, too
Remove debugging fprintf from reqc and fix the code so it properly skips overthe first leading XXX in the DN
Code for reliable BIO
Add reliable BIO
Fix more warnings
Get rid of a nasty debugging message which was forgotten here
Fix usage message on gendsa:1 The dsaparam argument is mandatory and not optional2 Add a little text what this actually is: a filename
Make gcc Wall happy "might be used uninitialized"
Redo the way 'req' and 'ca' add objects: add support for oid_section
Add syslogging BIO
Various changes to make this stuff compile under Win32 and VC++ with andwithout debug option to mk1mfpl Change _export to is_export _export isa reserved word under VC++ Add yucky function prototype function pointercasts Sanitise the included files in crypto/x509v3Also changed ssleayexe target to opensslexe
More stuff for new TLS ciphersuites
Undo a couple of kludges
Add support for new TLS export ciphersuites
Fix warning
Add preliminary user level config documentation for extension stuff Programminginfo will come laterFeel free to reformat and tidy this up
Make RSA_NO_PADDING really use no paddingSubmitted by: Ulf Moeller <ulf@fitugde>
Remember some open issues and available patches
Add more functionality to issuer alt name and subject alt name New optionsto include email addresses from DN and copy details from issuer certificateInclude examples in opensslcnf, update Win32 ordinals
Ok, propose a release date of March 15th with a code freeze a few days beforeso we have enough time for final testing and tarball rolling
Fix a warning
Generate errors when public/private key check is done
Preliminary support for reason code CRL extension
Patch so the new crl stuff actually compiles this time : Also update theWin32 ordinals
Overhaul 'crl' application, add a proper X509_CRL_print function and startto support CRL extensions
Fix case of new functions in error files
Oops! Remeber to include the other patches this time
Fuller authority key id support, partial support for private key usage extensionand really fix the ASN1 IMPLICIT bug this time :
Add OAEP
Added code to GENERAL_NAME with support for more options and preliminarysupport for assignment in config files
Updates to the new SSL compression code[Eric A Young, from changes to C2Net SSLeay, integrated by Mark Cox]Fix so that the version number in the master secret, when passedvia RSA, checks that if TLS was proposed, but we roll back to SSLv3because the server will not accept higher, that the version numberis 0x03,0x01, not 0x03,0x00[Eric A Young, from changes to C2Net SSLeay, integrated by Mark Cox]Submitted by:Reviewed by:PR:
Fix various memory leaks in SSL, apps and DSA
Patch to Configure script For some reason the BN_ASM part was truncated tothe first word which broke at least the Linux compile Hopefully this wontbreak other platforms
Update error codes
Add support for raw extensions This means that you can include the DER encodingof an arbitrary extension: eg 1345critical,RAW:12:34:56 Using thistechnique currently unsupported extensions can be generated if you know theirDER encoding Even if the extension is supported in future the raw extensionwill still work: that is the raw version can always be used even if it is asupported extension
Make sure latest Perl versions don't interpret some generated C array as Perlarray code in the crypto/err/err_gencpl scriptSubmitted by: Lars Weber <3weber@informatikunihamburgde>Reviewed by: Ralf s Engelschall
Convert ms/do_msbat to DOS EOL format of DOS chokes on it
More Win32 fixes and upsdate INSTALLW32 documentation
Oops add other changes this time too
Modify configure script to generate some files that Win32 needs and newscript that does the same as 'make files'
Finally? fix DES stuff
Update dependencies
Fix ghastly DES declarations, and all consequential warnings
Fix typo in asn1h PRINTABLESTRING_STRING and fix a bug in object creationperl script It failed if the OID had any zeros in it
Add support for 3DES CBCM mode
In the absence of feedback either way, commit the fix that looks right forwrong keylength with export null ciphers
Whoops, missed one
Some cleanup
Actually use BN when selected!
Tidy up asm stuff
Make the 'crypto' and 'ssl' options in the perl script mkdefpl really work,also add an 'update' option to automatically append any new functions to thessleaynum and libeaynum files
Delete a few unused files in apps, restore CAST WIN32 ASM file to maintree
Remove one more totally bogus source fileThis one is exactly the same as ssl_sesscThanks to Adam Goodman <adam@adomaincom> for hint
Remove three more bogus files 2x temp file, 1x trash
What is on my ToDo list
Overhauled the Perl interface perl/: ported BN stuff to OpenSSL's different BN library made the perl/ source tree CVSaware renamed the package from SSLeay to OpenSSL the files still containtheir history because I've copied them in the repository removed obsolete files the test scripts will be replacedby better Test::Harness variants in the future
Ignore mx86unixcpp which is generated on Intel platforms
Remember the cleanup
First cut for a very conservative source tree cleanup:1 merge various obsolete readme texts into doc/ssleaytxtwhere we collect the old documents and readme texts2 remove the first part of files where I'm already sure that we no longer needthem because of three reasons: either they are just temporary files whichwere left by Eric or they are preserved original files where I've verifiedthat the diff is also available in the CVS via "cvs diff rSSLeay_0_8_1b"or they were renamed as it was definitely the case for the crypto/md/stuffWe've still a horrible mess under crypto/bn/asm/  There for a lot of filesI'm sure whether we need them or not So, when someone knows it better, feelfree to cleanup there
Ops, one more reference to 091c Make sure we don't forget it
Oops Forgot to do a 'make errors'
More extension code Incomplete support for subject and issuer altname, issuer and authority key id Change the i2v function parametersand add an extra 'crl' parameter in the X509V3_CTX structure: guesswhat that's for : Fix to ASN1 macro which messed upIMPLICIT tag and add f_enumc which adds a2i, i2a for ENUMERATED
Update dependencies
More exactitude with function arguments
Oops forgot to add new ENUMERATED file
Support for ASN1 ENUMERATED type This copies and duplicates the ASN1_INTEGERcode and adds support to ASN1_TYPE and asn1parse
Comment out def of currently unimplemented function to stop warning
Minor tweaks to keep Perl 5001 happy
Fix filename in comment
Add support for GeneralName and GeneralNames extensions Also preliminarysupport for subject and issuer alt name Add a new ASN1 macro and fix anasty bug that left an ASN1 buffer modified on an error condition withIMPLICIT tagging
Delete legacy file
Slightly improved diagnostics
Process extensions when they are there
Diagnose errors
Typo in arguments
Clear error we don't care about
Rename v3_bitstrc to v3_bitstc to fit in 8+3 Rebuild MINFO to reflectchange
add what I'm doing and a voteSubmitted by:Reviewed by:PR:
Oops! Restore ssleaynum: it got overwritten with libeaynum :
Delete bogus V3 prototype and update the num files to include ordinals forthe new functions Update MINFO
More Win32 fixes The Configure script used to give lots of warnings aboutuse of undefined variables: kludge so they all get initialised Also avoid useof POSIX module
Fix various stuff: that VC++ 50 chokes on:1 Add lots of missing prototypes for static ssl functions2 VC++ doesn't understand the 'LL' suffix for 64 bits constants: change bnorg3 Add a few missing prototypes in pemorgFix mk1mfpl so it outputs a Makefile that doesn't choke Win95Fix mkdefpl so it doesn't truncate longer names
Yet more pissing about to get PEM built at the right moment
Add new function, EVP_MD_CTX_copy to replace frequent use of memcpySubmitted by: Eric A Young  from changes to C2Net SSLeayReviewed by: Mark CoxPR:
Reflect correct filename
Update README file a little bit
Make sure `make rehash' target really finds the `openssl' program
Fix some more typosSubmitted by:Reviewed by:PR:
fix typoSubmitted by:Reviewed by:PR:
Squeeze a bit more speed out of MD5 assembler
Update STATUS, modify sslh so mkdefpl will pick up prototypes andadd x509v3h to mkdefpl list of include files
More pissing about to get pemh to behave properly
Break circular dependency between pem and err
Ignore crypto/x509v3/lib
Update dependencies
Add dependencies
Update
Update dependencies
Change address now that we've the mailing lists established
Add CygWin32 platform information to Configure scriptSubmitted by: Alan Batie <batie@aahzjfintelcom>
Fixed ms/32allbat script: `no_asm' > `noasm'Submitted by: Rainer W Gerling <gerling@mpggvmpgde>Reviewed by: Ralf S Engelschall
New program 'nseq' added to apps to allow Netscape certificate sequences tobe pulled apart and built
Allow the certfile argument to be used multiple times in crl2pkcs7Also fix typos in the usage messages: "inout" instead of "input"
Fill in more contents for the openssl1 manpage
One more incorrect name in usage page
Fix names in usage page of s_time, s_server and s_client
Fixes to BN code  Previously the default was to define BN_RECURSIONbut the BN code had some problems that would cause failures whendoing certificate verification and some other functionsSubmitted by: Eric A Young from a C2Net version of SSLeayReviewed by: Mark J CoxPR:
Remember to add the new file this time :
Add ASN1 code for netscape certificate sequences
Add a few extended key usage OIDs
Still more X509 V3 stuff Modify cac to work with the new code and modifyopensslcnf for the new syntax
Oops One header too many
Update dependencies
Declare correctly on FreeBSD
Reduce header dependencies
More X509 V3 stuff Add support for extensions in the 'req' applicationso that: openssl req x509 new out certpemwill take extensions from opensslcnf a sample for a CA is includedAlso change the directory order so pem is nearer the end Otherwise 'make links'wont work because pemh can't be built
Add file x509v3err
Make sure people know when they need to rebuild the Makefile
Minor constification
Continuing adding X509 V3 support This starts to integrate the code withthe main library, but only with printing at present To see this try:openssl x509 in certpem texton a certificate with some extensions in it
Initial addition of new X509 V3 files, tidy of old files
Start keeping track of wishes people make on our mailing lists to make sure wedon't forget them and this way we have them bundled together
Correct bracketing error
Continued patches so certificates and CRLs now can support and useGeneralizedTime
This time, get it right
Finally lay dependencies to rest I hope!
Spelling mistake
This is the result of a "make errors" with the new error building functionalityin place
New err_codepl script to retain old error codes This should allow the useof 'make errors' without causing huge reorganisations of files when a newcode is added
Ignore autogenerated programs
Dispose of generated programs
Fix major cockup with short keys in CAST128
Update CHANGES for GeneralizedTime info
Correct Linux 1 recognitionContributed by: Ulf Mller <ulf@fitugde>
Oops Missing NULL frees
Remove pointless MD5 hashContributed by: Anonymous <nobody@replaycom>
Generate an error on an invalid directory
Time to blow up the source tree : This is the beginning of support forGeneralizedTime At several points PKIX specifies that GeneralizedTime can beused but OpenSSL doesn't currently support it This patch adds several filesand a bunch of functionsOf interest is the ASN1_TIME structure and its related functions At severalpoints certificates, CRLs et al specify that a time can be expressed as achoice of UTCTime and GeneralizedTime Currently OpenSSL interprets thiswrongly as UTCTime because GeneralizedTime isn't supported The ASN1_TIMEstuff provides this functionalityStill todo is to trace which cert and CRL points need an ASN1_TIME and modifythe utilities appropriately and of course fix all the bugsNote new OpenSSL copyright in the new file a_timec I didn't put it ina_gentmc because it is a minimally modified form a_utctmc Since this adds new files and error codes you will need to do a 'make errors'at the top level to add the new codes
More prototypes
More prototypes
More prototypes
More prototypes
More prototypes
More prototypes
Fix parameters to dummy function BN_ref_mod_exp
Submitted by: Neil Costigan <neilcostigan@celocomcom>PR:
Fix OBJ_txt2nid: old function was broken when input used the "dot" form, eg1234  Also added new function OBJ_txt2obj
Add prototype, fix parameter passing bug
Fix comment
Sort openssl functions by name
Fix the gendsa program and add it to the app list The progsh file isauto generated but not auto updated so it is included Also remove theencryption from the sample DSA keys
Get rid of redundant files
Accept NULL in _free
Fix DH key generationContributed by: Anonymous <nobody@replaycom>
Send the right CAs to the client
Fix numeric newkey argsContributed by: Bodo Moeller <3moeller@informatikunihamburgde>
Fix export tests
Make the world a safer place if people object to this kind of change, speak upsoon  I intend to do a lot of it!
Oops! update CHANGES file properly
Fix things so DH_free will be noop when passed NULL, like RSA_free andDSA_free: this was causing crashes when for example an attempt was madeto handle a currently unsupported DH public key Also X509_PUBKEY_setiwasn't checking errors from d2i_PublicKey
Free the right thing
Only free if it ain't NULL
Remove the bugfix that was really a bugSubmitted by: Arne Ansper <arne@atscyberee>
Pass on BIO_CTRL_FLUSHSubmitted by: Arne Ansper <arne@atscyberee>
The dir is named util/ and better to explicitly call theperl interpreter because not everyone has it in /usr/local/bin/perl
More EVP_PKEY patches for new functionality
Make sure the already existing X509_STORE>depth variable is initializedin X509_STORE_new, but document the fact that this variable is stillunused in the certificate verification process
The dir is named util/ and better to explicitly call theperl interpreter because not everyone has it in /usr/local/bin/perl
More cvsignore stuff to make CVS quiet on our generated files
Remove one EVP_PKEY_free that shouldn't be there
Make sure applications free up pkey structures and add netscape extensionhandling to x509c
Fix reference counting
Don't confuse matters by using the wrong library
Fix tests for ssleay > openssl
A few train of thoughts about the build procedure mess
Update scripts to use "openssl" instead of "ssleay"
Reflect change from "ssleay" to "openssl" as the main binary nameAlso document "sh config" as an easier alternative to "/Configuresystem"
Various ssleay to openssl fixups
Binary is now apps/openssl not apps/ssleay so use the new name whenrehashing the test certs
A couple more ssleaycnf to opensslcnf changes
Some more changes for renaming the binary from ssleay to opensslI wonder what eayc is?
First cut of a cleanup for apps/ First the `ssleay' program is now named`openssl' and second, the shortcut symlinks for the `openssl <command>' are nolonger created This way we have a single and consistent command lineinterface `openssl <command>', similar to `cvs <command>'Notice, the opensslcnf, opensslc and progspl files were changed after arepository copy, ie they still contain the complete file history
Make GCC happy by removing an unused variable defintion
Move DSA test in cac inside ifdef and make pubkey BIT STRING always havezero unused bits
Add extended key usage OID and update STATUS file
cleanup of apps/ and an answer
ssldirpl did not correctly set the directory in utils/mk1mkpl whenperl5 was used
Add votes
Make the installation documentation easier to follow
Makefiles updated to exit if an error occurs in a subdirectory makeincluding if user presses ^C
This is a quick hack conversion of the 'CAsh' script to perl It fixes onebug in the original but is otherwise just as horrible :
Remove more old temporary files from CVS
Document recent changes
Fix name delete problem
Fix pem/err ordering
A hint about the license
Some issues for voting
More structuring and sorting of the SSL API documentationAnd the first steps to descriptions in prosa
Puhhh now we've documented the prototypes of all 214 API "functions"  Thisis a pain to do, because of the various macro definitions which I had toexpand manually to get their prototype :What's now needed is a volunteer who wants to write down one or two sentencesper API function to document it a little bit
Fix version stuff:1 The already released version was 091c and not 091b2 The next release should be 092 and not 091d, becausefirst the changes are already too large, second we should avoid any more091x confusions and third, the Apache version semantics ofVERSIONREVISIONPATCHLEVEL for the version string is reasonable and here2 is already just a patchlevel and not major changetVS: 
Update CHANGES file for latest additions
Fix for sk_insert bug: it never worked properlyAllow explicit tag asn macros to handle indefinite length constructed stuff:without this certain "certificates" can't be read in
MIME encoding and ISO chars at the same time messes up the stuff
Ops, forgot to commit the changes entry in recent commit
Cleanup of doc/ directory: The old/obsolete SSLeay files are now assembledtogether in a ssleaytxt file
fix pk7_doitc for new i2d_ASN1_SET argument
external error lib number now global and allow error lib to have a name
Create a STATUS file to coordinate us Feel free to edit
Replace AUTHOR with a better HISTORY as in FreeBSD's manpages
Fix an error message
Fix incorrect DER encoding of SETs and all knockons from that
Add prototypes Make Montgomery stuff explicitly for that purpose
Import the first cut for manual pagesThey are written in Perl's POD format for two reasons: First Perl is alreadyneeded for SSLeay and second, POD is easy to write and maintain _AND_ creatednice looking NRoff manpagesThe idea is to have three manual pages:openssl1  The manpage for the `openssl' program formerly ssleaycrypto3  The manpage for cryptoh/libcryptoassl3  The manpage for sslh/libsslaThe openssl1 should be very similar to cvs1, ie  it should document allcommands in a compact way  And I've even created the first cut for anoverview of all 243 functions of the SSL API for sslpod More to come
Make Configure work again after eliminating files
Deal with generated files
This is not a bug in NT Perl, its a bug in Configure
Require Perl 5
Fix option listing
Typo
Autodetect FreeBSD 3
Add strictness, fix variable substition bugs
Test remote CVS commit
Test for new CVS repository
 empty log message 
 empty log message 
 empty log message 
Add include dir
Switch version string to SSLeay/OpenSSL
 empty log message 
Switch to OpenSSL name
Fix unused variable warning of GCC
 empty log message 
OpenTLS ready
Incorporation of RSEs assembled patches
 empty log message 
Various cleanups and fixed by Marc and Ralf to start the OpenTLS project
This commit was generated by cvs2svn to track changes on a CVS vendorbranch
Import of old SSLeay release: SSLeay 091b unreleased
This commit was generated by cvs2svn to track changes on a CVS vendorbranch
Import of old SSLeay release: SSLeay 091b unreleased
Import of old SSLeay release: SSLeay 090b
This commit was generated by cvs2svn to track changes on a CVS vendorbranch
Import of old SSLeay release: SSLeay 090b
This commit was generated by cvs2svn to track changes on a CVS vendorbranch
Import of old SSLeay release: SSLeay 081b
This commit was generated by cvs2svn to track changes on a CVS vendorbranch
Import of old SSLeay release: SSLeay 081b
This commit was generated by cvs2svn to track changes on a CVS vendorbranch
