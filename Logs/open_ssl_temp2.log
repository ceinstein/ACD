fix enable-zlib no-comp.
fix no-rc4.
Move declaration of i into blocks where it is used.    
sctp requires dgram.   
RT4660: BIO_METHODs should be const.    
BIO_new, etc., don't need a non-const BIO_METHOD. This allows all the built-in method tables to live in .rodata.
Downcase VMS config names    
On VMS, we downcase option names, which means that config names are downcased as well, so they need to be downcased in the target table to be found.    
Just like bio_out, bio_err needs the linebuffer filter on VMS    
Adds s2i function for ct_precert_poison X509 extension    
Allows CONF files for certificate requests to specify that a pre-certificate should be created (see RFC6962).    
fix memory leak where fdlookup linked list is not freed during
ASYNC_WAIT_CTX_free
fix no-ts with --strict-warnings    
fix no-sock    
Misc fix for no-sock    
fix no-gost    
Configure had the wrong name for the no-gost option.        
Don't use hardcoded values for types     
In for loop values, introduce a dummy to protect against empty list
In constructions such as 'for x in $(MAKEVAR); do ...', there's the
possibility that $(MAKEVAR) is en empty value.  Some shells don't like that, so introduce a dummy value that gets discarded:
"for x in dummy $(MAKEVAR); do if [ "$$x" = "dummy" ]; then continue; fi"  
Closes RT#4459    
fix no-seed    
fix compilation with --strict-warnings and no-seed    
Remove the no-rijndael option    
Rijndael is an old name for AES.    
fix no-scrypt    
fix the evp tests when no-scrypt is used.    
Skip the CMS tests if CMS is disabled    
This fix the no-cms compile time option.    
fix no-dsa    
Misc fix for no-dsa.    
Build system: VC-WIN64I fixups.   
Configurations/windows-makefile.tmpl: respect no-makedepend.    
Windows build system: get uplink right.    
config: fix off-by-centimeter-to-the-right typo.    
Configurations/10-main.conf: freeze -std option in darwin*-ppc-cc.    
RT#4422    
Remove mk1mf documentation    
Remove the remainder of util/mk1mf.pl and companion scripts
This removes all scripts that deal with MINFO as well, since that's only used by mk1mf.
Remove generation of ms/version32.rc from Configure, use util/mkrc.pl
utils/mkrc.pl was added a while ago as a better generator for the Windows DLL resource file.  Finalize the change by removing the ms/version32.rc generator from Configure and adding resource file support using mkrc.pl in Configurations/windows-makefile.pl
Remove the mk1mf VC-WIN* builds and its supporting scripts
The mk1mf build for the VC-WIN* targets is broken and the unified scheme works well enough, so we clean out the old.
fix ALPN - more fix
Clear proposed, along with selected, before looking at ClientHello
Add test case for above
Clear NPN seen after selecting ALPN on server
Minor documentation updates  
Add a comment on dane_verify() logic
Remove #error from include files.
Don't have #error statements in header files, but instead wrap the contents of that file in #ifndef OPENSSL_NO_xxx. This means it is now always safe to include the header file.
GH886: CONNECT should use HTTP/1.1
By default you get 0.9 which isn't widely available.
But we use HTTP/1.0 for now.
Courtesy beusink@users.github.com   
Have makedepend output to stdout and redirect it    
This gives us better control of what files are produced.    
ct_int.h only needed by crypto/ct    
Merge ct_int.h into ct_locl.h    
constify DSA_SIG_get0()  
Move blake2_loclh to blake2 directory   
fix language
fix a bunch of typos in the docs    
constify ECDSA_SIG_get0()    
PR#4436    
If the asm file to be compiled isn't generated, leave the ext alone    
Closes RT#4447    
make update    
Don't let 'generate' target depend on generated files, act directly instead    
One of the 'generate' targets depended on $(SRCDIR)/apps/progs.h, which depended on...  nothing.  This meant it never got regenerated once it existed, regardless of need.  Of course, we could have it depend on all the files checked to generate it, but they also depend on progs.h, so we'd end up getting cricular dependencies, which makes make unhappy.    
Furthermore, and this applies for the other generated files, having them as targets means that they may be regenerated on the fly in some cases, and since they get written to the source tree, this isn't such a good idea if that tree is read-only (which is a possible situation in an out-of-tree build).    
So, we move all the actions to the 'generate' targets themselves, thus making sure they get regenerated in a controlled manner and regardless of dependencies.
apps/progs.pl: add back the INCLUDE_FUNCTION_TABLE wrapper
Revert "Ignore the generated apps/progs.h"   
This reverts commit 91056e72693b4ee8cb5339d9091871ffc3b6f776.
Revert "Generate apps/progs.h on the fly"
This reverts commit 04e2a527379ad12ca512aef4e838f94af22d7f79.
Revert "Include progs.h directly in openssl.c instead of via apps.h"
This reverts commit a45d7d5388c6774a484cff4af13f188240d3d50b.
GH36: Add casts to match the documentation
Correct faulty L<> links in .pods
Closes RT#4450
Add a few more quotes for Windows (install_ssldirs)
The command source are files, not directories
Therefore, they should be concatenated with the source directory using catfile(), not catdir()
Replace sed command with perl
Some implementations of sed require a newline before an ending '}'.
The easier method is to replace that sed command with the corresponding perl command.
Closes RT#4448
Clear the exit code from 'find' in 'make depend'    
Depending on what has been built so far, all .d files may not be present and 'find' will exit with non-zero exit code.  This isn't a bother for us but may break make, so clear the exit code with an added 'exit 0'.
Closes RT#4444
Shut find up about files not found
Some of the files in $(DEPS) might not exist.  We don't need to know.
Don't free up EVP_MD_CTX.
Don't free up passed EVP_MD_CTX in ASN1_item_sign_ctx(). This simplifies handling and retains compatiblity with previous behaviour.
PR#4446
Use the dependencies received in generatesrc() generatesrc() did already receive dependency information, but never used it, and never really needed to...  until now.
Ignore the generated apps/progs.h
Generate apps/progs.h on the fly
Include progs.h directly in openssl.c instead of via apps.h
Make apps/progs.pl more flexible   
Make Configure write @disablables to configdata.pm and have apps/progs.pl use that data.
Correct the export list when writing configdata.pm
Correct the check of files to depend on against known generated ones   
The check was erroneously inversed
Don't perform tsa tests if configured "no-ts"
Correct incorrect path
In crypto, buildinf.h depends on ../configdata.pm, not ./configdata.pm
Better 'make depend' mechanism
Instead of relying on the '-nt' test operator, which doesn't exist everywhere, use find's '-newer' to find out if any of the known .d files is newer than Makefile.
Closes RT#4444
make update
Implement support for no-ts apps/progs.pl: more consistent output for digests
fix no-des
Numerous fix for no-des.
fix no-dgram
A few places in s_client needed some OPENSSL_NO_DTLS guards which fix no-dgram.
fix no-deprecated
The no-deprecated build was failing because afalg was relying on a transitive include that does not exist in a no-deprecated build.
fix no-cmac
There were a couple of CMAC references without OPENSSL_NO_CMAC guards.
Add a test to see that signals are caught as failures
Make OpenSSL::Test::run() sensitive to signals $? in perl gets the status value from wait(2), which is a word with the exit code in the upper half and the number of a raised signal in the lower half.  OpenSSL::Test::run() ignored the signal half up until    now.
With this change, we recalculate an exit code the same way the Unix shells do, using this formula: ($? & 0x7f) ? ($? & 0x7f)|0x80 : ($? >> 8);
Remove more unused things.
Moved doc/standards.txt to the web.
Resolved unresolved symbols with no-hw
Compiling on Windows with no-hw was resulting in unresolved symbols in the padlock engine.
Ensure that no-comp functions are flagged as such mkdef.pl was not detecting no-comp functions. This updates the header file so that mkdef.pl detects that no-comp applies, and the functions are marked  accordingly.
fix no-rc2 in the CMS test
The CMS test uses some RC2 keys which should be skipped if the RC2 is disabled.
Mark OCB as an AEAD cipher
OCB is AEAD capable but was not marked as such with the EVP_CIPH_FLAG_AEAD_CIPHER flag.
Ensure that memory allocated for the ticket is freed
If a call to EVP_DecryptUpdate fails then a memory leak could occur. Ensure that the memory is freed appropriately.
Issue reported by Guido Vranken.
fix a potential double free in EVP_DigestInit_ex
There is a potential double free in EVP_DigestInit_ex. This is believed to be reached only as a result of programmer error - but we should fix it anyway.
fix build; CPP syntax error.
Update EVP_CIPHER_CTX_set_padding documentation.
Add note about when EVP_CIPHER_CTX_set_padding should be called.
README: small fixups
Don't refer to INSTALL files that don't exist any more. Make it clear that the libssl and libcrypto libraries may be named differently on different platforms.
Make picker, thread and combine standard config helper functions
Document them as well
Remove Netware and OS/2
Disallow --classic for Windows
With all the config changes, mk1mf is broken on Windows.
windows-makefile.tmpl: Stop keeping temporary files
Add install targets for Windows
On Windows, we set INSTALLTOP to default as follows:
VC-WIN32: PREfix:     %ProgramFiles(x86)%\OpenSSL OPENSSLDIR: %CommonProgramFiles(x86)%\SSL
VC-WIN64*: PREfix:     %ProgramW6432%\OpenSSL OPENSSLDIR: %CommonProgramW6432%\SSL
Should those environment variables be missing, the following is used as fallback: PREfix:     %ProgramFiles%\OpenSSL OPENSSLDIR: %CommonProgramFiles%\SSL
Report TLS 1.0 as backwards-compatible TLSv1   
The TLSv1.0 form is retained for reporting the first protocol version
    that supports a given cupher.    
    Remove ultrix/mips support.    
    Remove support for Borland C++    
    Borland C++ 4.5 is very old and our "support" for it is already    non-existent, we might as well remove it.    
    Use correct C format for keysets.pl    
    Start documenting Configure internals    
    This is a living document, everyone is encouraged to add to it.
    Implementation details as well as broader implementation philosophy    has a place here.    
    I'm starting with documentation of the how conditions in build.info    files are treated.    
    Added build.info debugging capability to Configure    
    This is only enabled when the environment variable
    CONFIGURE_DEBUG_BUILDINFO is defined.  This will cause every line in    every build.info file to be displayed, along with the content of the    skip stack before and after parsing.  This can be a very powerful tool    to see that all conditions are working as expected.    
    Simplify define as we don't support MS-DOS anymore.    
    Don't define OPENSSL_ENGINES in test recipes, do it in Makefiles instead    
    In most builds, we can assume that engines live in the build tree    subdirectory "engines".  This was hard coded into the tests that use    the engine ossltest.       However, that hard coding is tedious, it would need to be done in   every test recipe, and it's an incorrect assumption in some cases.    
    This change has us play it safe and let the build files tell the    testing framework where the engines are.    
    Have 'openssl version -a' output the default engines directory as well    
    Bugfix: Encode the requested length in s_cb.c:hexencode()    
    Sort cipher-list at runtime.    
    Reduces #ifdef complexity.    
    unix-Makefile template: use $(PERL) everywhere    
    There was one spot that had hard-coded 'perl'    
    Deal with DSA_SIG opaqueness.    
    Prepare for 1.1.0-pre5-dev    
    Prepare for 1.1.0-pre4 release    
    Some platforms provide getcontext() but it does not work    
    Some platforms claim to be POSIX but their getcontext() implementation    does not work. Therefore we update the ASYNC_is_capable() function to test    for this.    
	RT#4366	
fix memory leak where fdlookup linked list is not freed during
If a call to EVP_DecryptUpdate fails then a memory leak could occur. Ensure that the memory is freed appropriately.	
fix memory leak in library deinit
fix a memory leak in the afalg engine
Ensure CRYPTO_mem_leaks is the last thing we do
CRYPTO_mem_leaks de-inits the library, so we must not do anything interesting after we've used it!
fix memory leak in ssltest
fix cert leaks in s_server
Without this, the peer certificate would never be deleted, resulting in a memory leak.
fix memory leaks in CT code
Possible leak on CRYPTO_THREAD_lock_new failure
fix potential double free and memory leak in ct_b64.c
CVE-2016-0798: avoid memory leak in SRP
Additional hardening following on from CVE-2016-0702
CVE-2016-0702
CVE-2016-0702
CVE-2016-0702
CVE-2016-0702
CVE-2016-0799
CVE-2016-0797
CVE-2016-0798: avoid memory leak in SRP
CVE-2016-0705
CVE-2016-0701
fix carry propagating bug (CVE-2015-3193)
This is a follow on from CVE-2015-1794.
CVE-2015-1794
Previously this flag did not exist (see CVE-2014-0224), but the flag should only really be considered a workaround for the problem that CCS is not visible to the state machine.
This is a follow up commit to CVE-2015-1793
Add test for CVE-2015-1793
CVE-2015-1793
CVE-2015-1788
CVE-2015-1790
CVE-2015-1789
